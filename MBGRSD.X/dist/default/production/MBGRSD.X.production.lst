

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 29 17:30:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F45K50 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  005DFE                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for Error@F5051
   119  005DFE  7E                 	db	126
   120  005DFF  30                 	db	48
   121  005E00  6D                 	db	109
   122  005E01  79                 	db	121
   123  005E02  33                 	db	51
   124  005E03  5B                 	db	91
   125  005E04  5F                 	db	95
   126  005E05  70                 	db	112
   127  005E06  7F                 	db	127
   128  005E07  73                 	db	115
   129                           
   130                           ;initializer for _Stat
   131  005E08  01                 	db	1
   132                           
   133                           	psect	nvBANK0
   134  0000EE                     __pnvBANK0:
   135                           	opt callstack 0
   136  0000EE                     _volt:
   137                           	opt callstack 0
   138  0000EE                     	ds	4
   139  0000F2                     _adcin:
   140                           	opt callstack 0
   141  0000F2                     	ds	2
   142  0000                     _ANSELA	set	3931
   143  0000                     _ANSELE	set	3935
   144  0000                     _ANSELD	set	3934
   145  0000                     _ANSELB	set	3932
   146  0000                     _ANSELC	set	3933
   147  0000                     _ADRESL	set	4035
   148  0000                     _ADRESH	set	4036
   149  0000                     _PORTA	set	3968
   150  0000                     _ADCON0bits	set	4034
   151  0000                     _ADCON0	set	4034
   152  0000                     _TRISA	set	3986
   153  0000                     _LATA	set	3977
   154  0000                     _ADCON1	set	4033
   155  0000                     _ADCON2	set	4032
   156  0000                     _TRISE	set	3990
   157  0000                     _LATE	set	3981
   158  0000                     _TRISD	set	3989
   159  0000                     _LATD	set	3980
   160  0000                     _SSP1STATbits	set	4039
   161  0000                     _SSP1BUF	set	4041
   162  0000                     _SSP1CON1bits	set	4038
   163  0000                     _SSP1ADD	set	4040
   164  0000                     _SSP1CON1	set	4038
   165  0000                     _SSP1STAT	set	4039
   166  0000                     _INTCON2bits	set	4081
   167  0000                     _WPUB	set	3973
   168  0000                     _TRISC	set	3988
   169  0000                     _TRISB	set	3987
   170  0000                     _LATC	set	3979
   171  0000                     _LATB	set	3978
   172  0000                     _ACTCON	set	4021
   173  0000                     _OSCTUNE	set	3995
   174  0000                     _OSCCON2	set	4050
   175  0000                     _OSCCON	set	4051
   176  0000                     _LATBbits	set	3978
   177  0000                     _ADIF	set	31990
   178  0000                     _ADIE	set	31982
   179  0000                     _PEIE	set	32662
   180  0000                     _GIE	set	32663
   181                           
   182                           	psect	smallconst
   183  000800                     __psmallconst:
   184                           	opt callstack 0
   185  000800  00                 	db	0
   186  000801                     STR_1:
   187                           
   188                           ; BSR set to: 15
   189  000801  22                 	db	34
   190  000802  2A                 	db	42
   191  000803  2B                 	db	43
   192  000804  2C                 	db	44
   193  000805  3A                 	db	58	;':'
   194  000806  3B                 	db	59	;';'
   195  000807  3C                 	db	60	;'<'
   196  000808  3D                 	db	61	;'='
   197  000809  3E                 	db	62	;'>'
   198  00080A  3F                 	db	63	;'?'
   199  00080B  5B                 	db	91	;'['
   200  00080C  5D                 	db	93	;']'
   201  00080D  7C                 	db	124
   202  00080E  7F                 	db	127
   203  00080F  00                 	db	0
   204  000810                     STR_4:
   205                           
   206                           ; BSR set to: 15
   207  000810  42                 	db	66	;'B'
   208  000811  65                 	db	101	;'e'
   209  000812  65                 	db	101	;'e'
   210  000813  65                 	db	101	;'e'
   211  000814  2E                 	db	46
   212  000815  74                 	db	116	;'t'
   213  000816  78                 	db	120	;'x'
   214  000817  74                 	db	116	;'t'
   215  000818  00                 	db	0
   216  0000                     
   217                           ; #config settings
   218  000819  00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           	psect	cinit
   221  005B04                     __pcinit:
   222                           	opt callstack 0
   223  005B04                     start_initialization:
   224                           	opt callstack 0
   225  005B04                     __initialization:
   226                           	opt callstack 0
   227                           
   228                           ; Initialize objects allocated to BANK0 (11 bytes)
   229                           ; load TBLPTR registers with __pidataBANK0
   230  005B04  0EFE               	movlw	low __pidataBANK0
   231  005B06  6EF6               	movwf	tblptrl,c
   232  005B08  0E5D               	movlw	high __pidataBANK0
   233  005B0A  6EF7               	movwf	tblptrh,c
   234  005B0C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   235  005B0E  6EF8               	movwf	tblptru,c
   236  005B10  EE00  F0DA         	lfsr	0,__pdataBANK0
   237  005B14  EE10 F00B          	lfsr	1,11
   238  005B18                     copy_data0:
   239  005B18  0009               	tblrd		*+
   240  005B1A  CFF5 FFEE          	movff	tablat,postinc0
   241  005B1E  50E5               	movf	postdec1,w,c
   242  005B20  50E1               	movf	fsr1l,w,c
   243  005B22  E1FA               	bnz	copy_data0
   244                           
   245                           ; Clear objects allocated to BIGRAM (558 bytes)
   246  005B24  EE01  F020         	lfsr	0,__pbssBIGRAM
   247  005B28  EE12 F02E          	lfsr	1,558
   248  005B2C                     clear_0:
   249  005B2C  6AEE               	clrf	postinc0,c
   250  005B2E  50E5               	movf	postdec1,w,c
   251  005B30  50E1               	movf	fsr1l,w,c
   252  005B32  E1FC               	bnz	clear_0
   253  005B34  50E2               	movf	fsr1h,w,c
   254  005B36  E1FA               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to BANK1 (32 bytes)
   257  005B38  EE01  F000         	lfsr	0,__pbssBANK1
   258  005B3C  0E20               	movlw	32
   259  005B3E                     clear_1:
   260  005B3E  6AEE               	clrf	postinc0,c
   261  005B40  06E8               	decf	wreg,f,c
   262  005B42  E1FD               	bnz	clear_1
   263                           
   264                           ; Clear objects allocated to BANK0 (9 bytes)
   265  005B44  EE00  F0E5         	lfsr	0,__pbssBANK0
   266  005B48  0E09               	movlw	9
   267  005B4A                     clear_2:
   268  005B4A  6AEE               	clrf	postinc0,c
   269  005B4C  06E8               	decf	wreg,f,c
   270  005B4E  E1FD               	bnz	clear_2
   271  005B50                     end_of_initialization:
   272                           	opt callstack 0
   273  005B50                     __end_of__initialization:
   274                           	opt callstack 0
   275  005B50  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  005B52  6EF8               	movwf	tblptru,c
   277  005B54  0100               	movlb	0
   278  005B56  EFB7  F025         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssBANK0
   281  0000E5                     __pbssBANK0:
   282                           	opt callstack 0
   283  0000E5                     _i:
   284                           	opt callstack 0
   285  0000E5                     	ds	2
   286  0000E7                     _data:
   287                           	opt callstack 0
   288  0000E7                     	ds	2
   289  0000E9                     _Fsid:
   290                           	opt callstack 0
   291  0000E9                     	ds	2
   292  0000EB                     ff@FatFs:
   293                           	opt callstack 0
   294  0000EB                     	ds	2
   295  0000ED                     _CardType:
   296                           	opt callstack 0
   297  0000ED                     	ds	1
   298                           
   299                           	psect	dataBANK0
   300  0000DA                     __pdataBANK0:
   301                           	opt callstack 0
   302  0000DA                     Error@F5051:
   303                           	opt callstack 0
   304  0000DA                     	ds	10
   305  0000E4                     _Stat:
   306                           	opt callstack 0
   307  0000E4                     	ds	1
   308                           
   309                           	psect	bssBANK1
   310  000100                     __pbssBANK1:
   311                           	opt callstack 0
   312  000100                     _Fil:
   313                           	opt callstack 0
   314  000100                     	ds	32
   315                           
   316                           	psect	bssBIGRAM
   317  000120                     __pbssBIGRAM:
   318                           	opt callstack 0
   319  000120                     _FatFs:
   320                           	opt callstack 0
   321  000120                     	ds	558
   322                           
   323                           	psect	cstackBANK0
   324  000060                     __pcstackBANK0:
   325                           	opt callstack 0
   326  000060                     ??_dir_sdi:
   327  000060                     remove_chain@res:
   328                           	opt callstack 0
   329  000060                     create_chain@res:
   330                           	opt callstack 0
   331  000060                     find_volume@br:
   332                           	opt callstack 0
   333                           
   334                           ; 16 bytes @ 0x0
   335  000060                     	ds	1
   336  000061                     remove_chain@nxt:
   337                           	opt callstack 0
   338  000061                     create_chain@scl:
   339                           	opt callstack 0
   340                           
   341                           ; 4 bytes @ 0x1
   342  000061                     	ds	4
   343  000065                     create_chain@ncl:
   344                           	opt callstack 0
   345                           
   346                           ; 4 bytes @ 0x5
   347  000065                     	ds	2
   348  000067                     dir_sdi@ic:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0x7
   352  000067                     	ds	2
   353  000069                     create_chain@cs:
   354                           	opt callstack 0
   355  000069                     dir_sdi@sect:
   356                           	opt callstack 0
   357                           
   358                           ; 4 bytes @ 0x9
   359  000069                     	ds	4
   360  00006D                     dir_next@dp:
   361                           	opt callstack 0
   362  00006D                     f_write@fp:
   363                           	opt callstack 0
   364  00006D                     f_lseek@fp:
   365                           	opt callstack 0
   366  00006D                     dir_sdi@clst:
   367                           	opt callstack 0
   368                           
   369                           ; 4 bytes @ 0xD
   370  00006D                     	ds	2
   371  00006F                     dir_next@stretch:
   372                           	opt callstack 0
   373  00006F                     f_write@buff:
   374                           	opt callstack 0
   375  00006F                     f_lseek@ofs:
   376                           	opt callstack 0
   377                           
   378                           ; 4 bytes @ 0xF
   379  00006F                     	ds	1
   380  000070                     _find_volume$728:
   381                           	opt callstack 0
   382                           
   383                           ; 4 bytes @ 0x10
   384  000070                     	ds	1
   385  000071                     ??_dir_next:
   386  000071                     f_write@btw:
   387                           	opt callstack 0
   388                           
   389                           ; 2 bytes @ 0x11
   390  000071                     	ds	2
   391  000073                     ??_f_lseek:
   392  000073                     f_write@bw:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x13
   396  000073                     	ds	1
   397  000074                     _find_volume$729:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x14
   401  000074                     	ds	1
   402  000075                     ??_f_write:
   403                           
   404                           ; 1 bytes @ 0x15
   405  000075                     	ds	1
   406  000076                     find_volume@szbfat:
   407                           	opt callstack 0
   408                           
   409                           ; 4 bytes @ 0x16
   410  000076                     	ds	2
   411  000078                     dir_next@c:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x18
   415  000078                     	ds	2
   416  00007A                     dir_next@i:
   417                           	opt callstack 0
   418  00007A                     find_volume@pt:
   419                           	opt callstack 0
   420                           
   421                           ; 2 bytes @ 0x1A
   422  00007A                     	ds	2
   423  00007C                     dir_next@clst:
   424                           	opt callstack 0
   425  00007C                     find_volume@sysect:
   426                           	opt callstack 0
   427                           
   428                           ; 4 bytes @ 0x1C
   429  00007C                     	ds	4
   430  000080                     dir_alloc@dp:
   431                           	opt callstack 0
   432  000080                     dir_find@dp:
   433                           	opt callstack 0
   434  000080                     find_volume@vol:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x20
   438  000080                     	ds	1
   439  000081                     f_write@res:
   440                           	opt callstack 0
   441                           
   442                           ; 1 bytes @ 0x21
   443  000081                     	ds	1
   444  000082                     dir_find@c:
   445                           	opt callstack 0
   446  000082                     dir_alloc@nent:
   447                           	opt callstack 0
   448  000082                     find_volume@nrsv:
   449                           	opt callstack 0
   450  000082                     f_write@wbuff:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x22
   454  000082                     	ds	1
   455  000083                     dir_find@dir:
   456                           	opt callstack 0
   457  000083                     f_lseek@ifptr:
   458                           	opt callstack 0
   459                           
   460                           ; 4 bytes @ 0x23
   461  000083                     	ds	1
   462  000084                     ??_dir_alloc:
   463  000084                     f_write@csect:
   464                           	opt callstack 0
   465  000084                     find_volume@tsect:
   466                           	opt callstack 0
   467                           
   468                           ; 4 bytes @ 0x24
   469  000084                     	ds	1
   470  000085                     dir_find@res:
   471                           	opt callstack 0
   472  000085                     f_write@cc:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x25
   476  000085                     	ds	1
   477  000086                     follow_path@dp:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x26
   481  000086                     	ds	1
   482  000087                     f_lseek@res:
   483                           	opt callstack 0
   484  000087                     dir_alloc@n:
   485                           	opt callstack 0
   486  000087                     f_write@sect:
   487                           	opt callstack 0
   488                           
   489                           ; 4 bytes @ 0x27
   490  000087                     	ds	1
   491  000088                     follow_path@path:
   492                           	opt callstack 0
   493  000088                     find_volume@nclst:
   494                           	opt callstack 0
   495  000088                     f_lseek@nsect:
   496                           	opt callstack 0
   497                           
   498                           ; 4 bytes @ 0x28
   499  000088                     	ds	1
   500  000089                     dir_alloc@res:
   501                           	opt callstack 0
   502                           
   503                           ; 1 bytes @ 0x29
   504  000089                     	ds	1
   505  00008A                     dir_register@dp:
   506                           	opt callstack 0
   507  00008A                     follow_path@dir:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x2A
   511  00008A                     	ds	1
   512  00008B                     f_write@clst:
   513                           	opt callstack 0
   514                           
   515                           ; 4 bytes @ 0x2B
   516  00008B                     	ds	1
   517  00008C                     dir_register@res:
   518                           	opt callstack 0
   519  00008C                     follow_path@ns:
   520                           	opt callstack 0
   521  00008C                     find_volume@stat:
   522                           	opt callstack 0
   523  00008C                     f_lseek@bcs:
   524                           	opt callstack 0
   525                           
   526                           ; 4 bytes @ 0x2C
   527  00008C                     	ds	1
   528  00008D                     follow_path@res:
   529                           	opt callstack 0
   530  00008D                     find_volume@fasize:
   531                           	opt callstack 0
   532                           
   533                           ; 4 bytes @ 0x2D
   534  00008D                     	ds	2
   535  00008F                     f_write@wcnt:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x2F
   539  00008F                     	ds	1
   540  000090                     f_lseek@clst:
   541                           	opt callstack 0
   542                           
   543                           ; 4 bytes @ 0x30
   544  000090                     	ds	1
   545  000091                     find_volume@bsect:
   546                           	opt callstack 0
   547                           
   548                           ; 4 bytes @ 0x31
   549  000091                     	ds	4
   550  000095                     find_volume@i:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x35
   554  000095                     	ds	2
   555  000097                     find_volume@fmt:
   556                           	opt callstack 0
   557                           
   558                           ; 1 bytes @ 0x37
   559  000097                     	ds	1
   560  000098                     find_volume@fs:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x38
   564  000098                     	ds	2
   565  00009A                     f_open@fp:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x3A
   569  00009A                     	ds	2
   570  00009C                     f_open@path:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x3C
   574  00009C                     	ds	2
   575  00009E                     f_open@mode:
   576                           	opt callstack 0
   577                           
   578                           ; 1 bytes @ 0x3E
   579  00009E                     	ds	1
   580  00009F                     ??_f_open:
   581                           
   582                           ; 1 bytes @ 0x3F
   583  00009F                     	ds	4
   584  0000A3                     f_open@sfn:
   585                           	opt callstack 0
   586                           
   587                           ; 12 bytes @ 0x43
   588  0000A3                     	ds	12
   589  0000AF                     f_open@cl:
   590                           	opt callstack 0
   591                           
   592                           ; 4 bytes @ 0x4F
   593  0000AF                     	ds	4
   594  0000B3                     f_open@dw:
   595                           	opt callstack 0
   596                           
   597                           ; 4 bytes @ 0x53
   598  0000B3                     	ds	4
   599  0000B7                     f_open@res:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0x57
   603  0000B7                     	ds	1
   604  0000B8                     f_open@dir:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x58
   608  0000B8                     	ds	2
   609  0000BA                     f_open@dj:
   610                           	opt callstack 0
   611                           
   612                           ; 22 bytes @ 0x5A
   613  0000BA                     	ds	22
   614  0000D0                     guardar@data:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x70
   618  0000D0                     	ds	2
   619  0000D2                     guardar@bw:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x72
   623  0000D2                     	ds	2
   624  0000D4                     ??_main:
   625                           
   626                           ; 1 bytes @ 0x74
   627  0000D4                     	ds	4
   628  0000D8                     main@ND:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x78
   632  0000D8                     	ds	2
   633                           
   634                           	psect	cstackCOMRAM
   635  000001                     __pcstackCOMRAM:
   636                           	opt callstack 0
   637  000001                     ?_interruptadc:
   638                           	opt callstack 0
   639  000001                     ?_mem_cmp:
   640                           	opt callstack 0
   641  000001                     ?_chk_chr:
   642                           	opt callstack 0
   643  000001                     ?_get_ldnumber:
   644                           	opt callstack 0
   645  000001                     ?___wmul:
   646                           	opt callstack 0
   647  000001                     ?_ld_clust:
   648                           	opt callstack 0
   649  000001                     ?___lmul:
   650                           	opt callstack 0
   651  000001                     ?___lldiv:
   652                           	opt callstack 0
   653  000001                     ?___fltol:
   654                           	opt callstack 0
   655  000001                     ?___xxtofl:
   656                           	opt callstack 0
   657  000001                     disk_status@pdrv:
   658                           	opt callstack 0
   659  000001                     SPI1_Exchange8bit@data:
   660                           	opt callstack 0
   661  000001                     mem_cpy@dst:
   662                           	opt callstack 0
   663  000001                     mem_set@dst:
   664                           	opt callstack 0
   665  000001                     mem_cmp@dst:
   666                           	opt callstack 0
   667  000001                     chk_chr@str:
   668                           	opt callstack 0
   669  000001                     ld_clust@fs:
   670                           	opt callstack 0
   671  000001                     st_clust@dir:
   672                           	opt callstack 0
   673  000001                     get_ldnumber@path:
   674                           	opt callstack 0
   675  000001                     Error@a:
   676                           	opt callstack 0
   677  000001                     interruptadc@adcin:
   678                           	opt callstack 0
   679  000001                     ___wmul@multiplier:
   680                           	opt callstack 0
   681  000001                     ___lmul@multiplier:
   682                           	opt callstack 0
   683  000001                     ___lldiv@dividend:
   684                           	opt callstack 0
   685  000001                     ___fltol@f1:
   686                           	opt callstack 0
   687  000001                     ___xxtofl@val:
   688                           	opt callstack 0
   689                           
   690                           ; 4 bytes @ 0x0
   691  000001                     	ds	1
   692  000002                     wait_ready@tmr:
   693                           	opt callstack 0
   694  000002                     rcvr_datablock@buff:
   695                           	opt callstack 0
   696  000002                     validate@obj:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x1
   700  000002                     	ds	1
   701  000003                     ??_get_ldnumber:
   702  000003                     ??_Error:
   703  000003                     mem_cpy@src:
   704                           	opt callstack 0
   705  000003                     mem_set@val:
   706                           	opt callstack 0
   707  000003                     mem_cmp@src:
   708                           	opt callstack 0
   709  000003                     chk_chr@chr:
   710                           	opt callstack 0
   711  000003                     ld_clust@dir:
   712                           	opt callstack 0
   713  000003                     interruptadc@a:
   714                           	opt callstack 0
   715  000003                     ___wmul@multiplicand:
   716                           	opt callstack 0
   717  000003                     st_clust@cl:
   718                           	opt callstack 0
   719                           
   720                           ; 4 bytes @ 0x2
   721  000003                     	ds	1
   722  000004                     ??_validate:
   723  000004                     rcvr_datablock@btr:
   724                           	opt callstack 0
   725  000004                     xmit_datablock@buff:
   726                           	opt callstack 0
   727  000004                     ___send_cmd@arg:
   728                           	opt callstack 0
   729  000004                     Error@v_seg:
   730                           	opt callstack 0
   731                           
   732                           ; 10 bytes @ 0x3
   733  000004                     	ds	1
   734  000005                     ??_interruptadc:
   735  000005                     ??_chk_chr:
   736  000005                     ??_ld_clust:
   737  000005                     ??___fltol:
   738  000005                     ??___xxtofl:
   739  000005                     mem_cpy@cnt:
   740                           	opt callstack 0
   741  000005                     mem_set@cnt:
   742                           	opt callstack 0
   743  000005                     mem_cmp@cnt:
   744                           	opt callstack 0
   745  000005                     ___wmul@product:
   746                           	opt callstack 0
   747  000005                     ___lmul@multiplicand:
   748                           	opt callstack 0
   749  000005                     ___lldiv@divisor:
   750                           	opt callstack 0
   751                           
   752                           ; 4 bytes @ 0x4
   753  000005                     	ds	1
   754  000006                     xmit_datablock@token:
   755                           	opt callstack 0
   756  000006                     rcvr_datablock@tmr:
   757                           	opt callstack 0
   758                           
   759                           ; 2 bytes @ 0x5
   760  000006                     	ds	1
   761  000007                     ??_mem_cmp:
   762  000007                     xmit_datablock@i:
   763                           	opt callstack 0
   764  000007                     mem_cpy@d:
   765                           	opt callstack 0
   766  000007                     mem_set@d:
   767                           	opt callstack 0
   768  000007                     get_ldnumber@tp:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x6
   772  000007                     	ds	1
   773  000008                     rcvr_datablock@token:
   774                           	opt callstack 0
   775  000008                     ___send_cmd@res:
   776                           	opt callstack 0
   777  000008                     validate@fil:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x7
   781  000008                     	ds	1
   782  000009                     xmit_datablock@resp:
   783                           	opt callstack 0
   784  000009                     ___send_cmd@n:
   785                           	opt callstack 0
   786  000009                     ___fltol@sign1:
   787                           	opt callstack 0
   788  000009                     ___xxtofl@sign:
   789                           	opt callstack 0
   790  000009                     mem_cpy@s:
   791                           	opt callstack 0
   792  000009                     mem_cmp@d:
   793                           	opt callstack 0
   794  000009                     create_name@dp:
   795                           	opt callstack 0
   796  000009                     get_ldnumber@vol:
   797                           	opt callstack 0
   798  000009                     ___lmul@product:
   799                           	opt callstack 0
   800  000009                     ___lldiv@quotient:
   801                           	opt callstack 0
   802                           
   803                           ; 4 bytes @ 0x8
   804  000009                     	ds	1
   805  00000A                     ___send_cmd@cmd:
   806                           	opt callstack 0
   807  00000A                     ___fltol@exp1:
   808                           	opt callstack 0
   809  00000A                     ___xxtofl@exp:
   810                           	opt callstack 0
   811                           
   812                           ; 1 bytes @ 0x9
   813  00000A                     	ds	1
   814  00000B                     mem_cmp@s:
   815                           	opt callstack 0
   816  00000B                     create_name@path:
   817                           	opt callstack 0
   818  00000B                     get_ldnumber@i:
   819                           	opt callstack 0
   820  00000B                     send_cmd@arg:
   821                           	opt callstack 0
   822  00000B                     ld_clust@cl:
   823                           	opt callstack 0
   824  00000B                     ___xxtofl@arg:
   825                           	opt callstack 0
   826                           
   827                           ; 4 bytes @ 0xA
   828  00000B                     	ds	2
   829  00000D                     ??_create_name:
   830  00000D                     ?_clust2sect:
   831                           	opt callstack 0
   832  00000D                     ___lldiv@counter:
   833                           	opt callstack 0
   834  00000D                     mem_cmp@r:
   835                           	opt callstack 0
   836  00000D                     clust2sect@fs:
   837                           	opt callstack 0
   838  00000D                     get_ldnumber@tt:
   839                           	opt callstack 0
   840                           
   841                           ; 2 bytes @ 0xC
   842  00000D                     	ds	2
   843  00000F                     ?___flmul:
   844                           	opt callstack 0
   845  00000F                     send_cmd@cmd:
   846                           	opt callstack 0
   847  00000F                     clust2sect@clst:
   848                           	opt callstack 0
   849  00000F                     ___flmul@b:
   850                           	opt callstack 0
   851                           
   852                           ; 4 bytes @ 0xE
   853  00000F                     	ds	1
   854  000010                     send_cmd@res:
   855                           	opt callstack 0
   856                           
   857                           ; 1 bytes @ 0xF
   858  000010                     	ds	1
   859  000011                     ??_disk_initialize:
   860  000011                     disk_ioctl@cmd:
   861                           	opt callstack 0
   862  000011                     disk_read@buff:
   863                           	opt callstack 0
   864  000011                     disk_write@buff:
   865                           	opt callstack 0
   866  000011                     _create_name$624:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x10
   870  000011                     	ds	1
   871  000012                     disk_initialize@pdrv:
   872                           	opt callstack 0
   873  000012                     disk_ioctl@buff:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x11
   877  000012                     	ds	1
   878  000013                     ??_clust2sect:
   879  000013                     create_name@si:
   880                           	opt callstack 0
   881  000013                     disk_initialize@ocr:
   882                           	opt callstack 0
   883  000013                     disk_read@sector:
   884                           	opt callstack 0
   885  000013                     disk_write@sector:
   886                           	opt callstack 0
   887  000013                     ___flmul@a:
   888                           	opt callstack 0
   889                           
   890                           ; 4 bytes @ 0x12
   891  000013                     	ds	1
   892  000014                     ??_disk_ioctl:
   893                           
   894                           ; 1 bytes @ 0x13
   895  000014                     	ds	1
   896  000015                     create_name@b:
   897                           	opt callstack 0
   898                           
   899                           ; 1 bytes @ 0x14
   900  000015                     	ds	1
   901  000016                     create_name@ni:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x15
   905  000016                     	ds	1
   906  000017                     ??___flmul:
   907  000017                     _disk_initialize$134:
   908                           	opt callstack 0
   909  000017                     disk_read@count:
   910                           	opt callstack 0
   911  000017                     disk_write@count:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x16
   915  000017                     	ds	1
   916  000018                     create_name@p:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x17
   920  000018                     	ds	1
   921  000019                     ??_disk_write:
   922  000019                     disk_initialize@cmd:
   923                           	opt callstack 0
   924  000019                     disk_read@pdrv:
   925                           	opt callstack 0
   926                           
   927                           ; 1 bytes @ 0x18
   928  000019                     	ds	1
   929  00001A                     disk_initialize@ty:
   930                           	opt callstack 0
   931  00001A                     disk_write@pdrv:
   932                           	opt callstack 0
   933  00001A                     create_name@d:
   934                           	opt callstack 0
   935  00001A                     _disk_read$143:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x19
   939  00001A                     	ds	1
   940  00001B                     ___flmul@sign:
   941                           	opt callstack 0
   942  00001B                     disk_initialize@tmr:
   943                           	opt callstack 0
   944  00001B                     sync_window@fs:
   945                           	opt callstack 0
   946  00001B                     create_name@sfn:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x1A
   950  00001B                     	ds	1
   951  00001C                     disk_read@cmd:
   952                           	opt callstack 0
   953  00001C                     ___flmul@grs:
   954                           	opt callstack 0
   955                           
   956                           ; 4 bytes @ 0x1B
   957  00001C                     	ds	1
   958  00001D                     ??_sync_window:
   959  00001D                     disk_initialize@n:
   960                           	opt callstack 0
   961  00001D                     create_name@i:
   962                           	opt callstack 0
   963                           
   964                           ; 2 bytes @ 0x1C
   965  00001D                     	ds	2
   966  00001F                     create_name@c:
   967                           	opt callstack 0
   968                           
   969                           ; 1 bytes @ 0x1E
   970  00001F                     	ds	1
   971  000020                     ___flmul@aexp:
   972                           	opt callstack 0
   973                           
   974                           ; 1 bytes @ 0x1F
   975  000020                     	ds	1
   976  000021                     ___flmul@bexp:
   977                           	opt callstack 0
   978  000021                     disk_ioctl@csd:
   979                           	opt callstack 0
   980                           
   981                           ; 16 bytes @ 0x20
   982  000021                     	ds	1
   983  000022                     ___flmul@prod:
   984                           	opt callstack 0
   985                           
   986                           ; 4 bytes @ 0x21
   987  000022                     	ds	4
   988  000026                     ___flmul@temp:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x25
   992  000026                     	ds	2
   993  000028                     ?___fldiv:
   994                           	opt callstack 0
   995  000028                     ___fldiv@b:
   996                           	opt callstack 0
   997                           
   998                           ; 4 bytes @ 0x27
   999  000028                     	ds	1
  1000  000029                     sync_window@res:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x28
  1004  000029                     	ds	1
  1005  00002A                     sync_window@nf:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x29
  1009  00002A                     	ds	2
  1010  00002C                     sync_window@wsect:
  1011                           	opt callstack 0
  1012  00002C                     ___fldiv@a:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x2B
  1016  00002C                     	ds	4
  1017  000030                     ??___fldiv:
  1018  000030                     move_window@fs:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x2F
  1022  000030                     	ds	1
  1023  000031                     disk_ioctl@pdrv:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x30
  1027  000031                     	ds	1
  1028  000032                     disk_ioctl@csize:
  1029                           	opt callstack 0
  1030  000032                     move_window@sector:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x31
  1034  000032                     	ds	2
  1035  000034                     ___fldiv@rem:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x33
  1039  000034                     	ds	2
  1040  000036                     disk_ioctl@res:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x35
  1044  000036                     	ds	1
  1045  000037                     disk_ioctl@n:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x36
  1049  000037                     	ds	1
  1050  000038                     ___fldiv@sign:
  1051                           	opt callstack 0
  1052  000038                     disk_ioctl@ptr:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x37
  1056  000038                     	ds	1
  1057  000039                     ___fldiv@new_exp:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x38
  1061  000039                     	ds	1
  1062  00003A                     move_window@res:
  1063                           	opt callstack 0
  1064  00003A                     sync_fs@fs:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x39
  1068  00003A                     	ds	1
  1069  00003B                     ?_get_fat:
  1070                           	opt callstack 0
  1071  00003B                     get_fat@fs:
  1072                           	opt callstack 0
  1073  00003B                     put_fat@fs:
  1074                           	opt callstack 0
  1075  00003B                     check_fs@fs:
  1076                           	opt callstack 0
  1077  00003B                     ___fldiv@grs:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x3A
  1081  00003B                     	ds	1
  1082  00003C                     ??_sync_fs:
  1083                           
  1084                           ; 1 bytes @ 0x3B
  1085  00003C                     	ds	1
  1086  00003D                     get_fat@clst:
  1087                           	opt callstack 0
  1088  00003D                     put_fat@clst:
  1089                           	opt callstack 0
  1090  00003D                     check_fs@sect:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x3C
  1094  00003D                     	ds	2
  1095  00003F                     ___fldiv@bexp:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x3E
  1099  00003F                     	ds	1
  1100  000040                     ___fldiv@aexp:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x3F
  1104  000040                     	ds	1
  1105  000041                     ??_get_fat:
  1106  000041                     ??_check_fs:
  1107  000041                     put_fat@val:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x40
  1111  000041                     	ds	3
  1112  000044                     sync_fs@res:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x43
  1116  000044                     	ds	1
  1117  000045                     ??_put_fat:
  1118  000045                     find_volume@rfs:
  1119                           	opt callstack 0
  1120  000045                     f_sync@fp:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x44
  1124  000045                     	ds	2
  1125  000047                     find_volume@path:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x46
  1129  000047                     	ds	2
  1130  000049                     find_volume@wmode:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x48
  1134  000049                     	ds	1
  1135  00004A                     ??_find_volume:
  1136  00004A                     _get_fat$374:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x49
  1140  00004A                     	ds	1
  1141  00004B                     f_sync@res:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x4A
  1145  00004B                     	ds	1
  1146  00004C                     f_sync@dir:
  1147                           	opt callstack 0
  1148  00004C                     get_fat@val:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x4B
  1152  00004C                     	ds	1
  1153  00004D                     _put_fat$400:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x4C
  1157  00004D                     	ds	1
  1158  00004E                     f_close@fp:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x4D
  1162  00004E                     	ds	1
  1163  00004F                     _put_fat$401:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x4E
  1167  00004F                     	ds	1
  1168  000050                     f_close@res:
  1169                           	opt callstack 0
  1170  000050                     get_fat@wc:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x4F
  1174  000050                     	ds	1
  1175  000051                     put_fat@bc:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x50
  1179  000051                     	ds	1
  1180  000052                     get_fat@p:
  1181                           	opt callstack 0
  1182  000052                     f_mount@fs:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x51
  1186  000052                     	ds	1
  1187  000053                     put_fat@res:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 1 bytes @ 0x52
  1191  000053                     	ds	1
  1192  000054                     get_fat@bc:
  1193                           	opt callstack 0
  1194  000054                     put_fat@p:
  1195                           	opt callstack 0
  1196  000054                     f_mount@path:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x53
  1200  000054                     	ds	2
  1201  000056                     ?_create_chain:
  1202                           	opt callstack 0
  1203  000056                     f_mount@opt:
  1204                           	opt callstack 0
  1205  000056                     remove_chain@fs:
  1206                           	opt callstack 0
  1207  000056                     create_chain@fs:
  1208                           	opt callstack 0
  1209  000056                     dir_sdi@dp:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x55
  1213  000056                     	ds	1
  1214  000057                     f_mount@res:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x56
  1218  000057                     	ds	1
  1219  000058                     dir_sdi@idx:
  1220                           	opt callstack 0
  1221  000058                     f_mount@cfs:
  1222                           	opt callstack 0
  1223  000058                     remove_chain@clst:
  1224                           	opt callstack 0
  1225  000058                     create_chain@clst:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 4 bytes @ 0x57
  1229  000058                     	ds	2
  1230  00005A                     f_mount@rp:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x59
  1234  00005A                     	ds	2
  1235  00005C                     f_mount@vol:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x5B
  1239  00005C                     	ds	4
  1240  000060                     
  1241                           ; 1 bytes @ 0x5F
  1242 ;;
  1243 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1244 ;;
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 31 in file "Main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  ND              2  120[BANK0 ] int 
  1252 ;;  a               2    0        int 
  1253 ;;  out             2    0        int 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0
  1264 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1265 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1266 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1267 ;;Total ram usage:        6 bytes
  1268 ;; Hardware stack levels required when called:   15
  1269 ;; This function calls:
  1270 ;;		_Init8LEDs
  1271 ;;		___fldiv
  1272 ;;		___flmul
  1273 ;;		___fltol
  1274 ;;		___xxtofl
  1275 ;;		_guardar
  1276 ;;		_interruptadc
  1277 ;; This function is called by:
  1278 ;;		Startup code after reset
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text0
  1283  004B6E                     __ptext0:
  1284                           	opt callstack 0
  1285  004B6E                     _main:
  1286                           	opt callstack 16
  1287                           
  1288                           ;Main.c: 33:     volt = 0.0;
  1289                           
  1290                           ;incstack = 0
  1291  004B6E  0E00               	movlw	0
  1292  004B70  0100               	movlb	0	; () banked
  1293  004B72  6FEE               	movwf	_volt& (0+255),b
  1294  004B74  0E00               	movlw	0
  1295  004B76  6FEF               	movwf	(_volt+1)& (0+255),b
  1296  004B78  0E00               	movlw	0
  1297  004B7A  6FF0               	movwf	(_volt+2)& (0+255),b
  1298  004B7C  0E00               	movlw	0
  1299  004B7E  6FF1               	movwf	(_volt+3)& (0+255),b
  1300                           
  1301                           ;Main.c: 34:     adcin = 0;
  1302  004B80  0E00               	movlw	0
  1303  004B82  6FF3               	movwf	(_adcin+1)& (0+255),b
  1304  004B84  0E00               	movlw	0
  1305  004B86  6FF2               	movwf	_adcin& (0+255),b
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;Main.c: 36:     int out;;Main.c: 37:     int ND;;Main.c: 39:     Init8LEDs();
  1309  004B88  ECE2  F02E         	call	_Init8LEDs	;wreg free
  1310                           
  1311                           ;Main.c: 41:     OSCCON = 0x53;
  1312  004B8C  0E53               	movlw	83
  1313  004B8E  6ED3               	movwf	4051,c	;volatile
  1314                           
  1315                           ;Main.c: 42:     ADCON2 = 0x94;
  1316  004B90  0E94               	movlw	148
  1317  004B92  6EC0               	movwf	4032,c	;volatile
  1318                           
  1319                           ;Main.c: 43:     ADCON1 = 0x00;
  1320  004B94  0E00               	movlw	0
  1321  004B96  6EC1               	movwf	4033,c	;volatile
  1322                           
  1323                           ;Main.c: 44:     LATA = 0x00;
  1324  004B98  0E00               	movlw	0
  1325  004B9A  6E89               	movwf	3977,c	;volatile
  1326                           
  1327                           ;Main.c: 45:     TRISA = 0x00;
  1328  004B9C  0E00               	movlw	0
  1329  004B9E  6E92               	movwf	3986,c	;volatile
  1330                           
  1331                           ;Main.c: 46:     ANSELA = 0x00;
  1332  004BA0  0E00               	movlw	0
  1333  004BA2  010F               	movlb	15	; () banked
  1334  004BA4  6F5B               	movwf	91,b	;volatile
  1335                           
  1336                           ; BSR set to: 15
  1337                           ;Main.c: 47:     TRISC = 0x04;
  1338  004BA6  0E04               	movlw	4
  1339  004BA8  6E94               	movwf	3988,c	;volatile
  1340                           
  1341                           ; BSR set to: 15
  1342                           ;Main.c: 48:     ANSELC = 0x04;
  1343  004BAA  0E04               	movlw	4
  1344  004BAC  6F5D               	movwf	93,b	;volatile
  1345                           
  1346                           ; BSR set to: 15
  1347                           ;Main.c: 49:     ADCON0 = 0x39;
  1348  004BAE  0E39               	movlw	57
  1349  004BB0  6EC2               	movwf	4034,c	;volatile
  1350                           
  1351                           ; BSR set to: 15
  1352                           ;Main.c: 50:     GIE = 1;
  1353  004BB2  8EF2               	bsf	4082,7,c	;volatile
  1354                           
  1355                           ; BSR set to: 15
  1356                           ;Main.c: 51:     PEIE = 1;
  1357  004BB4  8CF2               	bsf	4082,6,c	;volatile
  1358                           
  1359                           ; BSR set to: 15
  1360                           ;Main.c: 52:     ADIE = 1;
  1361  004BB6  8C9D               	bsf	3997,6,c	;volatile
  1362  004BB8                     l7173:
  1363                           
  1364                           ;Main.c: 55:         i++;
  1365  004BB8  0100               	movlb	0	; () banked
  1366  004BBA  4BE5               	infsnz	_i& (0+255),f,b
  1367  004BBC  2BE6               	incf	(_i+1)& (0+255),f,b
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;Main.c: 56:         ADCON0bits.GO=1;
  1371  004BBE  82C2               	bsf	4034,1,c	;volatile
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;Main.c: 57:         adcin = interruptadc(adcin, i);
  1375  004BC0  C0F2  F001         	movff	_adcin,interruptadc@adcin
  1376  004BC4  C0F3  F002         	movff	_adcin+1,interruptadc@adcin+1
  1377  004BC8  C0E5  F003         	movff	_i,interruptadc@a
  1378  004BCC  C0E6  F004         	movff	_i+1,interruptadc@a+1
  1379  004BD0  EC83  F02E         	call	_interruptadc	;wreg free
  1380  004BD4  C001  F0F2         	movff	?_interruptadc,_adcin
  1381  004BD8  C002  F0F3         	movff	?_interruptadc+1,_adcin+1
  1382                           
  1383                           ;Main.c: 58:         PORTA = adcin/4;
  1384  004BDC  C0F2  F0D4         	movff	_adcin,??_main
  1385  004BE0  C0F3  F0D5         	movff	_adcin+1,??_main+1
  1386  004BE4  0100               	movlb	0	; () banked
  1387  004BE6  90D8               	bcf	status,0,c
  1388  004BE8  33D5               	rrcf	(??_main+1)& (0+255),f,b
  1389  004BEA  33D4               	rrcf	??_main& (0+255),f,b
  1390  004BEC  90D8               	bcf	status,0,c
  1391  004BEE  33D5               	rrcf	(??_main+1)& (0+255),f,b
  1392  004BF0  33D4               	rrcf	??_main& (0+255),f,b
  1393  004BF2  51D4               	movf	??_main& (0+255),w,b
  1394  004BF4  6E80               	movwf	3968,c	;volatile
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;Main.c: 59:         volt = (adcin*5.0)/1023.0;
  1398  004BF6  0E00               	movlw	0
  1399  004BF8  6E13               	movwf	___flmul@a,c
  1400  004BFA  0E00               	movlw	0
  1401  004BFC  6E14               	movwf	___flmul@a+1,c
  1402  004BFE  0EA0               	movlw	160
  1403  004C00  6E15               	movwf	___flmul@a+2,c
  1404  004C02  0E40               	movlw	64
  1405  004C04  6E16               	movwf	___flmul@a+3,c
  1406  004C06  C0F2  F001         	movff	_adcin,___xxtofl@val
  1407  004C0A  C0F3  F002         	movff	_adcin+1,___xxtofl@val+1
  1408  004C0E  6A03               	clrf	___xxtofl@val+2,c
  1409  004C10  6A04               	clrf	___xxtofl@val+3,c
  1410  004C12  0E00               	movlw	0
  1411  004C14  EC17  F025         	call	___xxtofl
  1412  004C18  C001  F00F         	movff	?___xxtofl,___flmul@b
  1413  004C1C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1414  004C20  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1415  004C24  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1416  004C28  ECA0  F019         	call	___flmul	;wreg free
  1417  004C2C  C00F  F028         	movff	?___flmul,___fldiv@b
  1418  004C30  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1419  004C34  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1420  004C38  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1421  004C3C  0E00               	movlw	0
  1422  004C3E  6E2C               	movwf	___fldiv@a,c
  1423  004C40  0EC0               	movlw	192
  1424  004C42  6E2D               	movwf	___fldiv@a+1,c
  1425  004C44  0E7F               	movlw	127
  1426  004C46  6E2E               	movwf	___fldiv@a+2,c
  1427  004C48  0E44               	movlw	68
  1428  004C4A  6E2F               	movwf	___fldiv@a+3,c
  1429  004C4C  EC27  F01E         	call	___fldiv	;wreg free
  1430  004C50  C028  F0EE         	movff	?___fldiv,_volt
  1431  004C54  C029  F0EF         	movff	?___fldiv+1,_volt+1
  1432  004C58  C02A  F0F0         	movff	?___fldiv+2,_volt+2
  1433  004C5C  C02B  F0F1         	movff	?___fldiv+3,_volt+3
  1434                           
  1435                           ;Main.c: 60:         ND = (char) volt;
  1436  004C60  C0EE  F001         	movff	_volt,___fltol@f1
  1437  004C64  C0EF  F002         	movff	_volt+1,___fltol@f1+1
  1438  004C68  C0F0  F003         	movff	_volt+2,___fltol@f1+2
  1439  004C6C  C0F1  F004         	movff	_volt+3,___fltol@f1+3
  1440  004C70  EC94  F02A         	call	___fltol	;wreg free
  1441  004C74  5001               	movf	?___fltol,w,c
  1442  004C76  0100               	movlb	0	; () banked
  1443  004C78  6FD8               	movwf	main@ND& (0+255),b
  1444  004C7A  6BD9               	clrf	(main@ND+1)& (0+255),b
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;Main.c: 61:         guardar(ND);
  1448  004C7C  C0D8  F0D0         	movff	main@ND,guardar@data
  1449  004C80  C0D9  F0D1         	movff	main@ND+1,guardar@data+1
  1450  004C84  ECD6  F029         	call	_guardar	;wreg free
  1451  004C88  D797               	goto	l7173
  1452  004C8A                     __end_of_main:
  1453                           	opt callstack 0
  1454                           
  1455 ;; *************** function _interruptadc *****************
  1456 ;; Defined at:
  1457 ;;		line 66 in file "Main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  adcin           2    0[COMRAM] int 
  1460 ;;  a               2    2[COMRAM] int 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  2    0[COMRAM] int 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1472 ;;      Params:         4       0       0       0       0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1474 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1475 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1476 ;;Total ram usage:        6 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text1
  1486  005D06                     __ptext1:
  1487                           	opt callstack 0
  1488  005D06                     _interruptadc:
  1489                           	opt callstack 30
  1490                           
  1491                           ;Main.c: 67:     if(ADIF==1) {
  1492                           
  1493                           ;incstack = 0
  1494  005D06  AC9E               	btfss	3998,6,c	;volatile
  1495  005D08  D00A               	goto	l6649
  1496                           
  1497                           ;Main.c: 68:         ADIE=0;
  1498  005D0A  9C9D               	bcf	3997,6,c	;volatile
  1499                           
  1500                           ;Main.c: 69:         adcin = (ADRESH<<8)+ADRESL;
  1501  005D0C  50C4               	movf	4036,w,c	;volatile
  1502  005D0E  6E06               	movwf	(??_interruptadc+1)& (0+255),c
  1503  005D10  6A05               	clrf	??_interruptadc& (0+255),c
  1504  005D12  50C3               	movf	4035,w,c	;volatile
  1505  005D14  2405               	addwf	??_interruptadc,w,c
  1506  005D16  6E01               	movwf	interruptadc@adcin,c
  1507  005D18  0E00               	movlw	0
  1508  005D1A  2006               	addwfc	??_interruptadc+1,w,c
  1509  005D1C  6E02               	movwf	interruptadc@adcin+1,c
  1510  005D1E                     l6649:
  1511                           
  1512                           ;Main.c: 71:     ADIE=1;
  1513  005D1E  8C9D               	bsf	3997,6,c	;volatile
  1514                           
  1515                           ;Main.c: 72:     ADIF=0;
  1516  005D20  9C9E               	bcf	3998,6,c	;volatile
  1517                           
  1518                           ;Main.c: 74:     return adcin;
  1519  005D22  C001  F001         	movff	interruptadc@adcin,?_interruptadc
  1520  005D26  C002  F002         	movff	interruptadc@adcin+1,?_interruptadc+1
  1521  005D2A  0012               	return		;funcret
  1522  005D2C                     __end_of_interruptadc:
  1523                           	opt callstack 0
  1524                           
  1525 ;; *************** function _guardar *****************
  1526 ;; Defined at:
  1527 ;;		line 107 in file "Main.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  data            2  112[BANK0 ] PTR unsigned char 
  1530 ;;		 -> RAM(2047), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  bw              2  114[BANK0 ] unsigned short 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1542 ;;      Params:         0       2       0       0       0       0       0       0       0
  1543 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1545 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1546 ;;Total ram usage:        4 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:   14
  1549 ;; This function calls:
  1550 ;;		_Error
  1551 ;;		_SYSTEM_Initialize
  1552 ;;		_f_close
  1553 ;;		_f_lseek
  1554 ;;		_f_mount
  1555 ;;		_f_open
  1556 ;;		_f_write
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text2
  1563  0053AC                     __ptext2:
  1564                           	opt callstack 0
  1565  0053AC                     _guardar:
  1566                           	opt callstack 16
  1567                           
  1568                           ;Main.c: 109:     UINT bw;;Main.c: 110:     Error(2);
  1569                           
  1570                           ;incstack = 0
  1571  0053AC  0E00               	movlw	0
  1572  0053AE  6E02               	movwf	Error@a+1,c
  1573  0053B0  0E02               	movlw	2
  1574  0053B2  6E01               	movwf	Error@a,c
  1575  0053B4  EC71  F029         	call	_Error	;wreg free
  1576                           
  1577                           ;Main.c: 111:     SYSTEM_Initialize();
  1578  0053B8  ECF1  F02E         	call	_SYSTEM_Initialize	;wreg free
  1579                           
  1580                           ;Main.c: 112:     if (f_mount(&FatFs, "", 1) != FR_OK) {
  1581  0053BC  0E20               	movlw	low _FatFs
  1582  0053BE  6E52               	movwf	f_mount@fs,c
  1583  0053C0  0E01               	movlw	high _FatFs
  1584  0053C2  6E53               	movwf	f_mount@fs+1,c
  1585  0053C4  0E18               	movlw	low (STR_4+8)
  1586  0053C6  6E54               	movwf	f_mount@path,c
  1587  0053C8  0E08               	movlw	high (STR_4+8)
  1588  0053CA  6E55               	movwf	f_mount@path+1,c
  1589  0053CC  0E01               	movlw	1
  1590  0053CE  6E56               	movwf	f_mount@opt,c
  1591  0053D0  ECF1  F02A         	call	_f_mount	;wreg free
  1592  0053D4  0900               	iorlw	0
  1593  0053D6  B4D8               	btfsc	status,2,c
  1594  0053D8  D043               	goto	l6675
  1595                           
  1596                           ;Main.c: 113:            if (f_open(&Fil, "Beee.txt", 0x10 | 0x01 | 0x02) == FR_OK) {
  1597  0053DA  0E00               	movlw	low _Fil
  1598  0053DC  0100               	movlb	0	; () banked
  1599  0053DE  6F9A               	movwf	f_open@fp& (0+255),b
  1600  0053E0  0E01               	movlw	high _Fil
  1601  0053E2  6F9B               	movwf	(f_open@fp+1)& (0+255),b
  1602  0053E4  0E10               	movlw	low STR_4
  1603  0053E6  6F9C               	movwf	f_open@path& (0+255),b
  1604  0053E8  0E08               	movlw	high STR_4
  1605  0053EA  6F9D               	movwf	(f_open@path+1)& (0+255),b
  1606  0053EC  0E13               	movlw	19
  1607  0053EE  6F9E               	movwf	f_open@mode& (0+255),b
  1608  0053F0  ECD5  F017         	call	_f_open	;wreg free
  1609  0053F4  0900               	iorlw	0
  1610  0053F6  A4D8               	btfss	status,2,c
  1611  0053F8  0012               	return	
  1612                           
  1613                           ;Main.c: 115:                 if ((Fil.fsize != 0) && (f_lseek(&Fil, Fil.fsize) != FR_OK
      +                          )) goto endSD;
  1614  0053FA  0101               	movlb	1	; () banked
  1615  0053FC  510A               	movf	(_Fil+10)& (0+255),w,b
  1616  0053FE  110B               	iorwf	(_Fil+11)& (0+255),w,b
  1617  005400  110C               	iorwf	(_Fil+12)& (0+255),w,b
  1618  005402  110D               	iorwf	(_Fil+13)& (0+255),w,b
  1619  005404  B4D8               	btfsc	status,2,c
  1620  005406  D012               	goto	l6671
  1621                           
  1622                           ; BSR set to: 1
  1623  005408  0E00               	movlw	low _Fil
  1624  00540A  0100               	movlb	0	; () banked
  1625  00540C  6F6D               	movwf	f_lseek@fp& (0+255),b
  1626  00540E  0E01               	movlw	high _Fil
  1627  005410  6F6E               	movwf	(f_lseek@fp+1)& (0+255),b
  1628  005412  C10A  F06F         	movff	_Fil+10,f_lseek@ofs
  1629  005416  C10B  F070         	movff	_Fil+11,f_lseek@ofs+1
  1630  00541A  C10C  F071         	movff	_Fil+12,f_lseek@ofs+2
  1631  00541E  C10D  F072         	movff	_Fil+13,f_lseek@ofs+3
  1632  005422  EC96  F00C         	call	_f_lseek	;wreg free
  1633  005426  0900               	iorlw	0
  1634  005428  A4D8               	btfss	status,2,c
  1635  00542A  D013               	goto	l6673
  1636  00542C                     l6671:
  1637                           
  1638                           ;Main.c: 116:                    f_write(&Fil, data , 14 , &bw);
  1639  00542C  0E00               	movlw	low _Fil
  1640  00542E  0100               	movlb	0	; () banked
  1641  005430  6F6D               	movwf	f_write@fp& (0+255),b
  1642  005432  0E01               	movlw	high _Fil
  1643  005434  6F6E               	movwf	(f_write@fp+1)& (0+255),b
  1644  005436  C0D0  F06F         	movff	guardar@data,f_write@buff
  1645  00543A  C0D1  F070         	movff	guardar@data+1,f_write@buff+1
  1646  00543E  0E00               	movlw	0
  1647  005440  6F72               	movwf	(f_write@btw+1)& (0+255),b
  1648  005442  0E0E               	movlw	14
  1649  005444  6F71               	movwf	f_write@btw& (0+255),b
  1650  005446  0ED2               	movlw	low guardar@bw
  1651  005448  6F73               	movwf	f_write@bw& (0+255),b
  1652  00544A  0E00               	movlw	high guardar@bw
  1653  00544C  6F74               	movwf	(f_write@bw+1)& (0+255),b
  1654  00544E  ECE4  F008         	call	_f_write	;wreg free
  1655  005452                     l6673:
  1656  005452  0E00               	movlw	low _Fil
  1657  005454  6E4E               	movwf	f_close@fp,c
  1658  005456  0E01               	movlw	high _Fil
  1659  005458  6E4F               	movwf	f_close@fp+1,c
  1660  00545A  EC3B  F02E         	call	_f_close	;wreg free
  1661  00545E  0012               	return	
  1662  005460                     l6675:
  1663                           
  1664                           ;Main.c: 123:         Error(0);
  1665  005460  0E00               	movlw	0
  1666  005462  6E02               	movwf	Error@a+1,c
  1667  005464  0E00               	movlw	0
  1668  005466  6E01               	movwf	Error@a,c
  1669  005468  EC71  F029         	call	_Error	;wreg free
  1670  00546C  0012               	return		;funcret
  1671  00546E                     __end_of_guardar:
  1672                           	opt callstack 0
  1673                           
  1674 ;; *************** function _f_write *****************
  1675 ;; Defined at:
  1676 ;;		line 2691 in file "ff.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  fp              2   13[BANK0 ] PTR struct .
  1679 ;;		 -> Fil(32), 
  1680 ;;  buff            2   15[BANK0 ] PTR const void 
  1681 ;;		 -> RAM(2047), 
  1682 ;;  btw             2   17[BANK0 ] unsigned short 
  1683 ;;  bw              2   19[BANK0 ] PTR unsigned short 
  1684 ;;		 -> guardar@bw(2), 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  clst            4   43[BANK0 ] unsigned long 
  1687 ;;  sect            4   39[BANK0 ] unsigned long 
  1688 ;;  wcnt            2   47[BANK0 ] unsigned short 
  1689 ;;  cc              2   37[BANK0 ] unsigned short 
  1690 ;;  wbuff           2   34[BANK0 ] PTR const unsigned char 
  1691 ;;		 -> RAM(2047), 
  1692 ;;  csect           1   36[BANK0 ] unsigned char 
  1693 ;;  res             1   33[BANK0 ] enum E93
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      enum E93
  1696 ;; Registers used:
  1697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1703 ;;      Params:         0       8       0       0       0       0       0       0       0
  1704 ;;      Locals:         0      16       0       0       0       0       0       0       0
  1705 ;;      Temps:          0      12       0       0       0       0       0       0       0
  1706 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1707 ;;Total ram usage:       36 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:   10
  1710 ;; This function calls:
  1711 ;;		_clust2sect
  1712 ;;		_create_chain
  1713 ;;		_disk_write
  1714 ;;		_mem_cpy
  1715 ;;		_move_window
  1716 ;;		_sync_window
  1717 ;;		_validate
  1718 ;; This function is called by:
  1719 ;;		_guardar
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text3
  1724  0011C8                     __ptext3:
  1725                           	opt callstack 0
  1726  0011C8                     _f_write:
  1727                           	opt callstack 19
  1728                           
  1729                           ;ff.c: 2692:  FIL* fp,;ff.c: 2693:  const void *buff,;ff.c: 2694:  UINT btw,;ff.c: 2695:
      +                            UINT* bw;ff.c: 2697: {;ff.c: 2698:  FRESULT res;;ff.c: 2699:  DWORD clst, sect;;ff.c: 
      +                          2700:  UINT wcnt, cc;;ff.c: 2701:  const BYTE *wbuff = (const BYTE*)buff;
  1730                           
  1731                           ;incstack = 0
  1732  0011C8  C06F  F082         	movff	f_write@buff,f_write@wbuff
  1733  0011CC  C070  F083         	movff	f_write@buff+1,f_write@wbuff+1
  1734                           
  1735                           ;ff.c: 2702:  BYTE csect;;ff.c: 2705:  *bw = 0;
  1736  0011D0  C073  FFD9         	movff	f_write@bw,fsr2l
  1737  0011D4  C074  FFDA         	movff	f_write@bw+1,fsr2h
  1738  0011D8  0E00               	movlw	0
  1739  0011DA  6EDE               	movwf	postinc2,c
  1740  0011DC  0E00               	movlw	0
  1741  0011DE  6EDD               	movwf	postdec2,c
  1742                           
  1743                           ;ff.c: 2707:  res = validate(fp);
  1744  0011E0  C06D  F002         	movff	f_write@fp,validate@obj
  1745  0011E4  C06E  F003         	movff	f_write@fp+1,validate@obj+1
  1746  0011E8  EC9C  F02B         	call	_validate	;wreg free
  1747  0011EC  0100               	movlb	0	; () banked
  1748  0011EE  6F81               	movwf	f_write@res& (0+255),b
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;ff.c: 2708:  if (res != FR_OK) return res;
  1752  0011F0  5181               	movf	f_write@res& (0+255),w,b
  1753  0011F2  A4D8               	btfss	status,2,c
  1754  0011F4  0012               	return	
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;ff.c: 2709:  if (fp->err)
  1758  0011F6  EE20 F005          	lfsr	2,5
  1759  0011FA  516D               	movf	f_write@fp& (0+255),w,b
  1760  0011FC  26D9               	addwf	fsr2l,f,c
  1761  0011FE  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1762  001200  22DA               	addwfc	fsr2h,f,c
  1763  001202  50DF               	movf	indf2,w,c
  1764  001204  A4D8               	btfss	status,2,c
  1765  001206  0012               	return	
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;ff.c: 2711:  if (!(fp->flag & 0x02))
  1769  001208  EE20 F004          	lfsr	2,4
  1770  00120C  516D               	movf	f_write@fp& (0+255),w,b
  1771  00120E  26D9               	addwf	fsr2l,f,c
  1772  001210  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1773  001212  22DA               	addwfc	fsr2h,f,c
  1774  001214  A2DF               	btfss	indf2,1,c
  1775  001216  0012               	return	
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;ff.c: 2713:  if (fp->fptr + btw < fp->fptr) btw = 0;
  1779  001218  EE20 F006          	lfsr	2,6
  1780  00121C  516D               	movf	f_write@fp& (0+255),w,b
  1781  00121E  26D9               	addwf	fsr2l,f,c
  1782  001220  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1783  001222  22DA               	addwfc	fsr2h,f,c
  1784  001224  EE10 F006          	lfsr	1,6
  1785  001228  516D               	movf	f_write@fp& (0+255),w,b
  1786  00122A  26E1               	addwf	fsr1l,f,c
  1787  00122C  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1788  00122E  22E2               	addwfc	fsr1h,f,c
  1789  001230  CFE6 F079          	movff	postinc1,??_f_write+4
  1790  001234  CFE6 F07A          	movff	postinc1,??_f_write+5
  1791  001238  CFE6 F07B          	movff	postinc1,??_f_write+6
  1792  00123C  CFE6 F07C          	movff	postinc1,??_f_write+7
  1793  001240  5171               	movf	f_write@btw& (0+255),w,b
  1794  001242  2579               	addwf	(??_f_write+4)& (0+255),w,b
  1795  001244  6F7D               	movwf	(??_f_write+8)& (0+255),b
  1796  001246  5172               	movf	(f_write@btw+1)& (0+255),w,b
  1797  001248  217A               	addwfc	(??_f_write+5)& (0+255),w,b
  1798  00124A  6F7E               	movwf	(??_f_write+9)& (0+255),b
  1799  00124C  0E00               	movlw	0
  1800  00124E  217B               	addwfc	(??_f_write+6)& (0+255),w,b
  1801  001250  6F7F               	movwf	(??_f_write+10)& (0+255),b
  1802  001252  0E00               	movlw	0
  1803  001254  217C               	addwfc	(??_f_write+7)& (0+255),w,b
  1804  001256  6F80               	movwf	(??_f_write+11)& (0+255),b
  1805  001258  50DE               	movf	postinc2,w,c
  1806  00125A  5D7D               	subwf	(??_f_write+8)& (0+255),w,b
  1807  00125C  50DE               	movf	postinc2,w,c
  1808  00125E  597E               	subwfb	(??_f_write+9)& (0+255),w,b
  1809  001260  50DE               	movf	postinc2,w,c
  1810  001262  597F               	subwfb	(??_f_write+10)& (0+255),w,b
  1811  001264  50DE               	movf	postinc2,w,c
  1812  001266  5980               	subwfb	(??_f_write+11)& (0+255),w,b
  1813  001268  B0D8               	btfsc	status,0,c
  1814  00126A  D329               	goto	l6451
  1815                           
  1816                           ; BSR set to: 0
  1817  00126C  0E00               	movlw	0
  1818  00126E  6F72               	movwf	(f_write@btw+1)& (0+255),b
  1819  001270  0E00               	movlw	0
  1820  001272  6F71               	movwf	f_write@btw& (0+255),b
  1821  001274  D324               	goto	l6451
  1822  001276                     l6343:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;ff.c: 2716:   wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {;ff.c: 2717: 
      +                            if ((fp->fptr % ((UINT)512)) == 0) {
  1826  001276  EE20 F006          	lfsr	2,6
  1827  00127A  516D               	movf	f_write@fp& (0+255),w,b
  1828  00127C  26D9               	addwf	fsr2l,f,c
  1829  00127E  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1830  001280  22DA               	addwfc	fsr2h,f,c
  1831  001282  0EFF               	movlw	255
  1832  001284  14DE               	andwf	postinc2,w,c
  1833  001286  6F75               	movwf	??_f_write& (0+255),b
  1834  001288  0E01               	movlw	1
  1835  00128A  14DE               	andwf	postinc2,w,c
  1836  00128C  6F76               	movwf	(??_f_write+1)& (0+255),b
  1837  00128E  0E00               	movlw	0
  1838  001290  14DE               	andwf	postinc2,w,c
  1839  001292  6F77               	movwf	(??_f_write+2)& (0+255),b
  1840  001294  0E00               	movlw	0
  1841  001296  14DE               	andwf	postinc2,w,c
  1842  001298  6F78               	movwf	(??_f_write+3)& (0+255),b
  1843  00129A  5175               	movf	??_f_write& (0+255),w,b
  1844  00129C  1176               	iorwf	(??_f_write+1)& (0+255),w,b
  1845  00129E  1177               	iorwf	(??_f_write+2)& (0+255),w,b
  1846  0012A0  1178               	iorwf	(??_f_write+3)& (0+255),w,b
  1847  0012A2  A4D8               	btfss	status,2,c
  1848  0012A4  D26A               	goto	l6427
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;ff.c: 2718:    csect = (BYTE)(fp->fptr / ((UINT)512) & (fp->fs->csize - 1));
  1852  0012A6  EE20 F006          	lfsr	2,6
  1853  0012AA  516D               	movf	f_write@fp& (0+255),w,b
  1854  0012AC  26D9               	addwf	fsr2l,f,c
  1855  0012AE  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1856  0012B0  22DA               	addwfc	fsr2h,f,c
  1857  0012B2  CFDE F075          	movff	postinc2,??_f_write
  1858  0012B6  CFDE F076          	movff	postinc2,??_f_write+1
  1859  0012BA  CFDE F077          	movff	postinc2,??_f_write+2
  1860  0012BE  CFDE F078          	movff	postinc2,??_f_write+3
  1861  0012C2  0E0A               	movlw	10
  1862  0012C4  D005               	goto	u8550
  1863  0012C6                     u8555:
  1864  0012C6  90D8               	bcf	status,0,c
  1865  0012C8  3378               	rrcf	(??_f_write+3)& (0+255),f,b
  1866  0012CA  3377               	rrcf	(??_f_write+2)& (0+255),f,b
  1867  0012CC  3376               	rrcf	(??_f_write+1)& (0+255),f,b
  1868  0012CE  3375               	rrcf	??_f_write& (0+255),f,b
  1869  0012D0                     u8550:
  1870  0012D0  2EE8               	decfsz	wreg,f,c
  1871  0012D2  D7F9               	goto	u8555
  1872  0012D4  C06D  FFD9         	movff	f_write@fp,fsr2l
  1873  0012D8  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  1874  0012DC  EE10 F002          	lfsr	1,2
  1875  0012E0  50DE               	movf	postinc2,w,c
  1876  0012E2  26E1               	addwf	fsr1l,f,c
  1877  0012E4  50DD               	movf	postdec2,w,c
  1878  0012E6  22E2               	addwfc	fsr1h,f,c
  1879  0012E8  50E7               	movf	indf1,w,c
  1880  0012EA  6F79               	movwf	(??_f_write+4)& (0+255),b
  1881  0012EC  0579               	decf	(??_f_write+4)& (0+255),w,b
  1882  0012EE  1575               	andwf	??_f_write& (0+255),w,b
  1883  0012F0  6F84               	movwf	f_write@csect& (0+255),b
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;ff.c: 2719:    if (!csect) {
  1887  0012F2  5184               	movf	f_write@csect& (0+255),w,b
  1888  0012F4  A4D8               	btfss	status,2,c
  1889  0012F6  D0A3               	goto	l6379
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;ff.c: 2720:     if (fp->fptr == 0) {
  1893  0012F8  EE20 F006          	lfsr	2,6
  1894  0012FC  516D               	movf	f_write@fp& (0+255),w,b
  1895  0012FE  26D9               	addwf	fsr2l,f,c
  1896  001300  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1897  001302  22DA               	addwfc	fsr2h,f,c
  1898  001304  50DE               	movf	postinc2,w,c
  1899  001306  10DE               	iorwf	postinc2,w,c
  1900  001308  10DE               	iorwf	postinc2,w,c
  1901  00130A  10DE               	iorwf	postinc2,w,c
  1902  00130C  A4D8               	btfss	status,2,c
  1903  00130E  D027               	goto	l6357
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;ff.c: 2721:      clst = fp->sclust;
  1907  001310  EE20 F00E          	lfsr	2,14
  1908  001314  516D               	movf	f_write@fp& (0+255),w,b
  1909  001316  26D9               	addwf	fsr2l,f,c
  1910  001318  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1911  00131A  22DA               	addwfc	fsr2h,f,c
  1912  00131C  CFDE F08B          	movff	postinc2,f_write@clst
  1913  001320  CFDE F08C          	movff	postinc2,f_write@clst+1
  1914  001324  CFDE F08D          	movff	postinc2,f_write@clst+2
  1915  001328  CFDE F08E          	movff	postinc2,f_write@clst+3
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;ff.c: 2722:      if (clst == 0)
  1919  00132C  518B               	movf	f_write@clst& (0+255),w,b
  1920  00132E  118C               	iorwf	(f_write@clst+1)& (0+255),w,b
  1921  001330  118D               	iorwf	(f_write@clst+2)& (0+255),w,b
  1922  001332  118E               	iorwf	(f_write@clst+3)& (0+255),w,b
  1923  001334  A4D8               	btfss	status,2,c
  1924  001336  D033               	goto	l6359
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;ff.c: 2723:       clst = create_chain(fp->fs, 0);
  1928  001338  C06D  FFD9         	movff	f_write@fp,fsr2l
  1929  00133C  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  1930  001340  CFDE F056          	movff	postinc2,create_chain@fs
  1931  001344  CFDD F057          	movff	postdec2,create_chain@fs+1
  1932  001348  0E00               	movlw	0
  1933  00134A  6E58               	movwf	create_chain@clst,c
  1934  00134C  0E00               	movlw	0
  1935  00134E  6E59               	movwf	create_chain@clst+1,c
  1936  001350  0E00               	movlw	0
  1937  001352  6E5A               	movwf	create_chain@clst+2,c
  1938  001354  0E00               	movlw	0
  1939  001356  6E5B               	movwf	create_chain@clst+3,c
  1940  001358  EC49  F01B         	call	_create_chain	;wreg free
  1941  00135C  D018               	goto	L1
  1942  00135E                     l6357:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;ff.c: 2730:       clst = create_chain(fp->fs, fp->clust);
  1946  00135E  C06D  FFD9         	movff	f_write@fp,fsr2l
  1947  001362  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  1948  001366  CFDE F056          	movff	postinc2,create_chain@fs
  1949  00136A  CFDD F057          	movff	postdec2,create_chain@fs+1
  1950  00136E  EE20 F012          	lfsr	2,18
  1951  001372  516D               	movf	f_write@fp& (0+255),w,b
  1952  001374  26D9               	addwf	fsr2l,f,c
  1953  001376  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1954  001378  22DA               	addwfc	fsr2h,f,c
  1955  00137A  CFDE F058          	movff	postinc2,create_chain@clst
  1956  00137E  CFDE F059          	movff	postinc2,create_chain@clst+1
  1957  001382  CFDE F05A          	movff	postinc2,create_chain@clst+2
  1958  001386  CFDE F05B          	movff	postinc2,create_chain@clst+3
  1959  00138A  EC49  F01B         	call	_create_chain	;wreg free
  1960  00138E                     L1:
  1961  00138E  C056  F08B         	movff	?_create_chain,f_write@clst
  1962  001392  C057  F08C         	movff	?_create_chain+1,f_write@clst+1
  1963  001396  C058  F08D         	movff	?_create_chain+2,f_write@clst+2
  1964  00139A  C059  F08E         	movff	?_create_chain+3,f_write@clst+3
  1965  00139E                     l6359:
  1966                           
  1967                           ;ff.c: 2732:     if (clst == 0) break;
  1968  00139E  0100               	movlb	0	; () banked
  1969  0013A0  518B               	movf	f_write@clst& (0+255),w,b
  1970  0013A2  118C               	iorwf	(f_write@clst+1)& (0+255),w,b
  1971  0013A4  118D               	iorwf	(f_write@clst+2)& (0+255),w,b
  1972  0013A6  118E               	iorwf	(f_write@clst+3)& (0+255),w,b
  1973  0013A8  B4D8               	btfsc	status,2,c
  1974  0013AA  D28D               	goto	u8770
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;ff.c: 2733:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  1978  0013AC  058B               	decf	f_write@clst& (0+255),w,b
  1979  0013AE  118C               	iorwf	(f_write@clst+1)& (0+255),w,b
  1980  0013B0  118D               	iorwf	(f_write@clst+2)& (0+255),w,b
  1981  0013B2  118E               	iorwf	(f_write@clst+3)& (0+255),w,b
  1982  0013B4  A4D8               	btfss	status,2,c
  1983  0013B6  D009               	goto	l6369
  1984                           
  1985                           ; BSR set to: 0
  1986  0013B8  EE20 F005          	lfsr	2,5
  1987  0013BC  516D               	movf	f_write@fp& (0+255),w,b
  1988  0013BE  26D9               	addwf	fsr2l,f,c
  1989  0013C0  516E               	movf	(f_write@fp+1)& (0+255),w,b
  1990  0013C2  22DA               	addwfc	fsr2h,f,c
  1991  0013C4  0E02               	movlw	2
  1992  0013C6  6EDF               	movwf	indf2,c
  1993  0013C8  0012               	return	
  1994  0013CA                     l6369:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;ff.c: 2734:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK
      +                          _ERR; };
  1998  0013CA  298B               	incf	f_write@clst& (0+255),w,b
  1999  0013CC  E110               	bnz	l6375
  2000  0013CE  298C               	incf	(f_write@clst+1)& (0+255),w,b
  2001  0013D0  E10E               	bnz	l6375
  2002  0013D2  298D               	incf	(f_write@clst+2)& (0+255),w,b
  2003  0013D4  E10C               	bnz	l6375
  2004  0013D6  298E               	incf	(f_write@clst+3)& (0+255),w,b
  2005  0013D8  A4D8               	btfss	status,2,c
  2006  0013DA  D009               	goto	l6375
  2007                           
  2008                           ; BSR set to: 0
  2009  0013DC  EE20 F005          	lfsr	2,5
  2010  0013E0  516D               	movf	f_write@fp& (0+255),w,b
  2011  0013E2  26D9               	addwf	fsr2l,f,c
  2012  0013E4  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2013  0013E6  22DA               	addwfc	fsr2h,f,c
  2014  0013E8  0E01               	movlw	1
  2015  0013EA  6EDF               	movwf	indf2,c
  2016  0013EC  0012               	return	
  2017  0013EE                     l6375:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;ff.c: 2735:     fp->clust = clst;
  2021  0013EE  EE20 F012          	lfsr	2,18
  2022  0013F2  516D               	movf	f_write@fp& (0+255),w,b
  2023  0013F4  26D9               	addwf	fsr2l,f,c
  2024  0013F6  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2025  0013F8  22DA               	addwfc	fsr2h,f,c
  2026  0013FA  C08B  FFDE         	movff	f_write@clst,postinc2
  2027  0013FE  C08C  FFDE         	movff	f_write@clst+1,postinc2
  2028  001402  C08D  FFDE         	movff	f_write@clst+2,postinc2
  2029  001406  C08E  FFDE         	movff	f_write@clst+3,postinc2
  2030                           
  2031                           ;ff.c: 2736:     if (fp->sclust == 0) fp->sclust = clst;
  2032  00140A  EE20 F00E          	lfsr	2,14
  2033  00140E  516D               	movf	f_write@fp& (0+255),w,b
  2034  001410  26D9               	addwf	fsr2l,f,c
  2035  001412  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2036  001414  22DA               	addwfc	fsr2h,f,c
  2037  001416  50DE               	movf	postinc2,w,c
  2038  001418  10DE               	iorwf	postinc2,w,c
  2039  00141A  10DE               	iorwf	postinc2,w,c
  2040  00141C  10DE               	iorwf	postinc2,w,c
  2041  00141E  A4D8               	btfss	status,2,c
  2042  001420  D00E               	goto	l6379
  2043                           
  2044                           ; BSR set to: 0
  2045  001422  EE20 F00E          	lfsr	2,14
  2046  001426  516D               	movf	f_write@fp& (0+255),w,b
  2047  001428  26D9               	addwf	fsr2l,f,c
  2048  00142A  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2049  00142C  22DA               	addwfc	fsr2h,f,c
  2050  00142E  C08B  FFDE         	movff	f_write@clst,postinc2
  2051  001432  C08C  FFDE         	movff	f_write@clst+1,postinc2
  2052  001436  C08D  FFDE         	movff	f_write@clst+2,postinc2
  2053  00143A  C08E  FFDE         	movff	f_write@clst+3,postinc2
  2054  00143E                     l6379:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;ff.c: 2739:    if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))
  2058  00143E  EE20 F016          	lfsr	2,22
  2059  001442  516D               	movf	f_write@fp& (0+255),w,b
  2060  001444  26D9               	addwf	fsr2l,f,c
  2061  001446  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2062  001448  22DA               	addwfc	fsr2h,f,c
  2063  00144A  C06D  FFE1         	movff	f_write@fp,fsr1l
  2064  00144E  C06E  FFE2         	movff	f_write@fp+1,fsr1h
  2065  001452  EE00 F02A          	lfsr	0,42
  2066  001456  50E6               	movf	postinc1,w,c
  2067  001458  26E9               	addwf	fsr0l,f,c
  2068  00145A  50E5               	movf	postdec1,w,c
  2069  00145C  22EA               	addwfc	fsr0h,f,c
  2070  00145E  50DE               	movf	postinc2,w,c
  2071  001460  18EE               	xorwf	postinc0,w,c
  2072  001462  E121               	bnz	l6387
  2073  001464  50DE               	movf	postinc2,w,c
  2074  001466  18EE               	xorwf	postinc0,w,c
  2075  001468  E11E               	bnz	l6387
  2076  00146A  50DE               	movf	postinc2,w,c
  2077  00146C  18EE               	xorwf	postinc0,w,c
  2078  00146E  E11B               	bnz	l6387
  2079  001470  50DE               	movf	postinc2,w,c
  2080  001472  18EE               	xorwf	postinc0,w,c
  2081  001474  A4D8               	btfss	status,2,c
  2082  001476  D017               	goto	l6387
  2083                           
  2084                           ; BSR set to: 0
  2085  001478  C06D  FFD9         	movff	f_write@fp,fsr2l
  2086  00147C  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2087  001480  CFDE F01B          	movff	postinc2,sync_window@fs
  2088  001484  CFDD F01C          	movff	postdec2,sync_window@fs+1
  2089  001488  EC82  F022         	call	_sync_window	;wreg free
  2090  00148C  0900               	iorlw	0
  2091  00148E  B4D8               	btfsc	status,2,c
  2092  001490  D00A               	goto	l6387
  2093                           
  2094                           ;ff.c: 2740:     { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  2095  001492  0100               	movlb	0	; () banked
  2096  001494  EE20 F005          	lfsr	2,5
  2097  001498  516D               	movf	f_write@fp& (0+255),w,b
  2098  00149A  26D9               	addwf	fsr2l,f,c
  2099  00149C  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2100  00149E  22DA               	addwfc	fsr2h,f,c
  2101  0014A0  0E01               	movlw	1
  2102  0014A2  6EDF               	movwf	indf2,c
  2103  0014A4  0012               	return	
  2104  0014A6                     l6387:
  2105                           
  2106                           ;ff.c: 2748:    sect = clust2sect(fp->fs, fp->clust);
  2107  0014A6  C06D  FFD9         	movff	f_write@fp,fsr2l
  2108  0014AA  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2109  0014AE  CFDE F00D          	movff	postinc2,clust2sect@fs
  2110  0014B2  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  2111  0014B6  0100               	movlb	0	; () banked
  2112  0014B8  EE20 F012          	lfsr	2,18
  2113  0014BC  516D               	movf	f_write@fp& (0+255),w,b
  2114  0014BE  26D9               	addwf	fsr2l,f,c
  2115  0014C0  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2116  0014C2  22DA               	addwfc	fsr2h,f,c
  2117  0014C4  CFDE F00F          	movff	postinc2,clust2sect@clst
  2118  0014C8  CFDE F010          	movff	postinc2,clust2sect@clst+1
  2119  0014CC  CFDE F011          	movff	postinc2,clust2sect@clst+2
  2120  0014D0  CFDE F012          	movff	postinc2,clust2sect@clst+3
  2121  0014D4  EC37  F02A         	call	_clust2sect	;wreg free
  2122  0014D8  C00D  F087         	movff	?_clust2sect,f_write@sect
  2123  0014DC  C00E  F088         	movff	?_clust2sect+1,f_write@sect+1
  2124  0014E0  C00F  F089         	movff	?_clust2sect+2,f_write@sect+2
  2125  0014E4  C010  F08A         	movff	?_clust2sect+3,f_write@sect+3
  2126                           
  2127                           ;ff.c: 2749:    if (!sect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  2128  0014E8  0100               	movlb	0	; () banked
  2129  0014EA  5187               	movf	f_write@sect& (0+255),w,b
  2130  0014EC  1188               	iorwf	(f_write@sect+1)& (0+255),w,b
  2131  0014EE  1189               	iorwf	(f_write@sect+2)& (0+255),w,b
  2132  0014F0  118A               	iorwf	(f_write@sect+3)& (0+255),w,b
  2133  0014F2  A4D8               	btfss	status,2,c
  2134  0014F4  D009               	goto	l6395
  2135                           
  2136                           ; BSR set to: 0
  2137  0014F6  EE20 F005          	lfsr	2,5
  2138  0014FA  516D               	movf	f_write@fp& (0+255),w,b
  2139  0014FC  26D9               	addwf	fsr2l,f,c
  2140  0014FE  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2141  001500  22DA               	addwfc	fsr2h,f,c
  2142  001502  0E02               	movlw	2
  2143  001504  6EDF               	movwf	indf2,c
  2144  001506  0012               	return	
  2145  001508                     l6395:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;ff.c: 2750:    sect += csect;
  2149  001508  5184               	movf	f_write@csect& (0+255),w,b
  2150  00150A  2787               	addwf	f_write@sect& (0+255),f,b
  2151  00150C  0E00               	movlw	0
  2152  00150E  2388               	addwfc	(f_write@sect+1)& (0+255),f,b
  2153  001510  2389               	addwfc	(f_write@sect+2)& (0+255),f,b
  2154  001512  238A               	addwfc	(f_write@sect+3)& (0+255),f,b
  2155                           
  2156                           ;ff.c: 2751:    cc = btw / ((UINT)512);
  2157  001514  C071  F075         	movff	f_write@btw,??_f_write
  2158  001518  C072  F076         	movff	f_write@btw+1,??_f_write+1
  2159  00151C  0E09               	movlw	9
  2160  00151E  6F77               	movwf	(??_f_write+2)& (0+255),b
  2161  001520                     u8665:
  2162  001520  90D8               	bcf	status,0,c
  2163  001522  3376               	rrcf	(??_f_write+1)& (0+255),f,b
  2164  001524  3375               	rrcf	??_f_write& (0+255),f,b
  2165  001526  2F77               	decfsz	(??_f_write+2)& (0+255),f,b
  2166  001528  D7FB               	goto	u8665
  2167  00152A  C075  F085         	movff	??_f_write,f_write@cc
  2168  00152E  C076  F086         	movff	??_f_write+1,f_write@cc+1
  2169                           
  2170                           ;ff.c: 2752:    if (cc) {
  2171  001532  5185               	movf	f_write@cc& (0+255),w,b
  2172  001534  1186               	iorwf	(f_write@cc+1)& (0+255),w,b
  2173  001536  B4D8               	btfsc	status,2,c
  2174  001538  D0D2               	goto	l6415
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;ff.c: 2753:     if (csect + cc > fp->fs->csize)
  2178  00153A  5184               	movf	f_write@csect& (0+255),w,b
  2179  00153C  2585               	addwf	f_write@cc& (0+255),w,b
  2180  00153E  6F75               	movwf	??_f_write& (0+255),b
  2181  001540  0E00               	movlw	0
  2182  001542  2186               	addwfc	(f_write@cc+1)& (0+255),w,b
  2183  001544  6F76               	movwf	(??_f_write+1)& (0+255),b
  2184  001546  C06D  FFD9         	movff	f_write@fp,fsr2l
  2185  00154A  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2186  00154E  EE10 F002          	lfsr	1,2
  2187  001552  50DE               	movf	postinc2,w,c
  2188  001554  26E1               	addwf	fsr1l,f,c
  2189  001556  50DD               	movf	postdec2,w,c
  2190  001558  22E2               	addwfc	fsr1h,f,c
  2191  00155A  50E7               	movf	indf1,w,c
  2192  00155C  6F77               	movwf	(??_f_write+2)& (0+255),b
  2193  00155E  6B78               	clrf	(??_f_write+3)& (0+255),b
  2194  001560  5175               	movf	??_f_write& (0+255),w,b
  2195  001562  5D77               	subwf	(??_f_write+2)& (0+255),w,b
  2196  001564  5176               	movf	(??_f_write+1)& (0+255),w,b
  2197  001566  5978               	subwfb	(??_f_write+3)& (0+255),w,b
  2198  001568  B0D8               	btfsc	status,0,c
  2199  00156A  D012               	goto	l6401
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;ff.c: 2754:      cc = fp->fs->csize - csect;
  2203  00156C  C06D  FFD9         	movff	f_write@fp,fsr2l
  2204  001570  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2205  001574  EE10 F002          	lfsr	1,2
  2206  001578  50DE               	movf	postinc2,w,c
  2207  00157A  26E1               	addwf	fsr1l,f,c
  2208  00157C  50DD               	movf	postdec2,w,c
  2209  00157E  22E2               	addwfc	fsr1h,f,c
  2210  001580  50E7               	movf	indf1,w,c
  2211  001582  6F75               	movwf	??_f_write& (0+255),b
  2212  001584  5184               	movf	f_write@csect& (0+255),w,b
  2213  001586  5D75               	subwf	??_f_write& (0+255),w,b
  2214  001588  6F85               	movwf	f_write@cc& (0+255),b
  2215  00158A  6B86               	clrf	(f_write@cc+1)& (0+255),b
  2216  00158C  A0D8               	btfss	status,0,c
  2217  00158E  0786               	decf	(f_write@cc+1)& (0+255),f,b
  2218  001590                     l6401:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;ff.c: 2755:     if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
  2222  001590  C082  F011         	movff	f_write@wbuff,disk_write@buff
  2223  001594  C083  F012         	movff	f_write@wbuff+1,disk_write@buff+1
  2224  001598  C087  F013         	movff	f_write@sect,disk_write@sector
  2225  00159C  C088  F014         	movff	f_write@sect+1,disk_write@sector+1
  2226  0015A0  C089  F015         	movff	f_write@sect+2,disk_write@sector+2
  2227  0015A4  C08A  F016         	movff	f_write@sect+3,disk_write@sector+3
  2228  0015A8  C085  F017         	movff	f_write@cc,disk_write@count
  2229  0015AC  C086  F018         	movff	f_write@cc+1,disk_write@count+1
  2230  0015B0  C06D  FFD9         	movff	f_write@fp,fsr2l
  2231  0015B4  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2232  0015B8  EE10 F001          	lfsr	1,1
  2233  0015BC  50DE               	movf	postinc2,w,c
  2234  0015BE  26E1               	addwf	fsr1l,f,c
  2235  0015C0  50DD               	movf	postdec2,w,c
  2236  0015C2  22E2               	addwfc	fsr1h,f,c
  2237  0015C4  50E7               	movf	indf1,w,c
  2238  0015C6  EC45  F026         	call	_disk_write
  2239  0015CA  0900               	iorlw	0
  2240  0015CC  B4D8               	btfsc	status,2,c
  2241  0015CE  D00A               	goto	l6407
  2242                           
  2243                           ;ff.c: 2756:      { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  2244  0015D0  0100               	movlb	0	; () banked
  2245  0015D2  EE20 F005          	lfsr	2,5
  2246  0015D6  516D               	movf	f_write@fp& (0+255),w,b
  2247  0015D8  26D9               	addwf	fsr2l,f,c
  2248  0015DA  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2249  0015DC  22DA               	addwfc	fsr2h,f,c
  2250  0015DE  0E01               	movlw	1
  2251  0015E0  6EDF               	movwf	indf2,c
  2252  0015E2  0012               	return	
  2253  0015E4                     l6407:
  2254                           
  2255                           ;ff.c: 2759:     if (fp->fs->winsect - sect < cc) {
  2256  0015E4  0100               	movlb	0	; () banked
  2257  0015E6  5185               	movf	f_write@cc& (0+255),w,b
  2258  0015E8  6F75               	movwf	??_f_write& (0+255),b
  2259  0015EA  5186               	movf	(f_write@cc+1)& (0+255),w,b
  2260  0015EC  6F76               	movwf	(??_f_write+1)& (0+255),b
  2261  0015EE  6B77               	clrf	(??_f_write+2)& (0+255),b
  2262  0015F0  6B78               	clrf	(??_f_write+3)& (0+255),b
  2263  0015F2  C06D  FFD9         	movff	f_write@fp,fsr2l
  2264  0015F6  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2265  0015FA  EE10 F02A          	lfsr	1,42
  2266  0015FE  50DE               	movf	postinc2,w,c
  2267  001600  26E1               	addwf	fsr1l,f,c
  2268  001602  50DD               	movf	postdec2,w,c
  2269  001604  22E2               	addwfc	fsr1h,f,c
  2270  001606  CFE6 F079          	movff	postinc1,??_f_write+4
  2271  00160A  CFE6 F07A          	movff	postinc1,??_f_write+5
  2272  00160E  CFE6 F07B          	movff	postinc1,??_f_write+6
  2273  001612  CFE6 F07C          	movff	postinc1,??_f_write+7
  2274  001616  5187               	movf	f_write@sect& (0+255),w,b
  2275  001618  5D79               	subwf	(??_f_write+4)& (0+255),w,b
  2276  00161A  6F7D               	movwf	(??_f_write+8)& (0+255),b
  2277  00161C  5188               	movf	(f_write@sect+1)& (0+255),w,b
  2278  00161E  597A               	subwfb	(??_f_write+5)& (0+255),w,b
  2279  001620  6F7E               	movwf	(??_f_write+9)& (0+255),b
  2280  001622  5189               	movf	(f_write@sect+2)& (0+255),w,b
  2281  001624  597B               	subwfb	(??_f_write+6)& (0+255),w,b
  2282  001626  6F7F               	movwf	(??_f_write+10)& (0+255),b
  2283  001628  518A               	movf	(f_write@sect+3)& (0+255),w,b
  2284  00162A  597C               	subwfb	(??_f_write+7)& (0+255),w,b
  2285  00162C  6F80               	movwf	(??_f_write+11)& (0+255),b
  2286  00162E  5175               	movf	??_f_write& (0+255),w,b
  2287  001630  5D7D               	subwf	(??_f_write+8)& (0+255),w,b
  2288  001632  5176               	movf	(??_f_write+1)& (0+255),w,b
  2289  001634  597E               	subwfb	(??_f_write+9)& (0+255),w,b
  2290  001636  5177               	movf	(??_f_write+2)& (0+255),w,b
  2291  001638  597F               	subwfb	(??_f_write+10)& (0+255),w,b
  2292  00163A  5178               	movf	(??_f_write+3)& (0+255),w,b
  2293  00163C  5980               	subwfb	(??_f_write+11)& (0+255),w,b
  2294  00163E  B0D8               	btfsc	status,0,c
  2295  001640  D03E               	goto	l6413
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;ff.c: 2760:      mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * ((UINT)512)),
      +                           ((UINT)512));
  2299  001642  C06D  FFD9         	movff	f_write@fp,fsr2l
  2300  001646  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2301  00164A  CFDE F075          	movff	postinc2,??_f_write
  2302  00164E  CFDD F076          	movff	postdec2,??_f_write+1
  2303  001652  0E2E               	movlw	46
  2304  001654  2575               	addwf	??_f_write& (0+255),w,b
  2305  001656  6E01               	movwf	mem_cpy@dst,c
  2306  001658  0E00               	movlw	0
  2307  00165A  2176               	addwfc	(??_f_write+1)& (0+255),w,b
  2308  00165C  6E02               	movwf	mem_cpy@dst+1,c
  2309  00165E  C06D  FFD9         	movff	f_write@fp,fsr2l
  2310  001662  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2311  001666  EE10 F02A          	lfsr	1,42
  2312  00166A  50DE               	movf	postinc2,w,c
  2313  00166C  26E1               	addwf	fsr1l,f,c
  2314  00166E  50DD               	movf	postdec2,w,c
  2315  001670  22E2               	addwfc	fsr1h,f,c
  2316  001672  CFE6 F077          	movff	postinc1,??_f_write+2
  2317  001676  CFE5 F078          	movff	postdec1,??_f_write+3
  2318  00167A  5187               	movf	f_write@sect& (0+255),w,b
  2319  00167C  5F77               	subwf	(??_f_write+2)& (0+255),f,b
  2320  00167E  5188               	movf	(f_write@sect+1)& (0+255),w,b
  2321  001680  5B78               	subwfb	(??_f_write+3)& (0+255),f,b
  2322  001682  0E09               	movlw	9
  2323  001684                     u8715:
  2324  001684  90D8               	bcf	status,0,c
  2325  001686  3777               	rlcf	(??_f_write+2)& (0+255),f,b
  2326  001688  3778               	rlcf	(??_f_write+3)& (0+255),f,b
  2327  00168A  2EE8               	decfsz	wreg,f,c
  2328  00168C  D7FB               	goto	u8715
  2329  00168E  5177               	movf	(??_f_write+2)& (0+255),w,b
  2330  001690  2582               	addwf	f_write@wbuff& (0+255),w,b
  2331  001692  6E03               	movwf	mem_cpy@src,c
  2332  001694  5178               	movf	(??_f_write+3)& (0+255),w,b
  2333  001696  2183               	addwfc	(f_write@wbuff+1)& (0+255),w,b
  2334  001698  6E04               	movwf	mem_cpy@src+1,c
  2335  00169A  0E02               	movlw	2
  2336  00169C  6E06               	movwf	mem_cpy@cnt+1,c
  2337  00169E  0E00               	movlw	0
  2338  0016A0  6E05               	movwf	mem_cpy@cnt,c
  2339  0016A2  ECA7  F02C         	call	_mem_cpy	;wreg free
  2340                           
  2341                           ;ff.c: 2761:      fp->fs->wflag = 0;
  2342  0016A6  C06D  FFD9         	movff	f_write@fp,fsr2l
  2343  0016AA  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2344  0016AE  EE10 F004          	lfsr	1,4
  2345  0016B2  50DE               	movf	postinc2,w,c
  2346  0016B4  26E1               	addwf	fsr1l,f,c
  2347  0016B6  50DD               	movf	postdec2,w,c
  2348  0016B8  22E2               	addwfc	fsr1h,f,c
  2349  0016BA  0E00               	movlw	0
  2350  0016BC  6EE7               	movwf	indf1,c
  2351  0016BE                     l6413:
  2352                           
  2353                           ;ff.c: 2770:     wcnt = ((UINT)512) * cc;
  2354  0016BE  C085  F075         	movff	f_write@cc,??_f_write
  2355  0016C2  C086  F076         	movff	f_write@cc+1,??_f_write+1
  2356  0016C6  0E09               	movlw	9
  2357  0016C8                     u8725:
  2358  0016C8  90D8               	bcf	status,0,c
  2359  0016CA  0100               	movlb	0	; () banked
  2360  0016CC  3775               	rlcf	??_f_write& (0+255),f,b
  2361  0016CE  3776               	rlcf	(??_f_write+1)& (0+255),f,b
  2362  0016D0  2EE8               	decfsz	wreg,f,c
  2363  0016D2  D7FA               	goto	u8725
  2364  0016D4  C075  F08F         	movff	??_f_write,f_write@wcnt
  2365  0016D8  C076  F090         	movff	??_f_write+1,f_write@wcnt+1
  2366                           
  2367                           ;ff.c: 2771:     continue;
  2368  0016DC  D0D2               	goto	l6443
  2369  0016DE                     l6415:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;ff.c: 2774:    if (fp->fptr >= fp->fsize) {
  2373  0016DE  EE20 F00A          	lfsr	2,10
  2374  0016E2  516D               	movf	f_write@fp& (0+255),w,b
  2375  0016E4  26D9               	addwf	fsr2l,f,c
  2376  0016E6  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2377  0016E8  22DA               	addwfc	fsr2h,f,c
  2378  0016EA  EE10 F006          	lfsr	1,6
  2379  0016EE  516D               	movf	f_write@fp& (0+255),w,b
  2380  0016F0  26E1               	addwf	fsr1l,f,c
  2381  0016F2  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2382  0016F4  22E2               	addwfc	fsr1h,f,c
  2383  0016F6  50DE               	movf	postinc2,w,c
  2384  0016F8  5CE6               	subwf	postinc1,w,c
  2385  0016FA  50DE               	movf	postinc2,w,c
  2386  0016FC  58E6               	subwfb	postinc1,w,c
  2387  0016FE  50DE               	movf	postinc2,w,c
  2388  001700  58E6               	subwfb	postinc1,w,c
  2389  001702  50DE               	movf	postinc2,w,c
  2390  001704  58E6               	subwfb	postinc1,w,c
  2391  001706  A0D8               	btfss	status,0,c
  2392  001708  D029               	goto	l6425
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;ff.c: 2775:     if (sync_window(fp->fs)) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DIS
      +                          K_ERR; };
  2396  00170A  C06D  FFD9         	movff	f_write@fp,fsr2l
  2397  00170E  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2398  001712  CFDE F01B          	movff	postinc2,sync_window@fs
  2399  001716  CFDD F01C          	movff	postdec2,sync_window@fs+1
  2400  00171A  EC82  F022         	call	_sync_window	;wreg free
  2401  00171E  0900               	iorlw	0
  2402  001720  B4D8               	btfsc	status,2,c
  2403  001722  D00A               	goto	l6423
  2404  001724  0100               	movlb	0	; () banked
  2405  001726  EE20 F005          	lfsr	2,5
  2406  00172A  516D               	movf	f_write@fp& (0+255),w,b
  2407  00172C  26D9               	addwf	fsr2l,f,c
  2408  00172E  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2409  001730  22DA               	addwfc	fsr2h,f,c
  2410  001732  0E01               	movlw	1
  2411  001734  6EDF               	movwf	indf2,c
  2412  001736  0012               	return	
  2413  001738                     l6423:
  2414                           
  2415                           ;ff.c: 2776:     fp->fs->winsect = sect;
  2416  001738  C06D  FFD9         	movff	f_write@fp,fsr2l
  2417  00173C  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2418  001740  EE10 F02A          	lfsr	1,42
  2419  001744  50DE               	movf	postinc2,w,c
  2420  001746  26E1               	addwf	fsr1l,f,c
  2421  001748  50DD               	movf	postdec2,w,c
  2422  00174A  22E2               	addwfc	fsr1h,f,c
  2423  00174C  C087  FFE6         	movff	f_write@sect,postinc1
  2424  001750  C088  FFE6         	movff	f_write@sect+1,postinc1
  2425  001754  C089  FFE6         	movff	f_write@sect+2,postinc1
  2426  001758  C08A  FFE6         	movff	f_write@sect+3,postinc1
  2427  00175C                     l6425:
  2428                           
  2429                           ;ff.c: 2785:    fp->dsect = sect;
  2430  00175C  0100               	movlb	0	; () banked
  2431  00175E  EE20 F016          	lfsr	2,22
  2432  001762  516D               	movf	f_write@fp& (0+255),w,b
  2433  001764  26D9               	addwf	fsr2l,f,c
  2434  001766  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2435  001768  22DA               	addwfc	fsr2h,f,c
  2436  00176A  C087  FFDE         	movff	f_write@sect,postinc2
  2437  00176E  C088  FFDE         	movff	f_write@sect+1,postinc2
  2438  001772  C089  FFDE         	movff	f_write@sect+2,postinc2
  2439  001776  C08A  FFDE         	movff	f_write@sect+3,postinc2
  2440  00177A                     l6427:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;ff.c: 2787:   wcnt = ((UINT)512) - ((UINT)fp->fptr % ((UINT)512));
  2444  00177A  0EFF               	movlw	255
  2445  00177C  6F75               	movwf	??_f_write& (0+255),b
  2446  00177E  0E01               	movlw	1
  2447  001780  6F76               	movwf	(??_f_write+1)& (0+255),b
  2448  001782  EE20 F006          	lfsr	2,6
  2449  001786  516D               	movf	f_write@fp& (0+255),w,b
  2450  001788  26D9               	addwf	fsr2l,f,c
  2451  00178A  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2452  00178C  22DA               	addwfc	fsr2h,f,c
  2453  00178E  CFDE F077          	movff	postinc2,??_f_write+2
  2454  001792  CFDD F078          	movff	postdec2,??_f_write+3
  2455  001796  5175               	movf	??_f_write& (0+255),w,b
  2456  001798  1777               	andwf	(??_f_write+2)& (0+255),f,b
  2457  00179A  5176               	movf	(??_f_write+1)& (0+255),w,b
  2458  00179C  1778               	andwf	(??_f_write+3)& (0+255),f,b
  2459  00179E  5177               	movf	(??_f_write+2)& (0+255),w,b
  2460  0017A0  0800               	sublw	0
  2461  0017A2  6F8F               	movwf	f_write@wcnt& (0+255),b
  2462  0017A4  5178               	movf	(??_f_write+3)& (0+255),w,b
  2463  0017A6  A0D8               	btfss	status,0,c
  2464  0017A8  2AE8               	incf	wreg,f,c
  2465  0017AA  0802               	sublw	2
  2466  0017AC  6F90               	movwf	(f_write@wcnt+1)& (0+255),b
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;ff.c: 2788:   if (wcnt > btw) wcnt = btw;
  2470  0017AE  518F               	movf	f_write@wcnt& (0+255),w,b
  2471  0017B0  5D71               	subwf	f_write@btw& (0+255),w,b
  2472  0017B2  5190               	movf	(f_write@wcnt+1)& (0+255),w,b
  2473  0017B4  5972               	subwfb	(f_write@btw+1)& (0+255),w,b
  2474  0017B6  B0D8               	btfsc	status,0,c
  2475  0017B8  D004               	goto	l6433
  2476                           
  2477                           ; BSR set to: 0
  2478  0017BA  C071  F08F         	movff	f_write@btw,f_write@wcnt
  2479  0017BE  C072  F090         	movff	f_write@btw+1,f_write@wcnt+1
  2480  0017C2                     l6433:
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;ff.c: 2790:   if (move_window(fp->fs, fp->dsect) != FR_OK)
  2484  0017C2  C06D  FFD9         	movff	f_write@fp,fsr2l
  2485  0017C6  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2486  0017CA  CFDE F030          	movff	postinc2,move_window@fs
  2487  0017CE  CFDD F031          	movff	postdec2,move_window@fs+1
  2488  0017D2  EE20 F016          	lfsr	2,22
  2489  0017D6  516D               	movf	f_write@fp& (0+255),w,b
  2490  0017D8  26D9               	addwf	fsr2l,f,c
  2491  0017DA  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2492  0017DC  22DA               	addwfc	fsr2h,f,c
  2493  0017DE  CFDE F032          	movff	postinc2,move_window@sector
  2494  0017E2  CFDE F033          	movff	postinc2,move_window@sector+1
  2495  0017E6  CFDE F034          	movff	postinc2,move_window@sector+2
  2496  0017EA  CFDE F035          	movff	postinc2,move_window@sector+3
  2497  0017EE  EC49  F02B         	call	_move_window	;wreg free
  2498  0017F2  0900               	iorlw	0
  2499  0017F4  B4D8               	btfsc	status,2,c
  2500  0017F6  D00A               	goto	l6439
  2501                           
  2502                           ;ff.c: 2791:    { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  2503  0017F8  0100               	movlb	0	; () banked
  2504  0017FA  EE20 F005          	lfsr	2,5
  2505  0017FE  516D               	movf	f_write@fp& (0+255),w,b
  2506  001800  26D9               	addwf	fsr2l,f,c
  2507  001802  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2508  001804  22DA               	addwfc	fsr2h,f,c
  2509  001806  0E01               	movlw	1
  2510  001808  6EDF               	movwf	indf2,c
  2511  00180A  0012               	return	
  2512  00180C                     l6439:
  2513                           
  2514                           ;ff.c: 2792:   mem_cpy(&fp->fs->win[fp->fptr % ((UINT)512)], wbuff, wcnt);
  2515  00180C  0EFF               	movlw	255
  2516  00180E  0100               	movlb	0	; () banked
  2517  001810  6F75               	movwf	??_f_write& (0+255),b
  2518  001812  0E01               	movlw	1
  2519  001814  6F76               	movwf	(??_f_write+1)& (0+255),b
  2520  001816  EE20 F006          	lfsr	2,6
  2521  00181A  516D               	movf	f_write@fp& (0+255),w,b
  2522  00181C  26D9               	addwf	fsr2l,f,c
  2523  00181E  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2524  001820  22DA               	addwfc	fsr2h,f,c
  2525  001822  CFDE F077          	movff	postinc2,??_f_write+2
  2526  001826  CFDD F078          	movff	postdec2,??_f_write+3
  2527  00182A  5175               	movf	??_f_write& (0+255),w,b
  2528  00182C  1777               	andwf	(??_f_write+2)& (0+255),f,b
  2529  00182E  5176               	movf	(??_f_write+1)& (0+255),w,b
  2530  001830  1778               	andwf	(??_f_write+3)& (0+255),f,b
  2531  001832  C06D  FFD9         	movff	f_write@fp,fsr2l
  2532  001836  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2533  00183A  CFDE F079          	movff	postinc2,??_f_write+4
  2534  00183E  CFDD F07A          	movff	postdec2,??_f_write+5
  2535  001842  5177               	movf	(??_f_write+2)& (0+255),w,b
  2536  001844  2779               	addwf	(??_f_write+4)& (0+255),f,b
  2537  001846  5178               	movf	(??_f_write+3)& (0+255),w,b
  2538  001848  237A               	addwfc	(??_f_write+5)& (0+255),f,b
  2539  00184A  0E2E               	movlw	46
  2540  00184C  2579               	addwf	(??_f_write+4)& (0+255),w,b
  2541  00184E  6E01               	movwf	mem_cpy@dst,c
  2542  001850  0E00               	movlw	0
  2543  001852  217A               	addwfc	(??_f_write+5)& (0+255),w,b
  2544  001854  6E02               	movwf	mem_cpy@dst+1,c
  2545  001856  C082  F003         	movff	f_write@wbuff,mem_cpy@src
  2546  00185A  C083  F004         	movff	f_write@wbuff+1,mem_cpy@src+1
  2547  00185E  C08F  F005         	movff	f_write@wcnt,mem_cpy@cnt
  2548  001862  C090  F006         	movff	f_write@wcnt+1,mem_cpy@cnt+1
  2549  001866  ECA7  F02C         	call	_mem_cpy	;wreg free
  2550                           
  2551                           ;ff.c: 2793:   fp->fs->wflag = 1;
  2552  00186A  C06D  FFD9         	movff	f_write@fp,fsr2l
  2553  00186E  C06E  FFDA         	movff	f_write@fp+1,fsr2h
  2554  001872  EE10 F004          	lfsr	1,4
  2555  001876  50DE               	movf	postinc2,w,c
  2556  001878  26E1               	addwf	fsr1l,f,c
  2557  00187A  50DD               	movf	postdec2,w,c
  2558  00187C  22E2               	addwfc	fsr1h,f,c
  2559  00187E  0E01               	movlw	1
  2560  001880  6EE7               	movwf	indf1,c
  2561  001882                     l6443:
  2562  001882  0100               	movlb	0	; () banked
  2563  001884  518F               	movf	f_write@wcnt& (0+255),w,b
  2564  001886  2782               	addwf	f_write@wbuff& (0+255),f,b
  2565  001888  5190               	movf	(f_write@wcnt+1)& (0+255),w,b
  2566  00188A  2383               	addwfc	(f_write@wbuff+1)& (0+255),f,b
  2567                           
  2568                           ; BSR set to: 0
  2569  00188C  EE20 F006          	lfsr	2,6
  2570  001890  516D               	movf	f_write@fp& (0+255),w,b
  2571  001892  26D9               	addwf	fsr2l,f,c
  2572  001894  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2573  001896  22DA               	addwfc	fsr2h,f,c
  2574  001898  518F               	movf	f_write@wcnt& (0+255),w,b
  2575  00189A  26DE               	addwf	postinc2,f,c
  2576  00189C  5190               	movf	(f_write@wcnt+1)& (0+255),w,b
  2577  00189E  22DE               	addwfc	postinc2,f,c
  2578  0018A0  0E00               	movlw	0
  2579  0018A2  22DE               	addwfc	postinc2,f,c
  2580  0018A4  22DE               	addwfc	postinc2,f,c
  2581                           
  2582                           ; BSR set to: 0
  2583  0018A6  C073  FFD9         	movff	f_write@bw,fsr2l
  2584  0018AA  C074  FFDA         	movff	f_write@bw+1,fsr2h
  2585  0018AE  518F               	movf	f_write@wcnt& (0+255),w,b
  2586  0018B0  26DE               	addwf	postinc2,f,c
  2587  0018B2  5190               	movf	(f_write@wcnt+1)& (0+255),w,b
  2588  0018B4  22DD               	addwfc	postdec2,f,c
  2589                           
  2590                           ; BSR set to: 0
  2591  0018B6  518F               	movf	f_write@wcnt& (0+255),w,b
  2592  0018B8  5F71               	subwf	f_write@btw& (0+255),f,b
  2593  0018BA  5190               	movf	(f_write@wcnt+1)& (0+255),w,b
  2594  0018BC  5B72               	subwfb	(f_write@btw+1)& (0+255),f,b
  2595  0018BE                     l6451:
  2596                           
  2597                           ; BSR set to: 0
  2598  0018BE  5171               	movf	f_write@btw& (0+255),w,b
  2599  0018C0  1172               	iorwf	(f_write@btw+1)& (0+255),w,b
  2600  0018C2  A4D8               	btfss	status,2,c
  2601  0018C4  D4D8               	goto	l6343
  2602  0018C6                     u8770:
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;ff.c: 2800:  if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
  2606  0018C6  EE20 F006          	lfsr	2,6
  2607  0018CA  516D               	movf	f_write@fp& (0+255),w,b
  2608  0018CC  26D9               	addwf	fsr2l,f,c
  2609  0018CE  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2610  0018D0  22DA               	addwfc	fsr2h,f,c
  2611  0018D2  EE10 F00A          	lfsr	1,10
  2612  0018D6  516D               	movf	f_write@fp& (0+255),w,b
  2613  0018D8  26E1               	addwf	fsr1l,f,c
  2614  0018DA  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2615  0018DC  22E2               	addwfc	fsr1h,f,c
  2616  0018DE  50DE               	movf	postinc2,w,c
  2617  0018E0  5CE6               	subwf	postinc1,w,c
  2618  0018E2  50DE               	movf	postinc2,w,c
  2619  0018E4  58E6               	subwfb	postinc1,w,c
  2620  0018E6  50DE               	movf	postinc2,w,c
  2621  0018E8  58E6               	subwfb	postinc1,w,c
  2622  0018EA  50DE               	movf	postinc2,w,c
  2623  0018EC  58E6               	subwfb	postinc1,w,c
  2624  0018EE  B0D8               	btfsc	status,0,c
  2625  0018F0  D014               	goto	l6457
  2626                           
  2627                           ; BSR set to: 0
  2628  0018F2  EE20 F006          	lfsr	2,6
  2629  0018F6  516D               	movf	f_write@fp& (0+255),w,b
  2630  0018F8  26D9               	addwf	fsr2l,f,c
  2631  0018FA  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2632  0018FC  22DA               	addwfc	fsr2h,f,c
  2633  0018FE  EE10 F00A          	lfsr	1,10
  2634  001902  516D               	movf	f_write@fp& (0+255),w,b
  2635  001904  26E1               	addwf	fsr1l,f,c
  2636  001906  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2637  001908  22E2               	addwfc	fsr1h,f,c
  2638  00190A  CFDE FFE6          	movff	postinc2,postinc1
  2639  00190E  CFDE FFE6          	movff	postinc2,postinc1
  2640  001912  CFDE FFE6          	movff	postinc2,postinc1
  2641  001916  CFDE FFE6          	movff	postinc2,postinc1
  2642  00191A                     l6457:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;ff.c: 2801:  fp->flag |= 0x20;
  2646  00191A  EE20 F004          	lfsr	2,4
  2647  00191E  516D               	movf	f_write@fp& (0+255),w,b
  2648  001920  26D9               	addwf	fsr2l,f,c
  2649  001922  516E               	movf	(f_write@fp+1)& (0+255),w,b
  2650  001924  22DA               	addwfc	fsr2h,f,c
  2651  001926  0E00               	movlw	0
  2652  001928  8ADB               	bsf	plusw2,5,c
  2653                           
  2654                           ; BSR set to: 0
  2655  00192A  0012               	return		;funcret
  2656  00192C                     __end_of_f_write:
  2657                           	opt callstack 0
  2658                           
  2659 ;; *************** function _f_open *****************
  2660 ;; Defined at:
  2661 ;;		line 2449 in file "ff.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  fp              2   58[BANK0 ] PTR struct .
  2664 ;;		 -> Fil(32), 
  2665 ;;  path            2   60[BANK0 ] PTR const unsigned char 
  2666 ;;		 -> STR_4(9), STR_3(1), 
  2667 ;;  mode            1   62[BANK0 ] unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  dj             22   90[BANK0 ] struct .
  2670 ;;  sfn            12   67[BANK0 ] unsigned char [12]
  2671 ;;  dw              4   83[BANK0 ] unsigned long 
  2672 ;;  cl              4   79[BANK0 ] unsigned long 
  2673 ;;  dir             2   88[BANK0 ] PTR unsigned char 
  2674 ;;		 -> FatFs(558), NULL(0), 
  2675 ;;  res             1   87[BANK0 ] enum E93
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      enum E93
  2678 ;; Registers used:
  2679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2685 ;;      Params:         0       5       0       0       0       0       0       0       0
  2686 ;;      Locals:         0      45       0       0       0       0       0       0       0
  2687 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2688 ;;      Totals:         0      54       0       0       0       0       0       0       0
  2689 ;;Total ram usage:       54 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:   13
  2692 ;; This function calls:
  2693 ;;		_dir_register
  2694 ;;		_find_volume
  2695 ;;		_follow_path
  2696 ;;		_ld_clust
  2697 ;;		_move_window
  2698 ;;		_remove_chain
  2699 ;;		_st_clust
  2700 ;; This function is called by:
  2701 ;;		_guardar
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text4
  2706  002FAA                     __ptext4:
  2707                           	opt callstack 0
  2708  002FAA                     _f_open:
  2709                           	opt callstack 16
  2710                           
  2711                           ;ff.c: 2450:  FIL* fp,;ff.c: 2451:  const TCHAR* path,;ff.c: 2452:  BYTE mode;ff.c: 2454
      +                          : {;ff.c: 2455:  FRESULT res;;ff.c: 2456:  DIRC dj;;ff.c: 2457:  BYTE *dir;;ff.c: 2458: 
      +                           BYTE sfn[12];;ff.c: 2460:  DWORD dw, cl;;ff.c: 2464:  if (!fp) return FR_INVALID_OBJECT
      +                          ;
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;incstack = 0
  2715  002FAA  0100               	movlb	0	; () banked
  2716  002FAC  519A               	movf	f_open@fp& (0+255),w,b
  2717  002FAE  119B               	iorwf	(f_open@fp+1)& (0+255),w,b
  2718  002FB0  A4D8               	btfss	status,2,c
  2719  002FB2  D002               	goto	l6213
  2720                           
  2721                           ; BSR set to: 0
  2722  002FB4  0E09               	movlw	9
  2723  002FB6  0012               	return	
  2724  002FB8                     l6213:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;ff.c: 2465:  fp->fs = 0;
  2728  002FB8  C09A  FFD9         	movff	f_open@fp,fsr2l
  2729  002FBC  C09B  FFDA         	movff	f_open@fp+1,fsr2h
  2730  002FC0  0E00               	movlw	0
  2731  002FC2  6EDE               	movwf	postinc2,c
  2732  002FC4  0E00               	movlw	0
  2733  002FC6  6EDD               	movwf	postdec2,c
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;ff.c: 2468:  dj.fs = FatFs[0];
  2737  002FC8  C0EB  F0BA         	movff	ff@FatFs,f_open@dj
  2738  002FCC  C0EC  F0BB         	movff	ff@FatFs+1,f_open@dj+1
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;ff.c: 2473:  mode &= 0x01 | 0x02 | 0x08 | 0x10 | 0x04;
  2742  002FD0  0E1F               	movlw	31
  2743  002FD2  179E               	andwf	f_open@mode& (0+255),f,b
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;ff.c: 2474:  res = find_volume(&dj.fs, &path, (BYTE)(mode & ~0x01));
  2747  002FD4  0EBA               	movlw	low f_open@dj
  2748  002FD6  6E45               	movwf	find_volume@rfs,c
  2749  002FD8  0E00               	movlw	high f_open@dj
  2750  002FDA  6E46               	movwf	find_volume@rfs+1,c
  2751  002FDC  0E9C               	movlw	low f_open@path
  2752  002FDE  6E47               	movwf	find_volume@path,c
  2753  002FE0  0E00               	movlw	high f_open@path
  2754  002FE2  6E48               	movwf	find_volume@path+1,c
  2755  002FE4  519E               	movf	f_open@mode& (0+255),w,b
  2756  002FE6  0BFE               	andlw	254
  2757  002FE8  6E49               	movwf	find_volume@wmode,c
  2758  002FEA  EC0D  F004         	call	_find_volume	;wreg free
  2759  002FEE  0100               	movlb	0	; () banked
  2760  002FF0  6FB7               	movwf	f_open@res& (0+255),b
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;ff.c: 2479:  if (res == FR_OK) {
  2764  002FF2  51B7               	movf	f_open@res& (0+255),w,b
  2765  002FF4  A4D8               	btfss	status,2,c
  2766  002FF6  D1A2               	goto	l6317
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;ff.c: 2480:   (dj).fn = sfn;
  2770  002FF8  0EA3               	movlw	low f_open@sfn
  2771  002FFA  6FCE               	movwf	(f_open@dj+20)& (0+255),b
  2772  002FFC  0E00               	movlw	high f_open@sfn
  2773  002FFE  6FCF               	movwf	(f_open@dj+21)& (0+255),b
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;ff.c: 2481:   res = follow_path(&dj, path);
  2777  003000  0EBA               	movlw	low f_open@dj
  2778  003002  6F86               	movwf	follow_path@dp& (0+255),b
  2779  003004  0E00               	movlw	high f_open@dj
  2780  003006  6F87               	movwf	(follow_path@dp+1)& (0+255),b
  2781  003008  C09C  F088         	movff	f_open@path,follow_path@path
  2782  00300C  C09D  F089         	movff	f_open@path+1,follow_path@path+1
  2783  003010  ECD3  F023         	call	_follow_path	;wreg free
  2784  003014  0100               	movlb	0	; () banked
  2785  003016  6FB7               	movwf	f_open@res& (0+255),b
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;ff.c: 2482:   dir = dj.dir;
  2789  003018  C0CC  F0B8         	movff	f_open@dj+18,f_open@dir
  2790  00301C  C0CD  F0B9         	movff	f_open@dj+19,f_open@dir+1
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;ff.c: 2484:   if (res == FR_OK) {
  2794  003020  51B7               	movf	f_open@res& (0+255),w,b
  2795  003022  A4D8               	btfss	status,2,c
  2796  003024  D006               	goto	l6235
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;ff.c: 2485:    if (!dir)
  2800  003026  51B8               	movf	f_open@dir& (0+255),w,b
  2801  003028  11B9               	iorwf	(f_open@dir+1)& (0+255),w,b
  2802  00302A  A4D8               	btfss	status,2,c
  2803  00302C  D002               	goto	l6235
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;ff.c: 2486:     res = FR_INVALID_NAME;
  2807  00302E  0E06               	movlw	6
  2808  003030  6FB7               	movwf	f_open@res& (0+255),b
  2809  003032                     l6235:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;ff.c: 2493:   if (mode & (0x08 | 0x10 | 0x04)) {
  2813  003032  C09E  F09F         	movff	f_open@mode,??_f_open
  2814  003036  0E1C               	movlw	28
  2815  003038  179F               	andwf	??_f_open& (0+255),f,b
  2816  00303A  B4D8               	btfsc	status,2,c
  2817  00303C  D0D3               	goto	l6283
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;ff.c: 2494:    if (res != FR_OK) {
  2821  00303E  51B7               	movf	f_open@res& (0+255),w,b
  2822  003040  B4D8               	btfsc	status,2,c
  2823  003042  D012               	goto	l6247
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;ff.c: 2495:     if (res == FR_NO_FILE)
  2827  003044  0E04               	movlw	4
  2828  003046  19B7               	xorwf	f_open@res& (0+255),w,b
  2829  003048  A4D8               	btfss	status,2,c
  2830  00304A  D008               	goto	l6243
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;ff.c: 2499:      res = dir_register(&dj);
  2834  00304C  0EBA               	movlw	low f_open@dj
  2835  00304E  6F8A               	movwf	dir_register@dp& (0+255),b
  2836  003050  0E00               	movlw	high f_open@dj
  2837  003052  6F8B               	movwf	(dir_register@dp+1)& (0+255),b
  2838  003054  ECA0  F028         	call	_dir_register	;wreg free
  2839  003058  0100               	movlb	0	; () banked
  2840  00305A  6FB7               	movwf	f_open@res& (0+255),b
  2841  00305C                     l6243:
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;ff.c: 2501:     mode |= 0x08;
  2845  00305C  879E               	bsf	f_open@mode& (0+255),3,b
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;ff.c: 2502:     dir = dj.dir;
  2849  00305E  C0CC  F0B8         	movff	f_open@dj+18,f_open@dir
  2850  003062  C0CD  F0B9         	movff	f_open@dj+19,f_open@dir+1
  2851                           
  2852                           ;ff.c: 2503:    }
  2853  003066  D012               	goto	l581
  2854  003068                     l6247:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;ff.c: 2505:     if (dir[11] & (0x01 | 0x10)) {
  2858  003068  EE20 F00B          	lfsr	2,11
  2859  00306C  51B8               	movf	f_open@dir& (0+255),w,b
  2860  00306E  26D9               	addwf	fsr2l,f,c
  2861  003070  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2862  003072  22DA               	addwfc	fsr2h,f,c
  2863  003074  50DF               	movf	indf2,w,c
  2864  003076  6F9F               	movwf	??_f_open& (0+255),b
  2865  003078  0E11               	movlw	17
  2866  00307A  179F               	andwf	??_f_open& (0+255),f,b
  2867  00307C  B4D8               	btfsc	status,2,c
  2868  00307E  D002               	goto	l582
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;ff.c: 2506:      res = FR_DENIED;
  2872  003080  0E07               	movlw	7
  2873  003082  D003               	goto	L2
  2874  003084                     l582:
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;ff.c: 2508:      if (mode & 0x04)
  2878  003084  A59E               	btfss	f_open@mode& (0+255),2,b
  2879  003086  D002               	goto	l581
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;ff.c: 2509:       res = FR_EXIST;
  2883  003088  0E08               	movlw	8
  2884  00308A                     L2:
  2885  00308A  6FB7               	movwf	f_open@res& (0+255),b
  2886  00308C                     l581:
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;ff.c: 2512:    if (res == FR_OK && (mode & 0x08)) {
  2890  00308C  51B7               	movf	f_open@res& (0+255),w,b
  2891  00308E  B4D8               	btfsc	status,2,c
  2892                           
  2893                           ; BSR set to: 0
  2894  003090  A79E               	btfss	f_open@mode& (0+255),3,b
  2895  003092  D0C1               	goto	l588
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;ff.c: 2514:     *(DWORD*)(BYTE*)(dir + 14)=(DWORD)(dw);
  2899                           
  2900                           ; BSR set to: 0
  2901  003094  EE20 F00E          	lfsr	2,14
  2902  003098  51B8               	movf	f_open@dir& (0+255),w,b
  2903  00309A  26D9               	addwf	fsr2l,f,c
  2904  00309C  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2905  00309E  22DA               	addwfc	fsr2h,f,c
  2906  0030A0  0E00               	movlw	0
  2907  0030A2  6EDE               	movwf	postinc2,c
  2908  0030A4  0E00               	movlw	0
  2909  0030A6  6EDE               	movwf	postinc2,c
  2910  0030A8  0E21               	movlw	33
  2911  0030AA  6EDE               	movwf	postinc2,c
  2912  0030AC  0E46               	movlw	70
  2913  0030AE  6EDD               	movwf	postdec2,c
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;ff.c: 2515:     *(DWORD*)(BYTE*)(dir + 22)=(DWORD)(dw);
  2917  0030B0  EE20 F016          	lfsr	2,22
  2918  0030B4  51B8               	movf	f_open@dir& (0+255),w,b
  2919  0030B6  26D9               	addwf	fsr2l,f,c
  2920  0030B8  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2921  0030BA  22DA               	addwfc	fsr2h,f,c
  2922  0030BC  0E00               	movlw	0
  2923  0030BE  6EDE               	movwf	postinc2,c
  2924  0030C0  0E00               	movlw	0
  2925  0030C2  6EDE               	movwf	postinc2,c
  2926  0030C4  0E21               	movlw	33
  2927  0030C6  6EDE               	movwf	postinc2,c
  2928  0030C8  0E46               	movlw	70
  2929  0030CA  6EDD               	movwf	postdec2,c
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;ff.c: 2516:     dir[11] = 0;
  2933  0030CC  EE20 F00B          	lfsr	2,11
  2934  0030D0  51B8               	movf	f_open@dir& (0+255),w,b
  2935  0030D2  26D9               	addwf	fsr2l,f,c
  2936  0030D4  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2937  0030D6  22DA               	addwfc	fsr2h,f,c
  2938  0030D8  0E00               	movlw	0
  2939  0030DA  6EDF               	movwf	indf2,c
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;ff.c: 2517:     *(DWORD*)(BYTE*)(dir + 28)=(DWORD)(0);
  2943  0030DC  EE20 F01C          	lfsr	2,28
  2944  0030E0  51B8               	movf	f_open@dir& (0+255),w,b
  2945  0030E2  26D9               	addwf	fsr2l,f,c
  2946  0030E4  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2947  0030E6  22DA               	addwfc	fsr2h,f,c
  2948  0030E8  6ADE               	clrf	postinc2,c
  2949  0030EA  6ADE               	clrf	postinc2,c
  2950  0030EC  6ADE               	clrf	postinc2,c
  2951  0030EE  6ADD               	clrf	postdec2,c
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;ff.c: 2518:     cl = ld_clust(dj.fs, dir);
  2955  0030F0  C0BA  F001         	movff	f_open@dj,ld_clust@fs
  2956  0030F4  C0BB  F002         	movff	f_open@dj+1,ld_clust@fs+1
  2957  0030F8  C0B8  F003         	movff	f_open@dir,ld_clust@dir
  2958  0030FC  C0B9  F004         	movff	f_open@dir+1,ld_clust@dir+1
  2959  003100  EC68  F02C         	call	_ld_clust	;wreg free
  2960  003104  C001  F0AF         	movff	?_ld_clust,f_open@cl
  2961  003108  C002  F0B0         	movff	?_ld_clust+1,f_open@cl+1
  2962  00310C  C003  F0B1         	movff	?_ld_clust+2,f_open@cl+2
  2963  003110  C004  F0B2         	movff	?_ld_clust+3,f_open@cl+3
  2964                           
  2965                           ;ff.c: 2519:     st_clust(dir, 0);
  2966  003114  C0B8  F001         	movff	f_open@dir,st_clust@dir
  2967  003118  C0B9  F002         	movff	f_open@dir+1,st_clust@dir+1
  2968  00311C  0E00               	movlw	0
  2969  00311E  6E03               	movwf	st_clust@cl,c
  2970  003120  0E00               	movlw	0
  2971  003122  6E04               	movwf	st_clust@cl+1,c
  2972  003124  0E00               	movlw	0
  2973  003126  6E05               	movwf	st_clust@cl+2,c
  2974  003128  0E00               	movlw	0
  2975  00312A  6E06               	movwf	st_clust@cl+3,c
  2976  00312C  EC6E  F02E         	call	_st_clust	;wreg free
  2977                           
  2978                           ;ff.c: 2520:     dj.fs->wflag = 1;
  2979  003130  0100               	movlb	0	; () banked
  2980  003132  EE20 F004          	lfsr	2,4
  2981  003136  51BA               	movf	f_open@dj& (0+255),w,b
  2982  003138  26D9               	addwf	fsr2l,f,c
  2983  00313A  51BB               	movf	(f_open@dj+1)& (0+255),w,b
  2984  00313C  22DA               	addwfc	fsr2h,f,c
  2985  00313E  0E01               	movlw	1
  2986  003140  6EDF               	movwf	indf2,c
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;ff.c: 2521:     if (cl) {
  2990  003142  51AF               	movf	f_open@cl& (0+255),w,b
  2991  003144  11B0               	iorwf	(f_open@cl+1)& (0+255),w,b
  2992  003146  11B1               	iorwf	(f_open@cl+2)& (0+255),w,b
  2993  003148  11B2               	iorwf	(f_open@cl+3)& (0+255),w,b
  2994  00314A  B4D8               	btfsc	status,2,c
  2995  00314C  D064               	goto	l588
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;ff.c: 2522:      dw = dj.fs->winsect;
  2999  00314E  EE20 F02A          	lfsr	2,42
  3000  003152  51BA               	movf	f_open@dj& (0+255),w,b
  3001  003154  26D9               	addwf	fsr2l,f,c
  3002  003156  51BB               	movf	(f_open@dj+1)& (0+255),w,b
  3003  003158  22DA               	addwfc	fsr2h,f,c
  3004  00315A  CFDE F0B3          	movff	postinc2,f_open@dw
  3005  00315E  CFDE F0B4          	movff	postinc2,f_open@dw+1
  3006  003162  CFDE F0B5          	movff	postinc2,f_open@dw+2
  3007  003166  CFDE F0B6          	movff	postinc2,f_open@dw+3
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;ff.c: 2523:      res = remove_chain(dj.fs, cl);
  3011  00316A  C0BA  F056         	movff	f_open@dj,remove_chain@fs
  3012  00316E  C0BB  F057         	movff	f_open@dj+1,remove_chain@fs+1
  3013  003172  C0AF  F058         	movff	f_open@cl,remove_chain@clst
  3014  003176  C0B0  F059         	movff	f_open@cl+1,remove_chain@clst+1
  3015  00317A  C0B1  F05A         	movff	f_open@cl+2,remove_chain@clst+2
  3016  00317E  C0B2  F05B         	movff	f_open@cl+3,remove_chain@clst+3
  3017  003182  EC2E  F023         	call	_remove_chain	;wreg free
  3018  003186  0100               	movlb	0	; () banked
  3019  003188  6FB7               	movwf	f_open@res& (0+255),b
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;ff.c: 2524:      if (res == FR_OK) {
  3023  00318A  51B7               	movf	f_open@res& (0+255),w,b
  3024  00318C  A4D8               	btfss	status,2,c
  3025  00318E  D043               	goto	l588
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;ff.c: 2525:       dj.fs->last_clust = cl - 1;
  3029  003190  0EFF               	movlw	255
  3030  003192  25AF               	addwf	f_open@cl& (0+255),w,b
  3031  003194  6F9F               	movwf	??_f_open& (0+255),b
  3032  003196  0EFF               	movlw	255
  3033  003198  21B0               	addwfc	(f_open@cl+1)& (0+255),w,b
  3034  00319A  6FA0               	movwf	(??_f_open+1)& (0+255),b
  3035  00319C  0EFF               	movlw	255
  3036  00319E  21B1               	addwfc	(f_open@cl+2)& (0+255),w,b
  3037  0031A0  6FA1               	movwf	(??_f_open+2)& (0+255),b
  3038  0031A2  0EFF               	movlw	255
  3039  0031A4  21B2               	addwfc	(f_open@cl+3)& (0+255),w,b
  3040  0031A6  6FA2               	movwf	(??_f_open+3)& (0+255),b
  3041  0031A8  EE20 F00A          	lfsr	2,10
  3042  0031AC  51BA               	movf	f_open@dj& (0+255),w,b
  3043  0031AE  26D9               	addwf	fsr2l,f,c
  3044  0031B0  51BB               	movf	(f_open@dj+1)& (0+255),w,b
  3045  0031B2  22DA               	addwfc	fsr2h,f,c
  3046  0031B4  C09F  FFDE         	movff	??_f_open,postinc2
  3047  0031B8  C0A0  FFDE         	movff	??_f_open+1,postinc2
  3048  0031BC  C0A1  FFDE         	movff	??_f_open+2,postinc2
  3049  0031C0  C0A2  FFDE         	movff	??_f_open+3,postinc2
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;ff.c: 2526:       res = move_window(dj.fs, dw);
  3053  0031C4  C0BA  F030         	movff	f_open@dj,move_window@fs
  3054  0031C8  C0BB  F031         	movff	f_open@dj+1,move_window@fs+1
  3055  0031CC  C0B3  F032         	movff	f_open@dw,move_window@sector
  3056  0031D0  C0B4  F033         	movff	f_open@dw+1,move_window@sector+1
  3057  0031D4  C0B5  F034         	movff	f_open@dw+2,move_window@sector+2
  3058  0031D8  C0B6  F035         	movff	f_open@dw+3,move_window@sector+3
  3059  0031DC  EC49  F02B         	call	_move_window	;wreg free
  3060  0031E0  0100               	movlb	0	; () banked
  3061  0031E2  D018               	goto	L3
  3062  0031E4                     l6283:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;ff.c: 2532:    if (res == FR_OK) {
  3066  0031E4  51B7               	movf	f_open@res& (0+255),w,b
  3067  0031E6  A4D8               	btfss	status,2,c
  3068  0031E8  D016               	goto	l588
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;ff.c: 2533:     if (dir[11] & 0x10) {
  3072  0031EA  EE20 F00B          	lfsr	2,11
  3073  0031EE  51B8               	movf	f_open@dir& (0+255),w,b
  3074  0031F0  26D9               	addwf	fsr2l,f,c
  3075  0031F2  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  3076  0031F4  22DA               	addwfc	fsr2h,f,c
  3077  0031F6  A8DF               	btfss	indf2,4,c
  3078  0031F8  D002               	goto	l590
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;ff.c: 2534:      res = FR_NO_FILE;
  3082  0031FA  0E04               	movlw	4
  3083  0031FC  D00B               	goto	L3
  3084  0031FE                     l590:
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;ff.c: 2536:      if ((mode & 0x02) && (dir[11] & 0x01))
  3088  0031FE  A39E               	btfss	f_open@mode& (0+255),1,b
  3089  003200  D00A               	goto	l588
  3090                           
  3091                           ; BSR set to: 0
  3092  003202  EE20 F00B          	lfsr	2,11
  3093  003206  51B8               	movf	f_open@dir& (0+255),w,b
  3094  003208  26D9               	addwf	fsr2l,f,c
  3095  00320A  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  3096  00320C  22DA               	addwfc	fsr2h,f,c
  3097  00320E  A0DF               	btfss	indf2,0,c
  3098  003210  D002               	goto	l588
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;ff.c: 2537:       res = FR_DENIED;
  3102  003212  0E07               	movlw	7
  3103  003214                     L3:
  3104  003214  6FB7               	movwf	f_open@res& (0+255),b
  3105  003216                     l588:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;ff.c: 2541:   if (res == FR_OK) {
  3109  003216  51B7               	movf	f_open@res& (0+255),w,b
  3110  003218  A4D8               	btfss	status,2,c
  3111  00321A  D020               	goto	l6301
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;ff.c: 2542:    if (mode & 0x08)
  3115  00321C  B79E               	btfsc	f_open@mode& (0+255),3,b
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;ff.c: 2543:     mode |= 0x20;
  3119  00321E  8B9E               	bsf	f_open@mode& (0+255),5,b
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;ff.c: 2544:    fp->dir_sect = dj.fs->winsect;
  3123  003220  EE20 F02A          	lfsr	2,42
  3124  003224  51BA               	movf	f_open@dj& (0+255),w,b
  3125  003226  26D9               	addwf	fsr2l,f,c
  3126  003228  51BB               	movf	(f_open@dj+1)& (0+255),w,b
  3127  00322A  22DA               	addwfc	fsr2h,f,c
  3128  00322C  EE10 F01A          	lfsr	1,26
  3129  003230  519A               	movf	f_open@fp& (0+255),w,b
  3130  003232  26E1               	addwf	fsr1l,f,c
  3131  003234  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3132  003236  22E2               	addwfc	fsr1h,f,c
  3133  003238  CFDE FFE6          	movff	postinc2,postinc1
  3134  00323C  CFDE FFE6          	movff	postinc2,postinc1
  3135  003240  CFDE FFE6          	movff	postinc2,postinc1
  3136  003244  CFDE FFE6          	movff	postinc2,postinc1
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;ff.c: 2545:    fp->dir_ptr = dir;
  3140  003248  EE20 F01E          	lfsr	2,30
  3141  00324C  519A               	movf	f_open@fp& (0+255),w,b
  3142  00324E  26D9               	addwf	fsr2l,f,c
  3143  003250  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3144  003252  22DA               	addwfc	fsr2h,f,c
  3145  003254  C0B8  FFDE         	movff	f_open@dir,postinc2
  3146  003258  C0B9  FFDD         	movff	f_open@dir+1,postdec2
  3147  00325C                     l6301:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;ff.c: 2565:   if (res == FR_OK) {
  3151  00325C  51B7               	movf	f_open@res& (0+255),w,b
  3152  00325E  A4D8               	btfss	status,2,c
  3153  003260  D06D               	goto	l6317
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;ff.c: 2566:    fp->flag = mode;
  3157  003262  EE20 F004          	lfsr	2,4
  3158  003266  519A               	movf	f_open@fp& (0+255),w,b
  3159  003268  26D9               	addwf	fsr2l,f,c
  3160  00326A  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3161  00326C  22DA               	addwfc	fsr2h,f,c
  3162  00326E  C09E  FFDF         	movff	f_open@mode,indf2
  3163                           
  3164                           ;ff.c: 2567:    fp->err = 0;
  3165  003272  EE20 F005          	lfsr	2,5
  3166  003276  519A               	movf	f_open@fp& (0+255),w,b
  3167  003278  26D9               	addwf	fsr2l,f,c
  3168  00327A  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3169  00327C  22DA               	addwfc	fsr2h,f,c
  3170  00327E  0E00               	movlw	0
  3171  003280  6EDF               	movwf	indf2,c
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;ff.c: 2568:    fp->sclust = ld_clust(dj.fs, dir);
  3175  003282  C0BA  F001         	movff	f_open@dj,ld_clust@fs
  3176  003286  C0BB  F002         	movff	f_open@dj+1,ld_clust@fs+1
  3177  00328A  C0B8  F003         	movff	f_open@dir,ld_clust@dir
  3178  00328E  C0B9  F004         	movff	f_open@dir+1,ld_clust@dir+1
  3179  003292  EC68  F02C         	call	_ld_clust	;wreg free
  3180  003296  0100               	movlb	0	; () banked
  3181  003298  EE20 F00E          	lfsr	2,14
  3182  00329C  519A               	movf	f_open@fp& (0+255),w,b
  3183  00329E  26D9               	addwf	fsr2l,f,c
  3184  0032A0  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3185  0032A2  22DA               	addwfc	fsr2h,f,c
  3186  0032A4  C001  FFDE         	movff	?_ld_clust,postinc2
  3187  0032A8  C002  FFDE         	movff	?_ld_clust+1,postinc2
  3188  0032AC  C003  FFDE         	movff	?_ld_clust+2,postinc2
  3189  0032B0  C004  FFDE         	movff	?_ld_clust+3,postinc2
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;ff.c: 2569:    fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(dir + 28));
  3193  0032B4  EE20 F01C          	lfsr	2,28
  3194  0032B8  51B8               	movf	f_open@dir& (0+255),w,b
  3195  0032BA  26D9               	addwf	fsr2l,f,c
  3196  0032BC  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  3197  0032BE  22DA               	addwfc	fsr2h,f,c
  3198  0032C0  EE10 F00A          	lfsr	1,10
  3199  0032C4  519A               	movf	f_open@fp& (0+255),w,b
  3200  0032C6  26E1               	addwf	fsr1l,f,c
  3201  0032C8  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3202  0032CA  22E2               	addwfc	fsr1h,f,c
  3203  0032CC  CFDE FFE6          	movff	postinc2,postinc1
  3204  0032D0  CFDE FFE6          	movff	postinc2,postinc1
  3205  0032D4  CFDE FFE6          	movff	postinc2,postinc1
  3206  0032D8  CFDE FFE6          	movff	postinc2,postinc1
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;ff.c: 2570:    fp->fptr = 0;
  3210  0032DC  EE20 F006          	lfsr	2,6
  3211  0032E0  519A               	movf	f_open@fp& (0+255),w,b
  3212  0032E2  26D9               	addwf	fsr2l,f,c
  3213  0032E4  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3214  0032E6  22DA               	addwfc	fsr2h,f,c
  3215  0032E8  6ADE               	clrf	postinc2,c
  3216  0032EA  6ADE               	clrf	postinc2,c
  3217  0032EC  6ADE               	clrf	postinc2,c
  3218  0032EE  6ADD               	clrf	postdec2,c
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;ff.c: 2571:    fp->dsect = 0;
  3222  0032F0  EE20 F016          	lfsr	2,22
  3223  0032F4  519A               	movf	f_open@fp& (0+255),w,b
  3224  0032F6  26D9               	addwf	fsr2l,f,c
  3225  0032F8  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3226  0032FA  22DA               	addwfc	fsr2h,f,c
  3227  0032FC  6ADE               	clrf	postinc2,c
  3228  0032FE  6ADE               	clrf	postinc2,c
  3229  003300  6ADE               	clrf	postinc2,c
  3230  003302  6ADD               	clrf	postdec2,c
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;ff.c: 2575:    fp->fs = dj.fs;
  3234  003304  C09A  FFD9         	movff	f_open@fp,fsr2l
  3235  003308  C09B  FFDA         	movff	f_open@fp+1,fsr2h
  3236  00330C  C0BA  FFDE         	movff	f_open@dj,postinc2
  3237  003310  C0BB  FFDD         	movff	f_open@dj+1,postdec2
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;ff.c: 2576:    fp->id = fp->fs->id;
  3241  003314  C09A  FFD9         	movff	f_open@fp,fsr2l
  3242  003318  C09B  FFDA         	movff	f_open@fp+1,fsr2h
  3243  00331C  EE10 F006          	lfsr	1,6
  3244  003320  50DE               	movf	postinc2,w,c
  3245  003322  26E1               	addwf	fsr1l,f,c
  3246  003324  50DD               	movf	postdec2,w,c
  3247  003326  22E2               	addwfc	fsr1h,f,c
  3248  003328  EE20 F002          	lfsr	2,2
  3249  00332C  519A               	movf	f_open@fp& (0+255),w,b
  3250  00332E  26D9               	addwf	fsr2l,f,c
  3251  003330  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3252  003332  22DA               	addwfc	fsr2h,f,c
  3253  003334  CFE6 FFDE          	movff	postinc1,postinc2
  3254  003338  CFE5 FFDD          	movff	postdec1,postdec2
  3255  00333C                     l6317:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;ff.c: 2580:  return res;
  3259  00333C  51B7               	movf	f_open@res& (0+255),w,b
  3260                           
  3261                           ; BSR set to: 0
  3262  00333E  0012               	return		;funcret
  3263  003340                     __end_of_f_open:
  3264                           	opt callstack 0
  3265                           
  3266 ;; *************** function _remove_chain *****************
  3267 ;; Defined at:
  3268 ;;		line 937 in file "ff.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  fs              2   85[COMRAM] PTR struct .
  3271 ;;		 -> FatFs(558), NULL(0), 
  3272 ;;  clst            4   87[COMRAM] unsigned long 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  nxt             4    1[BANK0 ] unsigned long 
  3275 ;;  res             1    0[BANK0 ] enum E93
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      enum E93
  3278 ;; Registers used:
  3279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3285 ;;      Params:         6       0       0       0       0       0       0       0       0
  3286 ;;      Locals:         0       5       0       0       0       0       0       0       0
  3287 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3288 ;;      Totals:        10       5       0       0       0       0       0       0       0
  3289 ;;Total ram usage:       15 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    9
  3292 ;; This function calls:
  3293 ;;		_get_fat
  3294 ;;		_put_fat
  3295 ;; This function is called by:
  3296 ;;		_f_open
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text5
  3301  00465C                     __ptext5:
  3302                           	opt callstack 0
  3303  00465C                     _remove_chain:
  3304                           	opt callstack 19
  3305                           
  3306                           ;ff.c: 938:  FATFS* fs,;ff.c: 939:  DWORD clst;ff.c: 941: {;ff.c: 942:  FRESULT res;;ff.
      +                          c: 943:  DWORD nxt;;ff.c: 948:  if (clst < 2 || clst >= fs->n_fatent) {
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;incstack = 0
  3310  00465C  505B               	movf	remove_chain@clst+3,w,c
  3311  00465E  105A               	iorwf	remove_chain@clst+2,w,c
  3312  004660  1059               	iorwf	remove_chain@clst+1,w,c
  3313  004662  E104               	bnz	u7580
  3314  004664  0E02               	movlw	2
  3315  004666  5C58               	subwf	remove_chain@clst,w,c
  3316  004668  A0D8               	btfss	status,0,c
  3317  00466A  D010               	goto	u7590
  3318  00466C                     u7580:
  3319  00466C  EE20 F012          	lfsr	2,18
  3320  004670  5056               	movf	remove_chain@fs,w,c
  3321  004672  26D9               	addwf	fsr2l,f,c
  3322  004674  5057               	movf	remove_chain@fs+1,w,c
  3323  004676  22DA               	addwfc	fsr2h,f,c
  3324  004678  50DE               	movf	postinc2,w,c
  3325  00467A  5C58               	subwf	remove_chain@clst,w,c
  3326  00467C  50DE               	movf	postinc2,w,c
  3327  00467E  5859               	subwfb	remove_chain@clst+1,w,c
  3328  004680  50DE               	movf	postinc2,w,c
  3329  004682  585A               	subwfb	remove_chain@clst+2,w,c
  3330  004684  50DE               	movf	postinc2,w,c
  3331  004686  585B               	subwfb	remove_chain@clst+3,w,c
  3332  004688  A0D8               	btfss	status,0,c
  3333  00468A  D003               	goto	l5765
  3334  00468C                     u7590:
  3335                           
  3336                           ;ff.c: 949:   res = FR_INT_ERR;
  3337  00468C  0E02               	movlw	2
  3338  00468E  0100               	movlb	0	; () banked
  3339  004690  D031               	goto	L4
  3340  004692                     l5765:
  3341                           
  3342                           ;ff.c: 952:   res = FR_OK;
  3343  004692  0E00               	movlw	0
  3344  004694  0100               	movlb	0	; () banked
  3345  004696  6F60               	movwf	remove_chain@res& (0+255),b
  3346                           
  3347                           ;ff.c: 953:   while (clst < fs->n_fatent) {
  3348  004698  D074               	goto	l302
  3349  00469A                     l5767:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;ff.c: 954:    nxt = get_fat(fs, clst);
  3353  00469A  C056  F03B         	movff	remove_chain@fs,get_fat@fs
  3354  00469E  C057  F03C         	movff	remove_chain@fs+1,get_fat@fs+1
  3355  0046A2  C058  F03D         	movff	remove_chain@clst,get_fat@clst
  3356  0046A6  C059  F03E         	movff	remove_chain@clst+1,get_fat@clst+1
  3357  0046AA  C05A  F03F         	movff	remove_chain@clst+2,get_fat@clst+2
  3358  0046AE  C05B  F040         	movff	remove_chain@clst+3,get_fat@clst+3
  3359  0046B2  EC04  F016         	call	_get_fat	;wreg free
  3360  0046B6  C03B  F061         	movff	?_get_fat,remove_chain@nxt
  3361  0046BA  C03C  F062         	movff	?_get_fat+1,remove_chain@nxt+1
  3362  0046BE  C03D  F063         	movff	?_get_fat+2,remove_chain@nxt+2
  3363  0046C2  C03E  F064         	movff	?_get_fat+3,remove_chain@nxt+3
  3364                           
  3365                           ;ff.c: 955:    if (nxt == 0) break;
  3366  0046C6  0100               	movlb	0	; () banked
  3367  0046C8  5161               	movf	remove_chain@nxt& (0+255),w,b
  3368  0046CA  1162               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  3369  0046CC  1163               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  3370  0046CE  1164               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  3371  0046D0  B4D8               	btfsc	status,2,c
  3372  0046D2  D067               	goto	u7650
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;ff.c: 956:    if (nxt == 1) { res = FR_INT_ERR; break; }
  3376  0046D4  0561               	decf	remove_chain@nxt& (0+255),w,b
  3377  0046D6  1162               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  3378  0046D8  1163               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  3379  0046DA  1164               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  3380  0046DC  B4D8               	btfsc	status,2,c
  3381  0046DE  D7D6               	goto	u7590
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;ff.c: 957:    if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
  3385  0046E0  2961               	incf	remove_chain@nxt& (0+255),w,b
  3386  0046E2  E10A               	bnz	l5781
  3387  0046E4  2962               	incf	(remove_chain@nxt+1)& (0+255),w,b
  3388  0046E6  E108               	bnz	l5781
  3389  0046E8  2963               	incf	(remove_chain@nxt+2)& (0+255),w,b
  3390  0046EA  E106               	bnz	l5781
  3391  0046EC  2964               	incf	(remove_chain@nxt+3)& (0+255),w,b
  3392  0046EE  A4D8               	btfss	status,2,c
  3393  0046F0  D003               	goto	l5781
  3394                           
  3395                           ; BSR set to: 0
  3396  0046F2  0E01               	movlw	1
  3397  0046F4                     L4:
  3398  0046F4  6F60               	movwf	remove_chain@res& (0+255),b
  3399  0046F6  D055               	goto	u7650
  3400  0046F8                     l5781:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;ff.c: 958:    res = put_fat(fs, clst, 0);
  3404  0046F8  C056  F03B         	movff	remove_chain@fs,put_fat@fs
  3405  0046FC  C057  F03C         	movff	remove_chain@fs+1,put_fat@fs+1
  3406  004700  C058  F03D         	movff	remove_chain@clst,put_fat@clst
  3407  004704  C059  F03E         	movff	remove_chain@clst+1,put_fat@clst+1
  3408  004708  C05A  F03F         	movff	remove_chain@clst+2,put_fat@clst+2
  3409  00470C  C05B  F040         	movff	remove_chain@clst+3,put_fat@clst+3
  3410  004710  0E00               	movlw	0
  3411  004712  6E41               	movwf	put_fat@val,c
  3412  004714  0E00               	movlw	0
  3413  004716  6E42               	movwf	put_fat@val+1,c
  3414  004718  0E00               	movlw	0
  3415  00471A  6E43               	movwf	put_fat@val+2,c
  3416  00471C  0E00               	movlw	0
  3417  00471E  6E44               	movwf	put_fat@val+3,c
  3418  004720  ECEC  F011         	call	_put_fat	;wreg free
  3419  004724  0100               	movlb	0	; () banked
  3420  004726  6F60               	movwf	remove_chain@res& (0+255),b
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;ff.c: 959:    if (res != FR_OK) break;
  3424  004728  5160               	movf	remove_chain@res& (0+255),w,b
  3425  00472A  A4D8               	btfss	status,2,c
  3426  00472C  D03A               	goto	u7650
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;ff.c: 960:    if (fs->free_clust != 0xFFFFFFFF) {
  3430  00472E  EE20 F00E          	lfsr	2,14
  3431  004732  5056               	movf	remove_chain@fs,w,c
  3432  004734  26D9               	addwf	fsr2l,f,c
  3433  004736  5057               	movf	remove_chain@fs+1,w,c
  3434  004738  22DA               	addwfc	fsr2h,f,c
  3435  00473A  28DE               	incf	postinc2,w,c
  3436  00473C  E107               	bnz	u7640
  3437  00473E  28DE               	incf	postinc2,w,c
  3438  004740  E105               	bnz	u7640
  3439  004742  28DE               	incf	postinc2,w,c
  3440  004744  E103               	bnz	u7640
  3441  004746  28DE               	incf	postinc2,w,c
  3442  004748  B4D8               	btfsc	status,2,c
  3443  00474A  D013               	goto	l5791
  3444  00474C                     u7640:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;ff.c: 961:     fs->free_clust++;
  3448  00474C  EE20 F00E          	lfsr	2,14
  3449  004750  5056               	movf	remove_chain@fs,w,c
  3450  004752  26D9               	addwf	fsr2l,f,c
  3451  004754  5057               	movf	remove_chain@fs+1,w,c
  3452  004756  22DA               	addwfc	fsr2h,f,c
  3453  004758  2ADE               	incf	postinc2,f,c
  3454  00475A  0E00               	movlw	0
  3455  00475C  22DE               	addwfc	postinc2,f,c
  3456  00475E  22DE               	addwfc	postinc2,f,c
  3457  004760  22DE               	addwfc	postinc2,f,c
  3458                           
  3459                           ;ff.c: 962:     fs->fsi_flag |= 1;
  3460  004762  EE20 F005          	lfsr	2,5
  3461  004766  5056               	movf	remove_chain@fs,w,c
  3462  004768  26D9               	addwf	fsr2l,f,c
  3463  00476A  5057               	movf	remove_chain@fs+1,w,c
  3464  00476C  22DA               	addwfc	fsr2h,f,c
  3465  00476E  0E00               	movlw	0
  3466  004770  80DB               	bsf	plusw2,0,c
  3467  004772                     l5791:
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;ff.c: 974:    clst = nxt;
  3471  004772  C061  F058         	movff	remove_chain@nxt,remove_chain@clst
  3472  004776  C062  F059         	movff	remove_chain@nxt+1,remove_chain@clst+1
  3473  00477A  C063  F05A         	movff	remove_chain@nxt+2,remove_chain@clst+2
  3474  00477E  C064  F05B         	movff	remove_chain@nxt+3,remove_chain@clst+3
  3475  004782                     l302:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;ff.c: 953:   while (clst < fs->n_fatent) {
  3479  004782  EE20 F012          	lfsr	2,18
  3480  004786  5056               	movf	remove_chain@fs,w,c
  3481  004788  26D9               	addwf	fsr2l,f,c
  3482  00478A  5057               	movf	remove_chain@fs+1,w,c
  3483  00478C  22DA               	addwfc	fsr2h,f,c
  3484  00478E  50DE               	movf	postinc2,w,c
  3485  004790  5C58               	subwf	remove_chain@clst,w,c
  3486  004792  50DE               	movf	postinc2,w,c
  3487  004794  5859               	subwfb	remove_chain@clst+1,w,c
  3488  004796  50DE               	movf	postinc2,w,c
  3489  004798  585A               	subwfb	remove_chain@clst+2,w,c
  3490  00479A  50DE               	movf	postinc2,w,c
  3491  00479C  585B               	subwfb	remove_chain@clst+3,w,c
  3492  00479E  A0D8               	btfss	status,0,c
  3493  0047A0  D77C               	goto	l5767
  3494  0047A2                     u7650:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;ff.c: 978:  return res;
  3498  0047A2  5160               	movf	remove_chain@res& (0+255),w,b
  3499                           
  3500                           ; BSR set to: 0
  3501  0047A4  0012               	return		;funcret
  3502  0047A6                     __end_of_remove_chain:
  3503                           	opt callstack 0
  3504                           
  3505 ;; *************** function _follow_path *****************
  3506 ;; Defined at:
  3507 ;;		line 2052 in file "ff.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  dp              2   38[BANK0 ] PTR struct .
  3510 ;;		 -> f_open@dj(22), 
  3511 ;;  path            2   40[BANK0 ] PTR const unsigned char 
  3512 ;;		 -> STR_4(9), STR_3(1), 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  dir             2   42[BANK0 ] PTR unsigned char 
  3515 ;;		 -> FatFs(558), NULL(0), 
  3516 ;;  res             1   45[BANK0 ] enum E93
  3517 ;;  ns              1   44[BANK0 ] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      enum E93
  3520 ;; Registers used:
  3521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3527 ;;      Params:         0       4       0       0       0       0       0       0       0
  3528 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3530 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3531 ;;Total ram usage:        8 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:   12
  3534 ;; This function calls:
  3535 ;;		_create_name
  3536 ;;		_dir_find
  3537 ;;		_dir_sdi
  3538 ;;		_ld_clust
  3539 ;; This function is called by:
  3540 ;;		_f_open
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text6
  3545  0047A6                     __ptext6:
  3546                           	opt callstack 0
  3547  0047A6                     _follow_path:
  3548                           	opt callstack 16
  3549                           
  3550                           ;ff.c: 2053:  DIRC* dp,;ff.c: 2054:  const TCHAR* path;ff.c: 2056: {;ff.c: 2057:  FRESUL
      +                          T res;;ff.c: 2058:  BYTE *dir, ns;;ff.c: 2068:  if (*path == '/' || *path == '\\')
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;incstack = 0
  3554  0047A6  C088  FFF6         	movff	follow_path@path,tblptrl
  3555  0047AA  C089  FFF7         	movff	follow_path@path+1,tblptrh
  3556  0047AE                     	if	0	;tblptru may be non-zero
  3557  0047AE                     	endif
  3558  0047AE                     	if	0	;tblptru may be non-zero
  3559  0047AE                     	endif
  3560  0047AE  0008               	tblrd		*
  3561  0047B0  50F5               	movf	tablat,w,c
  3562  0047B2  0A2F               	xorlw	47
  3563  0047B4  B4D8               	btfsc	status,2,c
  3564  0047B6  D009               	goto	u7690
  3565  0047B8  C088  FFF6         	movff	follow_path@path,tblptrl
  3566  0047BC  C089  FFF7         	movff	follow_path@path+1,tblptrh
  3567  0047C0                     	if	0	;tblptru may be non-zero
  3568  0047C0                     	endif
  3569  0047C0                     	if	0	;tblptru may be non-zero
  3570  0047C0                     	endif
  3571  0047C0  0008               	tblrd		*
  3572  0047C2  50F5               	movf	tablat,w,c
  3573  0047C4  0A5C               	xorlw	92
  3574  0047C6  A4D8               	btfss	status,2,c
  3575  0047C8  D003               	goto	l5821
  3576  0047CA                     u7690:
  3577                           
  3578                           ;ff.c: 2069:   path++;
  3579  0047CA  0100               	movlb	0	; () banked
  3580  0047CC  4B88               	infsnz	follow_path@path& (0+255),f,b
  3581  0047CE  2B89               	incf	(follow_path@path+1)& (0+255),f,b
  3582  0047D0                     l5821:
  3583                           
  3584                           ;ff.c: 2070:  dp->sclust = 0;
  3585  0047D0  0100               	movlb	0	; () banked
  3586  0047D2  EE20 F006          	lfsr	2,6
  3587  0047D6  5186               	movf	follow_path@dp& (0+255),w,b
  3588  0047D8  26D9               	addwf	fsr2l,f,c
  3589  0047DA  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3590  0047DC  22DA               	addwfc	fsr2h,f,c
  3591  0047DE  6ADE               	clrf	postinc2,c
  3592  0047E0  6ADE               	clrf	postinc2,c
  3593  0047E2  6ADE               	clrf	postinc2,c
  3594  0047E4  6ADD               	clrf	postdec2,c
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;ff.c: 2073:  if ((UINT)*path < ' ') {
  3598  0047E6  C088  FFF6         	movff	follow_path@path,tblptrl
  3599  0047EA  C089  FFF7         	movff	follow_path@path+1,tblptrh
  3600  0047EE                     	if	0	;tblptru may be non-zero
  3601  0047EE                     	endif
  3602  0047EE                     	if	0	;tblptru may be non-zero
  3603  0047EE                     	endif
  3604  0047EE  0E20               	movlw	32
  3605  0047F0  0008               	tblrd		*
  3606  0047F2  60F5               	cpfslt	tablat,c
  3607  0047F4  D017               	goto	l5829
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;ff.c: 2074:   res = dir_sdi(dp, 0);
  3611  0047F6  C086  F056         	movff	follow_path@dp,dir_sdi@dp
  3612  0047FA  C087  F057         	movff	follow_path@dp+1,dir_sdi@dp+1
  3613  0047FE  0E00               	movlw	0
  3614  004800  6E59               	movwf	dir_sdi@idx+1,c
  3615  004802  0E00               	movlw	0
  3616  004804  6E58               	movwf	dir_sdi@idx,c
  3617  004806  ECC6  F01C         	call	_dir_sdi	;wreg free
  3618  00480A  0100               	movlb	0	; () banked
  3619  00480C  6F8D               	movwf	follow_path@res& (0+255),b
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;ff.c: 2075:   dp->dir = 0;
  3623  00480E  EE20 F012          	lfsr	2,18
  3624  004812  5186               	movf	follow_path@dp& (0+255),w,b
  3625  004814  26D9               	addwf	fsr2l,f,c
  3626  004816  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3627  004818  22DA               	addwfc	fsr2h,f,c
  3628  00481A  0E00               	movlw	0
  3629  00481C  6EDE               	movwf	postinc2,c
  3630  00481E  0E00               	movlw	0
  3631  004820  6EDD               	movwf	postdec2,c
  3632                           
  3633                           ;ff.c: 2076:  } else {
  3634  004822  D062               	goto	l5865
  3635  004824                     l5829:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;ff.c: 2078:    res = create_name(dp, &path);
  3639  004824  C086  F009         	movff	follow_path@dp,create_name@dp
  3640  004828  C087  F00A         	movff	follow_path@dp+1,create_name@dp+1
  3641  00482C  0E88               	movlw	low follow_path@path
  3642  00482E  6E0B               	movwf	create_name@path,c
  3643  004830  0E00               	movlw	high follow_path@path
  3644  004832  6E0C               	movwf	create_name@path+1,c
  3645  004834  EC6B  F01F         	call	_create_name	;wreg free
  3646  004838  0100               	movlb	0	; () banked
  3647  00483A  6F8D               	movwf	follow_path@res& (0+255),b
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;ff.c: 2079:    if (res != FR_OK) break;
  3651  00483C  518D               	movf	follow_path@res& (0+255),w,b
  3652  00483E  A4D8               	btfss	status,2,c
  3653  004840  D053               	goto	l5865
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;ff.c: 2080:    res = dir_find(dp);
  3657  004842  C086  F080         	movff	follow_path@dp,dir_find@dp
  3658  004846  C087  F081         	movff	follow_path@dp+1,dir_find@dp+1
  3659  00484A  EC45  F027         	call	_dir_find	;wreg free
  3660  00484E  0100               	movlb	0	; () banked
  3661  004850  6F8D               	movwf	follow_path@res& (0+255),b
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;ff.c: 2081:    ns = dp->fn[11];
  3665  004852  EE20 F014          	lfsr	2,20
  3666  004856  5186               	movf	follow_path@dp& (0+255),w,b
  3667  004858  26D9               	addwf	fsr2l,f,c
  3668  00485A  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3669  00485C  22DA               	addwfc	fsr2h,f,c
  3670  00485E  EE10 F00B          	lfsr	1,11
  3671  004862  50DE               	movf	postinc2,w,c
  3672  004864  26E1               	addwf	fsr1l,f,c
  3673  004866  50DD               	movf	postdec2,w,c
  3674  004868  22E2               	addwfc	fsr1h,f,c
  3675  00486A  50E7               	movf	indf1,w,c
  3676  00486C  6F8C               	movwf	follow_path@ns& (0+255),b
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;ff.c: 2082:    if (res != FR_OK) {
  3680  00486E  518D               	movf	follow_path@res& (0+255),w,b
  3681  004870  B4D8               	btfsc	status,2,c
  3682  004872  D008               	goto	l469
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;ff.c: 2083:     if (res == FR_NO_FILE) {
  3686  004874  0E04               	movlw	4
  3687  004876  198D               	xorwf	follow_path@res& (0+255),w,b
  3688  004878  B4D8               	btfsc	status,2,c
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;ff.c: 2089:       if (!(ns & 0x04)) res = FR_NO_PATH;
  3692  00487A  B58C               	btfsc	follow_path@ns& (0+255),2,b
  3693  00487C  D035               	goto	l5865
  3694  00487E                     u7740:
  3695                           
  3696                           ; BSR set to: 0
  3697  00487E  0E05               	movlw	5
  3698  004880  6F8D               	movwf	follow_path@res& (0+255),b
  3699  004882  D032               	goto	l5865
  3700  004884                     l469:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;ff.c: 2094:    if (ns & 0x04) break;
  3704  004884  B58C               	btfsc	follow_path@ns& (0+255),2,b
  3705  004886  D030               	goto	l5865
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;ff.c: 2095:    dir = dp->dir;
  3709  004888  EE20 F012          	lfsr	2,18
  3710  00488C  5186               	movf	follow_path@dp& (0+255),w,b
  3711  00488E  26D9               	addwf	fsr2l,f,c
  3712  004890  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3713  004892  22DA               	addwfc	fsr2h,f,c
  3714  004894  CFDE F08A          	movff	postinc2,follow_path@dir
  3715  004898  CFDD F08B          	movff	postdec2,follow_path@dir+1
  3716                           
  3717                           ;ff.c: 2096:    if (!(dir[11] & 0x10)) {
  3718  00489C  EE20 F00B          	lfsr	2,11
  3719  0048A0  518A               	movf	follow_path@dir& (0+255),w,b
  3720  0048A2  26D9               	addwf	fsr2l,f,c
  3721  0048A4  518B               	movf	(follow_path@dir+1)& (0+255),w,b
  3722  0048A6  22DA               	addwfc	fsr2h,f,c
  3723  0048A8  A8DF               	btfss	indf2,4,c
  3724  0048AA  D7E9               	goto	u7740
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;ff.c: 2099:    dp->sclust = ld_clust(dp->fs, dir);
  3728  0048AC  C086  FFD9         	movff	follow_path@dp,fsr2l
  3729  0048B0  C087  FFDA         	movff	follow_path@dp+1,fsr2h
  3730  0048B4  CFDE F001          	movff	postinc2,ld_clust@fs
  3731  0048B8  CFDD F002          	movff	postdec2,ld_clust@fs+1
  3732  0048BC  C08A  F003         	movff	follow_path@dir,ld_clust@dir
  3733  0048C0  C08B  F004         	movff	follow_path@dir+1,ld_clust@dir+1
  3734  0048C4  EC68  F02C         	call	_ld_clust	;wreg free
  3735  0048C8  0100               	movlb	0	; () banked
  3736  0048CA  EE20 F006          	lfsr	2,6
  3737  0048CE  5186               	movf	follow_path@dp& (0+255),w,b
  3738  0048D0  26D9               	addwf	fsr2l,f,c
  3739  0048D2  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3740  0048D4  22DA               	addwfc	fsr2h,f,c
  3741  0048D6  C001  FFDE         	movff	?_ld_clust,postinc2
  3742  0048DA  C002  FFDE         	movff	?_ld_clust+1,postinc2
  3743  0048DE  C003  FFDE         	movff	?_ld_clust+2,postinc2
  3744  0048E2  C004  FFDE         	movff	?_ld_clust+3,postinc2
  3745  0048E6  D79E               	goto	l5829
  3746  0048E8                     l5865:
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;ff.c: 2103:  return res;
  3750  0048E8  518D               	movf	follow_path@res& (0+255),w,b
  3751                           
  3752                           ; BSR set to: 0
  3753  0048EA  0012               	return		;funcret
  3754  0048EC                     __end_of_follow_path:
  3755                           	opt callstack 0
  3756                           
  3757 ;; *************** function _ld_clust *****************
  3758 ;; Defined at:
  3759 ;;		line 1235 in file "ff.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  fs              2    0[COMRAM] PTR struct .
  3762 ;;		 -> FatFs(558), NULL(0), 
  3763 ;;  dir             2    2[COMRAM] PTR const unsigned char 
  3764 ;;		 -> FatFs(558), NULL(0), 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  cl              4   10[COMRAM] unsigned long 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  4    0[COMRAM] unsigned long 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3776 ;;      Params:         4       0       0       0       0       0       0       0       0
  3777 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3778 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3779 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3780 ;;Total ram usage:       14 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_follow_path
  3786 ;;		_f_open
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text7
  3791  0058D0                     __ptext7:
  3792                           	opt callstack 0
  3793  0058D0                     _ld_clust:
  3794                           	opt callstack 28
  3795                           
  3796                           ;ff.c: 1236:  FATFS* fs,;ff.c: 1237:  const BYTE* dir;ff.c: 1239: {;ff.c: 1240:  DWORD c
      +                          l;;ff.c: 1242:  cl = (WORD)(*(WORD*)(BYTE*)(dir + 26));
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;incstack = 0
  3800  0058D0  0E1A               	movlw	26
  3801  0058D2  2403               	addwf	ld_clust@dir,w,c
  3802  0058D4  6ED9               	movwf	fsr2l,c
  3803  0058D6  0E00               	movlw	0
  3804  0058D8  2004               	addwfc	ld_clust@dir+1,w,c
  3805  0058DA  6EDA               	movwf	fsr2h,c
  3806  0058DC  CFDE F005          	movff	postinc2,??_ld_clust
  3807  0058E0  CFDD F006          	movff	postdec2,??_ld_clust+1
  3808  0058E4  C005  F00B         	movff	??_ld_clust,ld_clust@cl
  3809  0058E8  C006  F00C         	movff	??_ld_clust+1,ld_clust@cl+1
  3810  0058EC  6A0D               	clrf	ld_clust@cl+2,c
  3811  0058EE  6A0E               	clrf	ld_clust@cl+3,c
  3812                           
  3813                           ;ff.c: 1243:  if (fs->fs_type == 3)
  3814  0058F0  C001  FFD9         	movff	ld_clust@fs,fsr2l
  3815  0058F4  C002  FFDA         	movff	ld_clust@fs+1,fsr2h
  3816  0058F8  0E03               	movlw	3
  3817  0058FA  18DE               	xorwf	postinc2,w,c
  3818  0058FC  A4D8               	btfss	status,2,c
  3819  0058FE  D01E               	goto	l5467
  3820                           
  3821                           ;ff.c: 1244:   cl |= (DWORD)(WORD)(*(WORD*)(BYTE*)(dir + 20)) << 16;
  3822  005900  0E14               	movlw	20
  3823  005902  2403               	addwf	ld_clust@dir,w,c
  3824  005904  6ED9               	movwf	fsr2l,c
  3825  005906  0E00               	movlw	0
  3826  005908  2004               	addwfc	ld_clust@dir+1,w,c
  3827  00590A  6EDA               	movwf	fsr2h,c
  3828  00590C  CFDE F005          	movff	postinc2,??_ld_clust
  3829  005910  CFDD F006          	movff	postdec2,??_ld_clust+1
  3830  005914  5005               	movf	??_ld_clust,w,c
  3831  005916  6E07               	movwf	(??_ld_clust+2)& (0+255),c
  3832  005918  5006               	movf	??_ld_clust+1,w,c
  3833  00591A  6E08               	movwf	(??_ld_clust+3)& (0+255),c
  3834  00591C  6A09               	clrf	(??_ld_clust+4)& (0+255),c
  3835  00591E  6A0A               	clrf	(??_ld_clust+5)& (0+255),c
  3836  005920  C008  F00A         	movff	??_ld_clust+3,??_ld_clust+5
  3837  005924  C007  F009         	movff	??_ld_clust+2,??_ld_clust+4
  3838  005928  6A08               	clrf	??_ld_clust+3,c
  3839  00592A  6A07               	clrf	??_ld_clust+2,c
  3840  00592C  5007               	movf	??_ld_clust+2,w,c
  3841  00592E  120B               	iorwf	ld_clust@cl,f,c
  3842  005930  5008               	movf	??_ld_clust+3,w,c
  3843  005932  120C               	iorwf	ld_clust@cl+1,f,c
  3844  005934  5009               	movf	??_ld_clust+4,w,c
  3845  005936  120D               	iorwf	ld_clust@cl+2,f,c
  3846  005938  500A               	movf	??_ld_clust+5,w,c
  3847  00593A  120E               	iorwf	ld_clust@cl+3,f,c
  3848  00593C                     l5467:
  3849                           
  3850                           ;ff.c: 1246:  return cl;
  3851  00593C  C00B  F001         	movff	ld_clust@cl,?_ld_clust
  3852  005940  C00C  F002         	movff	ld_clust@cl+1,?_ld_clust+1
  3853  005944  C00D  F003         	movff	ld_clust@cl+2,?_ld_clust+2
  3854  005948  C00E  F004         	movff	ld_clust@cl+3,?_ld_clust+3
  3855  00594C  0012               	return		;funcret
  3856  00594E                     __end_of_ld_clust:
  3857                           	opt callstack 0
  3858                           
  3859 ;; *************** function _dir_find *****************
  3860 ;; Defined at:
  3861 ;;		line 1458 in file "ff.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  dp              2   32[BANK0 ] PTR struct .
  3864 ;;		 -> f_open@dj(22), 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  dir             2   35[BANK0 ] PTR unsigned char 
  3867 ;;		 -> FatFs(558), NULL(0), 
  3868 ;;  res             1   37[BANK0 ] enum E93
  3869 ;;  c               1   34[BANK0 ] unsigned char 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      enum E93
  3872 ;; Registers used:
  3873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3879 ;;      Params:         0       2       0       0       0       0       0       0       0
  3880 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3882 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3883 ;;Total ram usage:        6 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:   11
  3886 ;; This function calls:
  3887 ;;		_dir_next
  3888 ;;		_dir_sdi
  3889 ;;		_mem_cmp
  3890 ;;		_move_window
  3891 ;; This function is called by:
  3892 ;;		_follow_path
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text8
  3897  004E8A                     __ptext8:
  3898                           	opt callstack 0
  3899  004E8A                     _dir_find:
  3900                           	opt callstack 16
  3901                           
  3902                           ;ff.c: 1459:  DIRC* dp;ff.c: 1461: {;ff.c: 1462:  FRESULT res;;ff.c: 1463:  BYTE c, *dir
      +                          ;;ff.c: 1468:  res = dir_sdi(dp, 0);
  3903                           
  3904                           ;incstack = 0
  3905  004E8A  C080  F056         	movff	dir_find@dp,dir_sdi@dp
  3906  004E8E  C081  F057         	movff	dir_find@dp+1,dir_sdi@dp+1
  3907  004E92  0E00               	movlw	0
  3908  004E94  6E59               	movwf	dir_sdi@idx+1,c
  3909  004E96  0E00               	movlw	0
  3910  004E98  6E58               	movwf	dir_sdi@idx,c
  3911  004E9A  ECC6  F01C         	call	_dir_sdi	;wreg free
  3912  004E9E  0100               	movlb	0	; () banked
  3913  004EA0  6F85               	movwf	dir_find@res& (0+255),b
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;ff.c: 1469:  if (res != FR_OK) return res;
  3917  004EA2  5185               	movf	dir_find@res& (0+255),w,b
  3918  004EA4  B4D8               	btfsc	status,2,c
  3919  004EA6  D003               	goto	l5481
  3920  004EA8                     u7030:
  3921  004EA8  0100               	movlb	0	; () banked
  3922  004EAA  5185               	movf	dir_find@res& (0+255),w,b
  3923  004EAC  0012               	return	
  3924  004EAE                     l5481:
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;ff.c: 1475:   res = move_window(dp->fs, dp->sect);
  3928  004EAE  C080  FFD9         	movff	dir_find@dp,fsr2l
  3929  004EB2  C081  FFDA         	movff	dir_find@dp+1,fsr2h
  3930  004EB6  CFDE F030          	movff	postinc2,move_window@fs
  3931  004EBA  CFDD F031          	movff	postdec2,move_window@fs+1
  3932  004EBE  EE20 F00E          	lfsr	2,14
  3933  004EC2  5180               	movf	dir_find@dp& (0+255),w,b
  3934  004EC4  26D9               	addwf	fsr2l,f,c
  3935  004EC6  5181               	movf	(dir_find@dp+1)& (0+255),w,b
  3936  004EC8  22DA               	addwfc	fsr2h,f,c
  3937  004ECA  CFDE F032          	movff	postinc2,move_window@sector
  3938  004ECE  CFDE F033          	movff	postinc2,move_window@sector+1
  3939  004ED2  CFDE F034          	movff	postinc2,move_window@sector+2
  3940  004ED6  CFDE F035          	movff	postinc2,move_window@sector+3
  3941  004EDA  EC49  F02B         	call	_move_window	;wreg free
  3942  004EDE  0100               	movlb	0	; () banked
  3943  004EE0  6F85               	movwf	dir_find@res& (0+255),b
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;ff.c: 1476:   if (res != FR_OK) break;
  3947  004EE2  5185               	movf	dir_find@res& (0+255),w,b
  3948  004EE4  A4D8               	btfss	status,2,c
  3949  004EE6  D7E0               	goto	u7030
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;ff.c: 1477:   dir = dp->dir;
  3953  004EE8  EE20 F012          	lfsr	2,18
  3954  004EEC  5180               	movf	dir_find@dp& (0+255),w,b
  3955  004EEE  26D9               	addwf	fsr2l,f,c
  3956  004EF0  5181               	movf	(dir_find@dp+1)& (0+255),w,b
  3957  004EF2  22DA               	addwfc	fsr2h,f,c
  3958  004EF4  CFDE F083          	movff	postinc2,dir_find@dir
  3959  004EF8  CFDD F084          	movff	postdec2,dir_find@dir+1
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;ff.c: 1478:   c = dir[0];
  3963  004EFC  C083  FFD9         	movff	dir_find@dir,fsr2l
  3964  004F00  C084  FFDA         	movff	dir_find@dir+1,fsr2h
  3965  004F04  50DF               	movf	indf2,w,c
  3966  004F06  6F82               	movwf	dir_find@c& (0+255),b
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;ff.c: 1479:   if (c == 0) { res = FR_NO_FILE; break; }
  3970  004F08  5182               	movf	dir_find@c& (0+255),w,b
  3971  004F0A  A4D8               	btfss	status,2,c
  3972  004F0C  D003               	goto	l5495
  3973                           
  3974                           ; BSR set to: 0
  3975  004F0E  0E04               	movlw	4
  3976  004F10  6F85               	movwf	dir_find@res& (0+255),b
  3977  004F12  D7CA               	goto	u7030
  3978  004F14                     l5495:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;ff.c: 1502:   if (!(dir[11] & 0x08) && !mem_cmp(dir, dp->fn, 11))
  3982  004F14  EE20 F00B          	lfsr	2,11
  3983  004F18  5183               	movf	dir_find@dir& (0+255),w,b
  3984  004F1A  26D9               	addwf	fsr2l,f,c
  3985  004F1C  5184               	movf	(dir_find@dir+1)& (0+255),w,b
  3986  004F1E  22DA               	addwfc	fsr2h,f,c
  3987  004F20  B6DF               	btfsc	indf2,3,c
  3988  004F22  D018               	goto	l5501
  3989                           
  3990                           ; BSR set to: 0
  3991  004F24  C083  F001         	movff	dir_find@dir,mem_cmp@dst
  3992  004F28  C084  F002         	movff	dir_find@dir+1,mem_cmp@dst+1
  3993  004F2C  EE20 F014          	lfsr	2,20
  3994  004F30  5180               	movf	dir_find@dp& (0+255),w,b
  3995  004F32  26D9               	addwf	fsr2l,f,c
  3996  004F34  5181               	movf	(dir_find@dp+1)& (0+255),w,b
  3997  004F36  22DA               	addwfc	fsr2h,f,c
  3998  004F38  CFDE F003          	movff	postinc2,mem_cmp@src
  3999  004F3C  CFDD F004          	movff	postdec2,mem_cmp@src+1
  4000  004F40  0E00               	movlw	0
  4001  004F42  6E06               	movwf	mem_cmp@cnt+1,c
  4002  004F44  0E0B               	movlw	11
  4003  004F46  6E05               	movwf	mem_cmp@cnt,c
  4004  004F48  EC1C  F02D         	call	_mem_cmp	;wreg free
  4005  004F4C  5001               	movf	?_mem_cmp,w,c
  4006  004F4E  1002               	iorwf	?_mem_cmp+1,w,c
  4007  004F50  B4D8               	btfsc	status,2,c
  4008  004F52  D7AA               	goto	u7030
  4009  004F54                     l5501:
  4010                           
  4011                           ;ff.c: 1505:   res = dir_next(dp, 0);
  4012  004F54  C080  F06D         	movff	dir_find@dp,dir_next@dp
  4013  004F58  C081  F06E         	movff	dir_find@dp+1,dir_next@dp+1
  4014  004F5C  0E00               	movlw	0
  4015  004F5E  0100               	movlb	0	; () banked
  4016  004F60  6F70               	movwf	(dir_next@stretch+1)& (0+255),b
  4017  004F62  0E00               	movlw	0
  4018  004F64  6F6F               	movwf	dir_next@stretch& (0+255),b
  4019  004F66  EC01  F014         	call	_dir_next	;wreg free
  4020  004F6A  0100               	movlb	0	; () banked
  4021  004F6C  6F85               	movwf	dir_find@res& (0+255),b
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;ff.c: 1506:  } while (res == FR_OK);
  4025  004F6E  5185               	movf	dir_find@res& (0+255),w,b
  4026  004F70  A4D8               	btfss	status,2,c
  4027  004F72  D79A               	goto	u7030
  4028  004F74  D79C               	goto	l5481
  4029  004F76                     __end_of_dir_find:
  4030                           	opt callstack 0
  4031                           
  4032 ;; *************** function _mem_cmp *****************
  4033 ;; Defined at:
  4034 ;;		line 533 in file "ff.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  dst             2    0[COMRAM] PTR const void 
  4037 ;;		 -> FatFs(558), NULL(0), 
  4038 ;;  src             2    2[COMRAM] PTR const void 
  4039 ;;		 -> f_open@sfn(12), 
  4040 ;;  cnt             2    4[COMRAM] unsigned short 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  r               2   12[COMRAM] int 
  4043 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4044 ;;		 -> f_open@sfn(12), 
  4045 ;;  d               2    8[COMRAM] PTR const unsigned char 
  4046 ;;		 -> FatFs(558), NULL(0), 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2    0[COMRAM] int 
  4049 ;; Registers used:
  4050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4056 ;;      Params:         6       0       0       0       0       0       0       0       0
  4057 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4058 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4059 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4060 ;;Total ram usage:       14 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_dir_find
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text9
  4070  005A38                     __ptext9:
  4071                           	opt callstack 0
  4072  005A38                     _mem_cmp:
  4073                           	opt callstack 26
  4074                           
  4075                           ;ff.c: 534:  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;incstack = 0
  4079  005A38  C001  F009         	movff	mem_cmp@dst,mem_cmp@d
  4080  005A3C  C002  F00A         	movff	mem_cmp@dst+1,mem_cmp@d+1
  4081  005A40  C003  F00B         	movff	mem_cmp@src,mem_cmp@s
  4082  005A44  C004  F00C         	movff	mem_cmp@src+1,mem_cmp@s+1
  4083                           
  4084                           ;ff.c: 535:  int r = 0;
  4085  005A48  0E00               	movlw	0
  4086  005A4A  6E0E               	movwf	mem_cmp@r+1,c
  4087  005A4C  0E00               	movlw	0
  4088  005A4E  6E0D               	movwf	mem_cmp@r,c
  4089  005A50                     l5091:
  4090  005A50  0605               	decf	mem_cmp@cnt,f,c
  4091  005A52  A0D8               	btfss	status,0,c
  4092  005A54  0606               	decf	mem_cmp@cnt+1,f,c
  4093  005A56  2805               	incf	mem_cmp@cnt,w,c
  4094  005A58  E103               	bnz	u6340
  4095  005A5A  2806               	incf	mem_cmp@cnt+1,w,c
  4096  005A5C  B4D8               	btfsc	status,2,c
  4097  005A5E  D01A               	goto	u6350
  4098  005A60                     u6340:
  4099  005A60  C009  FFD9         	movff	mem_cmp@d,fsr2l
  4100  005A64  C00A  FFDA         	movff	mem_cmp@d+1,fsr2h
  4101  005A68  4A09               	infsnz	mem_cmp@d,f,c
  4102  005A6A  2A0A               	incf	mem_cmp@d+1,f,c
  4103  005A6C  50DF               	movf	indf2,w,c
  4104  005A6E  6E07               	movwf	??_mem_cmp& (0+255),c
  4105  005A70  C00B  FFD9         	movff	mem_cmp@s,fsr2l
  4106  005A74  C00C  FFDA         	movff	mem_cmp@s+1,fsr2h
  4107  005A78  4A0B               	infsnz	mem_cmp@s,f,c
  4108  005A7A  2A0C               	incf	mem_cmp@s+1,f,c
  4109  005A7C  50DF               	movf	indf2,w,c
  4110  005A7E  6E08               	movwf	(??_mem_cmp+1)& (0+255),c
  4111  005A80  5008               	movf	??_mem_cmp+1,w,c
  4112  005A82  5C07               	subwf	??_mem_cmp,w,c
  4113  005A84  6E0D               	movwf	mem_cmp@r,c
  4114  005A86  6A0E               	clrf	mem_cmp@r+1,c
  4115  005A88  A0D8               	btfss	status,0,c
  4116  005A8A  060E               	decf	mem_cmp@r+1,f,c
  4117  005A8C  500D               	movf	mem_cmp@r,w,c
  4118  005A8E  100E               	iorwf	mem_cmp@r+1,w,c
  4119  005A90  B4D8               	btfsc	status,2,c
  4120  005A92  D7DE               	goto	l5091
  4121  005A94                     u6350:
  4122                           
  4123                           ;ff.c: 538:  return r;
  4124  005A94  C00D  F001         	movff	mem_cmp@r,?_mem_cmp
  4125  005A98  C00E  F002         	movff	mem_cmp@r+1,?_mem_cmp+1
  4126  005A9C  0012               	return		;funcret
  4127  005A9E                     __end_of_mem_cmp:
  4128                           	opt callstack 0
  4129                           
  4130 ;; *************** function _create_name *****************
  4131 ;; Defined at:
  4132 ;;		line 1843 in file "ff.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  dp              2    8[COMRAM] PTR struct .
  4135 ;;		 -> f_open@dj(22), 
  4136 ;;  path            2   10[COMRAM] PTR PTR const unsigned c
  4137 ;;		 -> follow_path@path(2), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  i               2   28[COMRAM] unsigned short 
  4140 ;;  sfn             2   26[COMRAM] PTR unsigned char 
  4141 ;;		 -> f_open@sfn(12), 
  4142 ;;  p               2   23[COMRAM] PTR const unsigned char 
  4143 ;;		 -> STR_4(9), STR_3(1), 
  4144 ;;  ni              2   21[COMRAM] unsigned short 
  4145 ;;  si              2   18[COMRAM] unsigned short 
  4146 ;;  c               1   30[COMRAM] unsigned char 
  4147 ;;  d               1   25[COMRAM] unsigned char 
  4148 ;;  b               1   20[COMRAM] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      enum E93
  4151 ;; Registers used:
  4152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4158 ;;      Params:         4       0       0       0       0       0       0       0       0
  4159 ;;      Locals:        15       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4161 ;;      Totals:        23       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:       23 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    1
  4165 ;; This function calls:
  4166 ;;		_chk_chr
  4167 ;;		_mem_set
  4168 ;; This function is called by:
  4169 ;;		_follow_path
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text10
  4174  003ED6                     __ptext10:
  4175                           	opt callstack 0
  4176  003ED6                     _create_name:
  4177                           	opt callstack 26
  4178                           
  4179                           ;ff.c: 1844:  DIRC* dp,;ff.c: 1845:  const TCHAR** path;ff.c: 1847: {;ff.c: 1969:  BYTE 
      +                          b, c, d, *sfn;;ff.c: 1970:  UINT ni, si, i;;ff.c: 1971:  const char *p;;ff.c: 1974:  for
      +                           (p = *path; *p == '/' || *p == '\\'; p++) ;
  4180                           
  4181                           ;incstack = 0
  4182  003ED6  C00B  FFD9         	movff	create_name@path,fsr2l
  4183  003EDA  C00C  FFDA         	movff	create_name@path+1,fsr2h
  4184  003EDE  CFDE F018          	movff	postinc2,create_name@p
  4185  003EE2  CFDD F019          	movff	postdec2,create_name@p+1
  4186  003EE6  D002               	goto	l5513
  4187  003EE8                     l5511:
  4188  003EE8  4A18               	infsnz	create_name@p,f,c
  4189  003EEA  2A19               	incf	create_name@p+1,f,c
  4190  003EEC                     l5513:
  4191  003EEC  C018  FFF6         	movff	create_name@p,tblptrl
  4192  003EF0  C019  FFF7         	movff	create_name@p+1,tblptrh
  4193  003EF4                     	if	0	;tblptru may be non-zero
  4194  003EF4                     	endif
  4195  003EF4                     	if	0	;tblptru may be non-zero
  4196  003EF4                     	endif
  4197  003EF4  0008               	tblrd		*
  4198  003EF6  50F5               	movf	tablat,w,c
  4199  003EF8  0A2F               	xorlw	47
  4200  003EFA  B4D8               	btfsc	status,2,c
  4201  003EFC  D7F5               	goto	l5511
  4202  003EFE  C018  FFF6         	movff	create_name@p,tblptrl
  4203  003F02  C019  FFF7         	movff	create_name@p+1,tblptrh
  4204  003F06                     	if	0	;tblptru may be non-zero
  4205  003F06                     	endif
  4206  003F06                     	if	0	;tblptru may be non-zero
  4207  003F06                     	endif
  4208  003F06  0008               	tblrd		*
  4209  003F08  50F5               	movf	tablat,w,c
  4210  003F0A  0A5C               	xorlw	92
  4211  003F0C  B4D8               	btfsc	status,2,c
  4212  003F0E  D7EC               	goto	l5511
  4213                           
  4214                           ;ff.c: 1975:  sfn = dp->fn;
  4215  003F10  EE20 F014          	lfsr	2,20
  4216  003F14  5009               	movf	create_name@dp,w,c
  4217  003F16  26D9               	addwf	fsr2l,f,c
  4218  003F18  500A               	movf	create_name@dp+1,w,c
  4219  003F1A  22DA               	addwfc	fsr2h,f,c
  4220  003F1C  CFDE F01B          	movff	postinc2,create_name@sfn
  4221  003F20  CFDD F01C          	movff	postdec2,create_name@sfn+1
  4222                           
  4223                           ;ff.c: 1976:  mem_set(sfn, ' ', 11);
  4224  003F24  C01B  F001         	movff	create_name@sfn,mem_set@dst
  4225  003F28  C01C  F002         	movff	create_name@sfn+1,mem_set@dst+1
  4226  003F2C  0E00               	movlw	0
  4227  003F2E  6E04               	movwf	mem_set@val+1,c
  4228  003F30  0E20               	movlw	32
  4229  003F32  6E03               	movwf	mem_set@val,c
  4230  003F34  0E00               	movlw	0
  4231  003F36  6E06               	movwf	mem_set@cnt+1,c
  4232  003F38  0E0B               	movlw	11
  4233  003F3A  6E05               	movwf	mem_set@cnt,c
  4234  003F3C  EC58  F02E         	call	_mem_set	;wreg free
  4235                           
  4236                           ;ff.c: 1977:  si = i = b = 0; ni = 8;
  4237  003F40  0E00               	movlw	0
  4238  003F42  6E15               	movwf	create_name@b,c
  4239  003F44  C015  F01D         	movff	create_name@b,create_name@i
  4240  003F48  6A1E               	clrf	create_name@i+1,c
  4241  003F4A  C01D  F013         	movff	create_name@i,create_name@si
  4242  003F4E  C01E  F014         	movff	create_name@i+1,create_name@si+1
  4243  003F52  0E00               	movlw	0
  4244  003F54  6E17               	movwf	create_name@ni+1,c
  4245  003F56  0E08               	movlw	8
  4246  003F58  6E16               	movwf	create_name@ni,c
  4247  003F5A                     l5525:
  4248                           
  4249                           ;ff.c: 1992:   c = (BYTE)p[si++];
  4250  003F5A  5013               	movf	create_name@si,w,c
  4251  003F5C  2418               	addwf	create_name@p,w,c
  4252  003F5E  6E0D               	movwf	??_create_name& (0+255),c
  4253  003F60  5014               	movf	create_name@si+1,w,c
  4254  003F62  2019               	addwfc	create_name@p+1,w,c
  4255  003F64  6E0E               	movwf	(??_create_name+1)& (0+255),c
  4256  003F66  C00D  FFF6         	movff	??_create_name,tblptrl
  4257  003F6A  C00E  FFF7         	movff	??_create_name+1,tblptrh
  4258  003F6E                     	if	0	;tblptru may be non-zero
  4259  003F6E                     	endif
  4260  003F6E                     	if	0	;tblptru may be non-zero
  4261  003F6E                     	endif
  4262  003F6E  0008               	tblrd		*
  4263  003F70  CFF5 F01F          	movff	tablat,create_name@c
  4264  003F74  4A13               	infsnz	create_name@si,f,c
  4265  003F76  2A14               	incf	create_name@si+1,f,c
  4266                           
  4267                           ;ff.c: 1993:   if (c <= ' ' || c == '/' || c == '\\') break;
  4268  003F78  0E20               	movlw	32
  4269  003F7A  641F               	cpfsgt	create_name@c,c
  4270  003F7C  D0A4               	goto	l5609
  4271  003F7E  0E2F               	movlw	47
  4272  003F80  181F               	xorwf	create_name@c,w,c
  4273  003F82  B4D8               	btfsc	status,2,c
  4274  003F84  D0A0               	goto	l5609
  4275  003F86  0E5C               	movlw	92
  4276  003F88  181F               	xorwf	create_name@c,w,c
  4277  003F8A  B4D8               	btfsc	status,2,c
  4278  003F8C  D09C               	goto	l5609
  4279                           
  4280                           ;ff.c: 1994:   if (c == '.' || i >= ni) {
  4281  003F8E  0E2E               	movlw	46
  4282  003F90  181F               	xorwf	create_name@c,w,c
  4283  003F92  B4D8               	btfsc	status,2,c
  4284  003F94  D006               	goto	u7150
  4285  003F96  5016               	movf	create_name@ni,w,c
  4286  003F98  5C1D               	subwf	create_name@i,w,c
  4287  003F9A  5017               	movf	create_name@ni+1,w,c
  4288  003F9C  581E               	subwfb	create_name@i+1,w,c
  4289  003F9E  A0D8               	btfss	status,0,c
  4290  003FA0  D018               	goto	l5551
  4291  003FA2                     u7150:
  4292                           
  4293                           ;ff.c: 1995:    if (ni != 8 || c != '.') return FR_INVALID_NAME;
  4294  003FA2  0E08               	movlw	8
  4295  003FA4  1816               	xorwf	create_name@ni,w,c
  4296  003FA6  1017               	iorwf	create_name@ni+1,w,c
  4297  003FA8  A4D8               	btfss	status,2,c
  4298  003FAA  D004               	goto	u7170
  4299  003FAC  0E2E               	movlw	46
  4300  003FAE  181F               	xorwf	create_name@c,w,c
  4301  003FB0  B4D8               	btfsc	status,2,c
  4302  003FB2  D002               	goto	l5547
  4303  003FB4                     u7170:
  4304  003FB4  0E06               	movlw	6
  4305  003FB6  0012               	return	
  4306  003FB8                     l5547:
  4307                           
  4308                           ;ff.c: 1996:    i = 8; ni = 11;
  4309  003FB8  0E00               	movlw	0
  4310  003FBA  6E1E               	movwf	create_name@i+1,c
  4311  003FBC  0E08               	movlw	8
  4312  003FBE  6E1D               	movwf	create_name@i,c
  4313  003FC0  0E00               	movlw	0
  4314  003FC2  6E17               	movwf	create_name@ni+1,c
  4315  003FC4  0E0B               	movlw	11
  4316  003FC6  6E16               	movwf	create_name@ni,c
  4317                           
  4318                           ;ff.c: 1997:    b <<= 2; continue;
  4319  003FC8  90D8               	bcf	status,0,c
  4320  003FCA  3615               	rlcf	create_name@b,f,c
  4321  003FCC  90D8               	bcf	status,0,c
  4322  003FCE  3615               	rlcf	create_name@b,f,c
  4323  003FD0  D7C4               	goto	l5525
  4324  003FD2                     l5551:
  4325                           
  4326                           ;ff.c: 1999:   if (c >= 0x80) {
  4327  003FD2  0E7F               	movlw	127
  4328  003FD4  641F               	cpfsgt	create_name@c,c
  4329  003FD6  D002               	goto	l432
  4330                           
  4331                           ;ff.c: 2000:    b |= 3;
  4332  003FD8  0E03               	movlw	3
  4333  003FDA  1215               	iorwf	create_name@b,f,c
  4334  003FDC                     l432:
  4335                           
  4336                           ;ff.c: 2009:   if ((((BYTE)(c) >= 0x81 && (BYTE)(c) <= 0x9F) || ((BYTE)(c) >= 0xE0 && (B
      +                          YTE)(c) <= 0xFC))) {
  4337  003FDC  0E80               	movlw	128
  4338  003FDE  641F               	cpfsgt	create_name@c,c
  4339  003FE0  D003               	goto	u7200
  4340  003FE2  0E9F               	movlw	159
  4341  003FE4  641F               	cpfsgt	create_name@c,c
  4342  003FE6  D006               	goto	u7220
  4343  003FE8                     u7200:
  4344  003FE8  0EDF               	movlw	223
  4345  003FEA  641F               	cpfsgt	create_name@c,c
  4346  003FEC  D043               	goto	l5585
  4347  003FEE  0EFD               	movlw	253
  4348  003FF0  601F               	cpfslt	create_name@c,c
  4349  003FF2  D040               	goto	l5585
  4350  003FF4                     u7220:
  4351                           
  4352                           ;ff.c: 2010:    d = (BYTE)p[si++];
  4353  003FF4  5013               	movf	create_name@si,w,c
  4354  003FF6  2418               	addwf	create_name@p,w,c
  4355  003FF8  6E0D               	movwf	??_create_name& (0+255),c
  4356  003FFA  5014               	movf	create_name@si+1,w,c
  4357  003FFC  2019               	addwfc	create_name@p+1,w,c
  4358  003FFE  6E0E               	movwf	(??_create_name+1)& (0+255),c
  4359  004000  C00D  FFF6         	movff	??_create_name,tblptrl
  4360  004004  C00E  FFF7         	movff	??_create_name+1,tblptrh
  4361  004008                     	if	0	;tblptru may be non-zero
  4362  004008                     	endif
  4363  004008                     	if	0	;tblptru may be non-zero
  4364  004008                     	endif
  4365  004008  0008               	tblrd		*
  4366  00400A  CFF5 F01A          	movff	tablat,create_name@d
  4367  00400E  4A13               	infsnz	create_name@si,f,c
  4368  004010  2A14               	incf	create_name@si+1,f,c
  4369                           
  4370                           ;ff.c: 2011:    if (!(((BYTE)(d) >= 0x40 && (BYTE)(d) <= 0x7E) || ((BYTE)(d) >= 0x80 && 
      +                          (BYTE)(d) <= 0xFC)) || i >= ni - 1)
  4371  004012  0E3F               	movlw	63
  4372  004014  641A               	cpfsgt	create_name@d,c
  4373  004016  D003               	goto	u7240
  4374  004018  0E7E               	movlw	126
  4375  00401A  641A               	cpfsgt	create_name@d,c
  4376  00401C  D006               	goto	u7260
  4377  00401E                     u7240:
  4378  00401E  0E7F               	movlw	127
  4379  004020  641A               	cpfsgt	create_name@d,c
  4380  004022  D7C8               	goto	u7170
  4381  004024  0EFD               	movlw	253
  4382  004026  601A               	cpfslt	create_name@d,c
  4383  004028  D7C5               	goto	u7170
  4384  00402A                     u7260:
  4385  00402A  0EFF               	movlw	255
  4386  00402C  6E0D               	movwf	??_create_name& (0+255),c
  4387  00402E  0EFF               	movlw	255
  4388  004030  6E0E               	movwf	(??_create_name+1)& (0+255),c
  4389  004032  C016  F00F         	movff	create_name@ni,??_create_name+2
  4390  004036  C017  F010         	movff	create_name@ni+1,??_create_name+3
  4391  00403A  500D               	movf	??_create_name,w,c
  4392  00403C  260F               	addwf	??_create_name+2,f,c
  4393  00403E  500E               	movf	??_create_name+1,w,c
  4394  004040  2210               	addwfc	??_create_name+3,f,c
  4395  004042  500F               	movf	??_create_name+2,w,c
  4396  004044  5C1D               	subwf	create_name@i,w,c
  4397  004046  5010               	movf	??_create_name+3,w,c
  4398  004048  581E               	subwfb	create_name@i+1,w,c
  4399  00404A  B0D8               	btfsc	status,0,c
  4400  00404C  D7B3               	goto	u7170
  4401                           
  4402                           ;ff.c: 2013:    sfn[i++] = c;
  4403  00404E  501D               	movf	create_name@i,w,c
  4404  004050  241B               	addwf	create_name@sfn,w,c
  4405  004052  6ED9               	movwf	fsr2l,c
  4406  004054  501E               	movf	create_name@i+1,w,c
  4407  004056  201C               	addwfc	create_name@sfn+1,w,c
  4408  004058  6EDA               	movwf	fsr2h,c
  4409  00405A  C01F  FFDF         	movff	create_name@c,indf2
  4410  00405E  4A1D               	infsnz	create_name@i,f,c
  4411  004060  2A1E               	incf	create_name@i+1,f,c
  4412                           
  4413                           ;ff.c: 2014:    sfn[i++] = d;
  4414  004062  501D               	movf	create_name@i,w,c
  4415  004064  241B               	addwf	create_name@sfn,w,c
  4416  004066  6ED9               	movwf	fsr2l,c
  4417  004068  501E               	movf	create_name@i+1,w,c
  4418  00406A  201C               	addwfc	create_name@sfn+1,w,c
  4419  00406C  6EDA               	movwf	fsr2h,c
  4420  00406E  C01A  FFDF         	movff	create_name@d,indf2
  4421  004072  D026               	goto	l5607
  4422  004074                     l5585:
  4423                           
  4424                           ;ff.c: 2016:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))
  4425  004074  0E01               	movlw	low STR_1
  4426  004076  6E01               	movwf	chk_chr@str,c
  4427  004078  0E08               	movlw	high STR_1
  4428  00407A  6E02               	movwf	chk_chr@str+1,c
  4429  00407C  C01F  F003         	movff	create_name@c,chk_chr@chr
  4430  004080  6A04               	clrf	chk_chr@chr+1,c
  4431  004082  ECD8  F02D         	call	_chk_chr	;wreg free
  4432  004086  5001               	movf	?_chk_chr,w,c
  4433  004088  1002               	iorwf	?_chk_chr+1,w,c
  4434  00408A  A4D8               	btfss	status,2,c
  4435  00408C  D793               	goto	u7170
  4436                           
  4437                           ;ff.c: 2018:    if ((((c)>='A')&&((c)<='Z'))) {
  4438  00408E  0E40               	movlw	64
  4439  004090  641F               	cpfsgt	create_name@c,c
  4440  004092  D005               	goto	l5597
  4441  004094  0E5B               	movlw	91
  4442  004096  601F               	cpfslt	create_name@c,c
  4443  004098  D002               	goto	l5597
  4444                           
  4445                           ;ff.c: 2019:     b |= 2;
  4446  00409A  8215               	bsf	create_name@b,1,c
  4447                           
  4448                           ;ff.c: 2020:    } else {
  4449  00409C  D009               	goto	l5605
  4450  00409E                     l5597:
  4451                           
  4452                           ;ff.c: 2021:     if ((((c)>='a')&&((c)<='z'))) {
  4453  00409E  0E60               	movlw	96
  4454  0040A0  641F               	cpfsgt	create_name@c,c
  4455  0040A2  D006               	goto	l5605
  4456  0040A4  0E7B               	movlw	123
  4457  0040A6  601F               	cpfslt	create_name@c,c
  4458  0040A8  D003               	goto	l5605
  4459                           
  4460                           ;ff.c: 2022:      b |= 1; c -= 0x20;
  4461  0040AA  8015               	bsf	create_name@b,0,c
  4462  0040AC  0E20               	movlw	32
  4463  0040AE  5E1F               	subwf	create_name@c,f,c
  4464  0040B0                     l5605:
  4465                           
  4466                           ;ff.c: 2025:    sfn[i++] = c;
  4467  0040B0  501D               	movf	create_name@i,w,c
  4468  0040B2  241B               	addwf	create_name@sfn,w,c
  4469  0040B4  6ED9               	movwf	fsr2l,c
  4470  0040B6  501E               	movf	create_name@i+1,w,c
  4471  0040B8  201C               	addwfc	create_name@sfn+1,w,c
  4472  0040BA  6EDA               	movwf	fsr2h,c
  4473  0040BC  C01F  FFDF         	movff	create_name@c,indf2
  4474  0040C0                     l5607:
  4475  0040C0  4A1D               	infsnz	create_name@i,f,c
  4476  0040C2  2A1E               	incf	create_name@i+1,f,c
  4477  0040C4  D74A               	goto	l5525
  4478  0040C6                     l5609:
  4479                           
  4480                           ;ff.c: 2028:  *path = &p[si];
  4481  0040C6  5013               	movf	create_name@si,w,c
  4482  0040C8  2418               	addwf	create_name@p,w,c
  4483  0040CA  6E0D               	movwf	??_create_name& (0+255),c
  4484  0040CC  5014               	movf	create_name@si+1,w,c
  4485  0040CE  2019               	addwfc	create_name@p+1,w,c
  4486  0040D0  6E0E               	movwf	(??_create_name+1)& (0+255),c
  4487  0040D2  C00B  FFD9         	movff	create_name@path,fsr2l
  4488  0040D6  C00C  FFDA         	movff	create_name@path+1,fsr2h
  4489  0040DA  C00D  FFDE         	movff	??_create_name,postinc2
  4490  0040DE  C00E  FFDD         	movff	??_create_name+1,postdec2
  4491                           
  4492                           ;ff.c: 2029:  c = (c <= ' ') ? 0x04 : 0;
  4493  0040E2  0E20               	movlw	32
  4494  0040E4  641F               	cpfsgt	create_name@c,c
  4495  0040E6  D004               	goto	l5615
  4496  0040E8  0E00               	movlw	0
  4497  0040EA  6E12               	movwf	_create_name$624+1,c
  4498  0040EC  0E00               	movlw	0
  4499  0040EE  D003               	goto	L5
  4500  0040F0                     l5615:
  4501  0040F0  0E00               	movlw	0
  4502  0040F2  6E12               	movwf	_create_name$624+1,c
  4503  0040F4  0E04               	movlw	4
  4504  0040F6                     L5:
  4505  0040F6  6E11               	movwf	_create_name$624,c
  4506  0040F8  C011  F01F         	movff	_create_name$624,create_name@c
  4507                           
  4508                           ;ff.c: 2031:  if (!i) return FR_INVALID_NAME;
  4509  0040FC  501D               	movf	create_name@i,w,c
  4510  0040FE  101E               	iorwf	create_name@i+1,w,c
  4511  004100  B4D8               	btfsc	status,2,c
  4512  004102  D758               	goto	u7170
  4513                           
  4514                           ;ff.c: 2032:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
  4515  004104  C01B  FFD9         	movff	create_name@sfn,fsr2l
  4516  004108  C01C  FFDA         	movff	create_name@sfn+1,fsr2h
  4517  00410C  0EE5               	movlw	229
  4518  00410E  18DE               	xorwf	postinc2,w,c
  4519  004110  A4D8               	btfss	status,2,c
  4520  004112  D006               	goto	l5629
  4521  004114  C01B  FFD9         	movff	create_name@sfn,fsr2l
  4522  004118  C01C  FFDA         	movff	create_name@sfn+1,fsr2h
  4523  00411C  0E05               	movlw	5
  4524  00411E  6EDF               	movwf	indf2,c
  4525  004120                     l5629:
  4526                           
  4527                           ;ff.c: 2034:  if (ni == 8) b <<= 2;
  4528  004120  0E08               	movlw	8
  4529  004122  1816               	xorwf	create_name@ni,w,c
  4530  004124  1017               	iorwf	create_name@ni+1,w,c
  4531  004126  A4D8               	btfss	status,2,c
  4532  004128  D004               	goto	l456
  4533  00412A  90D8               	bcf	status,0,c
  4534  00412C  3615               	rlcf	create_name@b,f,c
  4535  00412E  90D8               	bcf	status,0,c
  4536  004130  3615               	rlcf	create_name@b,f,c
  4537  004132                     l456:
  4538                           
  4539                           ;ff.c: 2035:  if ((b & 0x03) == 0x01) c |= 0x10;
  4540  004132  5015               	movf	create_name@b,w,c
  4541  004134  0B03               	andlw	3
  4542  004136  06E8               	decf	wreg,f,c
  4543  004138  B4D8               	btfsc	status,2,c
  4544  00413A  881F               	bsf	create_name@c,4,c
  4545                           
  4546                           ;ff.c: 2036:  if ((b & 0x0C) == 0x04) c |= 0x08;
  4547  00413C  5015               	movf	create_name@b,w,c
  4548  00413E  0B0C               	andlw	12
  4549  004140  0A04               	xorlw	4
  4550  004142  B4D8               	btfsc	status,2,c
  4551  004144  861F               	bsf	create_name@c,3,c
  4552                           
  4553                           ;ff.c: 2038:  sfn[11] = c;
  4554  004146  EE20 F00B          	lfsr	2,11
  4555  00414A  501B               	movf	create_name@sfn,w,c
  4556  00414C  26D9               	addwf	fsr2l,f,c
  4557  00414E  501C               	movf	create_name@sfn+1,w,c
  4558  004150  22DA               	addwfc	fsr2h,f,c
  4559  004152  C01F  FFDF         	movff	create_name@c,indf2
  4560                           
  4561                           ;ff.c: 2040:  return FR_OK;
  4562  004156  0E00               	movlw	0
  4563  004158  0012               	return		;funcret
  4564  00415A                     __end_of_create_name:
  4565                           	opt callstack 0
  4566                           
  4567 ;; *************** function _chk_chr *****************
  4568 ;; Defined at:
  4569 ;;		line 543 in file "ff.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  str             2    0[COMRAM] PTR const unsigned char 
  4572 ;;		 -> STR_2(15), 
  4573 ;;  chr             2    2[COMRAM] int 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  2    0[COMRAM] int 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4585 ;;      Params:         4       0       0       0       0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4587 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4588 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4589 ;;Total ram usage:        6 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_create_name
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text11
  4599  005BB0                     __ptext11:
  4600                           	opt callstack 0
  4601  005BB0                     _chk_chr:
  4602                           	opt callstack 26
  4603                           
  4604                           ;ff.c: 544:  while (*str && *str != chr) str++;
  4605                           
  4606                           ;incstack = 0
  4607  005BB0  D002               	goto	l5099
  4608  005BB2                     l5097:
  4609  005BB2  4A01               	infsnz	chk_chr@str,f,c
  4610  005BB4  2A02               	incf	chk_chr@str+1,f,c
  4611  005BB6                     l5099:
  4612  005BB6  C001  FFF6         	movff	chk_chr@str,tblptrl
  4613  005BBA  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  4614  005BBE                     	if	0	;tblptru may be non-zero
  4615  005BBE                     	endif
  4616  005BBE                     	if	0	;tblptru may be non-zero
  4617  005BBE                     	endif
  4618  005BBE  0008               	tblrd		*
  4619  005BC0  50F5               	movf	tablat,w,c
  4620  005BC2  0900               	iorlw	0
  4621  005BC4  B4D8               	btfsc	status,2,c
  4622  005BC6  D00F               	goto	u6370
  4623  005BC8  C001  FFF6         	movff	chk_chr@str,tblptrl
  4624  005BCC  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  4625  005BD0                     	if	0	;tblptru may be non-zero
  4626  005BD0                     	endif
  4627  005BD0                     	if	0	;tblptru may be non-zero
  4628  005BD0                     	endif
  4629  005BD0  0008               	tblrd		*
  4630  005BD2  50F5               	movf	tablat,w,c
  4631  005BD4  6E05               	movwf	??_chk_chr& (0+255),c
  4632  005BD6  6A06               	clrf	(??_chk_chr+1)& (0+255),c
  4633  005BD8  5003               	movf	chk_chr@chr,w,c
  4634  005BDA  1805               	xorwf	??_chk_chr,w,c
  4635  005BDC  E1EA               	bnz	l5097
  4636  005BDE  5004               	movf	chk_chr@chr+1,w,c
  4637  005BE0  1806               	xorwf	??_chk_chr+1,w,c
  4638  005BE2  A4D8               	btfss	status,2,c
  4639  005BE4  D7E6               	goto	l5097
  4640  005BE6                     u6370:
  4641                           
  4642                           ;ff.c: 545:  return *str;
  4643  005BE6  C001  FFF6         	movff	chk_chr@str,tblptrl
  4644  005BEA  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  4645  005BEE                     	if	0	;tblptru may be non-zero
  4646  005BEE                     	endif
  4647  005BEE                     	if	0	;tblptru may be non-zero
  4648  005BEE                     	endif
  4649  005BEE  0008               	tblrd		*
  4650  005BF0  50F5               	movf	tablat,w,c
  4651  005BF2  6E01               	movwf	?_chk_chr,c
  4652  005BF4  6A02               	clrf	?_chk_chr+1,c
  4653  005BF6  0012               	return		;funcret
  4654  005BF8                     __end_of_chk_chr:
  4655                           	opt callstack 0
  4656                           
  4657 ;; *************** function _dir_register *****************
  4658 ;; Defined at:
  4659 ;;		line 1578 in file "ff.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  dp              2   42[BANK0 ] PTR struct .
  4662 ;;		 -> f_open@dj(22), 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  res             1   44[BANK0 ] enum E93
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      enum E93
  4667 ;; Registers used:
  4668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4674 ;;      Params:         0       2       0       0       0       0       0       0       0
  4675 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4677 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4678 ;;Total ram usage:        3 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:   12
  4681 ;; This function calls:
  4682 ;;		_dir_alloc
  4683 ;;		_mem_cpy
  4684 ;;		_mem_set
  4685 ;;		_move_window
  4686 ;; This function is called by:
  4687 ;;		_f_open
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text12
  4692  005140                     __ptext12:
  4693                           	opt callstack 0
  4694  005140                     _dir_register:
  4695                           	opt callstack 16
  4696                           
  4697                           ;ff.c: 1579:  DIRC* dp;ff.c: 1581: {;ff.c: 1582:  FRESULT res;;ff.c: 1629:  res = dir_al
      +                          loc(dp, 1);
  4698                           
  4699                           ;incstack = 0
  4700  005140  C08A  F080         	movff	dir_register@dp,dir_alloc@dp
  4701  005144  C08B  F081         	movff	dir_register@dp+1,dir_alloc@dp+1
  4702  005148  0E00               	movlw	0
  4703  00514A  0100               	movlb	0	; () banked
  4704  00514C  6F83               	movwf	(dir_alloc@nent+1)& (0+255),b
  4705  00514E  0E01               	movlw	1
  4706  005150  6F82               	movwf	dir_alloc@nent& (0+255),b
  4707  005152  ECCD  F026         	call	_dir_alloc	;wreg free
  4708  005156  0100               	movlb	0	; () banked
  4709  005158  6F8C               	movwf	dir_register@res& (0+255),b
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;ff.c: 1632:  if (res == FR_OK) {
  4713  00515A  518C               	movf	dir_register@res& (0+255),w,b
  4714  00515C  A4D8               	btfss	status,2,c
  4715  00515E  D058               	goto	l5811
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;ff.c: 1633:   res = move_window(dp->fs, dp->sect);
  4719  005160  C08A  FFD9         	movff	dir_register@dp,fsr2l
  4720  005164  C08B  FFDA         	movff	dir_register@dp+1,fsr2h
  4721  005168  CFDE F030          	movff	postinc2,move_window@fs
  4722  00516C  CFDD F031          	movff	postdec2,move_window@fs+1
  4723  005170  EE20 F00E          	lfsr	2,14
  4724  005174  518A               	movf	dir_register@dp& (0+255),w,b
  4725  005176  26D9               	addwf	fsr2l,f,c
  4726  005178  518B               	movf	(dir_register@dp+1)& (0+255),w,b
  4727  00517A  22DA               	addwfc	fsr2h,f,c
  4728  00517C  CFDE F032          	movff	postinc2,move_window@sector
  4729  005180  CFDE F033          	movff	postinc2,move_window@sector+1
  4730  005184  CFDE F034          	movff	postinc2,move_window@sector+2
  4731  005188  CFDE F035          	movff	postinc2,move_window@sector+3
  4732  00518C  EC49  F02B         	call	_move_window	;wreg free
  4733  005190  0100               	movlb	0	; () banked
  4734  005192  6F8C               	movwf	dir_register@res& (0+255),b
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;ff.c: 1634:   if (res == FR_OK) {
  4738  005194  518C               	movf	dir_register@res& (0+255),w,b
  4739  005196  A4D8               	btfss	status,2,c
  4740  005198  D03B               	goto	l5811
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;ff.c: 1635:    mem_set(dp->dir, 0, 32);
  4744  00519A  EE20 F012          	lfsr	2,18
  4745  00519E  518A               	movf	dir_register@dp& (0+255),w,b
  4746  0051A0  26D9               	addwf	fsr2l,f,c
  4747  0051A2  518B               	movf	(dir_register@dp+1)& (0+255),w,b
  4748  0051A4  22DA               	addwfc	fsr2h,f,c
  4749  0051A6  CFDE F001          	movff	postinc2,mem_set@dst
  4750  0051AA  CFDD F002          	movff	postdec2,mem_set@dst+1
  4751  0051AE  0E00               	movlw	0
  4752  0051B0  6E04               	movwf	mem_set@val+1,c
  4753  0051B2  0E00               	movlw	0
  4754  0051B4  6E03               	movwf	mem_set@val,c
  4755  0051B6  0E00               	movlw	0
  4756  0051B8  6E06               	movwf	mem_set@cnt+1,c
  4757  0051BA  0E20               	movlw	32
  4758  0051BC  6E05               	movwf	mem_set@cnt,c
  4759  0051BE  EC58  F02E         	call	_mem_set	;wreg free
  4760                           
  4761                           ;ff.c: 1636:    mem_cpy(dp->dir, dp->fn, 11);
  4762  0051C2  0100               	movlb	0	; () banked
  4763  0051C4  EE20 F012          	lfsr	2,18
  4764  0051C8  518A               	movf	dir_register@dp& (0+255),w,b
  4765  0051CA  26D9               	addwf	fsr2l,f,c
  4766  0051CC  518B               	movf	(dir_register@dp+1)& (0+255),w,b
  4767  0051CE  22DA               	addwfc	fsr2h,f,c
  4768  0051D0  CFDE F001          	movff	postinc2,mem_cpy@dst
  4769  0051D4  CFDD F002          	movff	postdec2,mem_cpy@dst+1
  4770  0051D8  EE20 F014          	lfsr	2,20
  4771  0051DC  518A               	movf	dir_register@dp& (0+255),w,b
  4772  0051DE  26D9               	addwf	fsr2l,f,c
  4773  0051E0  518B               	movf	(dir_register@dp+1)& (0+255),w,b
  4774  0051E2  22DA               	addwfc	fsr2h,f,c
  4775  0051E4  CFDE F003          	movff	postinc2,mem_cpy@src
  4776  0051E8  CFDD F004          	movff	postdec2,mem_cpy@src+1
  4777  0051EC  0E00               	movlw	0
  4778  0051EE  6E06               	movwf	mem_cpy@cnt+1,c
  4779  0051F0  0E0B               	movlw	11
  4780  0051F2  6E05               	movwf	mem_cpy@cnt,c
  4781  0051F4  ECA7  F02C         	call	_mem_cpy	;wreg free
  4782                           
  4783                           ;ff.c: 1640:    dp->fs->wflag = 1;
  4784  0051F8  C08A  FFD9         	movff	dir_register@dp,fsr2l
  4785  0051FC  C08B  FFDA         	movff	dir_register@dp+1,fsr2h
  4786  005200  EE10 F004          	lfsr	1,4
  4787  005204  50DE               	movf	postinc2,w,c
  4788  005206  26E1               	addwf	fsr1l,f,c
  4789  005208  50DD               	movf	postdec2,w,c
  4790  00520A  22E2               	addwfc	fsr1h,f,c
  4791  00520C  0E01               	movlw	1
  4792  00520E  6EE7               	movwf	indf1,c
  4793  005210                     l5811:
  4794                           
  4795                           ;ff.c: 1644:  return res;
  4796  005210  0100               	movlb	0	; () banked
  4797  005212  518C               	movf	dir_register@res& (0+255),w,b
  4798                           
  4799                           ; BSR set to: 0
  4800  005214  0012               	return		;funcret
  4801  005216                     __end_of_dir_register:
  4802                           	opt callstack 0
  4803                           
  4804 ;; *************** function _mem_cpy *****************
  4805 ;; Defined at:
  4806 ;;		line 507 in file "ff.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  dst             2    0[COMRAM] PTR void 
  4809 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
  4810 ;;  src             2    2[COMRAM] PTR const void 
  4811 ;;		 -> FatFs(558), RAM(2047), f_open@sfn(12), NULL(0), 
  4812 ;;  cnt             2    4[COMRAM] unsigned short 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4815 ;;		 -> FatFs(558), RAM(2047), f_open@sfn(12), NULL(0), 
  4816 ;;  d               2    6[COMRAM] PTR unsigned char 
  4817 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4827 ;;      Params:         6       0       0       0       0       0       0       0       0
  4828 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4830 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4831 ;;Total ram usage:       10 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_dir_register
  4837 ;;		_f_write
  4838 ;;		_f_read
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text13
  4843  00594E                     __ptext13:
  4844                           	opt callstack 0
  4845  00594E                     _mem_cpy:
  4846                           	opt callstack 28
  4847                           
  4848                           ;ff.c: 508:  BYTE *d = (BYTE*)dst;
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;incstack = 0
  4852  00594E  C001  F007         	movff	mem_cpy@dst,mem_cpy@d
  4853  005952  C002  F008         	movff	mem_cpy@dst+1,mem_cpy@d+1
  4854                           
  4855                           ;ff.c: 509:  const BYTE *s = (const BYTE*)src;
  4856  005956  C003  F009         	movff	mem_cpy@src,mem_cpy@s
  4857  00595A  C004  F00A         	movff	mem_cpy@src+1,mem_cpy@s+1
  4858                           
  4859                           ;ff.c: 512:  while (cnt >= sizeof (int)) {
  4860  00595E  D018               	goto	l5391
  4861  005960                     l5383:
  4862                           
  4863                           ;ff.c: 513:   *(int*)d = *(int*)s;
  4864  005960  C009  FFD9         	movff	mem_cpy@s,fsr2l
  4865  005964  C00A  FFDA         	movff	mem_cpy@s+1,fsr2h
  4866  005968  C007  FFE1         	movff	mem_cpy@d,fsr1l
  4867  00596C  C008  FFE2         	movff	mem_cpy@d+1,fsr1h
  4868  005970  CFDE FFE6          	movff	postinc2,postinc1
  4869  005974  CFDD FFE5          	movff	postdec2,postdec1
  4870                           
  4871                           ;ff.c: 514:   d += sizeof (int); s += sizeof (int);
  4872  005978  0E02               	movlw	2
  4873  00597A  2607               	addwf	mem_cpy@d,f,c
  4874  00597C  0E00               	movlw	0
  4875  00597E  2208               	addwfc	mem_cpy@d+1,f,c
  4876  005980  0E02               	movlw	2
  4877  005982  2609               	addwf	mem_cpy@s,f,c
  4878  005984  0E00               	movlw	0
  4879  005986  220A               	addwfc	mem_cpy@s+1,f,c
  4880                           
  4881                           ;ff.c: 515:   cnt -= sizeof (int);
  4882  005988  0E02               	movlw	2
  4883  00598A  5E05               	subwf	mem_cpy@cnt,f,c
  4884  00598C  0E00               	movlw	0
  4885  00598E  5A06               	subwfb	mem_cpy@cnt+1,f,c
  4886  005990                     l5391:
  4887                           
  4888                           ;ff.c: 512:  while (cnt >= sizeof (int)) {
  4889  005990  5006               	movf	mem_cpy@cnt+1,w,c
  4890  005992  E1E6               	bnz	l5383
  4891  005994  0E02               	movlw	2
  4892  005996  5C05               	subwf	mem_cpy@cnt,w,c
  4893  005998  A0D8               	btfss	status,0,c
  4894  00599A  D00F               	goto	l5399
  4895  00599C  D7E1               	goto	l5383
  4896  00599E                     l5393:
  4897                           
  4898                           ;ff.c: 519:   *d++ = *s++;
  4899  00599E  C009  FFD9         	movff	mem_cpy@s,fsr2l
  4900  0059A2  C00A  FFDA         	movff	mem_cpy@s+1,fsr2h
  4901  0059A6  C007  FFE1         	movff	mem_cpy@d,fsr1l
  4902  0059AA  C008  FFE2         	movff	mem_cpy@d+1,fsr1h
  4903  0059AE  CFDF FFE7          	movff	indf2,indf1
  4904  0059B2  4A09               	infsnz	mem_cpy@s,f,c
  4905  0059B4  2A0A               	incf	mem_cpy@s+1,f,c
  4906  0059B6  4A07               	infsnz	mem_cpy@d,f,c
  4907  0059B8  2A08               	incf	mem_cpy@d+1,f,c
  4908  0059BA                     l5399:
  4909                           
  4910                           ;ff.c: 518:  while (cnt--)
  4911  0059BA  0605               	decf	mem_cpy@cnt,f,c
  4912  0059BC  A0D8               	btfss	status,0,c
  4913  0059BE  0606               	decf	mem_cpy@cnt+1,f,c
  4914  0059C0  2805               	incf	mem_cpy@cnt,w,c
  4915  0059C2  E1ED               	bnz	l5393
  4916  0059C4  2806               	incf	mem_cpy@cnt+1,w,c
  4917  0059C6  B4D8               	btfsc	status,2,c
  4918  0059C8  0012               	return	
  4919  0059CA  D7E9               	goto	l5393
  4920  0059CC                     __end_of_mem_cpy:
  4921                           	opt callstack 0
  4922                           
  4923 ;; *************** function _dir_alloc *****************
  4924 ;; Defined at:
  4925 ;;		line 1199 in file "ff.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  dp              2   32[BANK0 ] PTR struct .
  4928 ;;		 -> f_open@dj(22), 
  4929 ;;  nent            2   34[BANK0 ] unsigned short 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  n               2   39[BANK0 ] unsigned short 
  4932 ;;  res             1   41[BANK0 ] enum E93
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      enum E93
  4935 ;; Registers used:
  4936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4942 ;;      Params:         0       4       0       0       0       0       0       0       0
  4943 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4944 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4945 ;;      Totals:         0      10       0       0       0       0       0       0       0
  4946 ;;Total ram usage:       10 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:   11
  4949 ;; This function calls:
  4950 ;;		_dir_next
  4951 ;;		_dir_sdi
  4952 ;;		_move_window
  4953 ;; This function is called by:
  4954 ;;		_dir_register
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text14
  4959  004D9A                     __ptext14:
  4960                           	opt callstack 0
  4961  004D9A                     _dir_alloc:
  4962                           	opt callstack 16
  4963                           
  4964                           ;ff.c: 1200:  DIRC* dp,;ff.c: 1201:  UINT nent;ff.c: 1203: {;ff.c: 1204:  FRESULT res;;f
      +                          f.c: 1205:  UINT n;;ff.c: 1208:  res = dir_sdi(dp, 0);
  4965                           
  4966                           ;incstack = 0
  4967  004D9A  C080  F056         	movff	dir_alloc@dp,dir_sdi@dp
  4968  004D9E  C081  F057         	movff	dir_alloc@dp+1,dir_sdi@dp+1
  4969  004DA2  0E00               	movlw	0
  4970  004DA4  6E59               	movwf	dir_sdi@idx+1,c
  4971  004DA6  0E00               	movlw	0
  4972  004DA8  6E58               	movwf	dir_sdi@idx,c
  4973  004DAA  ECC6  F01C         	call	_dir_sdi	;wreg free
  4974  004DAE  0100               	movlb	0	; () banked
  4975  004DB0  6F89               	movwf	dir_alloc@res& (0+255),b
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;ff.c: 1209:  if (res == FR_OK) {
  4979  004DB2  5189               	movf	dir_alloc@res& (0+255),w,b
  4980  004DB4  A4D8               	btfss	status,2,c
  4981  004DB6  D061               	goto	u7000
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;ff.c: 1210:   n = 0;
  4985  004DB8  0E00               	movlw	0
  4986  004DBA  6F88               	movwf	(dir_alloc@n+1)& (0+255),b
  4987  004DBC  0E00               	movlw	0
  4988  004DBE  6F87               	movwf	dir_alloc@n& (0+255),b
  4989  004DC0                     l5437:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;ff.c: 1212:    res = move_window(dp->fs, dp->sect);
  4993  004DC0  C080  FFD9         	movff	dir_alloc@dp,fsr2l
  4994  004DC4  C081  FFDA         	movff	dir_alloc@dp+1,fsr2h
  4995  004DC8  CFDE F030          	movff	postinc2,move_window@fs
  4996  004DCC  CFDD F031          	movff	postdec2,move_window@fs+1
  4997  004DD0  EE20 F00E          	lfsr	2,14
  4998  004DD4  5180               	movf	dir_alloc@dp& (0+255),w,b
  4999  004DD6  26D9               	addwf	fsr2l,f,c
  5000  004DD8  5181               	movf	(dir_alloc@dp+1)& (0+255),w,b
  5001  004DDA  22DA               	addwfc	fsr2h,f,c
  5002  004DDC  CFDE F032          	movff	postinc2,move_window@sector
  5003  004DE0  CFDE F033          	movff	postinc2,move_window@sector+1
  5004  004DE4  CFDE F034          	movff	postinc2,move_window@sector+2
  5005  004DE8  CFDE F035          	movff	postinc2,move_window@sector+3
  5006  004DEC  EC49  F02B         	call	_move_window	;wreg free
  5007  004DF0  0100               	movlb	0	; () banked
  5008  004DF2  6F89               	movwf	dir_alloc@res& (0+255),b
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;ff.c: 1213:    if (res != FR_OK) break;
  5012  004DF4  5189               	movf	dir_alloc@res& (0+255),w,b
  5013  004DF6  A4D8               	btfss	status,2,c
  5014  004DF8  D040               	goto	u7000
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;ff.c: 1214:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  5018  004DFA  EE20 F012          	lfsr	2,18
  5019  004DFE  5180               	movf	dir_alloc@dp& (0+255),w,b
  5020  004E00  26D9               	addwf	fsr2l,f,c
  5021  004E02  5181               	movf	(dir_alloc@dp+1)& (0+255),w,b
  5022  004E04  22DA               	addwfc	fsr2h,f,c
  5023  004E06  CFDE F084          	movff	postinc2,??_dir_alloc
  5024  004E0A  CFDD F085          	movff	postdec2,??_dir_alloc+1
  5025  004E0E  C084  FFD9         	movff	??_dir_alloc,fsr2l
  5026  004E12  C085  FFDA         	movff	??_dir_alloc+1,fsr2h
  5027  004E16  0EE5               	movlw	229
  5028  004E18  18DE               	xorwf	postinc2,w,c
  5029  004E1A  B4D8               	btfsc	status,2,c
  5030  004E1C  D011               	goto	u6980
  5031                           
  5032                           ; BSR set to: 0
  5033  004E1E  EE20 F012          	lfsr	2,18
  5034  004E22  5180               	movf	dir_alloc@dp& (0+255),w,b
  5035  004E24  26D9               	addwf	fsr2l,f,c
  5036  004E26  5181               	movf	(dir_alloc@dp+1)& (0+255),w,b
  5037  004E28  22DA               	addwfc	fsr2h,f,c
  5038  004E2A  CFDE F084          	movff	postinc2,??_dir_alloc
  5039  004E2E  CFDD F085          	movff	postdec2,??_dir_alloc+1
  5040  004E32  C084  FFD9         	movff	??_dir_alloc,fsr2l
  5041  004E36  C085  FFDA         	movff	??_dir_alloc+1,fsr2h
  5042  004E3A  50DF               	movf	indf2,w,c
  5043  004E3C  A4D8               	btfss	status,2,c
  5044  004E3E  D00A               	goto	l5451
  5045  004E40                     u6980:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;ff.c: 1215:     if (++n == nent) break;
  5049  004E40  4B87               	infsnz	dir_alloc@n& (0+255),f,b
  5050  004E42  2B88               	incf	(dir_alloc@n+1)& (0+255),f,b
  5051  004E44  5182               	movf	dir_alloc@nent& (0+255),w,b
  5052  004E46  1987               	xorwf	dir_alloc@n& (0+255),w,b
  5053  004E48  E109               	bnz	l5453
  5054  004E4A  5183               	movf	(dir_alloc@nent+1)& (0+255),w,b
  5055  004E4C  1988               	xorwf	(dir_alloc@n+1)& (0+255),w,b
  5056  004E4E  B4D8               	btfsc	status,2,c
  5057  004E50  D014               	goto	u7000
  5058  004E52  D004               	goto	l5453
  5059  004E54                     l5451:
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;ff.c: 1217:     n = 0;
  5063  004E54  0E00               	movlw	0
  5064  004E56  6F88               	movwf	(dir_alloc@n+1)& (0+255),b
  5065  004E58  0E00               	movlw	0
  5066  004E5A  6F87               	movwf	dir_alloc@n& (0+255),b
  5067  004E5C                     l5453:
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;ff.c: 1219:    res = dir_next(dp, 1);
  5071  004E5C  C080  F06D         	movff	dir_alloc@dp,dir_next@dp
  5072  004E60  C081  F06E         	movff	dir_alloc@dp+1,dir_next@dp+1
  5073  004E64  0E00               	movlw	0
  5074  004E66  6F70               	movwf	(dir_next@stretch+1)& (0+255),b
  5075  004E68  0E01               	movlw	1
  5076  004E6A  6F6F               	movwf	dir_next@stretch& (0+255),b
  5077  004E6C  EC01  F014         	call	_dir_next	;wreg free
  5078  004E70  0100               	movlb	0	; () banked
  5079  004E72  6F89               	movwf	dir_alloc@res& (0+255),b
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;ff.c: 1220:   } while (res == FR_OK);
  5083  004E74  5189               	movf	dir_alloc@res& (0+255),w,b
  5084  004E76  B4D8               	btfsc	status,2,c
  5085  004E78  D7A3               	goto	l5437
  5086  004E7A                     u7000:
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;ff.c: 1222:  if (res == FR_NO_FILE) res = FR_DENIED;
  5090  004E7A  0E04               	movlw	4
  5091  004E7C  1989               	xorwf	dir_alloc@res& (0+255),w,b
  5092  004E7E  A4D8               	btfss	status,2,c
  5093  004E80  D002               	goto	l391
  5094                           
  5095                           ; BSR set to: 0
  5096  004E82  0E07               	movlw	7
  5097  004E84  6F89               	movwf	dir_alloc@res& (0+255),b
  5098  004E86                     l391:
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;ff.c: 1223:  return res;
  5102  004E86  5189               	movf	dir_alloc@res& (0+255),w,b
  5103                           
  5104                           ; BSR set to: 0
  5105  004E88  0012               	return		;funcret
  5106  004E8A                     __end_of_dir_alloc:
  5107                           	opt callstack 0
  5108                           
  5109 ;; *************** function _dir_sdi *****************
  5110 ;; Defined at:
  5111 ;;		line 1080 in file "ff.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  dp              2   85[COMRAM] PTR struct .
  5114 ;;		 -> f_open@dj(22), 
  5115 ;;  idx             2   87[COMRAM] unsigned short 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  clst            4   13[BANK0 ] unsigned long 
  5118 ;;  sect            4    9[BANK0 ] unsigned long 
  5119 ;;  ic              2    7[BANK0 ] unsigned short 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      enum E93
  5122 ;; Registers used:
  5123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5129 ;;      Params:         4       0       0       0       0       0       0       0       0
  5130 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5131 ;;      Temps:          0       7       0       0       0       0       0       0       0
  5132 ;;      Totals:         4      17       0       0       0       0       0       0       0
  5133 ;;Total ram usage:       21 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    9
  5136 ;; This function calls:
  5137 ;;		_clust2sect
  5138 ;;		_get_fat
  5139 ;; This function is called by:
  5140 ;;		_dir_alloc
  5141 ;;		_dir_find
  5142 ;;		_follow_path
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text15
  5147  00398C                     __ptext15:
  5148                           	opt callstack 0
  5149  00398C                     _dir_sdi:
  5150                           	opt callstack 18
  5151                           
  5152                           ;ff.c: 1081:  DIRC* dp,;ff.c: 1082:  UINT idx;ff.c: 1084: {;ff.c: 1085:  DWORD clst, sec
      +                          t;;ff.c: 1086:  UINT ic;;ff.c: 1089:  dp->index = (WORD)idx;
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;incstack = 0
  5156  00398C  EE20 F004          	lfsr	2,4
  5157  003990  5056               	movf	dir_sdi@dp,w,c
  5158  003992  26D9               	addwf	fsr2l,f,c
  5159  003994  5057               	movf	dir_sdi@dp+1,w,c
  5160  003996  22DA               	addwfc	fsr2h,f,c
  5161  003998  C058  FFDE         	movff	dir_sdi@idx,postinc2
  5162  00399C  C059  FFDD         	movff	dir_sdi@idx+1,postdec2
  5163                           
  5164                           ;ff.c: 1090:  clst = dp->sclust;
  5165  0039A0  EE20 F006          	lfsr	2,6
  5166  0039A4  5056               	movf	dir_sdi@dp,w,c
  5167  0039A6  26D9               	addwf	fsr2l,f,c
  5168  0039A8  5057               	movf	dir_sdi@dp+1,w,c
  5169  0039AA  22DA               	addwfc	fsr2h,f,c
  5170  0039AC  CFDE F06D          	movff	postinc2,dir_sdi@clst
  5171  0039B0  CFDE F06E          	movff	postinc2,dir_sdi@clst+1
  5172  0039B4  CFDE F06F          	movff	postinc2,dir_sdi@clst+2
  5173  0039B8  CFDE F070          	movff	postinc2,dir_sdi@clst+3
  5174                           
  5175                           ;ff.c: 1091:  if (clst == 1 || clst >= dp->fs->n_fatent)
  5176  0039BC  0100               	movlb	0	; () banked
  5177  0039BE  056D               	decf	dir_sdi@clst& (0+255),w,b
  5178  0039C0  116E               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  5179  0039C2  116F               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  5180  0039C4  1170               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  5181  0039C6  B4D8               	btfsc	status,2,c
  5182  0039C8  D014               	goto	u6390
  5183                           
  5184                           ; BSR set to: 0
  5185  0039CA  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5186  0039CE  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5187  0039D2  EE10 F012          	lfsr	1,18
  5188  0039D6  50DE               	movf	postinc2,w,c
  5189  0039D8  26E1               	addwf	fsr1l,f,c
  5190  0039DA  50DD               	movf	postdec2,w,c
  5191  0039DC  22E2               	addwfc	fsr1h,f,c
  5192  0039DE  50E6               	movf	postinc1,w,c
  5193  0039E0  5D6D               	subwf	dir_sdi@clst& (0+255),w,b
  5194  0039E2  50E6               	movf	postinc1,w,c
  5195  0039E4  596E               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  5196  0039E6  50E6               	movf	postinc1,w,c
  5197  0039E8  596F               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  5198  0039EA  50E6               	movf	postinc1,w,c
  5199  0039EC  5970               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  5200  0039EE  A0D8               	btfss	status,0,c
  5201  0039F0  D002               	goto	l5117
  5202  0039F2                     u6390:
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;ff.c: 1092:   return FR_INT_ERR;
  5206  0039F2  0E02               	movlw	2
  5207  0039F4  0012               	return	
  5208  0039F6                     l5117:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;ff.c: 1093:  if (!clst && dp->fs->fs_type == 3)
  5212  0039F6  516D               	movf	dir_sdi@clst& (0+255),w,b
  5213  0039F8  116E               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  5214  0039FA  116F               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  5215  0039FC  1170               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  5216  0039FE  A4D8               	btfss	status,2,c
  5217  003A00  D022               	goto	l5123
  5218                           
  5219                           ; BSR set to: 0
  5220  003A02  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5221  003A06  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5222  003A0A  CFDE F060          	movff	postinc2,??_dir_sdi
  5223  003A0E  CFDD F061          	movff	postdec2,??_dir_sdi+1
  5224  003A12  C060  FFD9         	movff	??_dir_sdi,fsr2l
  5225  003A16  C061  FFDA         	movff	??_dir_sdi+1,fsr2h
  5226  003A1A  0E03               	movlw	3
  5227  003A1C  18DE               	xorwf	postinc2,w,c
  5228  003A1E  A4D8               	btfss	status,2,c
  5229  003A20  D012               	goto	l5123
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;ff.c: 1094:   clst = dp->fs->dirbase;
  5233  003A22  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5234  003A26  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5235  003A2A  EE10 F022          	lfsr	1,34
  5236  003A2E  50DE               	movf	postinc2,w,c
  5237  003A30  26E1               	addwf	fsr1l,f,c
  5238  003A32  50DD               	movf	postdec2,w,c
  5239  003A34  22E2               	addwfc	fsr1h,f,c
  5240  003A36  CFE6 F06D          	movff	postinc1,dir_sdi@clst
  5241  003A3A  CFE6 F06E          	movff	postinc1,dir_sdi@clst+1
  5242  003A3E  CFE6 F06F          	movff	postinc1,dir_sdi@clst+2
  5243  003A42  CFE6 F070          	movff	postinc1,dir_sdi@clst+3
  5244  003A46                     l5123:
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;ff.c: 1096:  if (clst == 0) {
  5248  003A46  516D               	movf	dir_sdi@clst& (0+255),w,b
  5249  003A48  116E               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  5250  003A4A  116F               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  5251  003A4C  1170               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  5252  003A4E  A4D8               	btfss	status,2,c
  5253  003A50  D023               	goto	l5133
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;ff.c: 1097:   if (idx >= dp->fs->n_rootdir)
  5257  003A52  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5258  003A56  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5259  003A5A  EE10 F008          	lfsr	1,8
  5260  003A5E  50DE               	movf	postinc2,w,c
  5261  003A60  26E1               	addwf	fsr1l,f,c
  5262  003A62  50DD               	movf	postdec2,w,c
  5263  003A64  22E2               	addwfc	fsr1h,f,c
  5264  003A66  50E6               	movf	postinc1,w,c
  5265  003A68  5C58               	subwf	dir_sdi@idx,w,c
  5266  003A6A  50E6               	movf	postinc1,w,c
  5267  003A6C  5859               	subwfb	dir_sdi@idx+1,w,c
  5268  003A6E  B0D8               	btfsc	status,0,c
  5269  003A70  D7C0               	goto	u6390
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;ff.c: 1099:   sect = dp->fs->dirbase;
  5273  003A72  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5274  003A76  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5275  003A7A  EE10 F022          	lfsr	1,34
  5276  003A7E  50DE               	movf	postinc2,w,c
  5277  003A80  26E1               	addwf	fsr1l,f,c
  5278  003A82  50DD               	movf	postdec2,w,c
  5279  003A84  22E2               	addwfc	fsr1h,f,c
  5280  003A86  CFE6 F069          	movff	postinc1,dir_sdi@sect
  5281  003A8A  CFE6 F06A          	movff	postinc1,dir_sdi@sect+1
  5282  003A8E  CFE6 F06B          	movff	postinc1,dir_sdi@sect+2
  5283  003A92  CFE6 F06C          	movff	postinc1,dir_sdi@sect+3
  5284                           
  5285                           ;ff.c: 1100:  }
  5286  003A96  D079               	goto	l5155
  5287  003A98                     l5133:
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;ff.c: 1102:   ic = ((UINT)512) / 32 * dp->fs->csize;
  5291  003A98  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5292  003A9C  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5293  003AA0  EE10 F002          	lfsr	1,2
  5294  003AA4  50DE               	movf	postinc2,w,c
  5295  003AA6  26E1               	addwf	fsr1l,f,c
  5296  003AA8  50DD               	movf	postdec2,w,c
  5297  003AAA  22E2               	addwfc	fsr1h,f,c
  5298  003AAC  50E7               	movf	indf1,w,c
  5299  003AAE  6F60               	movwf	??_dir_sdi& (0+255),b
  5300  003AB0  5160               	movf	??_dir_sdi& (0+255),w,b
  5301  003AB2  0D10               	mullw	16
  5302  003AB4  CFF3 F067          	movff	prodl,dir_sdi@ic
  5303  003AB8  CFF4 F068          	movff	prodh,dir_sdi@ic+1
  5304                           
  5305                           ;ff.c: 1103:   while (idx >= ic) {
  5306  003ABC  D046               	goto	l349
  5307  003ABE                     l5135:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;ff.c: 1104:    clst = get_fat(dp->fs, clst);
  5311  003ABE  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5312  003AC2  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5313  003AC6  CFDE F03B          	movff	postinc2,get_fat@fs
  5314  003ACA  CFDD F03C          	movff	postdec2,get_fat@fs+1
  5315  003ACE  C06D  F03D         	movff	dir_sdi@clst,get_fat@clst
  5316  003AD2  C06E  F03E         	movff	dir_sdi@clst+1,get_fat@clst+1
  5317  003AD6  C06F  F03F         	movff	dir_sdi@clst+2,get_fat@clst+2
  5318  003ADA  C070  F040         	movff	dir_sdi@clst+3,get_fat@clst+3
  5319  003ADE  EC04  F016         	call	_get_fat	;wreg free
  5320  003AE2  C03B  F06D         	movff	?_get_fat,dir_sdi@clst
  5321  003AE6  C03C  F06E         	movff	?_get_fat+1,dir_sdi@clst+1
  5322  003AEA  C03D  F06F         	movff	?_get_fat+2,dir_sdi@clst+2
  5323  003AEE  C03E  F070         	movff	?_get_fat+3,dir_sdi@clst+3
  5324                           
  5325                           ;ff.c: 1105:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  5326  003AF2  0100               	movlb	0	; () banked
  5327  003AF4  296D               	incf	dir_sdi@clst& (0+255),w,b
  5328  003AF6  E109               	bnz	l5143
  5329  003AF8  296E               	incf	(dir_sdi@clst+1)& (0+255),w,b
  5330  003AFA  E107               	bnz	l5143
  5331  003AFC  296F               	incf	(dir_sdi@clst+2)& (0+255),w,b
  5332  003AFE  E105               	bnz	l5143
  5333  003B00  2970               	incf	(dir_sdi@clst+3)& (0+255),w,b
  5334  003B02  A4D8               	btfss	status,2,c
  5335  003B04  D002               	goto	l5143
  5336                           
  5337                           ; BSR set to: 0
  5338  003B06  0E01               	movlw	1
  5339  003B08  0012               	return	
  5340  003B0A                     l5143:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;ff.c: 1106:    if (clst < 2 || clst >= dp->fs->n_fatent)
  5344  003B0A  5170               	movf	(dir_sdi@clst+3)& (0+255),w,b
  5345  003B0C  116F               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  5346  003B0E  116E               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  5347  003B10  E104               	bnz	u6450
  5348  003B12  0E02               	movlw	2
  5349  003B14  5D6D               	subwf	dir_sdi@clst& (0+255),w,b
  5350  003B16  A0D8               	btfss	status,0,c
  5351  003B18  D76C               	goto	u6390
  5352  003B1A                     u6450:
  5353                           
  5354                           ; BSR set to: 0
  5355  003B1A  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5356  003B1E  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5357  003B22  EE10 F012          	lfsr	1,18
  5358  003B26  50DE               	movf	postinc2,w,c
  5359  003B28  26E1               	addwf	fsr1l,f,c
  5360  003B2A  50DD               	movf	postdec2,w,c
  5361  003B2C  22E2               	addwfc	fsr1h,f,c
  5362  003B2E  50E6               	movf	postinc1,w,c
  5363  003B30  5D6D               	subwf	dir_sdi@clst& (0+255),w,b
  5364  003B32  50E6               	movf	postinc1,w,c
  5365  003B34  596E               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  5366  003B36  50E6               	movf	postinc1,w,c
  5367  003B38  596F               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  5368  003B3A  50E6               	movf	postinc1,w,c
  5369  003B3C  5970               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  5370  003B3E  B0D8               	btfsc	status,0,c
  5371  003B40  D758               	goto	u6390
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;ff.c: 1108:    idx -= ic;
  5375  003B42  5167               	movf	dir_sdi@ic& (0+255),w,b
  5376  003B44  5E58               	subwf	dir_sdi@idx,f,c
  5377  003B46  5168               	movf	(dir_sdi@ic+1)& (0+255),w,b
  5378  003B48  5A59               	subwfb	dir_sdi@idx+1,f,c
  5379  003B4A                     l349:
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;ff.c: 1103:   while (idx >= ic) {
  5383  003B4A  5167               	movf	dir_sdi@ic& (0+255),w,b
  5384  003B4C  5C58               	subwf	dir_sdi@idx,w,c
  5385  003B4E  5168               	movf	(dir_sdi@ic+1)& (0+255),w,b
  5386  003B50  5859               	subwfb	dir_sdi@idx+1,w,c
  5387  003B52  B0D8               	btfsc	status,0,c
  5388  003B54  D7B4               	goto	l5135
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;ff.c: 1110:   sect = clust2sect(dp->fs, clst);
  5392  003B56  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5393  003B5A  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5394  003B5E  CFDE F00D          	movff	postinc2,clust2sect@fs
  5395  003B62  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  5396  003B66  C06D  F00F         	movff	dir_sdi@clst,clust2sect@clst
  5397  003B6A  C06E  F010         	movff	dir_sdi@clst+1,clust2sect@clst+1
  5398  003B6E  C06F  F011         	movff	dir_sdi@clst+2,clust2sect@clst+2
  5399  003B72  C070  F012         	movff	dir_sdi@clst+3,clust2sect@clst+3
  5400  003B76  EC37  F02A         	call	_clust2sect	;wreg free
  5401  003B7A  C00D  F069         	movff	?_clust2sect,dir_sdi@sect
  5402  003B7E  C00E  F06A         	movff	?_clust2sect+1,dir_sdi@sect+1
  5403  003B82  C00F  F06B         	movff	?_clust2sect+2,dir_sdi@sect+2
  5404  003B86  C010  F06C         	movff	?_clust2sect+3,dir_sdi@sect+3
  5405  003B8A                     l5155:
  5406                           
  5407                           ;ff.c: 1112:  dp->clust = clst;
  5408  003B8A  EE20 F00A          	lfsr	2,10
  5409  003B8E  5056               	movf	dir_sdi@dp,w,c
  5410  003B90  26D9               	addwf	fsr2l,f,c
  5411  003B92  5057               	movf	dir_sdi@dp+1,w,c
  5412  003B94  22DA               	addwfc	fsr2h,f,c
  5413  003B96  C06D  FFDE         	movff	dir_sdi@clst,postinc2
  5414  003B9A  C06E  FFDE         	movff	dir_sdi@clst+1,postinc2
  5415  003B9E  C06F  FFDE         	movff	dir_sdi@clst+2,postinc2
  5416  003BA2  C070  FFDE         	movff	dir_sdi@clst+3,postinc2
  5417                           
  5418                           ;ff.c: 1113:  if (!sect) return FR_INT_ERR;
  5419  003BA6  0100               	movlb	0	; () banked
  5420  003BA8  5169               	movf	dir_sdi@sect& (0+255),w,b
  5421  003BAA  116A               	iorwf	(dir_sdi@sect+1)& (0+255),w,b
  5422  003BAC  116B               	iorwf	(dir_sdi@sect+2)& (0+255),w,b
  5423  003BAE  116C               	iorwf	(dir_sdi@sect+3)& (0+255),w,b
  5424  003BB0  B4D8               	btfsc	status,2,c
  5425  003BB2  D71F               	goto	u6390
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;ff.c: 1114:  dp->sect = sect + idx / (((UINT)512) / 32);
  5429  003BB4  C058  F060         	movff	dir_sdi@idx,??_dir_sdi
  5430  003BB8  C059  F061         	movff	dir_sdi@idx+1,??_dir_sdi+1
  5431  003BBC  0E04               	movlw	4
  5432  003BBE  6F62               	movwf	(??_dir_sdi+2)& (0+255),b
  5433  003BC0                     u6495:
  5434  003BC0  90D8               	bcf	status,0,c
  5435  003BC2  3361               	rrcf	(??_dir_sdi+1)& (0+255),f,b
  5436  003BC4  3360               	rrcf	??_dir_sdi& (0+255),f,b
  5437  003BC6  2F62               	decfsz	(??_dir_sdi+2)& (0+255),f,b
  5438  003BC8  D7FB               	goto	u6495
  5439  003BCA  5160               	movf	??_dir_sdi& (0+255),w,b
  5440  003BCC  2569               	addwf	dir_sdi@sect& (0+255),w,b
  5441  003BCE  6F63               	movwf	(??_dir_sdi+3)& (0+255),b
  5442  003BD0  5161               	movf	(??_dir_sdi+1)& (0+255),w,b
  5443  003BD2  216A               	addwfc	(dir_sdi@sect+1)& (0+255),w,b
  5444  003BD4  6F64               	movwf	(??_dir_sdi+4)& (0+255),b
  5445  003BD6  0E00               	movlw	0
  5446  003BD8  216B               	addwfc	(dir_sdi@sect+2)& (0+255),w,b
  5447  003BDA  6F65               	movwf	(??_dir_sdi+5)& (0+255),b
  5448  003BDC  0E00               	movlw	0
  5449  003BDE  216C               	addwfc	(dir_sdi@sect+3)& (0+255),w,b
  5450  003BE0  6F66               	movwf	(??_dir_sdi+6)& (0+255),b
  5451  003BE2  EE20 F00E          	lfsr	2,14
  5452  003BE6  5056               	movf	dir_sdi@dp,w,c
  5453  003BE8  26D9               	addwf	fsr2l,f,c
  5454  003BEA  5057               	movf	dir_sdi@dp+1,w,c
  5455  003BEC  22DA               	addwfc	fsr2h,f,c
  5456  003BEE  C063  FFDE         	movff	??_dir_sdi+3,postinc2
  5457  003BF2  C064  FFDE         	movff	??_dir_sdi+4,postinc2
  5458  003BF6  C065  FFDE         	movff	??_dir_sdi+5,postinc2
  5459  003BFA  C066  FFDE         	movff	??_dir_sdi+6,postinc2
  5460                           
  5461                           ;ff.c: 1115:  dp->dir = dp->fs->win + (idx % (((UINT)512) / 32)) * 32;
  5462  003BFE  0E0F               	movlw	15
  5463  003C00  1458               	andwf	dir_sdi@idx,w,c
  5464  003C02  6F60               	movwf	??_dir_sdi& (0+255),b
  5465  003C04  0E00               	movlw	0
  5466  003C06  1459               	andwf	dir_sdi@idx+1,w,c
  5467  003C08  6F61               	movwf	(??_dir_sdi+1)& (0+255),b
  5468  003C0A  0E05               	movlw	5
  5469  003C0C                     u6505:
  5470  003C0C  90D8               	bcf	status,0,c
  5471  003C0E  3760               	rlcf	??_dir_sdi& (0+255),f,b
  5472  003C10  3761               	rlcf	(??_dir_sdi+1)& (0+255),f,b
  5473  003C12  2EE8               	decfsz	wreg,f,c
  5474  003C14  D7FB               	goto	u6505
  5475  003C16  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5476  003C1A  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5477  003C1E  CFDE F062          	movff	postinc2,??_dir_sdi+2
  5478  003C22  CFDD F063          	movff	postdec2,??_dir_sdi+3
  5479  003C26  5160               	movf	??_dir_sdi& (0+255),w,b
  5480  003C28  2762               	addwf	(??_dir_sdi+2)& (0+255),f,b
  5481  003C2A  5161               	movf	(??_dir_sdi+1)& (0+255),w,b
  5482  003C2C  2363               	addwfc	(??_dir_sdi+3)& (0+255),f,b
  5483  003C2E  0E2E               	movlw	46
  5484  003C30  2762               	addwf	(??_dir_sdi+2)& (0+255),f,b
  5485  003C32  0E00               	movlw	0
  5486  003C34  2363               	addwfc	(??_dir_sdi+3)& (0+255),f,b
  5487  003C36  EE20 F012          	lfsr	2,18
  5488  003C3A  5056               	movf	dir_sdi@dp,w,c
  5489  003C3C  26D9               	addwf	fsr2l,f,c
  5490  003C3E  5057               	movf	dir_sdi@dp+1,w,c
  5491  003C40  22DA               	addwfc	fsr2h,f,c
  5492  003C42  C062  FFDE         	movff	??_dir_sdi+2,postinc2
  5493  003C46  C063  FFDD         	movff	??_dir_sdi+3,postdec2
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;ff.c: 1117:  return FR_OK;
  5497  003C4A  0E00               	movlw	0
  5498                           
  5499                           ; BSR set to: 0
  5500  003C4C  0012               	return		;funcret
  5501  003C4E                     __end_of_dir_sdi:
  5502                           	opt callstack 0
  5503                           
  5504 ;; *************** function _dir_next *****************
  5505 ;; Defined at:
  5506 ;;		line 1128 in file "ff.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  dp              2   13[BANK0 ] PTR struct .
  5509 ;;		 -> f_open@dj(22), 
  5510 ;;  stretch         2   15[BANK0 ] int 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  clst            4   28[BANK0 ] unsigned long 
  5513 ;;  i               2   26[BANK0 ] unsigned short 
  5514 ;;  c               2   24[BANK0 ] unsigned short 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      enum E93
  5517 ;; Registers used:
  5518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5524 ;;      Params:         0       4       0       0       0       0       0       0       0
  5525 ;;      Locals:         0       8       0       0       0       0       0       0       0
  5526 ;;      Temps:          0       7       0       0       0       0       0       0       0
  5527 ;;      Totals:         0      19       0       0       0       0       0       0       0
  5528 ;;Total ram usage:       19 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:   10
  5531 ;; This function calls:
  5532 ;;		_clust2sect
  5533 ;;		_create_chain
  5534 ;;		_get_fat
  5535 ;;		_mem_set
  5536 ;;		_sync_window
  5537 ;; This function is called by:
  5538 ;;		_dir_alloc
  5539 ;;		_dir_find
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text16
  5544  002802                     __ptext16:
  5545                           	opt callstack 0
  5546  002802                     _dir_next:
  5547                           	opt callstack 16
  5548                           
  5549                           ;ff.c: 1129:  DIRC* dp,;ff.c: 1130:  int stretch;ff.c: 1132: {;ff.c: 1133:  DWORD clst;;
      +                          ff.c: 1134:  UINT i;;ff.c: 1136:  UINT c;;ff.c: 1140:  i = dp->index + 1;
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;incstack = 0
  5553  002802  0100               	movlb	0	; () banked
  5554  002804  EE20 F004          	lfsr	2,4
  5555  002808  516D               	movf	dir_next@dp& (0+255),w,b
  5556  00280A  26D9               	addwf	fsr2l,f,c
  5557  00280C  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5558  00280E  22DA               	addwfc	fsr2h,f,c
  5559  002810  CFDE F071          	movff	postinc2,??_dir_next
  5560  002814  CFDD F072          	movff	postdec2,??_dir_next+1
  5561  002818  0E01               	movlw	1
  5562  00281A  2571               	addwf	??_dir_next& (0+255),w,b
  5563  00281C  6F7A               	movwf	dir_next@i& (0+255),b
  5564  00281E  0E00               	movlw	0
  5565  002820  2172               	addwfc	(??_dir_next+1)& (0+255),w,b
  5566  002822  6F7B               	movwf	(dir_next@i+1)& (0+255),b
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;ff.c: 1141:  if (!(i & 0xFFFF) || !dp->sect)
  5570  002824  517A               	movf	dir_next@i& (0+255),w,b
  5571  002826  117B               	iorwf	(dir_next@i+1)& (0+255),w,b
  5572  002828  B4D8               	btfsc	status,2,c
  5573  00282A  D00C               	goto	u6520
  5574                           
  5575                           ; BSR set to: 0
  5576  00282C  EE20 F00E          	lfsr	2,14
  5577  002830  516D               	movf	dir_next@dp& (0+255),w,b
  5578  002832  26D9               	addwf	fsr2l,f,c
  5579  002834  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5580  002836  22DA               	addwfc	fsr2h,f,c
  5581  002838  50DE               	movf	postinc2,w,c
  5582  00283A  10DE               	iorwf	postinc2,w,c
  5583  00283C  10DE               	iorwf	postinc2,w,c
  5584  00283E  10DE               	iorwf	postinc2,w,c
  5585  002840  A4D8               	btfss	status,2,c
  5586  002842  D002               	goto	l5179
  5587  002844                     u6520:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;ff.c: 1142:   return FR_NO_FILE;
  5591  002844  0E04               	movlw	4
  5592  002846  0012               	return	
  5593  002848                     l5179:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;ff.c: 1144:  if (!(i % (((UINT)512) / 32))) {
  5597  002848  0E0F               	movlw	15
  5598  00284A  157A               	andwf	dir_next@i& (0+255),w,b
  5599  00284C  6F71               	movwf	??_dir_next& (0+255),b
  5600  00284E  0E00               	movlw	0
  5601  002850  157B               	andwf	(dir_next@i+1)& (0+255),w,b
  5602  002852  6F72               	movwf	(??_dir_next+1)& (0+255),b
  5603  002854  5171               	movf	??_dir_next& (0+255),w,b
  5604  002856  1172               	iorwf	(??_dir_next+1)& (0+255),w,b
  5605  002858  A4D8               	btfss	status,2,c
  5606  00285A  D1A4               	goto	l5265
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;ff.c: 1145:   dp->sect++;
  5610  00285C  EE20 F00E          	lfsr	2,14
  5611  002860  516D               	movf	dir_next@dp& (0+255),w,b
  5612  002862  26D9               	addwf	fsr2l,f,c
  5613  002864  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5614  002866  22DA               	addwfc	fsr2h,f,c
  5615  002868  2ADE               	incf	postinc2,f,c
  5616  00286A  0E00               	movlw	0
  5617  00286C  22DE               	addwfc	postinc2,f,c
  5618  00286E  22DE               	addwfc	postinc2,f,c
  5619  002870  22DE               	addwfc	postinc2,f,c
  5620                           
  5621                           ;ff.c: 1147:   if (!dp->clust) {
  5622  002872  EE20 F00A          	lfsr	2,10
  5623  002876  516D               	movf	dir_next@dp& (0+255),w,b
  5624  002878  26D9               	addwf	fsr2l,f,c
  5625  00287A  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5626  00287C  22DA               	addwfc	fsr2h,f,c
  5627  00287E  50DE               	movf	postinc2,w,c
  5628  002880  10DE               	iorwf	postinc2,w,c
  5629  002882  10DE               	iorwf	postinc2,w,c
  5630  002884  10DE               	iorwf	postinc2,w,c
  5631  002886  A4D8               	btfss	status,2,c
  5632  002888  D011               	goto	l5189
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;ff.c: 1148:    if (i >= dp->fs->n_rootdir)
  5636  00288A  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5637  00288E  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5638  002892  EE10 F008          	lfsr	1,8
  5639  002896  50DE               	movf	postinc2,w,c
  5640  002898  26E1               	addwf	fsr1l,f,c
  5641  00289A  50DD               	movf	postdec2,w,c
  5642  00289C  22E2               	addwfc	fsr1h,f,c
  5643  00289E  50E6               	movf	postinc1,w,c
  5644  0028A0  5D7A               	subwf	dir_next@i& (0+255),w,b
  5645  0028A2  50E6               	movf	postinc1,w,c
  5646  0028A4  597B               	subwfb	(dir_next@i+1)& (0+255),w,b
  5647  0028A6  B0D8               	btfsc	status,0,c
  5648  0028A8  D7CD               	goto	u6520
  5649  0028AA  D17C               	goto	l5265
  5650  0028AC                     l5189:
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;ff.c: 1152:    if (((i / (((UINT)512) / 32)) & (dp->fs->csize - 1)) == 0) {
  5654  0028AC  C07A  F071         	movff	dir_next@i,??_dir_next
  5655  0028B0  C07B  F072         	movff	dir_next@i+1,??_dir_next+1
  5656  0028B4  0E04               	movlw	4
  5657  0028B6  6F73               	movwf	(??_dir_next+2)& (0+255),b
  5658  0028B8                     u6565:
  5659  0028B8  90D8               	bcf	status,0,c
  5660  0028BA  3372               	rrcf	(??_dir_next+1)& (0+255),f,b
  5661  0028BC  3371               	rrcf	??_dir_next& (0+255),f,b
  5662  0028BE  2F73               	decfsz	(??_dir_next+2)& (0+255),f,b
  5663  0028C0  D7FB               	goto	u6565
  5664  0028C2  0EFF               	movlw	255
  5665  0028C4  6F74               	movwf	(??_dir_next+3)& (0+255),b
  5666  0028C6  0EFF               	movlw	255
  5667  0028C8  6F75               	movwf	(??_dir_next+4)& (0+255),b
  5668  0028CA  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5669  0028CE  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5670  0028D2  EE10 F002          	lfsr	1,2
  5671  0028D6  50DE               	movf	postinc2,w,c
  5672  0028D8  26E1               	addwf	fsr1l,f,c
  5673  0028DA  50DD               	movf	postdec2,w,c
  5674  0028DC  22E2               	addwfc	fsr1h,f,c
  5675  0028DE  50E7               	movf	indf1,w,c
  5676  0028E0  6F76               	movwf	(??_dir_next+5)& (0+255),b
  5677  0028E2  6B77               	clrf	(??_dir_next+6)& (0+255),b
  5678  0028E4  5174               	movf	(??_dir_next+3)& (0+255),w,b
  5679  0028E6  2776               	addwf	(??_dir_next+5)& (0+255),f,b
  5680  0028E8  5175               	movf	(??_dir_next+4)& (0+255),w,b
  5681  0028EA  2377               	addwfc	(??_dir_next+6)& (0+255),f,b
  5682  0028EC  5171               	movf	??_dir_next& (0+255),w,b
  5683  0028EE  1776               	andwf	(??_dir_next+5)& (0+255),f,b
  5684  0028F0  5172               	movf	(??_dir_next+1)& (0+255),w,b
  5685  0028F2  1777               	andwf	(??_dir_next+6)& (0+255),f,b
  5686  0028F4  5176               	movf	(??_dir_next+5)& (0+255),w,b
  5687  0028F6  1177               	iorwf	(??_dir_next+6)& (0+255),w,b
  5688  0028F8  A4D8               	btfss	status,2,c
  5689  0028FA  D154               	goto	l5265
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;ff.c: 1153:     clst = get_fat(dp->fs, dp->clust);
  5693  0028FC  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5694  002900  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5695  002904  CFDE F03B          	movff	postinc2,get_fat@fs
  5696  002908  CFDD F03C          	movff	postdec2,get_fat@fs+1
  5697  00290C  EE20 F00A          	lfsr	2,10
  5698  002910  516D               	movf	dir_next@dp& (0+255),w,b
  5699  002912  26D9               	addwf	fsr2l,f,c
  5700  002914  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5701  002916  22DA               	addwfc	fsr2h,f,c
  5702  002918  CFDE F03D          	movff	postinc2,get_fat@clst
  5703  00291C  CFDE F03E          	movff	postinc2,get_fat@clst+1
  5704  002920  CFDE F03F          	movff	postinc2,get_fat@clst+2
  5705  002924  CFDE F040          	movff	postinc2,get_fat@clst+3
  5706  002928  EC04  F016         	call	_get_fat	;wreg free
  5707  00292C  C03B  F07C         	movff	?_get_fat,dir_next@clst
  5708  002930  C03C  F07D         	movff	?_get_fat+1,dir_next@clst+1
  5709  002934  C03D  F07E         	movff	?_get_fat+2,dir_next@clst+2
  5710  002938  C03E  F07F         	movff	?_get_fat+3,dir_next@clst+3
  5711                           
  5712                           ;ff.c: 1154:     if (clst <= 1) return FR_INT_ERR;
  5713  00293C  0100               	movlb	0	; () banked
  5714  00293E  517F               	movf	(dir_next@clst+3)& (0+255),w,b
  5715  002940  117E               	iorwf	(dir_next@clst+2)& (0+255),w,b
  5716  002942  117D               	iorwf	(dir_next@clst+1)& (0+255),w,b
  5717  002944  E106               	bnz	l5199
  5718  002946  0E02               	movlw	2
  5719  002948  5D7C               	subwf	dir_next@clst& (0+255),w,b
  5720  00294A  B0D8               	btfsc	status,0,c
  5721  00294C  D002               	goto	l5199
  5722  00294E                     u6580:
  5723                           
  5724                           ; BSR set to: 0
  5725  00294E  0E02               	movlw	2
  5726  002950  0012               	return	
  5727  002952                     l5199:
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;ff.c: 1155:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  5731  002952  297C               	incf	dir_next@clst& (0+255),w,b
  5732  002954  E109               	bnz	l5205
  5733  002956  297D               	incf	(dir_next@clst+1)& (0+255),w,b
  5734  002958  E107               	bnz	l5205
  5735  00295A  297E               	incf	(dir_next@clst+2)& (0+255),w,b
  5736  00295C  E105               	bnz	l5205
  5737  00295E  297F               	incf	(dir_next@clst+3)& (0+255),w,b
  5738  002960  A4D8               	btfss	status,2,c
  5739  002962  D002               	goto	l5205
  5740  002964                     u6590:
  5741  002964  0E01               	movlw	1
  5742  002966  0012               	return	
  5743  002968                     l5205:
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;ff.c: 1156:     if (clst >= dp->fs->n_fatent) {
  5747  002968  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5748  00296C  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5749  002970  EE10 F012          	lfsr	1,18
  5750  002974  50DE               	movf	postinc2,w,c
  5751  002976  26E1               	addwf	fsr1l,f,c
  5752  002978  50DD               	movf	postdec2,w,c
  5753  00297A  22E2               	addwfc	fsr1h,f,c
  5754  00297C  50E6               	movf	postinc1,w,c
  5755  00297E  5D7C               	subwf	dir_next@clst& (0+255),w,b
  5756  002980  50E6               	movf	postinc1,w,c
  5757  002982  597D               	subwfb	(dir_next@clst+1)& (0+255),w,b
  5758  002984  50E6               	movf	postinc1,w,c
  5759  002986  597E               	subwfb	(dir_next@clst+2)& (0+255),w,b
  5760  002988  50E6               	movf	postinc1,w,c
  5761  00298A  597F               	subwfb	(dir_next@clst+3)& (0+255),w,b
  5762  00298C  A0D8               	btfss	status,0,c
  5763  00298E  D0DB               	goto	l5261
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;ff.c: 1158:      if (!stretch) return FR_NO_FILE;
  5767  002990  516F               	movf	dir_next@stretch& (0+255),w,b
  5768  002992  1170               	iorwf	(dir_next@stretch+1)& (0+255),w,b
  5769  002994  B4D8               	btfsc	status,2,c
  5770  002996  D756               	goto	u6520
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;ff.c: 1159:      clst = create_chain(dp->fs, dp->clust);
  5774  002998  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5775  00299C  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5776  0029A0  CFDE F056          	movff	postinc2,create_chain@fs
  5777  0029A4  CFDD F057          	movff	postdec2,create_chain@fs+1
  5778  0029A8  EE20 F00A          	lfsr	2,10
  5779  0029AC  516D               	movf	dir_next@dp& (0+255),w,b
  5780  0029AE  26D9               	addwf	fsr2l,f,c
  5781  0029B0  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5782  0029B2  22DA               	addwfc	fsr2h,f,c
  5783  0029B4  CFDE F058          	movff	postinc2,create_chain@clst
  5784  0029B8  CFDE F059          	movff	postinc2,create_chain@clst+1
  5785  0029BC  CFDE F05A          	movff	postinc2,create_chain@clst+2
  5786  0029C0  CFDE F05B          	movff	postinc2,create_chain@clst+3
  5787  0029C4  EC49  F01B         	call	_create_chain	;wreg free
  5788  0029C8  C056  F07C         	movff	?_create_chain,dir_next@clst
  5789  0029CC  C057  F07D         	movff	?_create_chain+1,dir_next@clst+1
  5790  0029D0  C058  F07E         	movff	?_create_chain+2,dir_next@clst+2
  5791  0029D4  C059  F07F         	movff	?_create_chain+3,dir_next@clst+3
  5792                           
  5793                           ;ff.c: 1160:      if (clst == 0) return FR_DENIED;
  5794  0029D8  0100               	movlb	0	; () banked
  5795  0029DA  517C               	movf	dir_next@clst& (0+255),w,b
  5796  0029DC  117D               	iorwf	(dir_next@clst+1)& (0+255),w,b
  5797  0029DE  117E               	iorwf	(dir_next@clst+2)& (0+255),w,b
  5798  0029E0  117F               	iorwf	(dir_next@clst+3)& (0+255),w,b
  5799  0029E2  A4D8               	btfss	status,2,c
  5800  0029E4  D002               	goto	l5221
  5801                           
  5802                           ; BSR set to: 0
  5803  0029E6  0E07               	movlw	7
  5804  0029E8  0012               	return	
  5805  0029EA                     l5221:
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;ff.c: 1161:      if (clst == 1) return FR_INT_ERR;
  5809  0029EA  057C               	decf	dir_next@clst& (0+255),w,b
  5810  0029EC  117D               	iorwf	(dir_next@clst+1)& (0+255),w,b
  5811  0029EE  117E               	iorwf	(dir_next@clst+2)& (0+255),w,b
  5812  0029F0  117F               	iorwf	(dir_next@clst+3)& (0+255),w,b
  5813  0029F2  B4D8               	btfsc	status,2,c
  5814  0029F4  D7AC               	goto	u6580
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;ff.c: 1162:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  5818  0029F6  297C               	incf	dir_next@clst& (0+255),w,b
  5819  0029F8  E107               	bnz	l5233
  5820  0029FA  297D               	incf	(dir_next@clst+1)& (0+255),w,b
  5821  0029FC  E105               	bnz	l5233
  5822  0029FE  297E               	incf	(dir_next@clst+2)& (0+255),w,b
  5823  002A00  E103               	bnz	l5233
  5824  002A02  297F               	incf	(dir_next@clst+3)& (0+255),w,b
  5825  002A04  B4D8               	btfsc	status,2,c
  5826  002A06  D7AE               	goto	u6590
  5827  002A08                     l5233:
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;ff.c: 1164:      if (sync_window(dp->fs)) return FR_DISK_ERR;
  5831  002A08  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5832  002A0C  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5833  002A10  CFDE F01B          	movff	postinc2,sync_window@fs
  5834  002A14  CFDD F01C          	movff	postdec2,sync_window@fs+1
  5835  002A18  EC82  F022         	call	_sync_window	;wreg free
  5836  002A1C  0900               	iorlw	0
  5837  002A1E  A4D8               	btfss	status,2,c
  5838  002A20  D7A1               	goto	u6590
  5839                           
  5840                           ;ff.c: 1165:      mem_set(dp->fs->win, 0, ((UINT)512));
  5841  002A22  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5842  002A26  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5843  002A2A  CFDE F071          	movff	postinc2,??_dir_next
  5844  002A2E  CFDD F072          	movff	postdec2,??_dir_next+1
  5845  002A32  0E2E               	movlw	46
  5846  002A34  0100               	movlb	0	; () banked
  5847  002A36  2571               	addwf	??_dir_next& (0+255),w,b
  5848  002A38  6E01               	movwf	mem_set@dst,c
  5849  002A3A  0E00               	movlw	0
  5850  002A3C  2172               	addwfc	(??_dir_next+1)& (0+255),w,b
  5851  002A3E  6E02               	movwf	mem_set@dst+1,c
  5852  002A40  0E00               	movlw	0
  5853  002A42  6E04               	movwf	mem_set@val+1,c
  5854  002A44  0E00               	movlw	0
  5855  002A46  6E03               	movwf	mem_set@val,c
  5856  002A48  0E02               	movlw	2
  5857  002A4A  6E06               	movwf	mem_set@cnt+1,c
  5858  002A4C  0E00               	movlw	0
  5859  002A4E  6E05               	movwf	mem_set@cnt,c
  5860  002A50  EC58  F02E         	call	_mem_set	;wreg free
  5861                           
  5862                           ;ff.c: 1166:      dp->fs->winsect = clust2sect(dp->fs, clst);
  5863  002A54  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5864  002A58  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5865  002A5C  CFDE F00D          	movff	postinc2,clust2sect@fs
  5866  002A60  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  5867  002A64  C07C  F00F         	movff	dir_next@clst,clust2sect@clst
  5868  002A68  C07D  F010         	movff	dir_next@clst+1,clust2sect@clst+1
  5869  002A6C  C07E  F011         	movff	dir_next@clst+2,clust2sect@clst+2
  5870  002A70  C07F  F012         	movff	dir_next@clst+3,clust2sect@clst+3
  5871  002A74  EC37  F02A         	call	_clust2sect	;wreg free
  5872  002A78  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5873  002A7C  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5874  002A80  EE10 F02A          	lfsr	1,42
  5875  002A84  50DE               	movf	postinc2,w,c
  5876  002A86  26E1               	addwf	fsr1l,f,c
  5877  002A88  50DD               	movf	postdec2,w,c
  5878  002A8A  22E2               	addwfc	fsr1h,f,c
  5879  002A8C  C00D  FFE6         	movff	?_clust2sect,postinc1
  5880  002A90  C00E  FFE6         	movff	?_clust2sect+1,postinc1
  5881  002A94  C00F  FFE6         	movff	?_clust2sect+2,postinc1
  5882  002A98  C010  FFE6         	movff	?_clust2sect+3,postinc1
  5883                           
  5884                           ;ff.c: 1167:      for (c = 0; c < dp->fs->csize; c++) {
  5885  002A9C  0E00               	movlw	0
  5886  002A9E  0100               	movlb	0	; () banked
  5887  002AA0  6F79               	movwf	(dir_next@c+1)& (0+255),b
  5888  002AA2  0E00               	movlw	0
  5889  002AA4  6F78               	movwf	dir_next@c& (0+255),b
  5890  002AA6  D02B               	goto	l5257
  5891  002AA8                     l5245:
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;ff.c: 1168:       dp->fs->wflag = 1;
  5895  002AA8  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5896  002AAC  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5897  002AB0  EE10 F004          	lfsr	1,4
  5898  002AB4  50DE               	movf	postinc2,w,c
  5899  002AB6  26E1               	addwf	fsr1l,f,c
  5900  002AB8  50DD               	movf	postdec2,w,c
  5901  002ABA  22E2               	addwfc	fsr1h,f,c
  5902  002ABC  0E01               	movlw	1
  5903  002ABE  6EE7               	movwf	indf1,c
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;ff.c: 1169:       if (sync_window(dp->fs)) return FR_DISK_ERR;
  5907  002AC0  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5908  002AC4  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5909  002AC8  CFDE F01B          	movff	postinc2,sync_window@fs
  5910  002ACC  CFDD F01C          	movff	postdec2,sync_window@fs+1
  5911  002AD0  EC82  F022         	call	_sync_window	;wreg free
  5912  002AD4  0900               	iorlw	0
  5913  002AD6  A4D8               	btfss	status,2,c
  5914  002AD8  D745               	goto	u6590
  5915                           
  5916                           ;ff.c: 1170:       dp->fs->winsect++;
  5917  002ADA  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5918  002ADE  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5919  002AE2  EE10 F02A          	lfsr	1,42
  5920  002AE6  50DE               	movf	postinc2,w,c
  5921  002AE8  26E1               	addwf	fsr1l,f,c
  5922  002AEA  50DD               	movf	postdec2,w,c
  5923  002AEC  22E2               	addwfc	fsr1h,f,c
  5924  002AEE  2AE6               	incf	postinc1,f,c
  5925  002AF0  0E00               	movlw	0
  5926  002AF2  22E6               	addwfc	postinc1,f,c
  5927  002AF4  22E6               	addwfc	postinc1,f,c
  5928  002AF6  22E6               	addwfc	postinc1,f,c
  5929                           
  5930                           ;ff.c: 1171:      }
  5931  002AF8  0100               	movlb	0	; () banked
  5932  002AFA  4B78               	infsnz	dir_next@c& (0+255),f,b
  5933  002AFC  2B79               	incf	(dir_next@c+1)& (0+255),f,b
  5934  002AFE                     l5257:
  5935                           
  5936                           ; BSR set to: 0
  5937  002AFE  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5938  002B02  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5939  002B06  EE10 F002          	lfsr	1,2
  5940  002B0A  50DE               	movf	postinc2,w,c
  5941  002B0C  26E1               	addwf	fsr1l,f,c
  5942  002B0E  50DD               	movf	postdec2,w,c
  5943  002B10  22E2               	addwfc	fsr1h,f,c
  5944  002B12  50E7               	movf	indf1,w,c
  5945  002B14  6F71               	movwf	??_dir_next& (0+255),b
  5946  002B16  6B72               	clrf	(??_dir_next+1)& (0+255),b
  5947  002B18  5171               	movf	??_dir_next& (0+255),w,b
  5948  002B1A  5D78               	subwf	dir_next@c& (0+255),w,b
  5949  002B1C  5172               	movf	(??_dir_next+1)& (0+255),w,b
  5950  002B1E  5979               	subwfb	(dir_next@c+1)& (0+255),w,b
  5951  002B20  A0D8               	btfss	status,0,c
  5952  002B22  D7C2               	goto	l5245
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;ff.c: 1172:      dp->fs->winsect -= c;
  5956  002B24  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5957  002B28  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5958  002B2C  EE10 F02A          	lfsr	1,42
  5959  002B30  50DE               	movf	postinc2,w,c
  5960  002B32  26E1               	addwf	fsr1l,f,c
  5961  002B34  50DD               	movf	postdec2,w,c
  5962  002B36  22E2               	addwfc	fsr1h,f,c
  5963  002B38  5178               	movf	dir_next@c& (0+255),w,b
  5964  002B3A  5EE6               	subwf	postinc1,f,c
  5965  002B3C  5179               	movf	(dir_next@c+1)& (0+255),w,b
  5966  002B3E  5AE6               	subwfb	postinc1,f,c
  5967  002B40  0E00               	movlw	0
  5968  002B42  5AE6               	subwfb	postinc1,f,c
  5969  002B44  5AE6               	subwfb	postinc1,f,c
  5970  002B46                     l5261:
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;ff.c: 1178:     dp->clust = clst;
  5974  002B46  EE20 F00A          	lfsr	2,10
  5975  002B4A  516D               	movf	dir_next@dp& (0+255),w,b
  5976  002B4C  26D9               	addwf	fsr2l,f,c
  5977  002B4E  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5978  002B50  22DA               	addwfc	fsr2h,f,c
  5979  002B52  C07C  FFDE         	movff	dir_next@clst,postinc2
  5980  002B56  C07D  FFDE         	movff	dir_next@clst+1,postinc2
  5981  002B5A  C07E  FFDE         	movff	dir_next@clst+2,postinc2
  5982  002B5E  C07F  FFDE         	movff	dir_next@clst+3,postinc2
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;ff.c: 1179:     dp->sect = clust2sect(dp->fs, clst);
  5986  002B62  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5987  002B66  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5988  002B6A  CFDE F00D          	movff	postinc2,clust2sect@fs
  5989  002B6E  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  5990  002B72  C07C  F00F         	movff	dir_next@clst,clust2sect@clst
  5991  002B76  C07D  F010         	movff	dir_next@clst+1,clust2sect@clst+1
  5992  002B7A  C07E  F011         	movff	dir_next@clst+2,clust2sect@clst+2
  5993  002B7E  C07F  F012         	movff	dir_next@clst+3,clust2sect@clst+3
  5994  002B82  EC37  F02A         	call	_clust2sect	;wreg free
  5995  002B86  0100               	movlb	0	; () banked
  5996  002B88  EE20 F00E          	lfsr	2,14
  5997  002B8C  516D               	movf	dir_next@dp& (0+255),w,b
  5998  002B8E  26D9               	addwf	fsr2l,f,c
  5999  002B90  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  6000  002B92  22DA               	addwfc	fsr2h,f,c
  6001  002B94  C00D  FFDE         	movff	?_clust2sect,postinc2
  6002  002B98  C00E  FFDE         	movff	?_clust2sect+1,postinc2
  6003  002B9C  C00F  FFDE         	movff	?_clust2sect+2,postinc2
  6004  002BA0  C010  FFDE         	movff	?_clust2sect+3,postinc2
  6005  002BA4                     l5265:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;ff.c: 1184:  dp->index = (WORD)i;
  6009  002BA4  EE20 F004          	lfsr	2,4
  6010  002BA8  516D               	movf	dir_next@dp& (0+255),w,b
  6011  002BAA  26D9               	addwf	fsr2l,f,c
  6012  002BAC  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  6013  002BAE  22DA               	addwfc	fsr2h,f,c
  6014  002BB0  C07A  FFDE         	movff	dir_next@i,postinc2
  6015  002BB4  C07B  FFDD         	movff	dir_next@i+1,postdec2
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;ff.c: 1185:  dp->dir = dp->fs->win + (i % (((UINT)512) / 32)) * 32;
  6019  002BB8  0E0F               	movlw	15
  6020  002BBA  157A               	andwf	dir_next@i& (0+255),w,b
  6021  002BBC  6F71               	movwf	??_dir_next& (0+255),b
  6022  002BBE  0E00               	movlw	0
  6023  002BC0  157B               	andwf	(dir_next@i+1)& (0+255),w,b
  6024  002BC2  6F72               	movwf	(??_dir_next+1)& (0+255),b
  6025  002BC4  0E05               	movlw	5
  6026  002BC6                     u6685:
  6027  002BC6  90D8               	bcf	status,0,c
  6028  002BC8  3771               	rlcf	??_dir_next& (0+255),f,b
  6029  002BCA  3772               	rlcf	(??_dir_next+1)& (0+255),f,b
  6030  002BCC  2EE8               	decfsz	wreg,f,c
  6031  002BCE  D7FB               	goto	u6685
  6032  002BD0  C06D  FFD9         	movff	dir_next@dp,fsr2l
  6033  002BD4  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  6034  002BD8  CFDE F073          	movff	postinc2,??_dir_next+2
  6035  002BDC  CFDD F074          	movff	postdec2,??_dir_next+3
  6036  002BE0  5171               	movf	??_dir_next& (0+255),w,b
  6037  002BE2  2773               	addwf	(??_dir_next+2)& (0+255),f,b
  6038  002BE4  5172               	movf	(??_dir_next+1)& (0+255),w,b
  6039  002BE6  2374               	addwfc	(??_dir_next+3)& (0+255),f,b
  6040  002BE8  0E2E               	movlw	46
  6041  002BEA  2773               	addwf	(??_dir_next+2)& (0+255),f,b
  6042  002BEC  0E00               	movlw	0
  6043  002BEE  2374               	addwfc	(??_dir_next+3)& (0+255),f,b
  6044  002BF0  EE20 F012          	lfsr	2,18
  6045  002BF4  516D               	movf	dir_next@dp& (0+255),w,b
  6046  002BF6  26D9               	addwf	fsr2l,f,c
  6047  002BF8  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  6048  002BFA  22DA               	addwfc	fsr2h,f,c
  6049  002BFC  C073  FFDE         	movff	??_dir_next+2,postinc2
  6050  002C00  C074  FFDD         	movff	??_dir_next+3,postdec2
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;ff.c: 1187:  return FR_OK;
  6054  002C04  0E00               	movlw	0
  6055  002C06  0012               	return		;funcret
  6056  002C08                     __end_of_dir_next:
  6057                           	opt callstack 0
  6058                           
  6059 ;; *************** function _f_mount *****************
  6060 ;; Defined at:
  6061 ;;		line 2402 in file "ff.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  fs              2   81[COMRAM] PTR struct .
  6064 ;;		 -> FatFs(558), NULL(0), 
  6065 ;;  path            2   83[COMRAM] PTR const unsigned char 
  6066 ;;		 -> STR_4(9), STR_3(1), 
  6067 ;;  opt             1   85[COMRAM] unsigned char 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  vol             2   91[COMRAM] int 
  6070 ;;  rp              2   89[COMRAM] PTR const unsigned char 
  6071 ;;		 -> STR_4(9), STR_3(1), 
  6072 ;;  cfs             2   87[COMRAM] PTR struct .
  6073 ;;		 -> FatFs(558), NULL(0), 
  6074 ;;  res             1   86[COMRAM] enum E93
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      enum E93
  6077 ;; Registers used:
  6078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6084 ;;      Params:         5       0       0       0       0       0       0       0       0
  6085 ;;      Locals:         7       0       0       0       0       0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6087 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6088 ;;Total ram usage:       12 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:   10
  6091 ;; This function calls:
  6092 ;;		_find_volume
  6093 ;;		_get_ldnumber
  6094 ;; This function is called by:
  6095 ;;		_guardar
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text17
  6100  0055E2                     __ptext17:
  6101                           	opt callstack 0
  6102  0055E2                     _f_mount:
  6103                           	opt callstack 19
  6104                           
  6105                           ;ff.c: 2403:  FATFS* fs,;ff.c: 2404:  const TCHAR* path,;ff.c: 2405:  BYTE opt;ff.c: 240
      +                          7: {;ff.c: 2408:  FATFS *cfs;;ff.c: 2409:  int vol;;ff.c: 2410:  FRESULT res;;ff.c: 2411
      +                          :  const TCHAR *rp = path;
  6106                           
  6107                           ;incstack = 0
  6108  0055E2  C054  F05A         	movff	f_mount@path,f_mount@rp
  6109  0055E6  C055  F05B         	movff	f_mount@path+1,f_mount@rp+1
  6110                           
  6111                           ;ff.c: 2414:  vol = get_ldnumber(&rp);
  6112  0055EA  0E5A               	movlw	low f_mount@rp
  6113  0055EC  6E01               	movwf	get_ldnumber@path,c
  6114  0055EE  0E00               	movlw	high f_mount@rp
  6115  0055F0  6E02               	movwf	get_ldnumber@path+1,c
  6116  0055F2  EC31  F028         	call	_get_ldnumber	;wreg free
  6117  0055F6  C001  F05C         	movff	?_get_ldnumber,f_mount@vol
  6118  0055FA  C002  F05D         	movff	?_get_ldnumber+1,f_mount@vol+1
  6119                           
  6120                           ;ff.c: 2415:  if (vol < 0) return FR_INVALID_DRIVE;
  6121  0055FE  AE5D               	btfss	f_mount@vol+1,7,c
  6122  005600  D002               	goto	l6181
  6123  005602  0E0B               	movlw	11
  6124  005604  0012               	return	
  6125  005606                     l6181:
  6126                           
  6127                           ;ff.c: 2416:  cfs = FatFs[vol];
  6128  005606  90D8               	bcf	status,0,c
  6129  005608  345C               	rlcf	f_mount@vol,w,c
  6130  00560A  6ED9               	movwf	fsr2l,c
  6131  00560C  345D               	rlcf	f_mount@vol+1,w,c
  6132  00560E  6EDA               	movwf	fsr2h,c
  6133  005610  0EEB               	movlw	low ff@FatFs
  6134  005612  26D9               	addwf	fsr2l,f,c
  6135  005614  0E00               	movlw	high ff@FatFs
  6136  005616  22DA               	addwfc	fsr2h,f,c
  6137  005618  CFDE F058          	movff	postinc2,f_mount@cfs
  6138  00561C  CFDD F059          	movff	postdec2,f_mount@cfs+1
  6139                           
  6140                           ;ff.c: 2418:  if (cfs) {
  6141  005620  5058               	movf	f_mount@cfs,w,c
  6142  005622  1059               	iorwf	f_mount@cfs+1,w,c
  6143  005624  B4D8               	btfsc	status,2,c
  6144  005626  D006               	goto	l6187
  6145                           
  6146                           ;ff.c: 2425:   cfs->fs_type = 0;
  6147  005628  C058  FFD9         	movff	f_mount@cfs,fsr2l
  6148  00562C  C059  FFDA         	movff	f_mount@cfs+1,fsr2h
  6149  005630  0E00               	movlw	0
  6150  005632  6EDF               	movwf	indf2,c
  6151  005634                     l6187:
  6152                           
  6153                           ;ff.c: 2428:  if (fs) {
  6154  005634  5052               	movf	f_mount@fs,w,c
  6155  005636  1053               	iorwf	f_mount@fs+1,w,c
  6156  005638  B4D8               	btfsc	status,2,c
  6157  00563A  D006               	goto	l6191
  6158                           
  6159                           ;ff.c: 2429:   fs->fs_type = 0;
  6160  00563C  C052  FFD9         	movff	f_mount@fs,fsr2l
  6161  005640  C053  FFDA         	movff	f_mount@fs+1,fsr2h
  6162  005644  0E00               	movlw	0
  6163  005646  6EDF               	movwf	indf2,c
  6164  005648                     l6191:
  6165                           
  6166                           ;ff.c: 2434:  FatFs[vol] = fs;
  6167  005648  90D8               	bcf	status,0,c
  6168  00564A  345C               	rlcf	f_mount@vol,w,c
  6169  00564C  6ED9               	movwf	fsr2l,c
  6170  00564E  345D               	rlcf	f_mount@vol+1,w,c
  6171  005650  6EDA               	movwf	fsr2h,c
  6172  005652  0EEB               	movlw	low ff@FatFs
  6173  005654  26D9               	addwf	fsr2l,f,c
  6174  005656  0E00               	movlw	high ff@FatFs
  6175  005658  22DA               	addwfc	fsr2h,f,c
  6176  00565A  C052  FFDE         	movff	f_mount@fs,postinc2
  6177  00565E  C053  FFDD         	movff	f_mount@fs+1,postdec2
  6178                           
  6179                           ;ff.c: 2436:  if (!fs || opt != 1) return FR_OK;
  6180  005662  5052               	movf	f_mount@fs,w,c
  6181  005664  1053               	iorwf	f_mount@fs+1,w,c
  6182  005666  B4D8               	btfsc	status,2,c
  6183  005668  D003               	goto	u8290
  6184  00566A  0456               	decf	f_mount@opt,w,c
  6185  00566C  B4D8               	btfsc	status,2,c
  6186  00566E  D002               	goto	l6201
  6187  005670                     u8290:
  6188  005670  0E00               	movlw	0
  6189  005672  0012               	return	
  6190  005674                     l6201:
  6191                           
  6192                           ;ff.c: 2438:  res = find_volume(&fs, &path, 0);
  6193  005674  0E52               	movlw	low f_mount@fs
  6194  005676  6E45               	movwf	find_volume@rfs,c
  6195  005678  0E00               	movlw	high f_mount@fs
  6196  00567A  6E46               	movwf	find_volume@rfs+1,c
  6197  00567C  0E54               	movlw	low f_mount@path
  6198  00567E  6E47               	movwf	find_volume@path,c
  6199  005680  0E00               	movlw	high f_mount@path
  6200  005682  6E48               	movwf	find_volume@path+1,c
  6201  005684  0E00               	movlw	0
  6202  005686  6E49               	movwf	find_volume@wmode,c
  6203  005688  EC0D  F004         	call	_find_volume	;wreg free
  6204  00568C  6E57               	movwf	f_mount@res,c
  6205                           
  6206                           ;ff.c: 2439:  return res;
  6207  00568E  5057               	movf	f_mount@res,w,c
  6208  005690  0012               	return		;funcret
  6209  005692                     __end_of_f_mount:
  6210                           	opt callstack 0
  6211                           
  6212 ;; *************** function _find_volume *****************
  6213 ;; Defined at:
  6214 ;;		line 2203 in file "ff.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  rfs             2   68[COMRAM] PTR PTR struct .
  6217 ;;		 -> f_open@dj(22), f_mount@fs(2), 
  6218 ;;  path            2   70[COMRAM] PTR PTR const unsigned c
  6219 ;;		 -> f_open@path(2), f_mount@path(2), 
  6220 ;;  wmode           1   72[COMRAM] unsigned char 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  br             16    0[BANK0 ] unsigned long [4]
  6223 ;;  bsect           4   49[BANK0 ] unsigned long 
  6224 ;;  fasize          4   45[BANK0 ] unsigned long 
  6225 ;;  nclst           4   40[BANK0 ] unsigned long 
  6226 ;;  tsect           4   36[BANK0 ] unsigned long 
  6227 ;;  sysect          4   28[BANK0 ] unsigned long 
  6228 ;;  szbfat          4   22[BANK0 ] unsigned long 
  6229 ;;  fs              2   56[BANK0 ] PTR struct .
  6230 ;;		 -> FatFs(558), NULL(0), 
  6231 ;;  i               2   53[BANK0 ] unsigned short 
  6232 ;;  nrsv            2   34[BANK0 ] unsigned short 
  6233 ;;  vol             2   32[BANK0 ] int 
  6234 ;;  pt              2   26[BANK0 ] PTR unsigned char 
  6235 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
  6236 ;;  fmt             1   55[BANK0 ] unsigned char 
  6237 ;;  stat            1   44[BANK0 ] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      enum E93
  6240 ;; Registers used:
  6241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6247 ;;      Params:         5       0       0       0       0       0       0       0       0
  6248 ;;      Locals:         0      58       0       0       0       0       0       0       0
  6249 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6250 ;;      Totals:        13      58       0       0       0       0       0       0       0
  6251 ;;Total ram usage:       71 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; Hardware stack levels required when called:    9
  6254 ;; This function calls:
  6255 ;;		___lldiv
  6256 ;;		___lmul
  6257 ;;		_check_fs
  6258 ;;		_disk_initialize
  6259 ;;		_disk_status
  6260 ;;		_get_ldnumber
  6261 ;;		_move_window
  6262 ;; This function is called by:
  6263 ;;		_f_mount
  6264 ;;		_f_open
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text18
  6269  00081A                     __ptext18:
  6270                           	opt callstack 0
  6271  00081A                     _find_volume:
  6272                           	opt callstack 19
  6273                           
  6274                           ;ff.c: 2204:  FATFS** rfs,;ff.c: 2205:  const TCHAR** path,;ff.c: 2206:  BYTE wmode;ff.c
      +                          : 2208: {;ff.c: 2209:  BYTE fmt, *pt;;ff.c: 2210:  int vol;;ff.c: 2211:  DSTATUS stat;;f
      +                          f.c: 2212:  DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];;ff.c: 2213:  WORD 
      +                          nrsv;;ff.c: 2214:  FATFS *fs;;ff.c: 2215:  UINT i;;ff.c: 2219:  *rfs = 0;
  6275                           
  6276                           ;incstack = 0
  6277  00081A  C045  FFD9         	movff	find_volume@rfs,fsr2l
  6278  00081E  C046  FFDA         	movff	find_volume@rfs+1,fsr2h
  6279  000822  0E00               	movlw	0
  6280  000824  6EDE               	movwf	postinc2,c
  6281  000826  0E00               	movlw	0
  6282  000828  6EDD               	movwf	postdec2,c
  6283                           
  6284                           ;ff.c: 2220:  vol = get_ldnumber(path);
  6285  00082A  C047  F001         	movff	find_volume@path,get_ldnumber@path
  6286  00082E  C048  F002         	movff	find_volume@path+1,get_ldnumber@path+1
  6287  000832  EC31  F028         	call	_get_ldnumber	;wreg free
  6288  000836  C001  F080         	movff	?_get_ldnumber,find_volume@vol
  6289  00083A  C002  F081         	movff	?_get_ldnumber+1,find_volume@vol+1
  6290                           
  6291                           ;ff.c: 2221:  if (vol < 0) return FR_INVALID_DRIVE;
  6292  00083E  0100               	movlb	0	; () banked
  6293  000840  AF81               	btfss	(find_volume@vol+1)& (0+255),7,b
  6294  000842  D002               	goto	l5879
  6295                           
  6296                           ; BSR set to: 0
  6297  000844  0E0B               	movlw	11
  6298  000846  0012               	return	
  6299  000848                     l5879:
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;ff.c: 2224:  fs = FatFs[vol];
  6303  000848  90D8               	bcf	status,0,c
  6304  00084A  3580               	rlcf	find_volume@vol& (0+255),w,b
  6305  00084C  6ED9               	movwf	fsr2l,c
  6306  00084E  3581               	rlcf	(find_volume@vol+1)& (0+255),w,b
  6307  000850  6EDA               	movwf	fsr2h,c
  6308  000852  0EEB               	movlw	low ff@FatFs
  6309  000854  26D9               	addwf	fsr2l,f,c
  6310  000856  0E00               	movlw	high ff@FatFs
  6311  000858  22DA               	addwfc	fsr2h,f,c
  6312  00085A  CFDE F098          	movff	postinc2,find_volume@fs
  6313  00085E  CFDD F099          	movff	postdec2,find_volume@fs+1
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;ff.c: 2225:  if (!fs) return FR_NOT_ENABLED;
  6317  000862  5198               	movf	find_volume@fs& (0+255),w,b
  6318  000864  1199               	iorwf	(find_volume@fs+1)& (0+255),w,b
  6319  000866  A4D8               	btfss	status,2,c
  6320  000868  D002               	goto	l5887
  6321                           
  6322                           ; BSR set to: 0
  6323  00086A  0E0C               	movlw	12
  6324  00086C  0012               	return	
  6325  00086E                     l5887:
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;ff.c: 2228:  *rfs = fs;
  6329  00086E  C045  FFD9         	movff	find_volume@rfs,fsr2l
  6330  000872  C046  FFDA         	movff	find_volume@rfs+1,fsr2h
  6331  000876  C098  FFDE         	movff	find_volume@fs,postinc2
  6332  00087A  C099  FFDD         	movff	find_volume@fs+1,postdec2
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;ff.c: 2230:  if (fs->fs_type) {
  6336  00087E  C098  FFD9         	movff	find_volume@fs,fsr2l
  6337  000882  C099  FFDA         	movff	find_volume@fs+1,fsr2h
  6338  000886  50DF               	movf	indf2,w,c
  6339  000888  B4D8               	btfsc	status,2,c
  6340  00088A  D015               	goto	l5907
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;ff.c: 2231:   stat = disk_status(fs->drv);
  6344  00088C  EE20 F001          	lfsr	2,1
  6345  000890  5198               	movf	find_volume@fs& (0+255),w,b
  6346  000892  26D9               	addwf	fsr2l,f,c
  6347  000894  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6348  000896  22DA               	addwfc	fsr2h,f,c
  6349  000898  50DF               	movf	indf2,w,c
  6350  00089A  ECC8  F02E         	call	_disk_status
  6351  00089E  0100               	movlb	0	; () banked
  6352  0008A0  6F8C               	movwf	find_volume@stat& (0+255),b
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;ff.c: 2233:    if (!0 && wmode && (stat & 0x04))
  6356  0008A2  B18C               	btfsc	find_volume@stat& (0+255),0,b
  6357  0008A4  D008               	goto	l5907
  6358                           
  6359                           ; BSR set to: 0
  6360  0008A6  5049               	movf	find_volume@wmode,w,c
  6361  0008A8  A4D8               	btfss	status,2,c
  6362                           
  6363                           ; BSR set to: 0
  6364  0008AA  A58C               	btfss	find_volume@stat& (0+255),2,b
  6365  0008AC  D002               	goto	l5903
  6366  0008AE                     u7820:
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;ff.c: 2234:     return FR_WRITE_PROTECTED;
  6370  0008AE  0E0A               	movlw	10
  6371  0008B0  0012               	return	
  6372  0008B2                     l5903:
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;ff.c: 2235:    return FR_OK;
  6376  0008B2  0E00               	movlw	0
  6377  0008B4  0012               	return	
  6378  0008B6                     l5907:
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;ff.c: 2242:  fs->fs_type = 0;
  6382  0008B6  C098  FFD9         	movff	find_volume@fs,fsr2l
  6383  0008BA  C099  FFDA         	movff	find_volume@fs+1,fsr2h
  6384  0008BE  0E00               	movlw	0
  6385  0008C0  6EDF               	movwf	indf2,c
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;ff.c: 2243:  fs->drv = (BYTE)(vol);
  6389  0008C2  EE20 F001          	lfsr	2,1
  6390  0008C6  5198               	movf	find_volume@fs& (0+255),w,b
  6391  0008C8  26D9               	addwf	fsr2l,f,c
  6392  0008CA  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6393  0008CC  22DA               	addwfc	fsr2h,f,c
  6394  0008CE  C080  FFDF         	movff	find_volume@vol,indf2
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;ff.c: 2244:  stat = disk_initialize(fs->drv);
  6398  0008D2  EE20 F001          	lfsr	2,1
  6399  0008D6  5198               	movf	find_volume@fs& (0+255),w,b
  6400  0008D8  26D9               	addwf	fsr2l,f,c
  6401  0008DA  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6402  0008DC  22DA               	addwfc	fsr2h,f,c
  6403  0008DE  50DF               	movf	indf2,w,c
  6404  0008E0  ECAD  F020         	call	_disk_initialize
  6405  0008E4  0100               	movlb	0	; () banked
  6406  0008E6  6F8C               	movwf	find_volume@stat& (0+255),b
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;ff.c: 2245:  if (stat & 0x01)
  6410  0008E8  A18C               	btfss	find_volume@stat& (0+255),0,b
  6411  0008EA  D002               	goto	l5919
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;ff.c: 2246:   return FR_NOT_READY;
  6415  0008EC  0E03               	movlw	3
  6416  0008EE  0012               	return	
  6417  0008F0                     l5919:
  6418                           
  6419                           ; BSR set to: 0
  6420  0008F0  5049               	movf	find_volume@wmode,w,c
  6421  0008F2  B4D8               	btfsc	status,2,c
  6422  0008F4  D002               	goto	l5927
  6423                           
  6424                           ; BSR set to: 0
  6425  0008F6  B58C               	btfsc	find_volume@stat& (0+255),2,b
  6426  0008F8  D7DA               	goto	u7820
  6427  0008FA                     l5927:
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;ff.c: 2254:  bsect = 0;
  6431  0008FA  0E00               	movlw	0
  6432  0008FC  6F91               	movwf	find_volume@bsect& (0+255),b
  6433  0008FE  0E00               	movlw	0
  6434  000900  6F92               	movwf	(find_volume@bsect+1)& (0+255),b
  6435  000902  0E00               	movlw	0
  6436  000904  6F93               	movwf	(find_volume@bsect+2)& (0+255),b
  6437  000906  0E00               	movlw	0
  6438  000908  6F94               	movwf	(find_volume@bsect+3)& (0+255),b
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;ff.c: 2255:  fmt = check_fs(fs, bsect);
  6442  00090A  C098  F03B         	movff	find_volume@fs,check_fs@fs
  6443  00090E  C099  F03C         	movff	find_volume@fs+1,check_fs@fs+1
  6444  000912  0E00               	movlw	0
  6445  000914  6E3D               	movwf	check_fs@sect,c
  6446  000916  0E00               	movlw	0
  6447  000918  6E3E               	movwf	check_fs@sect+1,c
  6448  00091A  0E00               	movlw	0
  6449  00091C  6E3F               	movwf	check_fs@sect+2,c
  6450  00091E  0E00               	movlw	0
  6451  000920  6E40               	movwf	check_fs@sect+3,c
  6452  000922  ECBB  F027         	call	_check_fs	;wreg free
  6453  000926  0100               	movlb	0	; () banked
  6454  000928  6F97               	movwf	find_volume@fmt& (0+255),b
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;ff.c: 2256:  if (fmt == 1 || (!fmt && (0))) {
  6458  00092A  0597               	decf	find_volume@fmt& (0+255),w,b
  6459  00092C  A4D8               	btfss	status,2,c
  6460  00092E  D0AE               	goto	u7920
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;ff.c: 2257:   for (i = 0; i < 4; i++) {
  6464  000930  0E00               	movlw	0
  6465  000932  6F96               	movwf	(find_volume@i+1)& (0+255),b
  6466  000934  0E00               	movlw	0
  6467  000936  6F95               	movwf	find_volume@i& (0+255),b
  6468  000938                     l5939:
  6469                           
  6470                           ; BSR set to: 0
  6471  000938  5196               	movf	(find_volume@i+1)& (0+255),w,b
  6472  00093A  E15A               	bnz	l5955
  6473  00093C  0E04               	movlw	4
  6474  00093E  5D95               	subwf	find_volume@i& (0+255),w,b
  6475  000940  B0D8               	btfsc	status,0,c
  6476  000942  D056               	goto	l5955
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;ff.c: 2258:    pt = fs->win + 446 + i * 16;
  6480  000944  C095  F04A         	movff	find_volume@i,??_find_volume
  6481  000948  C096  F04B         	movff	find_volume@i+1,??_find_volume+1
  6482  00094C  3A4A               	swapf	??_find_volume,f,c
  6483  00094E  3A4B               	swapf	??_find_volume+1,f,c
  6484  000950  0EF0               	movlw	240
  6485  000952  164B               	andwf	??_find_volume+1,f,c
  6486  000954  504A               	movf	??_find_volume,w,c
  6487  000956  0B0F               	andlw	15
  6488  000958  124B               	iorwf	??_find_volume+1,f,c
  6489  00095A  0EF0               	movlw	240
  6490  00095C  164A               	andwf	??_find_volume,f,c
  6491  00095E  C098  F04C         	movff	find_volume@fs,??_find_volume+2
  6492  000962  C099  F04D         	movff	find_volume@fs+1,??_find_volume+3
  6493  000966  504A               	movf	??_find_volume,w,c
  6494  000968  264C               	addwf	??_find_volume+2,f,c
  6495  00096A  504B               	movf	??_find_volume+1,w,c
  6496  00096C  224D               	addwfc	??_find_volume+3,f,c
  6497  00096E  0EEC               	movlw	236
  6498  000970  244C               	addwf	??_find_volume+2,w,c
  6499  000972  6F7A               	movwf	find_volume@pt& (0+255),b
  6500  000974  0E01               	movlw	1
  6501  000976  204D               	addwfc	??_find_volume+3,w,c
  6502  000978  6F7B               	movwf	(find_volume@pt+1)& (0+255),b
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;ff.c: 2259:    br[i] = pt[4] ? (DWORD)(*(DWORD*)(BYTE*)(&pt[8])) : 0;
  6506  00097A  EE20 F004          	lfsr	2,4
  6507  00097E  517A               	movf	find_volume@pt& (0+255),w,b
  6508  000980  26D9               	addwf	fsr2l,f,c
  6509  000982  517B               	movf	(find_volume@pt+1)& (0+255),w,b
  6510  000984  22DA               	addwfc	fsr2h,f,c
  6511  000986  50DF               	movf	indf2,w,c
  6512  000988  A4D8               	btfss	status,2,c
  6513  00098A  D009               	goto	l5949
  6514                           
  6515                           ; BSR set to: 0
  6516  00098C  0E00               	movlw	0
  6517  00098E  6F70               	movwf	_find_volume$728& (0+255),b
  6518  000990  0E00               	movlw	0
  6519  000992  6F71               	movwf	(_find_volume$728+1)& (0+255),b
  6520  000994  0E00               	movlw	0
  6521  000996  6F72               	movwf	(_find_volume$728+2)& (0+255),b
  6522  000998  0E00               	movlw	0
  6523  00099A  6F73               	movwf	(_find_volume$728+3)& (0+255),b
  6524  00099C  D00E               	goto	l520
  6525  00099E                     l5949:
  6526                           
  6527                           ; BSR set to: 0
  6528  00099E  EE20 F008          	lfsr	2,8
  6529  0009A2  517A               	movf	find_volume@pt& (0+255),w,b
  6530  0009A4  26D9               	addwf	fsr2l,f,c
  6531  0009A6  517B               	movf	(find_volume@pt+1)& (0+255),w,b
  6532  0009A8  22DA               	addwfc	fsr2h,f,c
  6533  0009AA  CFDE F070          	movff	postinc2,_find_volume$728
  6534  0009AE  CFDE F071          	movff	postinc2,_find_volume$728+1
  6535  0009B2  CFDE F072          	movff	postinc2,_find_volume$728+2
  6536  0009B6  CFDE F073          	movff	postinc2,_find_volume$728+3
  6537  0009BA                     l520:
  6538                           
  6539                           ; BSR set to: 0
  6540  0009BA  0E60               	movlw	low find_volume@br
  6541  0009BC  6E4A               	movwf	??_find_volume& (0+255),c
  6542  0009BE  0E00               	movlw	high find_volume@br
  6543  0009C0  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  6544  0009C2  90D8               	bcf	status,0,c
  6545  0009C4  3595               	rlcf	find_volume@i& (0+255),w,b
  6546  0009C6  6ED9               	movwf	fsr2l,c
  6547  0009C8  3596               	rlcf	(find_volume@i+1)& (0+255),w,b
  6548  0009CA  6EDA               	movwf	fsr2h,c
  6549  0009CC  90D8               	bcf	status,0,c
  6550  0009CE  36D9               	rlcf	fsr2l,f,c
  6551  0009D0  36DA               	rlcf	fsr2h,f,c
  6552  0009D2  504A               	movf	??_find_volume,w,c
  6553  0009D4  26D9               	addwf	fsr2l,f,c
  6554  0009D6  504B               	movf	??_find_volume+1,w,c
  6555  0009D8  22DA               	addwfc	fsr2h,f,c
  6556  0009DA  C070  FFDE         	movff	_find_volume$728,postinc2
  6557  0009DE  C071  FFDE         	movff	_find_volume$728+1,postinc2
  6558  0009E2  C072  FFDE         	movff	_find_volume$728+2,postinc2
  6559  0009E6  C073  FFDE         	movff	_find_volume$728+3,postinc2
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;ff.c: 2260:   }
  6563  0009EA  4B95               	infsnz	find_volume@i& (0+255),f,b
  6564  0009EC  2B96               	incf	(find_volume@i+1)& (0+255),f,b
  6565  0009EE  D7A4               	goto	l5939
  6566  0009F0                     l5955:
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;ff.c: 2261:   i = 0;
  6570  0009F0  0E00               	movlw	0
  6571  0009F2  6F96               	movwf	(find_volume@i+1)& (0+255),b
  6572  0009F4  0E00               	movlw	0
  6573  0009F6  6F95               	movwf	find_volume@i& (0+255),b
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;ff.c: 2262:   if (i) i--;
  6577  0009F8  5195               	movf	find_volume@i& (0+255),w,b
  6578  0009FA  1196               	iorwf	(find_volume@i+1)& (0+255),w,b
  6579  0009FC  B4D8               	btfsc	status,2,c
  6580  0009FE  D003               	goto	l5961
  6581                           
  6582                           ; BSR set to: 0
  6583  000A00  0795               	decf	find_volume@i& (0+255),f,b
  6584  000A02  A0D8               	btfss	status,0,c
  6585  000A04  0796               	decf	(find_volume@i+1)& (0+255),f,b
  6586  000A06                     l5961:
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;ff.c: 2264:    bsect = br[i];
  6590  000A06  0E60               	movlw	low find_volume@br
  6591  000A08  6E4A               	movwf	??_find_volume& (0+255),c
  6592  000A0A  0E00               	movlw	high find_volume@br
  6593  000A0C  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  6594  000A0E  90D8               	bcf	status,0,c
  6595  000A10  3595               	rlcf	find_volume@i& (0+255),w,b
  6596  000A12  6ED9               	movwf	fsr2l,c
  6597  000A14  3596               	rlcf	(find_volume@i+1)& (0+255),w,b
  6598  000A16  6EDA               	movwf	fsr2h,c
  6599  000A18  90D8               	bcf	status,0,c
  6600  000A1A  36D9               	rlcf	fsr2l,f,c
  6601  000A1C  36DA               	rlcf	fsr2h,f,c
  6602  000A1E  504A               	movf	??_find_volume,w,c
  6603  000A20  26D9               	addwf	fsr2l,f,c
  6604  000A22  504B               	movf	??_find_volume+1,w,c
  6605  000A24  22DA               	addwfc	fsr2h,f,c
  6606  000A26  CFDE F091          	movff	postinc2,find_volume@bsect
  6607  000A2A  CFDE F092          	movff	postinc2,find_volume@bsect+1
  6608  000A2E  CFDE F093          	movff	postinc2,find_volume@bsect+2
  6609  000A32  CFDE F094          	movff	postinc2,find_volume@bsect+3
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;ff.c: 2265:    fmt = bsect ? check_fs(fs, bsect) : 2;
  6613  000A36  5191               	movf	find_volume@bsect& (0+255),w,b
  6614  000A38  1192               	iorwf	(find_volume@bsect+1)& (0+255),w,b
  6615  000A3A  1193               	iorwf	(find_volume@bsect+2)& (0+255),w,b
  6616  000A3C  1194               	iorwf	(find_volume@bsect+3)& (0+255),w,b
  6617  000A3E  A4D8               	btfss	status,2,c
  6618  000A40  D005               	goto	l5967
  6619                           
  6620                           ; BSR set to: 0
  6621  000A42  0E00               	movlw	0
  6622  000A44  6F75               	movwf	(_find_volume$729+1)& (0+255),b
  6623  000A46  0E02               	movlw	2
  6624  000A48  6F74               	movwf	_find_volume$729& (0+255),b
  6625  000A4A  D013               	goto	l5969
  6626  000A4C                     l5967:
  6627                           
  6628                           ; BSR set to: 0
  6629  000A4C  C098  F03B         	movff	find_volume@fs,check_fs@fs
  6630  000A50  C099  F03C         	movff	find_volume@fs+1,check_fs@fs+1
  6631  000A54  C091  F03D         	movff	find_volume@bsect,check_fs@sect
  6632  000A58  C092  F03E         	movff	find_volume@bsect+1,check_fs@sect+1
  6633  000A5C  C093  F03F         	movff	find_volume@bsect+2,check_fs@sect+2
  6634  000A60  C094  F040         	movff	find_volume@bsect+3,check_fs@sect+3
  6635  000A64  ECBB  F027         	call	_check_fs	;wreg free
  6636  000A68  6E4A               	movwf	??_find_volume& (0+255),c
  6637  000A6A  504A               	movf	??_find_volume,w,c
  6638  000A6C  0100               	movlb	0	; () banked
  6639  000A6E  6F74               	movwf	_find_volume$729& (0+255),b
  6640  000A70  6B75               	clrf	(_find_volume$729+1)& (0+255),b
  6641  000A72                     l5969:
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;ff.c: 2266:   } while (!0 && fmt && ++i < 4);
  6645  000A72  C074  F097         	movff	_find_volume$729,find_volume@fmt
  6646                           
  6647                           ; BSR set to: 0
  6648  000A76  5197               	movf	find_volume@fmt& (0+255),w,b
  6649  000A78  B4D8               	btfsc	status,2,c
  6650  000A7A  D008               	goto	u7920
  6651                           
  6652                           ; BSR set to: 0
  6653  000A7C  4B95               	infsnz	find_volume@i& (0+255),f,b
  6654  000A7E  2B96               	incf	(find_volume@i+1)& (0+255),f,b
  6655  000A80  5196               	movf	(find_volume@i+1)& (0+255),w,b
  6656  000A82  E104               	bnz	u7920
  6657  000A84  0E04               	movlw	4
  6658  000A86  5D95               	subwf	find_volume@i& (0+255),w,b
  6659  000A88  A0D8               	btfss	status,0,c
  6660  000A8A  D7BD               	goto	l5961
  6661  000A8C                     u7920:
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;ff.c: 2268:  if (fmt == 3) return FR_DISK_ERR;
  6665  000A8C  0E03               	movlw	3
  6666  000A8E  1997               	xorwf	find_volume@fmt& (0+255),w,b
  6667  000A90  A4D8               	btfss	status,2,c
  6668  000A92  D002               	goto	l5981
  6669                           
  6670                           ; BSR set to: 0
  6671  000A94  0E01               	movlw	1
  6672  000A96  0012               	return	
  6673  000A98                     l5981:
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;ff.c: 2269:  if (fmt) return FR_NO_FILESYSTEM;
  6677  000A98  5197               	movf	find_volume@fmt& (0+255),w,b
  6678  000A9A  B4D8               	btfsc	status,2,c
  6679  000A9C  D002               	goto	l5987
  6680  000A9E                     u7940:
  6681  000A9E                     l5983:
  6682                           
  6683                           ; BSR set to: 0
  6684  000A9E  0E0D               	movlw	13
  6685  000AA0  0012               	return	
  6686  000AA2                     l5987:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;ff.c: 2273:  if ((WORD)(*(WORD*)(BYTE*)(fs->win + 11)) != ((UINT)512))
  6690  000AA2  EE20 F039          	lfsr	2,57
  6691  000AA6  5198               	movf	find_volume@fs& (0+255),w,b
  6692  000AA8  26D9               	addwf	fsr2l,f,c
  6693  000AAA  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6694  000AAC  22DA               	addwfc	fsr2h,f,c
  6695  000AAE  50DE               	movf	postinc2,w,c
  6696  000AB0  E1F6               	bnz	l5983
  6697  000AB2  0E02               	movlw	2
  6698  000AB4  18DE               	xorwf	postinc2,w,c
  6699  000AB6  A4D8               	btfss	status,2,c
  6700  000AB8  D7F2               	goto	u7940
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;ff.c: 2276:  fasize = (WORD)(*(WORD*)(BYTE*)(fs->win + 22));
  6704  000ABA  EE20 F044          	lfsr	2,68
  6705  000ABE  5198               	movf	find_volume@fs& (0+255),w,b
  6706  000AC0  26D9               	addwf	fsr2l,f,c
  6707  000AC2  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6708  000AC4  22DA               	addwfc	fsr2h,f,c
  6709  000AC6  CFDE F04A          	movff	postinc2,??_find_volume
  6710  000ACA  CFDD F04B          	movff	postdec2,??_find_volume+1
  6711  000ACE  C04A  F08D         	movff	??_find_volume,find_volume@fasize
  6712  000AD2  C04B  F08E         	movff	??_find_volume+1,find_volume@fasize+1
  6713  000AD6  6B8F               	clrf	(find_volume@fasize+2)& (0+255),b
  6714  000AD8  6B90               	clrf	(find_volume@fasize+3)& (0+255),b
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;ff.c: 2277:  if (!fasize) fasize = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 36));
  6718  000ADA  518D               	movf	find_volume@fasize& (0+255),w,b
  6719  000ADC  118E               	iorwf	(find_volume@fasize+1)& (0+255),w,b
  6720  000ADE  118F               	iorwf	(find_volume@fasize+2)& (0+255),w,b
  6721  000AE0  1190               	iorwf	(find_volume@fasize+3)& (0+255),w,b
  6722  000AE2  A4D8               	btfss	status,2,c
  6723  000AE4  D00E               	goto	l533
  6724                           
  6725                           ; BSR set to: 0
  6726  000AE6  EE20 F052          	lfsr	2,82
  6727  000AEA  5198               	movf	find_volume@fs& (0+255),w,b
  6728  000AEC  26D9               	addwf	fsr2l,f,c
  6729  000AEE  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6730  000AF0  22DA               	addwfc	fsr2h,f,c
  6731  000AF2  CFDE F08D          	movff	postinc2,find_volume@fasize
  6732  000AF6  CFDE F08E          	movff	postinc2,find_volume@fasize+1
  6733  000AFA  CFDE F08F          	movff	postinc2,find_volume@fasize+2
  6734  000AFE  CFDE F090          	movff	postinc2,find_volume@fasize+3
  6735  000B02                     l533:
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;ff.c: 2278:  fs->fsize = fasize;
  6739  000B02  EE20 F016          	lfsr	2,22
  6740  000B06  5198               	movf	find_volume@fs& (0+255),w,b
  6741  000B08  26D9               	addwf	fsr2l,f,c
  6742  000B0A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6743  000B0C  22DA               	addwfc	fsr2h,f,c
  6744  000B0E  C08D  FFDE         	movff	find_volume@fasize,postinc2
  6745  000B12  C08E  FFDE         	movff	find_volume@fasize+1,postinc2
  6746  000B16  C08F  FFDE         	movff	find_volume@fasize+2,postinc2
  6747  000B1A  C090  FFDE         	movff	find_volume@fasize+3,postinc2
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;ff.c: 2280:  fs->n_fats = fs->win[16];
  6751  000B1E  EE20 F03E          	lfsr	2,62
  6752  000B22  5198               	movf	find_volume@fs& (0+255),w,b
  6753  000B24  26D9               	addwf	fsr2l,f,c
  6754  000B26  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6755  000B28  22DA               	addwfc	fsr2h,f,c
  6756  000B2A  EE10 F003          	lfsr	1,3
  6757  000B2E  5198               	movf	find_volume@fs& (0+255),w,b
  6758  000B30  26E1               	addwf	fsr1l,f,c
  6759  000B32  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6760  000B34  22E2               	addwfc	fsr1h,f,c
  6761  000B36  CFDF FFE7          	movff	indf2,indf1
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;ff.c: 2281:  if (fs->n_fats != 1 && fs->n_fats != 2)
  6765  000B3A  EE20 F003          	lfsr	2,3
  6766  000B3E  5198               	movf	find_volume@fs& (0+255),w,b
  6767  000B40  26D9               	addwf	fsr2l,f,c
  6768  000B42  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6769  000B44  22DA               	addwfc	fsr2h,f,c
  6770  000B46  04DE               	decf	postinc2,w,c
  6771  000B48  B4D8               	btfsc	status,2,c
  6772  000B4A  D00A               	goto	l6009
  6773                           
  6774                           ; BSR set to: 0
  6775  000B4C  EE20 F003          	lfsr	2,3
  6776  000B50  5198               	movf	find_volume@fs& (0+255),w,b
  6777  000B52  26D9               	addwf	fsr2l,f,c
  6778  000B54  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6779  000B56  22DA               	addwfc	fsr2h,f,c
  6780  000B58  0E02               	movlw	2
  6781  000B5A  18DE               	xorwf	postinc2,w,c
  6782  000B5C  A4D8               	btfss	status,2,c
  6783  000B5E  D79F               	goto	u7940
  6784  000B60                     l6009:
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;ff.c: 2283:  fasize *= fs->n_fats;
  6788  000B60  C08D  F001         	movff	find_volume@fasize,___lmul@multiplier
  6789  000B64  C08E  F002         	movff	find_volume@fasize+1,___lmul@multiplier+1
  6790  000B68  C08F  F003         	movff	find_volume@fasize+2,___lmul@multiplier+2
  6791  000B6C  C090  F004         	movff	find_volume@fasize+3,___lmul@multiplier+3
  6792  000B70  EE20 F003          	lfsr	2,3
  6793  000B74  5198               	movf	find_volume@fs& (0+255),w,b
  6794  000B76  26D9               	addwf	fsr2l,f,c
  6795  000B78  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6796  000B7A  22DA               	addwfc	fsr2h,f,c
  6797  000B7C  50DF               	movf	indf2,w,c
  6798  000B7E  6E4A               	movwf	??_find_volume& (0+255),c
  6799  000B80  504A               	movf	??_find_volume,w,c
  6800  000B82  6E05               	movwf	___lmul@multiplicand,c
  6801  000B84  6A06               	clrf	___lmul@multiplicand+1,c
  6802  000B86  6A07               	clrf	___lmul@multiplicand+2,c
  6803  000B88  6A08               	clrf	___lmul@multiplicand+3,c
  6804  000B8A  ECAD  F02D         	call	___lmul	;wreg free
  6805  000B8E  C001  F08D         	movff	?___lmul,find_volume@fasize
  6806  000B92  C002  F08E         	movff	?___lmul+1,find_volume@fasize+1
  6807  000B96  C003  F08F         	movff	?___lmul+2,find_volume@fasize+2
  6808  000B9A  C004  F090         	movff	?___lmul+3,find_volume@fasize+3
  6809                           
  6810                           ;ff.c: 2285:  fs->csize = fs->win[13];
  6811  000B9E  0100               	movlb	0	; () banked
  6812  000BA0  EE20 F03B          	lfsr	2,59
  6813  000BA4  5198               	movf	find_volume@fs& (0+255),w,b
  6814  000BA6  26D9               	addwf	fsr2l,f,c
  6815  000BA8  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6816  000BAA  22DA               	addwfc	fsr2h,f,c
  6817  000BAC  EE10 F002          	lfsr	1,2
  6818  000BB0  5198               	movf	find_volume@fs& (0+255),w,b
  6819  000BB2  26E1               	addwf	fsr1l,f,c
  6820  000BB4  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6821  000BB6  22E2               	addwfc	fsr1h,f,c
  6822  000BB8  CFDF FFE7          	movff	indf2,indf1
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;ff.c: 2286:  if (!fs->csize || (fs->csize & (fs->csize - 1)))
  6826  000BBC  EE20 F002          	lfsr	2,2
  6827  000BC0  5198               	movf	find_volume@fs& (0+255),w,b
  6828  000BC2  26D9               	addwf	fsr2l,f,c
  6829  000BC4  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6830  000BC6  22DA               	addwfc	fsr2h,f,c
  6831  000BC8  50DF               	movf	indf2,w,c
  6832  000BCA  B4D8               	btfsc	status,2,c
  6833  000BCC  D768               	goto	u7940
  6834                           
  6835                           ; BSR set to: 0
  6836  000BCE  0EFF               	movlw	255
  6837  000BD0  6E4A               	movwf	??_find_volume& (0+255),c
  6838  000BD2  0EFF               	movlw	255
  6839  000BD4  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  6840  000BD6  EE20 F002          	lfsr	2,2
  6841  000BDA  5198               	movf	find_volume@fs& (0+255),w,b
  6842  000BDC  26D9               	addwf	fsr2l,f,c
  6843  000BDE  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6844  000BE0  22DA               	addwfc	fsr2h,f,c
  6845  000BE2  50DF               	movf	indf2,w,c
  6846  000BE4  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  6847  000BE6  6A4D               	clrf	(??_find_volume+3)& (0+255),c
  6848  000BE8  504A               	movf	??_find_volume,w,c
  6849  000BEA  264C               	addwf	??_find_volume+2,f,c
  6850  000BEC  504B               	movf	??_find_volume+1,w,c
  6851  000BEE  224D               	addwfc	??_find_volume+3,f,c
  6852  000BF0  EE20 F002          	lfsr	2,2
  6853  000BF4  5198               	movf	find_volume@fs& (0+255),w,b
  6854  000BF6  26D9               	addwf	fsr2l,f,c
  6855  000BF8  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6856  000BFA  22DA               	addwfc	fsr2h,f,c
  6857  000BFC  50DF               	movf	indf2,w,c
  6858  000BFE  6E4E               	movwf	(??_find_volume+4)& (0+255),c
  6859  000C00  504E               	movf	??_find_volume+4,w,c
  6860  000C02  164C               	andwf	??_find_volume+2,f,c
  6861  000C04  0E00               	movlw	0
  6862  000C06  164D               	andwf	??_find_volume+3,f,c
  6863  000C08  504C               	movf	??_find_volume+2,w,c
  6864  000C0A  104D               	iorwf	??_find_volume+3,w,c
  6865  000C0C  A4D8               	btfss	status,2,c
  6866  000C0E  D747               	goto	u7940
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;ff.c: 2289:  fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(fs->win + 17));
  6870  000C10  EE20 F03F          	lfsr	2,63
  6871  000C14  5198               	movf	find_volume@fs& (0+255),w,b
  6872  000C16  26D9               	addwf	fsr2l,f,c
  6873  000C18  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6874  000C1A  22DA               	addwfc	fsr2h,f,c
  6875  000C1C  EE10 F008          	lfsr	1,8
  6876  000C20  5198               	movf	find_volume@fs& (0+255),w,b
  6877  000C22  26E1               	addwf	fsr1l,f,c
  6878  000C24  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6879  000C26  22E2               	addwfc	fsr1h,f,c
  6880  000C28  CFDE FFE6          	movff	postinc2,postinc1
  6881  000C2C  CFDD FFE5          	movff	postdec2,postdec1
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;ff.c: 2290:  if (fs->n_rootdir % (((UINT)512) / 32))
  6885  000C30  EE20 F008          	lfsr	2,8
  6886  000C34  5198               	movf	find_volume@fs& (0+255),w,b
  6887  000C36  26D9               	addwf	fsr2l,f,c
  6888  000C38  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6889  000C3A  22DA               	addwfc	fsr2h,f,c
  6890  000C3C  CFDE F04A          	movff	postinc2,??_find_volume
  6891  000C40  CFDD F04B          	movff	postdec2,??_find_volume+1
  6892  000C44  0E0F               	movlw	15
  6893  000C46  164A               	andwf	??_find_volume,f,c
  6894  000C48  0E00               	movlw	0
  6895  000C4A  164B               	andwf	??_find_volume+1,f,c
  6896  000C4C  504A               	movf	??_find_volume,w,c
  6897  000C4E  104B               	iorwf	??_find_volume+1,w,c
  6898  000C50  A4D8               	btfss	status,2,c
  6899  000C52  D725               	goto	u7940
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;ff.c: 2293:  tsect = (WORD)(*(WORD*)(BYTE*)(fs->win + 19));
  6903  000C54  EE20 F041          	lfsr	2,65
  6904  000C58  5198               	movf	find_volume@fs& (0+255),w,b
  6905  000C5A  26D9               	addwf	fsr2l,f,c
  6906  000C5C  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6907  000C5E  22DA               	addwfc	fsr2h,f,c
  6908  000C60  CFDE F04A          	movff	postinc2,??_find_volume
  6909  000C64  CFDD F04B          	movff	postdec2,??_find_volume+1
  6910  000C68  C04A  F084         	movff	??_find_volume,find_volume@tsect
  6911  000C6C  C04B  F085         	movff	??_find_volume+1,find_volume@tsect+1
  6912  000C70  6B86               	clrf	(find_volume@tsect+2)& (0+255),b
  6913  000C72  6B87               	clrf	(find_volume@tsect+3)& (0+255),b
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;ff.c: 2294:  if (!tsect) tsect = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 32));
  6917  000C74  5184               	movf	find_volume@tsect& (0+255),w,b
  6918  000C76  1185               	iorwf	(find_volume@tsect+1)& (0+255),w,b
  6919  000C78  1186               	iorwf	(find_volume@tsect+2)& (0+255),w,b
  6920  000C7A  1187               	iorwf	(find_volume@tsect+3)& (0+255),w,b
  6921  000C7C  A4D8               	btfss	status,2,c
  6922  000C7E  D00E               	goto	l539
  6923                           
  6924                           ; BSR set to: 0
  6925  000C80  EE20 F04E          	lfsr	2,78
  6926  000C84  5198               	movf	find_volume@fs& (0+255),w,b
  6927  000C86  26D9               	addwf	fsr2l,f,c
  6928  000C88  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6929  000C8A  22DA               	addwfc	fsr2h,f,c
  6930  000C8C  CFDE F084          	movff	postinc2,find_volume@tsect
  6931  000C90  CFDE F085          	movff	postinc2,find_volume@tsect+1
  6932  000C94  CFDE F086          	movff	postinc2,find_volume@tsect+2
  6933  000C98  CFDE F087          	movff	postinc2,find_volume@tsect+3
  6934  000C9C                     l539:
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;ff.c: 2296:  nrsv = (WORD)(*(WORD*)(BYTE*)(fs->win + 14));
  6938  000C9C  EE20 F03C          	lfsr	2,60
  6939  000CA0  5198               	movf	find_volume@fs& (0+255),w,b
  6940  000CA2  26D9               	addwf	fsr2l,f,c
  6941  000CA4  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6942  000CA6  22DA               	addwfc	fsr2h,f,c
  6943  000CA8  CFDE F082          	movff	postinc2,find_volume@nrsv
  6944  000CAC  CFDD F083          	movff	postdec2,find_volume@nrsv+1
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;ff.c: 2297:  if (!nrsv) return FR_NO_FILESYSTEM;
  6948  000CB0  5182               	movf	find_volume@nrsv& (0+255),w,b
  6949  000CB2  1183               	iorwf	(find_volume@nrsv+1)& (0+255),w,b
  6950  000CB4  B4D8               	btfsc	status,2,c
  6951  000CB6  D6F3               	goto	u7940
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;ff.c: 2300:  sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
  6955  000CB8  EE20 F008          	lfsr	2,8
  6956  000CBC  5198               	movf	find_volume@fs& (0+255),w,b
  6957  000CBE  26D9               	addwf	fsr2l,f,c
  6958  000CC0  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6959  000CC2  22DA               	addwfc	fsr2h,f,c
  6960  000CC4  CFDE F04A          	movff	postinc2,??_find_volume
  6961  000CC8  CFDD F04B          	movff	postdec2,??_find_volume+1
  6962  000CCC  0E04               	movlw	4
  6963  000CCE  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  6964  000CD0                     u8045:
  6965  000CD0  90D8               	bcf	status,0,c
  6966  000CD2  324B               	rrcf	??_find_volume+1,f,c
  6967  000CD4  324A               	rrcf	??_find_volume,f,c
  6968  000CD6  2E4C               	decfsz	(??_find_volume+2)& (0+255),f,c
  6969  000CD8  D7FB               	goto	u8045
  6970  000CDA  5182               	movf	find_volume@nrsv& (0+255),w,b
  6971  000CDC  244A               	addwf	??_find_volume,w,c
  6972  000CDE  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  6973  000CE0  5183               	movf	(find_volume@nrsv+1)& (0+255),w,b
  6974  000CE2  204B               	addwfc	??_find_volume+1,w,c
  6975  000CE4  6E4E               	movwf	(??_find_volume+4)& (0+255),c
  6976  000CE6  6A4F               	clrf	(??_find_volume+5)& (0+255),c
  6977  000CE8  B0D8               	btfsc	status,0,c
  6978  000CEA  2A4F               	incf	(??_find_volume+5)& (0+255),f,c
  6979  000CEC  6A50               	clrf	(??_find_volume+6)& (0+255),c
  6980  000CEE  518D               	movf	find_volume@fasize& (0+255),w,b
  6981  000CF0  244D               	addwf	??_find_volume+3,w,c
  6982  000CF2  6F7C               	movwf	find_volume@sysect& (0+255),b
  6983  000CF4  518E               	movf	(find_volume@fasize+1)& (0+255),w,b
  6984  000CF6  204E               	addwfc	??_find_volume+4,w,c
  6985  000CF8  6F7D               	movwf	(find_volume@sysect+1)& (0+255),b
  6986  000CFA  518F               	movf	(find_volume@fasize+2)& (0+255),w,b
  6987  000CFC  204F               	addwfc	??_find_volume+5,w,c
  6988  000CFE  6F7E               	movwf	(find_volume@sysect+2)& (0+255),b
  6989  000D00  5190               	movf	(find_volume@fasize+3)& (0+255),w,b
  6990  000D02  2050               	addwfc	??_find_volume+6,w,c
  6991  000D04  6F7F               	movwf	(find_volume@sysect+3)& (0+255),b
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;ff.c: 2301:  if (tsect < sysect) return FR_NO_FILESYSTEM;
  6995  000D06  517C               	movf	find_volume@sysect& (0+255),w,b
  6996  000D08  5D84               	subwf	find_volume@tsect& (0+255),w,b
  6997  000D0A  517D               	movf	(find_volume@sysect+1)& (0+255),w,b
  6998  000D0C  5985               	subwfb	(find_volume@tsect+1)& (0+255),w,b
  6999  000D0E  517E               	movf	(find_volume@sysect+2)& (0+255),w,b
  7000  000D10  5986               	subwfb	(find_volume@tsect+2)& (0+255),w,b
  7001  000D12  517F               	movf	(find_volume@sysect+3)& (0+255),w,b
  7002  000D14  5987               	subwfb	(find_volume@tsect+3)& (0+255),w,b
  7003  000D16  A0D8               	btfss	status,0,c
  7004  000D18  D6C2               	goto	u7940
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;ff.c: 2302:  nclst = (tsect - sysect) / fs->csize;
  7008  000D1A  517C               	movf	find_volume@sysect& (0+255),w,b
  7009  000D1C  5D84               	subwf	find_volume@tsect& (0+255),w,b
  7010  000D1E  6E01               	movwf	___lldiv@dividend,c
  7011  000D20  517D               	movf	(find_volume@sysect+1)& (0+255),w,b
  7012  000D22  5985               	subwfb	(find_volume@tsect+1)& (0+255),w,b
  7013  000D24  6E02               	movwf	___lldiv@dividend+1,c
  7014  000D26  517E               	movf	(find_volume@sysect+2)& (0+255),w,b
  7015  000D28  5986               	subwfb	(find_volume@tsect+2)& (0+255),w,b
  7016  000D2A  6E03               	movwf	___lldiv@dividend+2,c
  7017  000D2C  517F               	movf	(find_volume@sysect+3)& (0+255),w,b
  7018  000D2E  5987               	subwfb	(find_volume@tsect+3)& (0+255),w,b
  7019  000D30  6E04               	movwf	___lldiv@dividend+3,c
  7020  000D32  EE20 F002          	lfsr	2,2
  7021  000D36  5198               	movf	find_volume@fs& (0+255),w,b
  7022  000D38  26D9               	addwf	fsr2l,f,c
  7023  000D3A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7024  000D3C  22DA               	addwfc	fsr2h,f,c
  7025  000D3E  50DF               	movf	indf2,w,c
  7026  000D40  6E4A               	movwf	??_find_volume& (0+255),c
  7027  000D42  504A               	movf	??_find_volume,w,c
  7028  000D44  6E05               	movwf	___lldiv@divisor,c
  7029  000D46  6A06               	clrf	___lldiv@divisor+1,c
  7030  000D48  6A07               	clrf	___lldiv@divisor+2,c
  7031  000D4A  6A08               	clrf	___lldiv@divisor+3,c
  7032  000D4C  ECE6  F02B         	call	___lldiv	;wreg free
  7033  000D50  C001  F088         	movff	?___lldiv,find_volume@nclst
  7034  000D54  C002  F089         	movff	?___lldiv+1,find_volume@nclst+1
  7035  000D58  C003  F08A         	movff	?___lldiv+2,find_volume@nclst+2
  7036  000D5C  C004  F08B         	movff	?___lldiv+3,find_volume@nclst+3
  7037                           
  7038                           ;ff.c: 2303:  if (!nclst) return FR_NO_FILESYSTEM;
  7039  000D60  0100               	movlb	0	; () banked
  7040  000D62  5188               	movf	find_volume@nclst& (0+255),w,b
  7041  000D64  1189               	iorwf	(find_volume@nclst+1)& (0+255),w,b
  7042  000D66  118A               	iorwf	(find_volume@nclst+2)& (0+255),w,b
  7043  000D68  118B               	iorwf	(find_volume@nclst+3)& (0+255),w,b
  7044  000D6A  B4D8               	btfsc	status,2,c
  7045  000D6C  D698               	goto	u7940
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;ff.c: 2304:  fmt = 1;
  7049  000D6E  0E01               	movlw	1
  7050  000D70  6F97               	movwf	find_volume@fmt& (0+255),b
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;ff.c: 2305:  if (nclst >= 4086U) fmt = 2;
  7054  000D72  518B               	movf	(find_volume@nclst+3)& (0+255),w,b
  7055  000D74  118A               	iorwf	(find_volume@nclst+2)& (0+255),w,b
  7056  000D76  E106               	bnz	u8070
  7057  000D78  0EF6               	movlw	246
  7058  000D7A  5D88               	subwf	find_volume@nclst& (0+255),w,b
  7059  000D7C  0E0F               	movlw	15
  7060  000D7E  5989               	subwfb	(find_volume@nclst+1)& (0+255),w,b
  7061  000D80  A0D8               	btfss	status,0,c
  7062  000D82  D002               	goto	l6063
  7063  000D84                     u8070:
  7064                           
  7065                           ; BSR set to: 0
  7066  000D84  0E02               	movlw	2
  7067  000D86  6F97               	movwf	find_volume@fmt& (0+255),b
  7068  000D88                     l6063:
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;ff.c: 2306:  if (nclst >= 65526U) fmt = 3;
  7072  000D88  518B               	movf	(find_volume@nclst+3)& (0+255),w,b
  7073  000D8A  118A               	iorwf	(find_volume@nclst+2)& (0+255),w,b
  7074  000D8C  E106               	bnz	u8080
  7075  000D8E  0EF6               	movlw	246
  7076  000D90  5D88               	subwf	find_volume@nclst& (0+255),w,b
  7077  000D92  0EFF               	movlw	255
  7078  000D94  5989               	subwfb	(find_volume@nclst+1)& (0+255),w,b
  7079  000D96  A0D8               	btfss	status,0,c
  7080  000D98  D002               	goto	l6067
  7081  000D9A                     u8080:
  7082                           
  7083                           ; BSR set to: 0
  7084  000D9A  0E03               	movlw	3
  7085  000D9C  6F97               	movwf	find_volume@fmt& (0+255),b
  7086  000D9E                     l6067:
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;ff.c: 2309:  fs->n_fatent = nclst + 2;
  7090  000D9E  0E02               	movlw	2
  7091  000DA0  2588               	addwf	find_volume@nclst& (0+255),w,b
  7092  000DA2  6E4A               	movwf	??_find_volume& (0+255),c
  7093  000DA4  0E00               	movlw	0
  7094  000DA6  2189               	addwfc	(find_volume@nclst+1)& (0+255),w,b
  7095  000DA8  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  7096  000DAA  0E00               	movlw	0
  7097  000DAC  218A               	addwfc	(find_volume@nclst+2)& (0+255),w,b
  7098  000DAE  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  7099  000DB0  0E00               	movlw	0
  7100  000DB2  218B               	addwfc	(find_volume@nclst+3)& (0+255),w,b
  7101  000DB4  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  7102  000DB6  EE20 F012          	lfsr	2,18
  7103  000DBA  5198               	movf	find_volume@fs& (0+255),w,b
  7104  000DBC  26D9               	addwf	fsr2l,f,c
  7105  000DBE  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7106  000DC0  22DA               	addwfc	fsr2h,f,c
  7107  000DC2  C04A  FFDE         	movff	??_find_volume,postinc2
  7108  000DC6  C04B  FFDE         	movff	??_find_volume+1,postinc2
  7109  000DCA  C04C  FFDE         	movff	??_find_volume+2,postinc2
  7110  000DCE  C04D  FFDE         	movff	??_find_volume+3,postinc2
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;ff.c: 2310:  fs->volbase = bsect;
  7114  000DD2  EE20 F01A          	lfsr	2,26
  7115  000DD6  5198               	movf	find_volume@fs& (0+255),w,b
  7116  000DD8  26D9               	addwf	fsr2l,f,c
  7117  000DDA  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7118  000DDC  22DA               	addwfc	fsr2h,f,c
  7119  000DDE  C091  FFDE         	movff	find_volume@bsect,postinc2
  7120  000DE2  C092  FFDE         	movff	find_volume@bsect+1,postinc2
  7121  000DE6  C093  FFDE         	movff	find_volume@bsect+2,postinc2
  7122  000DEA  C094  FFDE         	movff	find_volume@bsect+3,postinc2
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;ff.c: 2311:  fs->fatbase = bsect + nrsv;
  7126  000DEE  5182               	movf	find_volume@nrsv& (0+255),w,b
  7127  000DF0  2591               	addwf	find_volume@bsect& (0+255),w,b
  7128  000DF2  6E4A               	movwf	??_find_volume& (0+255),c
  7129  000DF4  5183               	movf	(find_volume@nrsv+1)& (0+255),w,b
  7130  000DF6  2192               	addwfc	(find_volume@bsect+1)& (0+255),w,b
  7131  000DF8  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  7132  000DFA  0E00               	movlw	0
  7133  000DFC  2193               	addwfc	(find_volume@bsect+2)& (0+255),w,b
  7134  000DFE  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  7135  000E00  0E00               	movlw	0
  7136  000E02  2194               	addwfc	(find_volume@bsect+3)& (0+255),w,b
  7137  000E04  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  7138  000E06  EE20 F01E          	lfsr	2,30
  7139  000E0A  5198               	movf	find_volume@fs& (0+255),w,b
  7140  000E0C  26D9               	addwf	fsr2l,f,c
  7141  000E0E  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7142  000E10  22DA               	addwfc	fsr2h,f,c
  7143  000E12  C04A  FFDE         	movff	??_find_volume,postinc2
  7144  000E16  C04B  FFDE         	movff	??_find_volume+1,postinc2
  7145  000E1A  C04C  FFDE         	movff	??_find_volume+2,postinc2
  7146  000E1E  C04D  FFDE         	movff	??_find_volume+3,postinc2
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;ff.c: 2312:  fs->database = bsect + sysect;
  7150  000E22  517C               	movf	find_volume@sysect& (0+255),w,b
  7151  000E24  2591               	addwf	find_volume@bsect& (0+255),w,b
  7152  000E26  6E4A               	movwf	??_find_volume& (0+255),c
  7153  000E28  517D               	movf	(find_volume@sysect+1)& (0+255),w,b
  7154  000E2A  2192               	addwfc	(find_volume@bsect+1)& (0+255),w,b
  7155  000E2C  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  7156  000E2E  517E               	movf	(find_volume@sysect+2)& (0+255),w,b
  7157  000E30  2193               	addwfc	(find_volume@bsect+2)& (0+255),w,b
  7158  000E32  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  7159  000E34  517F               	movf	(find_volume@sysect+3)& (0+255),w,b
  7160  000E36  2194               	addwfc	(find_volume@bsect+3)& (0+255),w,b
  7161  000E38  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  7162  000E3A  EE20 F026          	lfsr	2,38
  7163  000E3E  5198               	movf	find_volume@fs& (0+255),w,b
  7164  000E40  26D9               	addwf	fsr2l,f,c
  7165  000E42  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7166  000E44  22DA               	addwfc	fsr2h,f,c
  7167  000E46  C04A  FFDE         	movff	??_find_volume,postinc2
  7168  000E4A  C04B  FFDE         	movff	??_find_volume+1,postinc2
  7169  000E4E  C04C  FFDE         	movff	??_find_volume+2,postinc2
  7170  000E52  C04D  FFDE         	movff	??_find_volume+3,postinc2
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;ff.c: 2313:  if (fmt == 3) {
  7174  000E56  0E03               	movlw	3
  7175  000E58  1997               	xorwf	find_volume@fmt& (0+255),w,b
  7176  000E5A  A4D8               	btfss	status,2,c
  7177  000E5C  D03D               	goto	l6087
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;ff.c: 2314:   if (fs->n_rootdir) return FR_NO_FILESYSTEM;
  7181  000E5E  EE20 F008          	lfsr	2,8
  7182  000E62  5198               	movf	find_volume@fs& (0+255),w,b
  7183  000E64  26D9               	addwf	fsr2l,f,c
  7184  000E66  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7185  000E68  22DA               	addwfc	fsr2h,f,c
  7186  000E6A  50DE               	movf	postinc2,w,c
  7187  000E6C  10DE               	iorwf	postinc2,w,c
  7188  000E6E  A4D8               	btfss	status,2,c
  7189  000E70  D616               	goto	u7940
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;ff.c: 2315:   fs->dirbase = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 44));
  7193  000E72  EE20 F05A          	lfsr	2,90
  7194  000E76  5198               	movf	find_volume@fs& (0+255),w,b
  7195  000E78  26D9               	addwf	fsr2l,f,c
  7196  000E7A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7197  000E7C  22DA               	addwfc	fsr2h,f,c
  7198  000E7E  EE10 F022          	lfsr	1,34
  7199  000E82  5198               	movf	find_volume@fs& (0+255),w,b
  7200  000E84  26E1               	addwf	fsr1l,f,c
  7201  000E86  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7202  000E88  22E2               	addwfc	fsr1h,f,c
  7203  000E8A  CFDE FFE6          	movff	postinc2,postinc1
  7204  000E8E  CFDE FFE6          	movff	postinc2,postinc1
  7205  000E92  CFDE FFE6          	movff	postinc2,postinc1
  7206  000E96  CFDE FFE6          	movff	postinc2,postinc1
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;ff.c: 2316:   szbfat = fs->n_fatent * 4;
  7210  000E9A  EE20 F012          	lfsr	2,18
  7211  000E9E  5198               	movf	find_volume@fs& (0+255),w,b
  7212  000EA0  26D9               	addwf	fsr2l,f,c
  7213  000EA2  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7214  000EA4  22DA               	addwfc	fsr2h,f,c
  7215  000EA6  CFDE F04A          	movff	postinc2,??_find_volume
  7216  000EAA  CFDE F04B          	movff	postinc2,??_find_volume+1
  7217  000EAE  CFDE F04C          	movff	postinc2,??_find_volume+2
  7218  000EB2  CFDE F04D          	movff	postinc2,??_find_volume+3
  7219  000EB6  0E02               	movlw	2
  7220  000EB8                     u8115:
  7221  000EB8  90D8               	bcf	status,0,c
  7222  000EBA  364A               	rlcf	??_find_volume,f,c
  7223  000EBC  364B               	rlcf	??_find_volume+1,f,c
  7224  000EBE  364C               	rlcf	??_find_volume+2,f,c
  7225  000EC0  364D               	rlcf	??_find_volume+3,f,c
  7226  000EC2  2EE8               	decfsz	wreg,f,c
  7227  000EC4  D7F9               	goto	u8115
  7228  000EC6  C04A  F076         	movff	??_find_volume,find_volume@szbfat
  7229  000ECA  C04B  F077         	movff	??_find_volume+1,find_volume@szbfat+1
  7230  000ECE  C04C  F078         	movff	??_find_volume+2,find_volume@szbfat+2
  7231  000ED2  C04D  F079         	movff	??_find_volume+3,find_volume@szbfat+3
  7232                           
  7233                           ;ff.c: 2317:  } else {
  7234  000ED6  D091               	goto	l547
  7235  000ED8                     l6087:
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;ff.c: 2318:   if (!fs->n_rootdir) return FR_NO_FILESYSTEM;
  7239  000ED8  EE20 F008          	lfsr	2,8
  7240  000EDC  5198               	movf	find_volume@fs& (0+255),w,b
  7241  000EDE  26D9               	addwf	fsr2l,f,c
  7242  000EE0  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7243  000EE2  22DA               	addwfc	fsr2h,f,c
  7244  000EE4  50DE               	movf	postinc2,w,c
  7245  000EE6  10DE               	iorwf	postinc2,w,c
  7246  000EE8  B4D8               	btfsc	status,2,c
  7247  000EEA  D5D9               	goto	u7940
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;ff.c: 2319:   fs->dirbase = fs->fatbase + fasize;
  7251  000EEC  EE20 F01E          	lfsr	2,30
  7252  000EF0  5198               	movf	find_volume@fs& (0+255),w,b
  7253  000EF2  26D9               	addwf	fsr2l,f,c
  7254  000EF4  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7255  000EF6  22DA               	addwfc	fsr2h,f,c
  7256  000EF8  CFDE F04A          	movff	postinc2,??_find_volume
  7257  000EFC  CFDE F04B          	movff	postinc2,??_find_volume+1
  7258  000F00  CFDE F04C          	movff	postinc2,??_find_volume+2
  7259  000F04  CFDE F04D          	movff	postinc2,??_find_volume+3
  7260  000F08  518D               	movf	find_volume@fasize& (0+255),w,b
  7261  000F0A  244A               	addwf	??_find_volume,w,c
  7262  000F0C  6E4E               	movwf	(??_find_volume+4)& (0+255),c
  7263  000F0E  518E               	movf	(find_volume@fasize+1)& (0+255),w,b
  7264  000F10  204B               	addwfc	??_find_volume+1,w,c
  7265  000F12  6E4F               	movwf	(??_find_volume+5)& (0+255),c
  7266  000F14  518F               	movf	(find_volume@fasize+2)& (0+255),w,b
  7267  000F16  204C               	addwfc	??_find_volume+2,w,c
  7268  000F18  6E50               	movwf	(??_find_volume+6)& (0+255),c
  7269  000F1A  5190               	movf	(find_volume@fasize+3)& (0+255),w,b
  7270  000F1C  204D               	addwfc	??_find_volume+3,w,c
  7271  000F1E  6E51               	movwf	(??_find_volume+7)& (0+255),c
  7272  000F20  EE20 F022          	lfsr	2,34
  7273  000F24  5198               	movf	find_volume@fs& (0+255),w,b
  7274  000F26  26D9               	addwf	fsr2l,f,c
  7275  000F28  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7276  000F2A  22DA               	addwfc	fsr2h,f,c
  7277  000F2C  C04E  FFDE         	movff	??_find_volume+4,postinc2
  7278  000F30  C04F  FFDE         	movff	??_find_volume+5,postinc2
  7279  000F34  C050  FFDE         	movff	??_find_volume+6,postinc2
  7280  000F38  C051  FFDE         	movff	??_find_volume+7,postinc2
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;ff.c: 2320:   szbfat = (fmt == 2) ?
  7284  000F3C  0E02               	movlw	2
  7285  000F3E  1997               	xorwf	find_volume@fmt& (0+255),w,b
  7286  000F40  B4D8               	btfsc	status,2,c
  7287  000F42  D044               	goto	l6099
  7288                           
  7289                           ; BSR set to: 0
  7290  000F44  EE20 F012          	lfsr	2,18
  7291  000F48  5198               	movf	find_volume@fs& (0+255),w,b
  7292  000F4A  26D9               	addwf	fsr2l,f,c
  7293  000F4C  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7294  000F4E  22DA               	addwfc	fsr2h,f,c
  7295  000F50  CFDE F04A          	movff	postinc2,??_find_volume
  7296  000F54  CFDE F04B          	movff	postinc2,??_find_volume+1
  7297  000F58  CFDE F04C          	movff	postinc2,??_find_volume+2
  7298  000F5C  CFDE F04D          	movff	postinc2,??_find_volume+3
  7299  000F60  0E01               	movlw	1
  7300  000F62  144A               	andwf	??_find_volume,w,c
  7301  000F64  6E4E               	movwf	(??_find_volume+4)& (0+255),c
  7302  000F66  0E00               	movlw	0
  7303  000F68  144B               	andwf	??_find_volume+1,w,c
  7304  000F6A  6E4F               	movwf	(??_find_volume+5)& (0+255),c
  7305  000F6C  0E00               	movlw	0
  7306  000F6E  144C               	andwf	??_find_volume+2,w,c
  7307  000F70  6E50               	movwf	(??_find_volume+6)& (0+255),c
  7308  000F72  0E00               	movlw	0
  7309  000F74  144D               	andwf	??_find_volume+3,w,c
  7310  000F76  6E51               	movwf	(??_find_volume+7)& (0+255),c
  7311  000F78  EE20 F012          	lfsr	2,18
  7312  000F7C  5198               	movf	find_volume@fs& (0+255),w,b
  7313  000F7E  26D9               	addwf	fsr2l,f,c
  7314  000F80  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7315  000F82  22DA               	addwfc	fsr2h,f,c
  7316  000F84  CFDE F001          	movff	postinc2,___lmul@multiplier
  7317  000F88  CFDE F002          	movff	postinc2,___lmul@multiplier+1
  7318  000F8C  CFDE F003          	movff	postinc2,___lmul@multiplier+2
  7319  000F90  CFDE F004          	movff	postinc2,___lmul@multiplier+3
  7320  000F94  0E03               	movlw	3
  7321  000F96  6E05               	movwf	___lmul@multiplicand,c
  7322  000F98  0E00               	movlw	0
  7323  000F9A  6E06               	movwf	___lmul@multiplicand+1,c
  7324  000F9C  0E00               	movlw	0
  7325  000F9E  6E07               	movwf	___lmul@multiplicand+2,c
  7326  000FA0  0E00               	movlw	0
  7327  000FA2  6E08               	movwf	___lmul@multiplicand+3,c
  7328  000FA4  ECAD  F02D         	call	___lmul	;wreg free
  7329  000FA8  90D8               	bcf	status,0,c
  7330  000FAA  3204               	rrcf	?___lmul+3,f,c
  7331  000FAC  3203               	rrcf	?___lmul+2,f,c
  7332  000FAE  3202               	rrcf	?___lmul+1,f,c
  7333  000FB0  3201               	rrcf	?___lmul,f,c
  7334  000FB2  504E               	movf	??_find_volume+4,w,c
  7335  000FB4  2401               	addwf	?___lmul,w,c
  7336  000FB6  0100               	movlb	0	; () banked
  7337  000FB8  6F76               	movwf	find_volume@szbfat& (0+255),b
  7338  000FBA  504F               	movf	??_find_volume+5,w,c
  7339  000FBC  2002               	addwfc	?___lmul+1,w,c
  7340  000FBE  6F77               	movwf	(find_volume@szbfat+1)& (0+255),b
  7341  000FC0  5050               	movf	??_find_volume+6,w,c
  7342  000FC2  2003               	addwfc	?___lmul+2,w,c
  7343  000FC4  6F78               	movwf	(find_volume@szbfat+2)& (0+255),b
  7344  000FC6  5051               	movf	??_find_volume+7,w,c
  7345  000FC8  2004               	addwfc	?___lmul+3,w,c
  7346  000FCA  D016               	goto	L6
  7347  000FCC                     l6099:
  7348                           
  7349                           ; BSR set to: 0
  7350  000FCC  EE20 F012          	lfsr	2,18
  7351  000FD0  5198               	movf	find_volume@fs& (0+255),w,b
  7352  000FD2  26D9               	addwf	fsr2l,f,c
  7353  000FD4  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7354  000FD6  22DA               	addwfc	fsr2h,f,c
  7355  000FD8  CFDE F04A          	movff	postinc2,??_find_volume
  7356  000FDC  CFDE F04B          	movff	postinc2,??_find_volume+1
  7357  000FE0  CFDE F04C          	movff	postinc2,??_find_volume+2
  7358  000FE4  CFDE F04D          	movff	postinc2,??_find_volume+3
  7359  000FE8  90D8               	bcf	status,0,c
  7360  000FEA  344A               	rlcf	??_find_volume,w,c
  7361  000FEC  6F76               	movwf	find_volume@szbfat& (0+255),b
  7362  000FEE  344B               	rlcf	??_find_volume+1,w,c
  7363  000FF0  6F77               	movwf	(find_volume@szbfat+1)& (0+255),b
  7364  000FF2  344C               	rlcf	??_find_volume+2,w,c
  7365  000FF4  6F78               	movwf	(find_volume@szbfat+2)& (0+255),b
  7366  000FF6  344D               	rlcf	??_find_volume+3,w,c
  7367  000FF8                     L6:
  7368  000FF8  6F79               	movwf	(find_volume@szbfat+3)& (0+255),b
  7369  000FFA                     l547:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;ff.c: 2323:  if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512))
  7373  000FFA  0EFF               	movlw	255
  7374  000FFC  2576               	addwf	find_volume@szbfat& (0+255),w,b
  7375  000FFE  6E4A               	movwf	??_find_volume& (0+255),c
  7376  001000  0E01               	movlw	1
  7377  001002  2177               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
  7378  001004  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  7379  001006  0E00               	movlw	0
  7380  001008  2178               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
  7381  00100A  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  7382  00100C  0E00               	movlw	0
  7383  00100E  2179               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
  7384  001010  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  7385  001012  0E0A               	movlw	10
  7386  001014  D005               	goto	u8140
  7387  001016                     u8145:
  7388  001016  90D8               	bcf	status,0,c
  7389  001018  324D               	rrcf	??_find_volume+3,f,c
  7390  00101A  324C               	rrcf	??_find_volume+2,f,c
  7391  00101C  324B               	rrcf	??_find_volume+1,f,c
  7392  00101E  324A               	rrcf	??_find_volume,f,c
  7393  001020                     u8140:
  7394  001020  2EE8               	decfsz	wreg,f,c
  7395  001022  D7F9               	goto	u8145
  7396  001024  EE20 F016          	lfsr	2,22
  7397  001028  5198               	movf	find_volume@fs& (0+255),w,b
  7398  00102A  26D9               	addwf	fsr2l,f,c
  7399  00102C  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7400  00102E  22DA               	addwfc	fsr2h,f,c
  7401  001030  504A               	movf	??_find_volume,w,c
  7402  001032  5CDE               	subwf	postinc2,w,c
  7403  001034  504B               	movf	??_find_volume+1,w,c
  7404  001036  58DE               	subwfb	postinc2,w,c
  7405  001038  504C               	movf	??_find_volume+2,w,c
  7406  00103A  58DE               	subwfb	postinc2,w,c
  7407  00103C  504D               	movf	??_find_volume+3,w,c
  7408  00103E  58DE               	subwfb	postinc2,w,c
  7409  001040  A0D8               	btfss	status,0,c
  7410  001042  D52D               	goto	u7940
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;ff.c: 2328:  fs->last_clust = fs->free_clust = 0xFFFFFFFF;
  7414  001044  EE20 F00E          	lfsr	2,14
  7415  001048  5198               	movf	find_volume@fs& (0+255),w,b
  7416  00104A  26D9               	addwf	fsr2l,f,c
  7417  00104C  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7418  00104E  22DA               	addwfc	fsr2h,f,c
  7419  001050  0EFF               	movlw	255
  7420  001052  6EDE               	movwf	postinc2,c
  7421  001054  0EFF               	movlw	255
  7422  001056  6EDE               	movwf	postinc2,c
  7423  001058  0EFF               	movlw	255
  7424  00105A  6EDE               	movwf	postinc2,c
  7425  00105C  0EFF               	movlw	255
  7426  00105E  6EDD               	movwf	postdec2,c
  7427  001060  52DD               	movf	postdec2,f,c
  7428  001062  52DD               	movf	postdec2,f,c
  7429  001064  EE10 F00A          	lfsr	1,10
  7430  001068  5198               	movf	find_volume@fs& (0+255),w,b
  7431  00106A  26E1               	addwf	fsr1l,f,c
  7432  00106C  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7433  00106E  22E2               	addwfc	fsr1h,f,c
  7434  001070  CFDE FFE6          	movff	postinc2,postinc1
  7435  001074  CFDE FFE6          	movff	postinc2,postinc1
  7436  001078  CFDE FFE6          	movff	postinc2,postinc1
  7437  00107C  CFDE FFE6          	movff	postinc2,postinc1
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;ff.c: 2331:  fs->fsi_flag = 0x80;
  7441  001080  EE20 F005          	lfsr	2,5
  7442  001084  5198               	movf	find_volume@fs& (0+255),w,b
  7443  001086  26D9               	addwf	fsr2l,f,c
  7444  001088  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7445  00108A  22DA               	addwfc	fsr2h,f,c
  7446  00108C  0E80               	movlw	128
  7447  00108E  6EDF               	movwf	indf2,c
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;ff.c: 2333:  if (fmt == 3
  7451  001090  0E03               	movlw	3
  7452  001092  1997               	xorwf	find_volume@fmt& (0+255),w,b
  7453  001094  A4D8               	btfss	status,2,c
  7454  001096  D083               	goto	l6123
  7455                           
  7456                           ; BSR set to: 0
  7457  001098  EE20 F05E          	lfsr	2,94
  7458  00109C  5198               	movf	find_volume@fs& (0+255),w,b
  7459  00109E  26D9               	addwf	fsr2l,f,c
  7460  0010A0  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7461  0010A2  22DA               	addwfc	fsr2h,f,c
  7462  0010A4  04DE               	decf	postinc2,w,c
  7463  0010A6  10DE               	iorwf	postinc2,w,c
  7464  0010A8  A4D8               	btfss	status,2,c
  7465  0010AA  D079               	goto	l6123
  7466                           
  7467                           ; BSR set to: 0
  7468  0010AC  C098  F030         	movff	find_volume@fs,move_window@fs
  7469  0010B0  C099  F031         	movff	find_volume@fs+1,move_window@fs+1
  7470  0010B4  0E01               	movlw	1
  7471  0010B6  2591               	addwf	find_volume@bsect& (0+255),w,b
  7472  0010B8  6E32               	movwf	move_window@sector,c
  7473  0010BA  0E00               	movlw	0
  7474  0010BC  2192               	addwfc	(find_volume@bsect+1)& (0+255),w,b
  7475  0010BE  6E33               	movwf	move_window@sector+1,c
  7476  0010C0  0E00               	movlw	0
  7477  0010C2  2193               	addwfc	(find_volume@bsect+2)& (0+255),w,b
  7478  0010C4  6E34               	movwf	move_window@sector+2,c
  7479  0010C6  0E00               	movlw	0
  7480  0010C8  2194               	addwfc	(find_volume@bsect+3)& (0+255),w,b
  7481  0010CA  6E35               	movwf	move_window@sector+3,c
  7482  0010CC  EC49  F02B         	call	_move_window	;wreg free
  7483  0010D0  0900               	iorlw	0
  7484  0010D2  A4D8               	btfss	status,2,c
  7485  0010D4  D064               	goto	l6123
  7486                           
  7487                           ;ff.c: 2336:  {;ff.c: 2337:   fs->fsi_flag = 0;
  7488  0010D6  0100               	movlb	0	; () banked
  7489  0010D8  EE20 F005          	lfsr	2,5
  7490  0010DC  5198               	movf	find_volume@fs& (0+255),w,b
  7491  0010DE  26D9               	addwf	fsr2l,f,c
  7492  0010E0  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7493  0010E2  22DA               	addwfc	fsr2h,f,c
  7494  0010E4  0E00               	movlw	0
  7495  0010E6  6EDF               	movwf	indf2,c
  7496                           
  7497                           ;ff.c: 2338:   if ((WORD)(*(WORD*)(BYTE*)(fs->win + 510)) == 0xAA55
  7498  0010E8  EE22 F02C          	lfsr	2,556
  7499  0010EC  5198               	movf	find_volume@fs& (0+255),w,b
  7500  0010EE  26D9               	addwf	fsr2l,f,c
  7501  0010F0  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7502  0010F2  22DA               	addwfc	fsr2h,f,c
  7503  0010F4  0E55               	movlw	85
  7504  0010F6  18DE               	xorwf	postinc2,w,c
  7505  0010F8  E152               	bnz	l6123
  7506  0010FA  0EAA               	movlw	170
  7507  0010FC  18DE               	xorwf	postinc2,w,c
  7508  0010FE  A4D8               	btfss	status,2,c
  7509  001100  D04E               	goto	l6123
  7510                           
  7511                           ; BSR set to: 0
  7512  001102  EE20 F02E          	lfsr	2,46
  7513  001106  5198               	movf	find_volume@fs& (0+255),w,b
  7514  001108  26D9               	addwf	fsr2l,f,c
  7515  00110A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7516  00110C  22DA               	addwfc	fsr2h,f,c
  7517  00110E  0E52               	movlw	82
  7518  001110  18DE               	xorwf	postinc2,w,c
  7519  001112  E145               	bnz	l6123
  7520  001114  0E52               	movlw	82
  7521  001116  18DE               	xorwf	postinc2,w,c
  7522  001118  E142               	bnz	l6123
  7523  00111A  0E61               	movlw	97
  7524  00111C  18DE               	xorwf	postinc2,w,c
  7525  00111E  E13F               	bnz	l6123
  7526  001120  0E41               	movlw	65
  7527  001122  18DE               	xorwf	postinc2,w,c
  7528  001124  A4D8               	btfss	status,2,c
  7529  001126  D03B               	goto	l6123
  7530                           
  7531                           ; BSR set to: 0
  7532  001128  EE22 F012          	lfsr	2,530
  7533  00112C  5198               	movf	find_volume@fs& (0+255),w,b
  7534  00112E  26D9               	addwf	fsr2l,f,c
  7535  001130  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7536  001132  22DA               	addwfc	fsr2h,f,c
  7537  001134  0E72               	movlw	114
  7538  001136  18DE               	xorwf	postinc2,w,c
  7539  001138  E132               	bnz	l6123
  7540  00113A  0E72               	movlw	114
  7541  00113C  18DE               	xorwf	postinc2,w,c
  7542  00113E  E12F               	bnz	l6123
  7543  001140  0E41               	movlw	65
  7544  001142  18DE               	xorwf	postinc2,w,c
  7545  001144  E12C               	bnz	l6123
  7546  001146  0E61               	movlw	97
  7547  001148  18DE               	xorwf	postinc2,w,c
  7548  00114A  A4D8               	btfss	status,2,c
  7549  00114C  D028               	goto	l6123
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;ff.c: 2341:   {;ff.c: 2343:    fs->free_clust = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 488)
      +                          );
  7553  00114E  EE22 F016          	lfsr	2,534
  7554  001152  5198               	movf	find_volume@fs& (0+255),w,b
  7555  001154  26D9               	addwf	fsr2l,f,c
  7556  001156  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7557  001158  22DA               	addwfc	fsr2h,f,c
  7558  00115A  EE10 F00E          	lfsr	1,14
  7559  00115E  5198               	movf	find_volume@fs& (0+255),w,b
  7560  001160  26E1               	addwf	fsr1l,f,c
  7561  001162  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7562  001164  22E2               	addwfc	fsr1h,f,c
  7563  001166  CFDE FFE6          	movff	postinc2,postinc1
  7564  00116A  CFDE FFE6          	movff	postinc2,postinc1
  7565  00116E  CFDE FFE6          	movff	postinc2,postinc1
  7566  001172  CFDE FFE6          	movff	postinc2,postinc1
  7567                           
  7568                           ;ff.c: 2346:    fs->last_clust = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 492));
  7569  001176  EE22 F01A          	lfsr	2,538
  7570  00117A  5198               	movf	find_volume@fs& (0+255),w,b
  7571  00117C  26D9               	addwf	fsr2l,f,c
  7572  00117E  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7573  001180  22DA               	addwfc	fsr2h,f,c
  7574  001182  EE10 F00A          	lfsr	1,10
  7575  001186  5198               	movf	find_volume@fs& (0+255),w,b
  7576  001188  26E1               	addwf	fsr1l,f,c
  7577  00118A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7578  00118C  22E2               	addwfc	fsr1h,f,c
  7579  00118E  CFDE FFE6          	movff	postinc2,postinc1
  7580  001192  CFDE FFE6          	movff	postinc2,postinc1
  7581  001196  CFDE FFE6          	movff	postinc2,postinc1
  7582  00119A  CFDE FFE6          	movff	postinc2,postinc1
  7583  00119E                     l6123:
  7584                           
  7585                           ;ff.c: 2352:  fs->fs_type = fmt;
  7586  00119E  C098  FFD9         	movff	find_volume@fs,fsr2l
  7587  0011A2  C099  FFDA         	movff	find_volume@fs+1,fsr2h
  7588  0011A6  C097  FFDF         	movff	find_volume@fmt,indf2
  7589                           
  7590                           ;ff.c: 2353:  fs->id = ++Fsid;
  7591  0011AA  0100               	movlb	0	; () banked
  7592  0011AC  4BE9               	infsnz	_Fsid& (0+255),f,b
  7593  0011AE  2BEA               	incf	(_Fsid+1)& (0+255),f,b
  7594  0011B0  EE20 F006          	lfsr	2,6
  7595  0011B4  5198               	movf	find_volume@fs& (0+255),w,b
  7596  0011B6  26D9               	addwf	fsr2l,f,c
  7597  0011B8  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7598  0011BA  22DA               	addwfc	fsr2h,f,c
  7599  0011BC  C0E9  FFDE         	movff	_Fsid,postinc2
  7600  0011C0  C0EA  FFDD         	movff	_Fsid+1,postdec2
  7601  0011C4  EF59  F004         	goto	l5903
  7602  0011C8                     __end_of_find_volume:
  7603                           	opt callstack 0
  7604                           
  7605 ;; *************** function _get_ldnumber *****************
  7606 ;; Defined at:
  7607 ;;		line 2114 in file "ff.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;  path            2    0[COMRAM] PTR PTR const unsigned c
  7610 ;;		 -> f_open@path(2), f_mount@path(2), f_mount@rp(2), 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;  tt              2   12[COMRAM] PTR const unsigned char 
  7613 ;;		 -> STR_4(9), STR_3(1), 
  7614 ;;  i               2   10[COMRAM] unsigned short 
  7615 ;;  vol             2    8[COMRAM] int 
  7616 ;;  tp              2    6[COMRAM] PTR const unsigned char 
  7617 ;;		 -> STR_4(9), STR_3(1), 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  2    0[COMRAM] int 
  7620 ;; Registers used:
  7621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7627 ;;      Params:         2       0       0       0       0       0       0       0       0
  7628 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7629 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7630 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7631 ;;Total ram usage:       14 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_find_volume
  7637 ;;		_f_mount
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text19
  7642  005062                     __ptext19:
  7643                           	opt callstack 0
  7644  005062                     _get_ldnumber:
  7645                           	opt callstack 27
  7646                           
  7647                           ;ff.c: 2115:  const TCHAR** path;ff.c: 2117: {;ff.c: 2118:  const TCHAR *tp, *tt;;ff.c: 
      +                          2119:  UINT i;;ff.c: 2120:  int vol = -1;
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;incstack = 0
  7651  005062  6809               	setf	get_ldnumber@vol,c
  7652  005064  680A               	setf	get_ldnumber@vol+1,c
  7653                           
  7654                           ;ff.c: 2129:  if (*path) {
  7655  005066  C001  FFD9         	movff	get_ldnumber@path,fsr2l
  7656  00506A  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
  7657  00506E  50DE               	movf	postinc2,w,c
  7658  005070  10DE               	iorwf	postinc2,w,c
  7659  005072  B4D8               	btfsc	status,2,c
  7660  005074  D05B               	goto	l5679
  7661                           
  7662                           ;ff.c: 2130:   for (tt = *path; (UINT)*tt >= (0 ? ' ' : '!') && *tt != ':'; tt++) ;
  7663  005076  C001  FFD9         	movff	get_ldnumber@path,fsr2l
  7664  00507A  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
  7665  00507E  CFDE F00D          	movff	postinc2,get_ldnumber@tt
  7666  005082  CFDD F00E          	movff	postdec2,get_ldnumber@tt+1
  7667  005086  D002               	goto	l5653
  7668  005088                     l5651:
  7669  005088  4A0D               	infsnz	get_ldnumber@tt,f,c
  7670  00508A  2A0E               	incf	get_ldnumber@tt+1,f,c
  7671  00508C                     l5653:
  7672  00508C  C00D  FFF6         	movff	get_ldnumber@tt,tblptrl
  7673  005090  C00E  FFF7         	movff	get_ldnumber@tt+1,tblptrh
  7674  005094                     	if	0	;tblptru may be non-zero
  7675  005094                     	endif
  7676  005094                     	if	0	;tblptru may be non-zero
  7677  005094                     	endif
  7678  005094  0E20               	movlw	32
  7679  005096  0008               	tblrd		*
  7680  005098  64F5               	cpfsgt	tablat,c
  7681  00509A  D009               	goto	u7410
  7682  00509C  C00D  FFF6         	movff	get_ldnumber@tt,tblptrl
  7683  0050A0  C00E  FFF7         	movff	get_ldnumber@tt+1,tblptrh
  7684  0050A4                     	if	0	;tblptru may be non-zero
  7685  0050A4                     	endif
  7686  0050A4                     	if	0	;tblptru may be non-zero
  7687  0050A4                     	endif
  7688  0050A4  0008               	tblrd		*
  7689  0050A6  50F5               	movf	tablat,w,c
  7690  0050A8  0A3A               	xorlw	58
  7691  0050AA  A4D8               	btfss	status,2,c
  7692  0050AC  D7ED               	goto	l5651
  7693  0050AE                     u7410:
  7694                           
  7695                           ;ff.c: 2131:   if (*tt == ':') {
  7696  0050AE  C00D  FFF6         	movff	get_ldnumber@tt,tblptrl
  7697  0050B2  C00E  FFF7         	movff	get_ldnumber@tt+1,tblptrh
  7698  0050B6                     	if	0	;tblptru may be non-zero
  7699  0050B6                     	endif
  7700  0050B6                     	if	0	;tblptru may be non-zero
  7701  0050B6                     	endif
  7702  0050B6  0008               	tblrd		*
  7703  0050B8  50F5               	movf	tablat,w,c
  7704  0050BA  0A3A               	xorlw	58
  7705  0050BC  A4D8               	btfss	status,2,c
  7706  0050BE  D03B               	goto	l5683
  7707                           
  7708                           ;ff.c: 2132:    tp = *path;
  7709  0050C0  C001  FFD9         	movff	get_ldnumber@path,fsr2l
  7710  0050C4  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
  7711  0050C8  CFDE F007          	movff	postinc2,get_ldnumber@tp
  7712  0050CC  CFDD F008          	movff	postdec2,get_ldnumber@tp+1
  7713                           
  7714                           ;ff.c: 2133:    i = *tp++ - '0';
  7715  0050D0  C007  FFF6         	movff	get_ldnumber@tp,tblptrl
  7716  0050D4  C008  FFF7         	movff	get_ldnumber@tp+1,tblptrh
  7717  0050D8                     	if	0	;tblptru may be non-zero
  7718  0050D8                     	endif
  7719  0050D8                     	if	0	;tblptru may be non-zero
  7720  0050D8                     	endif
  7721  0050D8  0008               	tblrd		*
  7722  0050DA  CFF5 F003          	movff	tablat,??_get_ldnumber
  7723  0050DE  0ED0               	movlw	208
  7724  0050E0  2403               	addwf	??_get_ldnumber,w,c
  7725  0050E2  6E0B               	movwf	get_ldnumber@i,c
  7726  0050E4  6A0C               	clrf	get_ldnumber@i+1,c
  7727  0050E6  0EFF               	movlw	255
  7728  0050E8  220C               	addwfc	get_ldnumber@i+1,f,c
  7729  0050EA  4A07               	infsnz	get_ldnumber@tp,f,c
  7730  0050EC  2A08               	incf	get_ldnumber@tp+1,f,c
  7731                           
  7732                           ;ff.c: 2134:    if (i < 10 && tp == tt) {
  7733  0050EE  500C               	movf	get_ldnumber@i+1,w,c
  7734  0050F0  E11D               	bnz	l5679
  7735  0050F2  0E0A               	movlw	10
  7736  0050F4  5C0B               	subwf	get_ldnumber@i,w,c
  7737  0050F6  B0D8               	btfsc	status,0,c
  7738  0050F8  D019               	goto	l5679
  7739  0050FA  500D               	movf	get_ldnumber@tt,w,c
  7740  0050FC  1807               	xorwf	get_ldnumber@tp,w,c
  7741  0050FE  E116               	bnz	l5679
  7742  005100  500E               	movf	get_ldnumber@tt+1,w,c
  7743  005102  1808               	xorwf	get_ldnumber@tp+1,w,c
  7744  005104  A4D8               	btfss	status,2,c
  7745  005106  D012               	goto	l5679
  7746                           
  7747                           ;ff.c: 2135:     if (i < 1) {
  7748  005108  500B               	movf	get_ldnumber@i,w,c
  7749  00510A  100C               	iorwf	get_ldnumber@i+1,w,c
  7750  00510C  A4D8               	btfss	status,2,c
  7751  00510E  D00E               	goto	l5679
  7752                           
  7753                           ;ff.c: 2136:      vol = (int)i;
  7754  005110  C00B  F009         	movff	get_ldnumber@i,get_ldnumber@vol
  7755  005114  C00C  F00A         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
  7756                           
  7757                           ;ff.c: 2137:      *path = ++tt;
  7758  005118  4A0D               	infsnz	get_ldnumber@tt,f,c
  7759  00511A  2A0E               	incf	get_ldnumber@tt+1,f,c
  7760  00511C  C001  FFD9         	movff	get_ldnumber@path,fsr2l
  7761  005120  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
  7762  005124  C00D  FFDE         	movff	get_ldnumber@tt,postinc2
  7763  005128  C00E  FFDD         	movff	get_ldnumber@tt+1,postdec2
  7764  00512C                     l5679:
  7765                           
  7766                           ;ff.c: 2156:    return vol;
  7767  00512C  C009  F001         	movff	get_ldnumber@vol,?_get_ldnumber
  7768  005130  C00A  F002         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
  7769  005134  0012               	return	
  7770  005136                     l5683:
  7771                           
  7772                           ;ff.c: 2161:   vol = 0;
  7773  005136  0E00               	movlw	0
  7774  005138  6E0A               	movwf	get_ldnumber@vol+1,c
  7775  00513A  0E00               	movlw	0
  7776  00513C  6E09               	movwf	get_ldnumber@vol,c
  7777  00513E  D7F6               	goto	l5679
  7778  005140                     __end_of_get_ldnumber:
  7779                           	opt callstack 0
  7780                           
  7781 ;; *************** function _disk_initialize *****************
  7782 ;; Defined at:
  7783 ;;		line 296 in file "diskio.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  pdrv            1    wreg     unsigned char 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  pdrv            1   17[COMRAM] unsigned char 
  7788 ;;  ocr             4   18[COMRAM] unsigned char [4]
  7789 ;;  tmr             2   26[COMRAM] unsigned short 
  7790 ;;  n               1   28[COMRAM] unsigned char 
  7791 ;;  ty              1   25[COMRAM] unsigned char 
  7792 ;;  cmd             1   24[COMRAM] unsigned char 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      unsigned char 
  7795 ;; Registers used:
  7796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7802 ;;      Params:         0       0       0       0       0       0       0       0       0
  7803 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7804 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7805 ;;      Totals:        13       0       0       0       0       0       0       0       0
  7806 ;;Total ram usage:       13 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    5
  7809 ;; This function calls:
  7810 ;;		_SPI1_Exchange8bit
  7811 ;;		_SPI1_Initialize
  7812 ;;		_SPI1_Open
  7813 ;;		_deselect
  7814 ;;		_send_cmd
  7815 ;; This function is called by:
  7816 ;;		_find_volume
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text20
  7821  00415A                     __ptext20:
  7822                           	opt callstack 0
  7823  00415A                     _disk_initialize:
  7824                           	opt callstack 22
  7825                           
  7826                           ;incstack = 0
  7827                           ;disk_initialize@pdrv stored from wreg
  7828  00415A  6E12               	movwf	disk_initialize@pdrv,c
  7829                           
  7830                           ;diskio.c: 297:  BYTE pdrv;diskio.c: 299: {;diskio.c: 300:  BYTE n, cmd, ty, ocr[4];;dis
      +                          kio.c: 301:  UINT tmr;;diskio.c: 304:  if (pdrv) return 0x01;
  7831  00415C  5012               	movf	disk_initialize@pdrv,w,c
  7832  00415E  B4D8               	btfsc	status,2,c
  7833  004160  D002               	goto	l70
  7834  004162  0E01               	movlw	1
  7835  004164  0012               	return	
  7836  004166                     l70:
  7837                           
  7838                           ;diskio.c: 306:  if (Stat & 0x02) return Stat;
  7839  004166  0100               	movlb	0	; () banked
  7840  004168  A3E4               	btfss	_Stat& (0+255),1,b
  7841  00416A  D003               	goto	l5283
  7842  00416C                     u6700:
  7843  00416C  0100               	movlb	0	; () banked
  7844  00416E  51E4               	movf	_Stat& (0+255),w,b
  7845  004170  0012               	return	
  7846  004172                     l5283:
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;diskio.c: 308:  SPI1_Initialize();
  7850  004172  ECF8  F02E         	call	_SPI1_Initialize	;wreg free
  7851                           
  7852                           ;diskio.c: 309:  for (n = 10; n; n--) SPI1_Exchange8bit(0xFF);
  7853  004176  0E0A               	movlw	10
  7854  004178  6E1D               	movwf	disk_initialize@n,c
  7855  00417A  D004               	goto	l5291
  7856  00417C                     l5287:
  7857  00417C  0EFF               	movlw	255
  7858  00417E  ECDA  F02E         	call	_SPI1_Exchange8bit
  7859  004182  061D               	decf	disk_initialize@n,f,c
  7860  004184                     l5291:
  7861  004184  501D               	movf	disk_initialize@n,w,c
  7862  004186  A4D8               	btfss	status,2,c
  7863  004188  D7F9               	goto	l5287
  7864                           
  7865                           ;diskio.c: 311:  ty = 0;
  7866  00418A  0E00               	movlw	0
  7867  00418C  6E1A               	movwf	disk_initialize@ty,c
  7868                           
  7869                           ;diskio.c: 312:  if (send_cmd((0), 0) == 1) {
  7870  00418E  0E00               	movlw	0
  7871  004190  6E0B               	movwf	send_cmd@arg,c
  7872  004192  0E00               	movlw	0
  7873  004194  6E0C               	movwf	send_cmd@arg+1,c
  7874  004196  0E00               	movlw	0
  7875  004198  6E0D               	movwf	send_cmd@arg+2,c
  7876  00419A  0E00               	movlw	0
  7877  00419C  6E0E               	movwf	send_cmd@arg+3,c
  7878  00419E  0E00               	movlw	0
  7879  0041A0  ECFC  F02D         	call	_send_cmd
  7880  0041A4  06E8               	decf	wreg,f,c
  7881  0041A6  A4D8               	btfss	status,2,c
  7882  0041A8  D0C1               	goto	l92
  7883                           
  7884                           ;diskio.c: 313:   if (send_cmd((8), 0x1AA) == 1) {
  7885  0041AA  0EAA               	movlw	170
  7886  0041AC  6E0B               	movwf	send_cmd@arg,c
  7887  0041AE  0E01               	movlw	1
  7888  0041B0  6E0C               	movwf	send_cmd@arg+1,c
  7889  0041B2  0E00               	movlw	0
  7890  0041B4  6E0D               	movwf	send_cmd@arg+2,c
  7891  0041B6  0E00               	movlw	0
  7892  0041B8  6E0E               	movwf	send_cmd@arg+3,c
  7893  0041BA  0E08               	movlw	8
  7894  0041BC  ECFC  F02D         	call	_send_cmd
  7895  0041C0  06E8               	decf	wreg,f,c
  7896  0041C2  A4D8               	btfss	status,2,c
  7897  0041C4  D067               	goto	l5347
  7898                           
  7899                           ;diskio.c: 314:    for (n = 0; n < 4; n++) ocr[n] = SPI1_Exchange8bit(0xFF);
  7900  0041C6  0E00               	movlw	0
  7901  0041C8  6E1D               	movwf	disk_initialize@n,c
  7902  0041CA                     l5305:
  7903  0041CA  0E13               	movlw	low disk_initialize@ocr
  7904  0041CC  241D               	addwf	disk_initialize@n,w,c
  7905  0041CE  6ED9               	movwf	fsr2l,c
  7906  0041D0  6ADA               	clrf	fsr2h,c
  7907  0041D2  0E00               	movlw	high disk_initialize@ocr
  7908  0041D4  22DA               	addwfc	fsr2h,f,c
  7909  0041D6  0EFF               	movlw	255
  7910  0041D8  ECDA  F02E         	call	_SPI1_Exchange8bit
  7911  0041DC  6EDF               	movwf	indf2,c
  7912  0041DE  2A1D               	incf	disk_initialize@n,f,c
  7913  0041E0  0E03               	movlw	3
  7914  0041E2  641D               	cpfsgt	disk_initialize@n,c
  7915  0041E4  D7F2               	goto	l5305
  7916                           
  7917                           ;diskio.c: 315:    if (ocr[2] == 0x01 && ocr[3] == 0xAA) {
  7918  0041E6  0415               	decf	disk_initialize@ocr+2,w,c
  7919  0041E8  A4D8               	btfss	status,2,c
  7920  0041EA  D0A0               	goto	l92
  7921  0041EC  0EAA               	movlw	170
  7922  0041EE  1816               	xorwf	disk_initialize@ocr+3,w,c
  7923  0041F0  A4D8               	btfss	status,2,c
  7924  0041F2  D09C               	goto	l92
  7925                           
  7926                           ;diskio.c: 316:     for (tmr = 1000; tmr; tmr--) {
  7927  0041F4  0E03               	movlw	3
  7928  0041F6  6E1C               	movwf	disk_initialize@tmr+1,c
  7929  0041F8  0EE8               	movlw	232
  7930  0041FA  6E1B               	movwf	disk_initialize@tmr,c
  7931  0041FC  D018               	goto	l81
  7932  0041FE                     l5317:
  7933                           
  7934                           ;diskio.c: 317:      if (send_cmd((0x80+41), 1UL << 30) == 0) break;
  7935  0041FE  0E00               	movlw	0
  7936  004200  6E0B               	movwf	send_cmd@arg,c
  7937  004202  0E00               	movlw	0
  7938  004204  6E0C               	movwf	send_cmd@arg+1,c
  7939  004206  0E00               	movlw	0
  7940  004208  6E0D               	movwf	send_cmd@arg+2,c
  7941  00420A  0E40               	movlw	64
  7942  00420C  6E0E               	movwf	send_cmd@arg+3,c
  7943  00420E  0EA9               	movlw	169
  7944  004210  ECFC  F02D         	call	_send_cmd
  7945  004214  0900               	iorlw	0
  7946  004216  B4D8               	btfsc	status,2,c
  7947  004218  D00E               	goto	u6780
  7948                           
  7949                           ;diskio.c: 318:      _delay((unsigned long)((1)*(8000000/4000.0)));
  7950  00421A  0E03               	movlw	3
  7951  00421C  6E11               	movwf	??_disk_initialize& (0+255),c
  7952  00421E  0E98               	movlw	152
  7953  004220                     u10027:
  7954  004220  2EE8               	decfsz	wreg,f,c
  7955  004222  D7FE               	bra	u10027
  7956  004224  2E11               	decfsz	??_disk_initialize& (0+255),f,c
  7957  004226  D7FC               	bra	u10027
  7958                           
  7959                           ;diskio.c: 319:     }
  7960  004228  061B               	decf	disk_initialize@tmr,f,c
  7961  00422A  A0D8               	btfss	status,0,c
  7962  00422C  061C               	decf	disk_initialize@tmr+1,f,c
  7963  00422E                     l81:
  7964  00422E  501B               	movf	disk_initialize@tmr,w,c
  7965  004230  101C               	iorwf	disk_initialize@tmr+1,w,c
  7966  004232  A4D8               	btfss	status,2,c
  7967  004234  D7E4               	goto	l5317
  7968  004236                     u6780:
  7969                           
  7970                           ;diskio.c: 320:     if (tmr && send_cmd((58), 0) == 0) {
  7971  004236  501B               	movf	disk_initialize@tmr,w,c
  7972  004238  101C               	iorwf	disk_initialize@tmr+1,w,c
  7973  00423A  B4D8               	btfsc	status,2,c
  7974  00423C  D077               	goto	l92
  7975  00423E  0E00               	movlw	0
  7976  004240  6E0B               	movwf	send_cmd@arg,c
  7977  004242  0E00               	movlw	0
  7978  004244  6E0C               	movwf	send_cmd@arg+1,c
  7979  004246  0E00               	movlw	0
  7980  004248  6E0D               	movwf	send_cmd@arg+2,c
  7981  00424A  0E00               	movlw	0
  7982  00424C  6E0E               	movwf	send_cmd@arg+3,c
  7983  00424E  0E3A               	movlw	58
  7984  004250  ECFC  F02D         	call	_send_cmd
  7985  004254  0900               	iorlw	0
  7986  004256  A4D8               	btfss	status,2,c
  7987  004258  D069               	goto	l92
  7988                           
  7989                           ;diskio.c: 321:      for (n = 0; n < 4; n++) ocr[n] = SPI1_Exchange8bit(0xFF);
  7990  00425A  0E00               	movlw	0
  7991  00425C  6E1D               	movwf	disk_initialize@n,c
  7992  00425E                     l5335:
  7993  00425E  0E13               	movlw	low disk_initialize@ocr
  7994  004260  241D               	addwf	disk_initialize@n,w,c
  7995  004262  6ED9               	movwf	fsr2l,c
  7996  004264  6ADA               	clrf	fsr2h,c
  7997  004266  0E00               	movlw	high disk_initialize@ocr
  7998  004268  22DA               	addwfc	fsr2h,f,c
  7999  00426A  0EFF               	movlw	255
  8000  00426C  ECDA  F02E         	call	_SPI1_Exchange8bit
  8001  004270  6EDF               	movwf	indf2,c
  8002  004272  2A1D               	incf	disk_initialize@n,f,c
  8003  004274  0E03               	movlw	3
  8004  004276  641D               	cpfsgt	disk_initialize@n,c
  8005  004278  D7F2               	goto	l5335
  8006                           
  8007                           ;diskio.c: 322:      ty = (ocr[0] & 0x40) ? 0x04 | 0x08 : 0x04;
  8008  00427A  BC13               	btfsc	disk_initialize@ocr,6,c
  8009  00427C  D004               	goto	l5343
  8010  00427E  0E00               	movlw	0
  8011  004280  6E18               	movwf	_disk_initialize$134+1,c
  8012  004282  0E04               	movlw	4
  8013  004284  D003               	goto	L7
  8014  004286                     l5343:
  8015  004286  0E00               	movlw	0
  8016  004288  6E18               	movwf	_disk_initialize$134+1,c
  8017  00428A  0E0C               	movlw	12
  8018  00428C                     L7:
  8019  00428C  6E17               	movwf	_disk_initialize$134,c
  8020  00428E  C017  F01A         	movff	_disk_initialize$134,disk_initialize@ty
  8021  004292  D04C               	goto	l92
  8022  004294                     l5347:
  8023                           
  8024                           ;diskio.c: 326:    if (send_cmd((0x80+41), 0) <= 1) {
  8025  004294  0E00               	movlw	0
  8026  004296  6E0B               	movwf	send_cmd@arg,c
  8027  004298  0E00               	movlw	0
  8028  00429A  6E0C               	movwf	send_cmd@arg+1,c
  8029  00429C  0E00               	movlw	0
  8030  00429E  6E0D               	movwf	send_cmd@arg+2,c
  8031  0042A0  0E00               	movlw	0
  8032  0042A2  6E0E               	movwf	send_cmd@arg+3,c
  8033  0042A4  0EA9               	movlw	169
  8034  0042A6  ECFC  F02D         	call	_send_cmd
  8035  0042AA  6E11               	movwf	??_disk_initialize& (0+255),c
  8036  0042AC  0E02               	movlw	2
  8037  0042AE  6011               	cpfslt	??_disk_initialize,c
  8038  0042B0  D004               	goto	l5351
  8039                           
  8040                           ;diskio.c: 327:     ty = 0x02; cmd = (0x80+41);
  8041  0042B2  0E02               	movlw	2
  8042  0042B4  6E1A               	movwf	disk_initialize@ty,c
  8043  0042B6  0EA9               	movlw	169
  8044  0042B8  D003               	goto	L8
  8045  0042BA                     l5351:
  8046                           
  8047                           ;diskio.c: 329:     ty = 0x01; cmd = (1);
  8048  0042BA  0E01               	movlw	1
  8049  0042BC  6E1A               	movwf	disk_initialize@ty,c
  8050  0042BE  0E01               	movlw	1
  8051  0042C0                     L8:
  8052  0042C0  6E19               	movwf	disk_initialize@cmd,c
  8053                           
  8054                           ;diskio.c: 331:    for (tmr = 1000; tmr; tmr--) {
  8055                           
  8056                           ;diskio.c: 330:    }
  8057  0042C2  0E03               	movlw	3
  8058  0042C4  6E1C               	movwf	disk_initialize@tmr+1,c
  8059  0042C6  0EE8               	movlw	232
  8060  0042C8  6E1B               	movwf	disk_initialize@tmr,c
  8061  0042CA  D018               	goto	l95
  8062  0042CC                     l5353:
  8063                           
  8064                           ;diskio.c: 332:     if (send_cmd(cmd, 0) == 0) break;
  8065  0042CC  0E00               	movlw	0
  8066  0042CE  6E0B               	movwf	send_cmd@arg,c
  8067  0042D0  0E00               	movlw	0
  8068  0042D2  6E0C               	movwf	send_cmd@arg+1,c
  8069  0042D4  0E00               	movlw	0
  8070  0042D6  6E0D               	movwf	send_cmd@arg+2,c
  8071  0042D8  0E00               	movlw	0
  8072  0042DA  6E0E               	movwf	send_cmd@arg+3,c
  8073  0042DC  5019               	movf	disk_initialize@cmd,w,c
  8074  0042DE  ECFC  F02D         	call	_send_cmd
  8075  0042E2  0900               	iorlw	0
  8076  0042E4  B4D8               	btfsc	status,2,c
  8077  0042E6  D00E               	goto	u6850
  8078                           
  8079                           ;diskio.c: 333:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8080  0042E8  0E03               	movlw	3
  8081  0042EA  6E11               	movwf	??_disk_initialize& (0+255),c
  8082  0042EC  0E98               	movlw	152
  8083  0042EE                     u10037:
  8084  0042EE  2EE8               	decfsz	wreg,f,c
  8085  0042F0  D7FE               	bra	u10037
  8086  0042F2  2E11               	decfsz	??_disk_initialize& (0+255),f,c
  8087  0042F4  D7FC               	bra	u10037
  8088                           
  8089                           ;diskio.c: 334:    }
  8090  0042F6  061B               	decf	disk_initialize@tmr,f,c
  8091  0042F8  A0D8               	btfss	status,0,c
  8092  0042FA  061C               	decf	disk_initialize@tmr+1,f,c
  8093  0042FC                     l95:
  8094  0042FC  501B               	movf	disk_initialize@tmr,w,c
  8095  0042FE  101C               	iorwf	disk_initialize@tmr+1,w,c
  8096  004300  A4D8               	btfss	status,2,c
  8097  004302  D7E4               	goto	l5353
  8098  004304                     u6850:
  8099                           
  8100                           ;diskio.c: 335:    if (!tmr || send_cmd((16), 512) != 0)
  8101  004304  501B               	movf	disk_initialize@tmr,w,c
  8102  004306  101C               	iorwf	disk_initialize@tmr+1,w,c
  8103  004308  B4D8               	btfsc	status,2,c
  8104  00430A  D00E               	goto	u6870
  8105  00430C  0E00               	movlw	0
  8106  00430E  6E0B               	movwf	send_cmd@arg,c
  8107  004310  0E02               	movlw	2
  8108  004312  6E0C               	movwf	send_cmd@arg+1,c
  8109  004314  0E00               	movlw	0
  8110  004316  6E0D               	movwf	send_cmd@arg+2,c
  8111  004318  0E00               	movlw	0
  8112  00431A  6E0E               	movwf	send_cmd@arg+3,c
  8113  00431C  0E10               	movlw	16
  8114  00431E  ECFC  F02D         	call	_send_cmd
  8115  004322  0900               	iorlw	0
  8116  004324  B4D8               	btfsc	status,2,c
  8117  004326  D002               	goto	l92
  8118  004328                     u6870:
  8119                           
  8120                           ;diskio.c: 336:     ty = 0;
  8121  004328  0E00               	movlw	0
  8122  00432A  6E1A               	movwf	disk_initialize@ty,c
  8123  00432C                     l92:
  8124                           
  8125                           ;diskio.c: 339:  CardType = ty;
  8126  00432C  C01A  F0ED         	movff	disk_initialize@ty,_CardType
  8127                           
  8128                           ;diskio.c: 340:  deselect();
  8129  004330  EC05  F02F         	call	_deselect	;wreg free
  8130                           
  8131                           ;diskio.c: 342:  if (ty) {
  8132  004334  501A               	movf	disk_initialize@ty,w,c
  8133  004336  B4D8               	btfsc	status,2,c
  8134  004338  D719               	goto	u6700
  8135                           
  8136                           ;diskio.c: 343:   Stat &= ~0x01;
  8137  00433A  0100               	movlb	0	; () banked
  8138  00433C  91E4               	bcf	_Stat& (0+255),0,b
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;diskio.c: 344:   SPI1_Open();
  8142  00433E  ECEA  F02E         	call	_SPI1_Open	;wreg free
  8143  004342  D714               	goto	u6700
  8144  004344                     __end_of_disk_initialize:
  8145                           	opt callstack 0
  8146                           
  8147 ;; *************** function _SPI1_Open *****************
  8148 ;; Defined at:
  8149 ;;		line 77 in file "mcc_generated_files/spi1.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;		None
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      void 
  8156 ;; Registers used:
  8157 ;;		wreg, status,2
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8163 ;;      Params:         0       0       0       0       0       0       0       0       0
  8164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8166 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8167 ;;Total ram usage:        0 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; This function calls:
  8170 ;;		Nothing
  8171 ;; This function is called by:
  8172 ;;		_disk_initialize
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           	psect	text21
  8177  005DD4                     __ptext21:
  8178                           	opt callstack 0
  8179  005DD4                     _SPI1_Open:
  8180                           	opt callstack 26
  8181                           
  8182                           ;mcc_generated_files/spi1.c: 81:  SSP1STAT = 0x40;
  8183                           
  8184                           ;incstack = 0
  8185  005DD4  0E40               	movlw	64
  8186  005DD6  6EC7               	movwf	4039,c	;volatile
  8187                           
  8188                           ;mcc_generated_files/spi1.c: 84:  SSP1CON1 = 0x20;
  8189  005DD8  0E20               	movlw	32
  8190  005DDA  6EC6               	movwf	4038,c	;volatile
  8191                           
  8192                           ;mcc_generated_files/spi1.c: 87:  SSP1ADD = 0x00;
  8193  005DDC  0E00               	movlw	0
  8194  005DDE  6EC8               	movwf	4040,c	;volatile
  8195  005DE0  0012               	return		;funcret
  8196  005DE2                     __end_of_SPI1_Open:
  8197                           	opt callstack 0
  8198                           
  8199 ;; *************** function _check_fs *****************
  8200 ;; Defined at:
  8201 ;;		line 2175 in file "ff.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  fs              2   58[COMRAM] PTR struct .
  8204 ;;		 -> FatFs(558), NULL(0), 
  8205 ;;  sect            4   60[COMRAM] unsigned long 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;		None
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      unsigned char 
  8210 ;; Registers used:
  8211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8217 ;;      Params:         6       0       0       0       0       0       0       0       0
  8218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8219 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8220 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8221 ;;Total ram usage:       10 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:    8
  8224 ;; This function calls:
  8225 ;;		_move_window
  8226 ;; This function is called by:
  8227 ;;		_find_volume
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           	psect	text22
  8232  004F76                     __ptext22:
  8233                           	opt callstack 0
  8234  004F76                     _check_fs:
  8235                           	opt callstack 19
  8236                           
  8237                           ;ff.c: 2176:  FATFS* fs,;ff.c: 2177:  DWORD sect;ff.c: 2179: {;ff.c: 2180:  fs->wflag = 
      +                          0; fs->winsect = 0xFFFFFFFF;
  8238                           
  8239                           ;incstack = 0
  8240  004F76  EE20 F004          	lfsr	2,4
  8241  004F7A  503B               	movf	check_fs@fs,w,c
  8242  004F7C  26D9               	addwf	fsr2l,f,c
  8243  004F7E  503C               	movf	check_fs@fs+1,w,c
  8244  004F80  22DA               	addwfc	fsr2h,f,c
  8245  004F82  0E00               	movlw	0
  8246  004F84  6EDF               	movwf	indf2,c
  8247  004F86  EE20 F02A          	lfsr	2,42
  8248  004F8A  503B               	movf	check_fs@fs,w,c
  8249  004F8C  26D9               	addwf	fsr2l,f,c
  8250  004F8E  503C               	movf	check_fs@fs+1,w,c
  8251  004F90  22DA               	addwfc	fsr2h,f,c
  8252  004F92  0EFF               	movlw	255
  8253  004F94  6EDE               	movwf	postinc2,c
  8254  004F96  0EFF               	movlw	255
  8255  004F98  6EDE               	movwf	postinc2,c
  8256  004F9A  0EFF               	movlw	255
  8257  004F9C  6EDE               	movwf	postinc2,c
  8258  004F9E  0EFF               	movlw	255
  8259  004FA0  6EDD               	movwf	postdec2,c
  8260                           
  8261                           ;ff.c: 2181:  if (move_window(fs, sect) != FR_OK)
  8262  004FA2  C03B  F030         	movff	check_fs@fs,move_window@fs
  8263  004FA6  C03C  F031         	movff	check_fs@fs+1,move_window@fs+1
  8264  004FAA  C03D  F032         	movff	check_fs@sect,move_window@sector
  8265  004FAE  C03E  F033         	movff	check_fs@sect+1,move_window@sector+1
  8266  004FB2  C03F  F034         	movff	check_fs@sect+2,move_window@sector+2
  8267  004FB6  C040  F035         	movff	check_fs@sect+3,move_window@sector+3
  8268  004FBA  EC49  F02B         	call	_move_window	;wreg free
  8269  004FBE  0900               	iorlw	0
  8270  004FC0  B4D8               	btfsc	status,2,c
  8271  004FC2  D002               	goto	l5697
  8272                           
  8273                           ;ff.c: 2182:   return 3;
  8274  004FC4  0E03               	movlw	3
  8275  004FC6  0012               	return	
  8276  004FC8                     l5697:
  8277                           
  8278                           ;ff.c: 2184:  if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
  8279  004FC8  EE22 F02C          	lfsr	2,556
  8280  004FCC  503B               	movf	check_fs@fs,w,c
  8281  004FCE  26D9               	addwf	fsr2l,f,c
  8282  004FD0  503C               	movf	check_fs@fs+1,w,c
  8283  004FD2  22DA               	addwfc	fsr2h,f,c
  8284  004FD4  0E55               	movlw	85
  8285  004FD6  18DE               	xorwf	postinc2,w,c
  8286  004FD8  E104               	bnz	u7470
  8287  004FDA  0EAA               	movlw	170
  8288  004FDC  18DE               	xorwf	postinc2,w,c
  8289  004FDE  B4D8               	btfsc	status,2,c
  8290  004FE0  D002               	goto	l5703
  8291  004FE2                     u7470:
  8292                           
  8293                           ;ff.c: 2185:   return 2;
  8294  004FE2  0E02               	movlw	2
  8295  004FE4  0012               	return	
  8296  004FE6                     l5703:
  8297                           
  8298                           ;ff.c: 2187:  if (((DWORD)(*(DWORD*)(BYTE*)(&fs->win[54])) & 0xFFFFFF) == 0x544146)
  8299  004FE6  EE20 F064          	lfsr	2,100
  8300  004FEA  503B               	movf	check_fs@fs,w,c
  8301  004FEC  26D9               	addwf	fsr2l,f,c
  8302  004FEE  503C               	movf	check_fs@fs+1,w,c
  8303  004FF0  22DA               	addwfc	fsr2h,f,c
  8304  004FF2  0EFF               	movlw	255
  8305  004FF4  14DE               	andwf	postinc2,w,c
  8306  004FF6  6E41               	movwf	??_check_fs& (0+255),c
  8307  004FF8  0EFF               	movlw	255
  8308  004FFA  14DE               	andwf	postinc2,w,c
  8309  004FFC  6E42               	movwf	(??_check_fs+1)& (0+255),c
  8310  004FFE  0EFF               	movlw	255
  8311  005000  14DE               	andwf	postinc2,w,c
  8312  005002  6E43               	movwf	(??_check_fs+2)& (0+255),c
  8313  005004  0E00               	movlw	0
  8314  005006  14DE               	andwf	postinc2,w,c
  8315  005008  6E44               	movwf	(??_check_fs+3)& (0+255),c
  8316  00500A  0E46               	movlw	70
  8317  00500C  1841               	xorwf	??_check_fs,w,c
  8318  00500E  E10A               	bnz	l5709
  8319  005010  0E41               	movlw	65
  8320  005012  1842               	xorwf	??_check_fs+1,w,c
  8321  005014  E107               	bnz	l5709
  8322  005016  0E54               	movlw	84
  8323  005018  1843               	xorwf	??_check_fs+2,w,c
  8324  00501A  1044               	iorwf	??_check_fs+3,w,c
  8325  00501C  A4D8               	btfss	status,2,c
  8326  00501E  D002               	goto	l5709
  8327  005020                     u7480:
  8328                           
  8329                           ;ff.c: 2188:   return 0;
  8330  005020  0E00               	movlw	0
  8331  005022  0012               	return	
  8332  005024                     l5709:
  8333                           
  8334                           ;ff.c: 2189:  if (((DWORD)(*(DWORD*)(BYTE*)(&fs->win[82])) & 0xFFFFFF) == 0x544146)
  8335  005024  EE20 F080          	lfsr	2,128
  8336  005028  503B               	movf	check_fs@fs,w,c
  8337  00502A  26D9               	addwf	fsr2l,f,c
  8338  00502C  503C               	movf	check_fs@fs+1,w,c
  8339  00502E  22DA               	addwfc	fsr2h,f,c
  8340  005030  0EFF               	movlw	255
  8341  005032  14DE               	andwf	postinc2,w,c
  8342  005034  6E41               	movwf	??_check_fs& (0+255),c
  8343  005036  0EFF               	movlw	255
  8344  005038  14DE               	andwf	postinc2,w,c
  8345  00503A  6E42               	movwf	(??_check_fs+1)& (0+255),c
  8346  00503C  0EFF               	movlw	255
  8347  00503E  14DE               	andwf	postinc2,w,c
  8348  005040  6E43               	movwf	(??_check_fs+2)& (0+255),c
  8349  005042  0E00               	movlw	0
  8350  005044  14DE               	andwf	postinc2,w,c
  8351  005046  6E44               	movwf	(??_check_fs+3)& (0+255),c
  8352  005048  0E46               	movlw	70
  8353  00504A  1841               	xorwf	??_check_fs,w,c
  8354  00504C  E108               	bnz	l5715
  8355  00504E  0E41               	movlw	65
  8356  005050  1842               	xorwf	??_check_fs+1,w,c
  8357  005052  E105               	bnz	l5715
  8358  005054  0E54               	movlw	84
  8359  005056  1843               	xorwf	??_check_fs+2,w,c
  8360  005058  1044               	iorwf	??_check_fs+3,w,c
  8361  00505A  B4D8               	btfsc	status,2,c
  8362  00505C  D7E1               	goto	u7480
  8363  00505E                     l5715:
  8364                           
  8365                           ;ff.c: 2192:  return 1;
  8366  00505E  0E01               	movlw	1
  8367  005060  0012               	return		;funcret
  8368  005062                     __end_of_check_fs:
  8369                           	opt callstack 0
  8370                           
  8371 ;; *************** function _f_lseek *****************
  8372 ;; Defined at:
  8373 ;;		line 3033 in file "ff.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;  fp              2   13[BANK0 ] PTR struct .
  8376 ;;		 -> Fil(32), 
  8377 ;;  ofs             4   15[BANK0 ] unsigned long 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  clst            4   48[BANK0 ] unsigned long 
  8380 ;;  bcs             4   44[BANK0 ] unsigned long 
  8381 ;;  nsect           4   40[BANK0 ] unsigned long 
  8382 ;;  ifptr           4   35[BANK0 ] unsigned long 
  8383 ;;  res             1   39[BANK0 ] enum E93
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      enum E93
  8386 ;; Registers used:
  8387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8393 ;;      Params:         0       6       0       0       0       0       0       0       0
  8394 ;;      Locals:         0      17       0       0       0       0       0       0       0
  8395 ;;      Temps:          0      16       0       0       0       0       0       0       0
  8396 ;;      Totals:         0      39       0       0       0       0       0       0       0
  8397 ;;Total ram usage:       39 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:   10
  8400 ;; This function calls:
  8401 ;;		___lldiv
  8402 ;;		_clust2sect
  8403 ;;		_create_chain
  8404 ;;		_get_fat
  8405 ;;		_validate
  8406 ;; This function is called by:
  8407 ;;		_guardar
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text23
  8412  00192C                     __ptext23:
  8413                           	opt callstack 0
  8414  00192C                     _f_lseek:
  8415                           	opt callstack 19
  8416                           
  8417                           ;ff.c: 3034:  FIL* fp,;ff.c: 3035:  DWORD ofs;ff.c: 3037: {;ff.c: 3038:  FRESULT res;;ff
      +                          .c: 3039:  DWORD clst, bcs, nsect, ifptr;;ff.c: 3045:  res = validate(fp);
  8418                           
  8419                           ;incstack = 0
  8420  00192C  C06D  F002         	movff	f_lseek@fp,validate@obj
  8421  001930  C06E  F003         	movff	f_lseek@fp+1,validate@obj+1
  8422  001934  EC9C  F02B         	call	_validate	;wreg free
  8423  001938  0100               	movlb	0	; () banked
  8424  00193A  6F87               	movwf	f_lseek@res& (0+255),b
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;ff.c: 3046:  if (res != FR_OK) return res;
  8428  00193C  5187               	movf	f_lseek@res& (0+255),w,b
  8429  00193E  B4D8               	btfsc	status,2,c
  8430  001940  D002               	goto	l6481
  8431  001942                     u8810:
  8432                           
  8433                           ; BSR set to: 0
  8434  001942  5187               	movf	f_lseek@res& (0+255),w,b
  8435  001944  0012               	return	
  8436  001946                     l6481:
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;ff.c: 3047:  if (fp->err)
  8440  001946  EE20 F005          	lfsr	2,5
  8441  00194A  516D               	movf	f_lseek@fp& (0+255),w,b
  8442  00194C  26D9               	addwf	fsr2l,f,c
  8443  00194E  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8444  001950  22DA               	addwfc	fsr2h,f,c
  8445  001952  50DF               	movf	indf2,w,c
  8446  001954  B4D8               	btfsc	status,2,c
  8447  001956  D008               	goto	l6487
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;ff.c: 3048:   return (FRESULT)fp->err;
  8451  001958  EE20 F005          	lfsr	2,5
  8452  00195C  516D               	movf	f_lseek@fp& (0+255),w,b
  8453  00195E  26D9               	addwf	fsr2l,f,c
  8454  001960  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8455  001962  22DA               	addwfc	fsr2h,f,c
  8456  001964  50DF               	movf	indf2,w,c
  8457  001966  0012               	return	
  8458  001968                     l6487:
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;ff.c: 3106:  {;ff.c: 3107:   if (ofs > fp->fsize
  8462  001968  EE20 F00A          	lfsr	2,10
  8463  00196C  516D               	movf	f_lseek@fp& (0+255),w,b
  8464  00196E  26D9               	addwf	fsr2l,f,c
  8465  001970  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8466  001972  22DA               	addwfc	fsr2h,f,c
  8467  001974  516F               	movf	f_lseek@ofs& (0+255),w,b
  8468  001976  5CDE               	subwf	postinc2,w,c
  8469  001978  5170               	movf	(f_lseek@ofs+1)& (0+255),w,b
  8470  00197A  58DE               	subwfb	postinc2,w,c
  8471  00197C  5171               	movf	(f_lseek@ofs+2)& (0+255),w,b
  8472  00197E  58DE               	subwfb	postinc2,w,c
  8473  001980  5172               	movf	(f_lseek@ofs+3)& (0+255),w,b
  8474  001982  58DE               	subwfb	postinc2,w,c
  8475  001984  B0D8               	btfsc	status,0,c
  8476  001986  D016               	goto	l667
  8477                           
  8478                           ; BSR set to: 0
  8479  001988  EE20 F004          	lfsr	2,4
  8480  00198C  516D               	movf	f_lseek@fp& (0+255),w,b
  8481  00198E  26D9               	addwf	fsr2l,f,c
  8482  001990  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8483  001992  22DA               	addwfc	fsr2h,f,c
  8484  001994  B2DF               	btfsc	indf2,1,c
  8485  001996  D00E               	goto	l667
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;ff.c: 3111:    ) ofs = fp->fsize;
  8489  001998  EE20 F00A          	lfsr	2,10
  8490  00199C  516D               	movf	f_lseek@fp& (0+255),w,b
  8491  00199E  26D9               	addwf	fsr2l,f,c
  8492  0019A0  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8493  0019A2  22DA               	addwfc	fsr2h,f,c
  8494  0019A4  CFDE F06F          	movff	postinc2,f_lseek@ofs
  8495  0019A8  CFDE F070          	movff	postinc2,f_lseek@ofs+1
  8496  0019AC  CFDE F071          	movff	postinc2,f_lseek@ofs+2
  8497  0019B0  CFDE F072          	movff	postinc2,f_lseek@ofs+3
  8498  0019B4                     l667:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;ff.c: 3113:   ifptr = fp->fptr;
  8502  0019B4  EE20 F006          	lfsr	2,6
  8503  0019B8  516D               	movf	f_lseek@fp& (0+255),w,b
  8504  0019BA  26D9               	addwf	fsr2l,f,c
  8505  0019BC  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8506  0019BE  22DA               	addwfc	fsr2h,f,c
  8507  0019C0  CFDE F083          	movff	postinc2,f_lseek@ifptr
  8508  0019C4  CFDE F084          	movff	postinc2,f_lseek@ifptr+1
  8509  0019C8  CFDE F085          	movff	postinc2,f_lseek@ifptr+2
  8510  0019CC  CFDE F086          	movff	postinc2,f_lseek@ifptr+3
  8511                           
  8512                           ;ff.c: 3114:   fp->fptr = nsect = 0;
  8513  0019D0  0E00               	movlw	0
  8514  0019D2  6F88               	movwf	f_lseek@nsect& (0+255),b
  8515  0019D4  0E00               	movlw	0
  8516  0019D6  6F89               	movwf	(f_lseek@nsect+1)& (0+255),b
  8517  0019D8  0E00               	movlw	0
  8518  0019DA  6F8A               	movwf	(f_lseek@nsect+2)& (0+255),b
  8519  0019DC  0E00               	movlw	0
  8520  0019DE  6F8B               	movwf	(f_lseek@nsect+3)& (0+255),b
  8521  0019E0  EE20 F006          	lfsr	2,6
  8522  0019E4  516D               	movf	f_lseek@fp& (0+255),w,b
  8523  0019E6  26D9               	addwf	fsr2l,f,c
  8524  0019E8  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8525  0019EA  22DA               	addwfc	fsr2h,f,c
  8526  0019EC  C088  FFDE         	movff	f_lseek@nsect,postinc2
  8527  0019F0  C089  FFDE         	movff	f_lseek@nsect+1,postinc2
  8528  0019F4  C08A  FFDE         	movff	f_lseek@nsect+2,postinc2
  8529  0019F8  C08B  FFDE         	movff	f_lseek@nsect+3,postinc2
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;ff.c: 3115:   if (ofs) {
  8533  0019FC  516F               	movf	f_lseek@ofs& (0+255),w,b
  8534  0019FE  1170               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
  8535  001A00  1171               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
  8536  001A02  1172               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
  8537  001A04  B4D8               	btfsc	status,2,c
  8538  001A06  D22D               	goto	l6581
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;ff.c: 3116:    bcs = (DWORD)fp->fs->csize * ((UINT)512);
  8542  001A08  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8543  001A0C  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8544  001A10  EE10 F002          	lfsr	1,2
  8545  001A14  50DE               	movf	postinc2,w,c
  8546  001A16  26E1               	addwf	fsr1l,f,c
  8547  001A18  50DD               	movf	postdec2,w,c
  8548  001A1A  22E2               	addwfc	fsr1h,f,c
  8549  001A1C  50E7               	movf	indf1,w,c
  8550  001A1E  6F73               	movwf	??_f_lseek& (0+255),b
  8551  001A20  C073  F074         	movff	??_f_lseek,??_f_lseek+1
  8552  001A24  6B75               	clrf	(??_f_lseek+2)& (0+255),b
  8553  001A26  6B76               	clrf	(??_f_lseek+3)& (0+255),b
  8554  001A28  6B77               	clrf	(??_f_lseek+4)& (0+255),b
  8555  001A2A  0E09               	movlw	9
  8556  001A2C                     u8865:
  8557  001A2C  90D8               	bcf	status,0,c
  8558  001A2E  3774               	rlcf	(??_f_lseek+1)& (0+255),f,b
  8559  001A30  3775               	rlcf	(??_f_lseek+2)& (0+255),f,b
  8560  001A32  3776               	rlcf	(??_f_lseek+3)& (0+255),f,b
  8561  001A34  3777               	rlcf	(??_f_lseek+4)& (0+255),f,b
  8562  001A36  2EE8               	decfsz	wreg,f,c
  8563  001A38  D7F9               	goto	u8865
  8564  001A3A  C074  F08C         	movff	??_f_lseek+1,f_lseek@bcs
  8565  001A3E  C075  F08D         	movff	??_f_lseek+2,f_lseek@bcs+1
  8566  001A42  C076  F08E         	movff	??_f_lseek+3,f_lseek@bcs+2
  8567  001A46  C077  F08F         	movff	??_f_lseek+4,f_lseek@bcs+3
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;ff.c: 3117:    if (ifptr > 0 &&
  8571  001A4A  5183               	movf	f_lseek@ifptr& (0+255),w,b
  8572  001A4C  1184               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
  8573  001A4E  1185               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
  8574  001A50  1186               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
  8575  001A52  B4D8               	btfsc	status,2,c
  8576  001A54  D097               	goto	l6503
  8577                           
  8578                           ; BSR set to: 0
  8579  001A56  0EFF               	movlw	255
  8580  001A58  256F               	addwf	f_lseek@ofs& (0+255),w,b
  8581  001A5A  6E01               	movwf	___lldiv@dividend,c
  8582  001A5C  0EFF               	movlw	255
  8583  001A5E  2170               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
  8584  001A60  6E02               	movwf	___lldiv@dividend+1,c
  8585  001A62  0EFF               	movlw	255
  8586  001A64  2171               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
  8587  001A66  6E03               	movwf	___lldiv@dividend+2,c
  8588  001A68  0EFF               	movlw	255
  8589  001A6A  2172               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
  8590  001A6C  6E04               	movwf	___lldiv@dividend+3,c
  8591  001A6E  C08C  F005         	movff	f_lseek@bcs,___lldiv@divisor
  8592  001A72  C08D  F006         	movff	f_lseek@bcs+1,___lldiv@divisor+1
  8593  001A76  C08E  F007         	movff	f_lseek@bcs+2,___lldiv@divisor+2
  8594  001A7A  C08F  F008         	movff	f_lseek@bcs+3,___lldiv@divisor+3
  8595  001A7E  ECE6  F02B         	call	___lldiv	;wreg free
  8596  001A82  C001  F073         	movff	?___lldiv,??_f_lseek
  8597  001A86  C002  F074         	movff	?___lldiv+1,??_f_lseek+1
  8598  001A8A  C003  F075         	movff	?___lldiv+2,??_f_lseek+2
  8599  001A8E  C004  F076         	movff	?___lldiv+3,??_f_lseek+3
  8600  001A92  0EFF               	movlw	255
  8601  001A94  0100               	movlb	0	; () banked
  8602  001A96  2583               	addwf	f_lseek@ifptr& (0+255),w,b
  8603  001A98  6E01               	movwf	___lldiv@dividend,c
  8604  001A9A  0EFF               	movlw	255
  8605  001A9C  2184               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
  8606  001A9E  6E02               	movwf	___lldiv@dividend+1,c
  8607  001AA0  0EFF               	movlw	255
  8608  001AA2  2185               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
  8609  001AA4  6E03               	movwf	___lldiv@dividend+2,c
  8610  001AA6  0EFF               	movlw	255
  8611  001AA8  2186               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
  8612  001AAA  6E04               	movwf	___lldiv@dividend+3,c
  8613  001AAC  C08C  F005         	movff	f_lseek@bcs,___lldiv@divisor
  8614  001AB0  C08D  F006         	movff	f_lseek@bcs+1,___lldiv@divisor+1
  8615  001AB4  C08E  F007         	movff	f_lseek@bcs+2,___lldiv@divisor+2
  8616  001AB8  C08F  F008         	movff	f_lseek@bcs+3,___lldiv@divisor+3
  8617  001ABC  ECE6  F02B         	call	___lldiv	;wreg free
  8618  001AC0  5001               	movf	?___lldiv,w,c
  8619  001AC2  0100               	movlb	0	; () banked
  8620  001AC4  5D73               	subwf	??_f_lseek& (0+255),w,b
  8621  001AC6  5002               	movf	?___lldiv+1,w,c
  8622  001AC8  5974               	subwfb	(??_f_lseek+1)& (0+255),w,b
  8623  001ACA  5003               	movf	?___lldiv+2,w,c
  8624  001ACC  5975               	subwfb	(??_f_lseek+2)& (0+255),w,b
  8625  001ACE  5004               	movf	?___lldiv+3,w,c
  8626  001AD0  5976               	subwfb	(??_f_lseek+3)& (0+255),w,b
  8627  001AD2  A0D8               	btfss	status,0,c
  8628  001AD4  D057               	goto	l6503
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;ff.c: 3118:     (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;ff.c: 3119:     fp->fptr = (ifp
      +                          tr - 1) & ~(bcs - 1);
  8632  001AD6  0EFF               	movlw	255
  8633  001AD8  258C               	addwf	f_lseek@bcs& (0+255),w,b
  8634  001ADA  6F73               	movwf	??_f_lseek& (0+255),b
  8635  001ADC  0EFF               	movlw	255
  8636  001ADE  218D               	addwfc	(f_lseek@bcs+1)& (0+255),w,b
  8637  001AE0  6F74               	movwf	(??_f_lseek+1)& (0+255),b
  8638  001AE2  0EFF               	movlw	255
  8639  001AE4  218E               	addwfc	(f_lseek@bcs+2)& (0+255),w,b
  8640  001AE6  6F75               	movwf	(??_f_lseek+2)& (0+255),b
  8641  001AE8  0EFF               	movlw	255
  8642  001AEA  218F               	addwfc	(f_lseek@bcs+3)& (0+255),w,b
  8643  001AEC  6F76               	movwf	(??_f_lseek+3)& (0+255),b
  8644  001AEE  1D73               	comf	??_f_lseek& (0+255),w,b
  8645  001AF0  6F77               	movwf	(??_f_lseek+4)& (0+255),b
  8646  001AF2  1D74               	comf	(??_f_lseek+1)& (0+255),w,b
  8647  001AF4  6F78               	movwf	(??_f_lseek+5)& (0+255),b
  8648  001AF6  1D75               	comf	(??_f_lseek+2)& (0+255),w,b
  8649  001AF8  6F79               	movwf	(??_f_lseek+6)& (0+255),b
  8650  001AFA  1D76               	comf	(??_f_lseek+3)& (0+255),w,b
  8651  001AFC  6F7A               	movwf	(??_f_lseek+7)& (0+255),b
  8652  001AFE  0EFF               	movlw	255
  8653  001B00  2583               	addwf	f_lseek@ifptr& (0+255),w,b
  8654  001B02  6F7B               	movwf	(??_f_lseek+8)& (0+255),b
  8655  001B04  0EFF               	movlw	255
  8656  001B06  2184               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
  8657  001B08  6F7C               	movwf	(??_f_lseek+9)& (0+255),b
  8658  001B0A  0EFF               	movlw	255
  8659  001B0C  2185               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
  8660  001B0E  6F7D               	movwf	(??_f_lseek+10)& (0+255),b
  8661  001B10  0EFF               	movlw	255
  8662  001B12  2186               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
  8663  001B14  6F7E               	movwf	(??_f_lseek+11)& (0+255),b
  8664  001B16  5177               	movf	(??_f_lseek+4)& (0+255),w,b
  8665  001B18  157B               	andwf	(??_f_lseek+8)& (0+255),w,b
  8666  001B1A  6F7F               	movwf	(??_f_lseek+12)& (0+255),b
  8667  001B1C  5178               	movf	(??_f_lseek+5)& (0+255),w,b
  8668  001B1E  157C               	andwf	(??_f_lseek+9)& (0+255),w,b
  8669  001B20  6F80               	movwf	(??_f_lseek+13)& (0+255),b
  8670  001B22  5179               	movf	(??_f_lseek+6)& (0+255),w,b
  8671  001B24  157D               	andwf	(??_f_lseek+10)& (0+255),w,b
  8672  001B26  6F81               	movwf	(??_f_lseek+14)& (0+255),b
  8673  001B28  517A               	movf	(??_f_lseek+7)& (0+255),w,b
  8674  001B2A  157E               	andwf	(??_f_lseek+11)& (0+255),w,b
  8675  001B2C  6F82               	movwf	(??_f_lseek+15)& (0+255),b
  8676  001B2E  EE20 F006          	lfsr	2,6
  8677  001B32  516D               	movf	f_lseek@fp& (0+255),w,b
  8678  001B34  26D9               	addwf	fsr2l,f,c
  8679  001B36  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8680  001B38  22DA               	addwfc	fsr2h,f,c
  8681  001B3A  C07F  FFDE         	movff	??_f_lseek+12,postinc2
  8682  001B3E  C080  FFDE         	movff	??_f_lseek+13,postinc2
  8683  001B42  C081  FFDE         	movff	??_f_lseek+14,postinc2
  8684  001B46  C082  FFDE         	movff	??_f_lseek+15,postinc2
  8685                           
  8686                           ;ff.c: 3120:     ofs -= fp->fptr;
  8687  001B4A  EE20 F006          	lfsr	2,6
  8688  001B4E  516D               	movf	f_lseek@fp& (0+255),w,b
  8689  001B50  26D9               	addwf	fsr2l,f,c
  8690  001B52  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8691  001B54  22DA               	addwfc	fsr2h,f,c
  8692  001B56  50DE               	movf	postinc2,w,c
  8693  001B58  5F6F               	subwf	f_lseek@ofs& (0+255),f,b
  8694  001B5A  50DE               	movf	postinc2,w,c
  8695  001B5C  5B70               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
  8696  001B5E  50DE               	movf	postinc2,w,c
  8697  001B60  5B71               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
  8698  001B62  50DD               	movf	postdec2,w,c
  8699  001B64  5B72               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
  8700                           
  8701                           ;ff.c: 3121:     clst = fp->clust;
  8702  001B66  EE20 F012          	lfsr	2,18
  8703  001B6A  516D               	movf	f_lseek@fp& (0+255),w,b
  8704  001B6C  26D9               	addwf	fsr2l,f,c
  8705  001B6E  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8706  001B70  22DA               	addwfc	fsr2h,f,c
  8707  001B72  CFDE F090          	movff	postinc2,f_lseek@clst
  8708  001B76  CFDE F091          	movff	postinc2,f_lseek@clst+1
  8709  001B7A  CFDE F092          	movff	postinc2,f_lseek@clst+2
  8710  001B7E  CFDE F093          	movff	postinc2,f_lseek@clst+3
  8711                           
  8712                           ;ff.c: 3122:    } else {
  8713  001B82  D06E               	goto	l6527
  8714  001B84                     l6503:
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;ff.c: 3123:     clst = fp->sclust;
  8718  001B84  EE20 F00E          	lfsr	2,14
  8719  001B88  516D               	movf	f_lseek@fp& (0+255),w,b
  8720  001B8A  26D9               	addwf	fsr2l,f,c
  8721  001B8C  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8722  001B8E  22DA               	addwfc	fsr2h,f,c
  8723  001B90  CFDE F090          	movff	postinc2,f_lseek@clst
  8724  001B94  CFDE F091          	movff	postinc2,f_lseek@clst+1
  8725  001B98  CFDE F092          	movff	postinc2,f_lseek@clst+2
  8726  001B9C  CFDE F093          	movff	postinc2,f_lseek@clst+3
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;ff.c: 3125:     if (clst == 0) {
  8730  001BA0  5190               	movf	f_lseek@clst& (0+255),w,b
  8731  001BA2  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8732  001BA4  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8733  001BA6  1193               	iorwf	(f_lseek@clst+3)& (0+255),w,b
  8734  001BA8  A4D8               	btfss	status,2,c
  8735  001BAA  D04C               	goto	l671
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;ff.c: 3126:      clst = create_chain(fp->fs, 0);
  8739  001BAC  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8740  001BB0  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8741  001BB4  CFDE F056          	movff	postinc2,create_chain@fs
  8742  001BB8  CFDD F057          	movff	postdec2,create_chain@fs+1
  8743  001BBC  0E00               	movlw	0
  8744  001BBE  6E58               	movwf	create_chain@clst,c
  8745  001BC0  0E00               	movlw	0
  8746  001BC2  6E59               	movwf	create_chain@clst+1,c
  8747  001BC4  0E00               	movlw	0
  8748  001BC6  6E5A               	movwf	create_chain@clst+2,c
  8749  001BC8  0E00               	movlw	0
  8750  001BCA  6E5B               	movwf	create_chain@clst+3,c
  8751  001BCC  EC49  F01B         	call	_create_chain	;wreg free
  8752  001BD0  C056  F090         	movff	?_create_chain,f_lseek@clst
  8753  001BD4  C057  F091         	movff	?_create_chain+1,f_lseek@clst+1
  8754  001BD8  C058  F092         	movff	?_create_chain+2,f_lseek@clst+2
  8755  001BDC  C059  F093         	movff	?_create_chain+3,f_lseek@clst+3
  8756                           
  8757                           ;ff.c: 3127:      if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  8758  001BE0  0100               	movlb	0	; () banked
  8759  001BE2  0590               	decf	f_lseek@clst& (0+255),w,b
  8760  001BE4  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8761  001BE6  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8762  001BE8  1193               	iorwf	(f_lseek@clst+3)& (0+255),w,b
  8763  001BEA  A4D8               	btfss	status,2,c
  8764  001BEC  D00A               	goto	l6517
  8765  001BEE                     u8900:
  8766                           
  8767                           ; BSR set to: 0
  8768  001BEE  EE20 F005          	lfsr	2,5
  8769  001BF2  516D               	movf	f_lseek@fp& (0+255),w,b
  8770  001BF4  26D9               	addwf	fsr2l,f,c
  8771  001BF6  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8772  001BF8  22DA               	addwfc	fsr2h,f,c
  8773  001BFA  0E02               	movlw	2
  8774  001BFC  6EDF               	movwf	indf2,c
  8775                           
  8776                           ; BSR set to: 0
  8777  001BFE  0E02               	movlw	2
  8778  001C00  0012               	return	
  8779  001C02                     l6517:
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;ff.c: 3128:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DIS
      +                          K_ERR; };
  8783  001C02  2990               	incf	f_lseek@clst& (0+255),w,b
  8784  001C04  E111               	bnz	l6525
  8785  001C06  2991               	incf	(f_lseek@clst+1)& (0+255),w,b
  8786  001C08  E10F               	bnz	l6525
  8787  001C0A  2992               	incf	(f_lseek@clst+2)& (0+255),w,b
  8788  001C0C  E10D               	bnz	l6525
  8789  001C0E  2993               	incf	(f_lseek@clst+3)& (0+255),w,b
  8790  001C10  A4D8               	btfss	status,2,c
  8791  001C12  D00A               	goto	l6525
  8792  001C14                     u8910:
  8793                           
  8794                           ; BSR set to: 0
  8795  001C14  EE20 F005          	lfsr	2,5
  8796  001C18  516D               	movf	f_lseek@fp& (0+255),w,b
  8797  001C1A  26D9               	addwf	fsr2l,f,c
  8798  001C1C  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8799  001C1E  22DA               	addwfc	fsr2h,f,c
  8800  001C20  0E01               	movlw	1
  8801  001C22  6EDF               	movwf	indf2,c
  8802                           
  8803                           ; BSR set to: 0
  8804  001C24  0E01               	movlw	1
  8805  001C26  0012               	return	
  8806  001C28                     l6525:
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;ff.c: 3129:      fp->sclust = clst;
  8810  001C28  EE20 F00E          	lfsr	2,14
  8811  001C2C  516D               	movf	f_lseek@fp& (0+255),w,b
  8812  001C2E  26D9               	addwf	fsr2l,f,c
  8813  001C30  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8814  001C32  22DA               	addwfc	fsr2h,f,c
  8815  001C34  C090  FFDE         	movff	f_lseek@clst,postinc2
  8816  001C38  C091  FFDE         	movff	f_lseek@clst+1,postinc2
  8817  001C3C  C092  FFDE         	movff	f_lseek@clst+2,postinc2
  8818  001C40  C093  FFDE         	movff	f_lseek@clst+3,postinc2
  8819  001C44                     l671:
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;ff.c: 3132:     fp->clust = clst;
  8823  001C44  EE20 F012          	lfsr	2,18
  8824  001C48  516D               	movf	f_lseek@fp& (0+255),w,b
  8825  001C4A  26D9               	addwf	fsr2l,f,c
  8826  001C4C  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8827  001C4E  22DA               	addwfc	fsr2h,f,c
  8828  001C50  C090  FFDE         	movff	f_lseek@clst,postinc2
  8829  001C54  C091  FFDE         	movff	f_lseek@clst+1,postinc2
  8830  001C58  C092  FFDE         	movff	f_lseek@clst+2,postinc2
  8831  001C5C  C093  FFDE         	movff	f_lseek@clst+3,postinc2
  8832  001C60                     l6527:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;ff.c: 3134:    if (clst != 0) {
  8836  001C60  5190               	movf	f_lseek@clst& (0+255),w,b
  8837  001C62  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8838  001C64  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8839  001C66  1193               	iorwf	(f_lseek@clst+3)& (0+255),w,b
  8840  001C68  A4D8               	btfss	status,2,c
  8841  001C6A  D097               	goto	l6563
  8842  001C6C  D0FA               	goto	l6581
  8843  001C6E                     l6531:
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;ff.c: 3137:      if (fp->flag & 0x02) {
  8847  001C6E  EE20 F004          	lfsr	2,4
  8848  001C72  516D               	movf	f_lseek@fp& (0+255),w,b
  8849  001C74  26D9               	addwf	fsr2l,f,c
  8850  001C76  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8851  001C78  22DA               	addwfc	fsr2h,f,c
  8852  001C7A  A2DF               	btfss	indf2,1,c
  8853  001C7C  D02A               	goto	l6539
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;ff.c: 3138:       clst = create_chain(fp->fs, clst);
  8857  001C7E  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8858  001C82  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8859  001C86  CFDE F056          	movff	postinc2,create_chain@fs
  8860  001C8A  CFDD F057          	movff	postdec2,create_chain@fs+1
  8861  001C8E  C090  F058         	movff	f_lseek@clst,create_chain@clst
  8862  001C92  C091  F059         	movff	f_lseek@clst+1,create_chain@clst+1
  8863  001C96  C092  F05A         	movff	f_lseek@clst+2,create_chain@clst+2
  8864  001C9A  C093  F05B         	movff	f_lseek@clst+3,create_chain@clst+3
  8865  001C9E  EC49  F01B         	call	_create_chain	;wreg free
  8866  001CA2  C056  F090         	movff	?_create_chain,f_lseek@clst
  8867  001CA6  C057  F091         	movff	?_create_chain+1,f_lseek@clst+1
  8868  001CAA  C058  F092         	movff	?_create_chain+2,f_lseek@clst+2
  8869  001CAE  C059  F093         	movff	?_create_chain+3,f_lseek@clst+3
  8870                           
  8871                           ;ff.c: 3139:       if (clst == 0) {
  8872  001CB2  0100               	movlb	0	; () banked
  8873  001CB4  5190               	movf	f_lseek@clst& (0+255),w,b
  8874  001CB6  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8875  001CB8  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8876  001CBA  1193               	iorwf	(f_lseek@clst+3)& (0+255),w,b
  8877  001CBC  A4D8               	btfss	status,2,c
  8878  001CBE  D023               	goto	l6541
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;ff.c: 3140:        ofs = bcs; break;
  8882  001CC0  C08C  F06F         	movff	f_lseek@bcs,f_lseek@ofs
  8883  001CC4  C08D  F070         	movff	f_lseek@bcs+1,f_lseek@ofs+1
  8884  001CC8  C08E  F071         	movff	f_lseek@bcs+2,f_lseek@ofs+2
  8885  001CCC  C08F  F072         	movff	f_lseek@bcs+3,f_lseek@ofs+3
  8886  001CD0  D06E               	goto	u8980
  8887  001CD2                     l6539:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;ff.c: 3144:       clst = get_fat(fp->fs, clst);
  8891  001CD2  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8892  001CD6  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8893  001CDA  CFDE F03B          	movff	postinc2,get_fat@fs
  8894  001CDE  CFDD F03C          	movff	postdec2,get_fat@fs+1
  8895  001CE2  C090  F03D         	movff	f_lseek@clst,get_fat@clst
  8896  001CE6  C091  F03E         	movff	f_lseek@clst+1,get_fat@clst+1
  8897  001CEA  C092  F03F         	movff	f_lseek@clst+2,get_fat@clst+2
  8898  001CEE  C093  F040         	movff	f_lseek@clst+3,get_fat@clst+3
  8899  001CF2  EC04  F016         	call	_get_fat	;wreg free
  8900  001CF6  C03B  F090         	movff	?_get_fat,f_lseek@clst
  8901  001CFA  C03C  F091         	movff	?_get_fat+1,f_lseek@clst+1
  8902  001CFE  C03D  F092         	movff	?_get_fat+2,f_lseek@clst+2
  8903  001D02  C03E  F093         	movff	?_get_fat+3,f_lseek@clst+3
  8904  001D06                     l6541:
  8905                           
  8906                           ;ff.c: 3145:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DIS
      +                          K_ERR; };
  8907  001D06  0100               	movlb	0	; () banked
  8908  001D08  2990               	incf	f_lseek@clst& (0+255),w,b
  8909  001D0A  E107               	bnz	l6549
  8910  001D0C  2991               	incf	(f_lseek@clst+1)& (0+255),w,b
  8911  001D0E  E105               	bnz	l6549
  8912  001D10  2992               	incf	(f_lseek@clst+2)& (0+255),w,b
  8913  001D12  E103               	bnz	l6549
  8914  001D14  2993               	incf	(f_lseek@clst+3)& (0+255),w,b
  8915  001D16  B4D8               	btfsc	status,2,c
  8916  001D18  D77D               	goto	u8910
  8917  001D1A                     l6549:
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;ff.c: 3146:      if (clst <= 1 || clst >= fp->fs->n_fatent) { fp->err = (BYTE)(FR_INT_E
      +                          RR); return FR_INT_ERR; };
  8921  001D1A  5193               	movf	(f_lseek@clst+3)& (0+255),w,b
  8922  001D1C  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8923  001D1E  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8924  001D20  E104               	bnz	u8960
  8925  001D22  0E02               	movlw	2
  8926  001D24  5D90               	subwf	f_lseek@clst& (0+255),w,b
  8927  001D26  A0D8               	btfss	status,0,c
  8928  001D28  D762               	goto	u8900
  8929  001D2A                     u8960:
  8930                           
  8931                           ; BSR set to: 0
  8932  001D2A  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8933  001D2E  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8934  001D32  EE10 F012          	lfsr	1,18
  8935  001D36  50DE               	movf	postinc2,w,c
  8936  001D38  26E1               	addwf	fsr1l,f,c
  8937  001D3A  50DD               	movf	postdec2,w,c
  8938  001D3C  22E2               	addwfc	fsr1h,f,c
  8939  001D3E  50E6               	movf	postinc1,w,c
  8940  001D40  5D90               	subwf	f_lseek@clst& (0+255),w,b
  8941  001D42  50E6               	movf	postinc1,w,c
  8942  001D44  5991               	subwfb	(f_lseek@clst+1)& (0+255),w,b
  8943  001D46  50E6               	movf	postinc1,w,c
  8944  001D48  5992               	subwfb	(f_lseek@clst+2)& (0+255),w,b
  8945  001D4A  50E6               	movf	postinc1,w,c
  8946  001D4C  5993               	subwfb	(f_lseek@clst+3)& (0+255),w,b
  8947  001D4E  B0D8               	btfsc	status,0,c
  8948  001D50  D74E               	goto	u8900
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;ff.c: 3147:      fp->clust = clst;
  8952                           
  8953                           ; BSR set to: 0
  8954  001D52  EE20 F012          	lfsr	2,18
  8955  001D56  516D               	movf	f_lseek@fp& (0+255),w,b
  8956  001D58  26D9               	addwf	fsr2l,f,c
  8957  001D5A  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8958  001D5C  22DA               	addwfc	fsr2h,f,c
  8959  001D5E  C090  FFDE         	movff	f_lseek@clst,postinc2
  8960  001D62  C091  FFDE         	movff	f_lseek@clst+1,postinc2
  8961  001D66  C092  FFDE         	movff	f_lseek@clst+2,postinc2
  8962  001D6A  C093  FFDE         	movff	f_lseek@clst+3,postinc2
  8963                           
  8964                           ;ff.c: 3148:      fp->fptr += bcs;
  8965  001D6E  EE20 F006          	lfsr	2,6
  8966  001D72  516D               	movf	f_lseek@fp& (0+255),w,b
  8967  001D74  26D9               	addwf	fsr2l,f,c
  8968  001D76  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8969  001D78  22DA               	addwfc	fsr2h,f,c
  8970  001D7A  518C               	movf	f_lseek@bcs& (0+255),w,b
  8971  001D7C  26DE               	addwf	postinc2,f,c
  8972  001D7E  518D               	movf	(f_lseek@bcs+1)& (0+255),w,b
  8973  001D80  22DE               	addwfc	postinc2,f,c
  8974  001D82  518E               	movf	(f_lseek@bcs+2)& (0+255),w,b
  8975  001D84  22DE               	addwfc	postinc2,f,c
  8976  001D86  518F               	movf	(f_lseek@bcs+3)& (0+255),w,b
  8977  001D88  22DE               	addwfc	postinc2,f,c
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;ff.c: 3149:      ofs -= bcs;
  8981  001D8A  518C               	movf	f_lseek@bcs& (0+255),w,b
  8982  001D8C  5F6F               	subwf	f_lseek@ofs& (0+255),f,b
  8983  001D8E  518D               	movf	(f_lseek@bcs+1)& (0+255),w,b
  8984  001D90  5B70               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
  8985  001D92  518E               	movf	(f_lseek@bcs+2)& (0+255),w,b
  8986  001D94  5B71               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
  8987  001D96  518F               	movf	(f_lseek@bcs+3)& (0+255),w,b
  8988  001D98  5B72               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
  8989  001D9A                     l6563:
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;ff.c: 3135:     while (ofs > bcs) {
  8993  001D9A  516F               	movf	f_lseek@ofs& (0+255),w,b
  8994  001D9C  5D8C               	subwf	f_lseek@bcs& (0+255),w,b
  8995  001D9E  5170               	movf	(f_lseek@ofs+1)& (0+255),w,b
  8996  001DA0  598D               	subwfb	(f_lseek@bcs+1)& (0+255),w,b
  8997  001DA2  5171               	movf	(f_lseek@ofs+2)& (0+255),w,b
  8998  001DA4  598E               	subwfb	(f_lseek@bcs+2)& (0+255),w,b
  8999  001DA6  5172               	movf	(f_lseek@ofs+3)& (0+255),w,b
  9000  001DA8  598F               	subwfb	(f_lseek@bcs+3)& (0+255),w,b
  9001  001DAA  A0D8               	btfss	status,0,c
  9002  001DAC  D760               	goto	l6531
  9003  001DAE                     u8980:
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;ff.c: 3151:     fp->fptr += ofs;
  9007  001DAE  EE20 F006          	lfsr	2,6
  9008  001DB2  516D               	movf	f_lseek@fp& (0+255),w,b
  9009  001DB4  26D9               	addwf	fsr2l,f,c
  9010  001DB6  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9011  001DB8  22DA               	addwfc	fsr2h,f,c
  9012  001DBA  516F               	movf	f_lseek@ofs& (0+255),w,b
  9013  001DBC  26DE               	addwf	postinc2,f,c
  9014  001DBE  5170               	movf	(f_lseek@ofs+1)& (0+255),w,b
  9015  001DC0  22DE               	addwfc	postinc2,f,c
  9016  001DC2  5171               	movf	(f_lseek@ofs+2)& (0+255),w,b
  9017  001DC4  22DE               	addwfc	postinc2,f,c
  9018  001DC6  5172               	movf	(f_lseek@ofs+3)& (0+255),w,b
  9019  001DC8  22DE               	addwfc	postinc2,f,c
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;ff.c: 3152:     if (ofs % ((UINT)512)) {
  9023  001DCA  0EFF               	movlw	255
  9024  001DCC  156F               	andwf	f_lseek@ofs& (0+255),w,b
  9025  001DCE  6F73               	movwf	??_f_lseek& (0+255),b
  9026  001DD0  0E01               	movlw	1
  9027  001DD2  1570               	andwf	(f_lseek@ofs+1)& (0+255),w,b
  9028  001DD4  6F74               	movwf	(??_f_lseek+1)& (0+255),b
  9029  001DD6  0E00               	movlw	0
  9030  001DD8  1571               	andwf	(f_lseek@ofs+2)& (0+255),w,b
  9031  001DDA  6F75               	movwf	(??_f_lseek+2)& (0+255),b
  9032  001DDC  0E00               	movlw	0
  9033  001DDE  1572               	andwf	(f_lseek@ofs+3)& (0+255),w,b
  9034  001DE0  6F76               	movwf	(??_f_lseek+3)& (0+255),b
  9035  001DE2  5173               	movf	??_f_lseek& (0+255),w,b
  9036  001DE4  1174               	iorwf	(??_f_lseek+1)& (0+255),w,b
  9037  001DE6  1175               	iorwf	(??_f_lseek+2)& (0+255),w,b
  9038  001DE8  1176               	iorwf	(??_f_lseek+3)& (0+255),w,b
  9039  001DEA  B4D8               	btfsc	status,2,c
  9040  001DEC  D03A               	goto	l6581
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;ff.c: 3153:      nsect = clust2sect(fp->fs, clst);
  9044  001DEE  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  9045  001DF2  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  9046  001DF6  CFDE F00D          	movff	postinc2,clust2sect@fs
  9047  001DFA  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  9048  001DFE  C090  F00F         	movff	f_lseek@clst,clust2sect@clst
  9049  001E02  C091  F010         	movff	f_lseek@clst+1,clust2sect@clst+1
  9050  001E06  C092  F011         	movff	f_lseek@clst+2,clust2sect@clst+2
  9051  001E0A  C093  F012         	movff	f_lseek@clst+3,clust2sect@clst+3
  9052  001E0E  EC37  F02A         	call	_clust2sect	;wreg free
  9053  001E12  C00D  F088         	movff	?_clust2sect,f_lseek@nsect
  9054  001E16  C00E  F089         	movff	?_clust2sect+1,f_lseek@nsect+1
  9055  001E1A  C00F  F08A         	movff	?_clust2sect+2,f_lseek@nsect+2
  9056  001E1E  C010  F08B         	movff	?_clust2sect+3,f_lseek@nsect+3
  9057                           
  9058                           ;ff.c: 3154:      if (!nsect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  9059  001E22  0100               	movlb	0	; () banked
  9060  001E24  5188               	movf	f_lseek@nsect& (0+255),w,b
  9061  001E26  1189               	iorwf	(f_lseek@nsect+1)& (0+255),w,b
  9062  001E28  118A               	iorwf	(f_lseek@nsect+2)& (0+255),w,b
  9063  001E2A  118B               	iorwf	(f_lseek@nsect+3)& (0+255),w,b
  9064  001E2C  B4D8               	btfsc	status,2,c
  9065  001E2E  D6DF               	goto	u8900
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;ff.c: 3155:      nsect += ofs / ((UINT)512);
  9069                           
  9070                           ; BSR set to: 0
  9071  001E30  C06F  F073         	movff	f_lseek@ofs,??_f_lseek
  9072  001E34  C070  F074         	movff	f_lseek@ofs+1,??_f_lseek+1
  9073  001E38  C071  F075         	movff	f_lseek@ofs+2,??_f_lseek+2
  9074  001E3C  C072  F076         	movff	f_lseek@ofs+3,??_f_lseek+3
  9075  001E40  0E0A               	movlw	10
  9076  001E42  D005               	goto	u9010
  9077  001E44                     u9015:
  9078  001E44  90D8               	bcf	status,0,c
  9079  001E46  3376               	rrcf	(??_f_lseek+3)& (0+255),f,b
  9080  001E48  3375               	rrcf	(??_f_lseek+2)& (0+255),f,b
  9081  001E4A  3374               	rrcf	(??_f_lseek+1)& (0+255),f,b
  9082  001E4C  3373               	rrcf	??_f_lseek& (0+255),f,b
  9083  001E4E                     u9010:
  9084  001E4E  2EE8               	decfsz	wreg,f,c
  9085  001E50  D7F9               	goto	u9015
  9086  001E52  5173               	movf	??_f_lseek& (0+255),w,b
  9087  001E54  2788               	addwf	f_lseek@nsect& (0+255),f,b
  9088  001E56  5174               	movf	(??_f_lseek+1)& (0+255),w,b
  9089  001E58  2389               	addwfc	(f_lseek@nsect+1)& (0+255),f,b
  9090  001E5A  5175               	movf	(??_f_lseek+2)& (0+255),w,b
  9091  001E5C  238A               	addwfc	(f_lseek@nsect+2)& (0+255),f,b
  9092  001E5E  5176               	movf	(??_f_lseek+3)& (0+255),w,b
  9093  001E60  238B               	addwfc	(f_lseek@nsect+3)& (0+255),f,b
  9094  001E62                     l6581:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;ff.c: 3159:   if (fp->fptr % ((UINT)512) && nsect != fp->dsect) {
  9098  001E62  EE20 F006          	lfsr	2,6
  9099  001E66  516D               	movf	f_lseek@fp& (0+255),w,b
  9100  001E68  26D9               	addwf	fsr2l,f,c
  9101  001E6A  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9102  001E6C  22DA               	addwfc	fsr2h,f,c
  9103  001E6E  0EFF               	movlw	255
  9104  001E70  14DE               	andwf	postinc2,w,c
  9105  001E72  6F73               	movwf	??_f_lseek& (0+255),b
  9106  001E74  0E01               	movlw	1
  9107  001E76  14DE               	andwf	postinc2,w,c
  9108  001E78  6F74               	movwf	(??_f_lseek+1)& (0+255),b
  9109  001E7A  0E00               	movlw	0
  9110  001E7C  14DE               	andwf	postinc2,w,c
  9111  001E7E  6F75               	movwf	(??_f_lseek+2)& (0+255),b
  9112  001E80  0E00               	movlw	0
  9113  001E82  14DE               	andwf	postinc2,w,c
  9114  001E84  6F76               	movwf	(??_f_lseek+3)& (0+255),b
  9115  001E86  5173               	movf	??_f_lseek& (0+255),w,b
  9116  001E88  1174               	iorwf	(??_f_lseek+1)& (0+255),w,b
  9117  001E8A  1175               	iorwf	(??_f_lseek+2)& (0+255),w,b
  9118  001E8C  1176               	iorwf	(??_f_lseek+3)& (0+255),w,b
  9119  001E8E  B4D8               	btfsc	status,2,c
  9120  001E90  D021               	goto	l6587
  9121                           
  9122                           ; BSR set to: 0
  9123  001E92  EE20 F016          	lfsr	2,22
  9124  001E96  516D               	movf	f_lseek@fp& (0+255),w,b
  9125  001E98  26D9               	addwf	fsr2l,f,c
  9126  001E9A  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9127  001E9C  22DA               	addwfc	fsr2h,f,c
  9128  001E9E  5188               	movf	f_lseek@nsect& (0+255),w,b
  9129  001EA0  18DE               	xorwf	postinc2,w,c
  9130  001EA2  E10A               	bnz	u9030
  9131  001EA4  5189               	movf	(f_lseek@nsect+1)& (0+255),w,b
  9132  001EA6  18DE               	xorwf	postinc2,w,c
  9133  001EA8  E107               	bnz	u9030
  9134  001EAA  518A               	movf	(f_lseek@nsect+2)& (0+255),w,b
  9135  001EAC  18DE               	xorwf	postinc2,w,c
  9136  001EAE  E104               	bnz	u9030
  9137  001EB0  518B               	movf	(f_lseek@nsect+3)& (0+255),w,b
  9138  001EB2  18DE               	xorwf	postinc2,w,c
  9139  001EB4  B4D8               	btfsc	status,2,c
  9140  001EB6  D00E               	goto	l6587
  9141  001EB8                     u9030:
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;ff.c: 3171:    fp->dsect = nsect;
  9145  001EB8  EE20 F016          	lfsr	2,22
  9146  001EBC  516D               	movf	f_lseek@fp& (0+255),w,b
  9147  001EBE  26D9               	addwf	fsr2l,f,c
  9148  001EC0  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9149  001EC2  22DA               	addwfc	fsr2h,f,c
  9150  001EC4  C088  FFDE         	movff	f_lseek@nsect,postinc2
  9151  001EC8  C089  FFDE         	movff	f_lseek@nsect+1,postinc2
  9152  001ECC  C08A  FFDE         	movff	f_lseek@nsect+2,postinc2
  9153  001ED0  C08B  FFDE         	movff	f_lseek@nsect+3,postinc2
  9154  001ED4                     l6587:
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;ff.c: 3174:   if (fp->fptr > fp->fsize) {
  9158  001ED4  EE20 F006          	lfsr	2,6
  9159  001ED8  516D               	movf	f_lseek@fp& (0+255),w,b
  9160  001EDA  26D9               	addwf	fsr2l,f,c
  9161  001EDC  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9162  001EDE  22DA               	addwfc	fsr2h,f,c
  9163  001EE0  EE10 F00A          	lfsr	1,10
  9164  001EE4  516D               	movf	f_lseek@fp& (0+255),w,b
  9165  001EE6  26E1               	addwf	fsr1l,f,c
  9166  001EE8  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9167  001EEA  22E2               	addwfc	fsr1h,f,c
  9168  001EEC  50DE               	movf	postinc2,w,c
  9169  001EEE  5CE6               	subwf	postinc1,w,c
  9170  001EF0  50DE               	movf	postinc2,w,c
  9171  001EF2  58E6               	subwfb	postinc1,w,c
  9172  001EF4  50DE               	movf	postinc2,w,c
  9173  001EF6  58E6               	subwfb	postinc1,w,c
  9174  001EF8  50DE               	movf	postinc2,w,c
  9175  001EFA  58E6               	subwfb	postinc1,w,c
  9176  001EFC  B0D8               	btfsc	status,0,c
  9177  001EFE  D521               	goto	u8810
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;ff.c: 3175:    fp->fsize = fp->fptr;
  9181  001F00  EE20 F006          	lfsr	2,6
  9182  001F04  516D               	movf	f_lseek@fp& (0+255),w,b
  9183  001F06  26D9               	addwf	fsr2l,f,c
  9184  001F08  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9185  001F0A  22DA               	addwfc	fsr2h,f,c
  9186  001F0C  EE10 F00A          	lfsr	1,10
  9187  001F10  516D               	movf	f_lseek@fp& (0+255),w,b
  9188  001F12  26E1               	addwf	fsr1l,f,c
  9189  001F14  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9190  001F16  22E2               	addwfc	fsr1h,f,c
  9191  001F18  CFDE FFE6          	movff	postinc2,postinc1
  9192  001F1C  CFDE FFE6          	movff	postinc2,postinc1
  9193  001F20  CFDE FFE6          	movff	postinc2,postinc1
  9194  001F24  CFDE FFE6          	movff	postinc2,postinc1
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;ff.c: 3176:    fp->flag |= 0x20;
  9198  001F28  EE20 F004          	lfsr	2,4
  9199  001F2C  516D               	movf	f_lseek@fp& (0+255),w,b
  9200  001F2E  26D9               	addwf	fsr2l,f,c
  9201  001F30  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9202  001F32  22DA               	addwfc	fsr2h,f,c
  9203  001F34  0E00               	movlw	0
  9204  001F36  8ADB               	bsf	plusw2,5,c
  9205  001F38  D504               	goto	u8810
  9206  001F3A                     __end_of_f_lseek:
  9207                           	opt callstack 0
  9208                           
  9209 ;; *************** function _create_chain *****************
  9210 ;; Defined at:
  9211 ;;		line 990 in file "ff.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  fs              2   85[COMRAM] PTR struct .
  9214 ;;		 -> FatFs(558), NULL(0), 
  9215 ;;  clst            4   87[COMRAM] unsigned long 
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;  cs              4    9[BANK0 ] unsigned long 
  9218 ;;  ncl             4    5[BANK0 ] unsigned long 
  9219 ;;  scl             4    1[BANK0 ] unsigned long 
  9220 ;;  res             1    0[BANK0 ] enum E93
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  4   85[COMRAM] unsigned long 
  9223 ;; Registers used:
  9224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9230 ;;      Params:         6       0       0       0       0       0       0       0       0
  9231 ;;      Locals:         0      13       0       0       0       0       0       0       0
  9232 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9233 ;;      Totals:        10      13       0       0       0       0       0       0       0
  9234 ;;Total ram usage:       23 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    9
  9237 ;; This function calls:
  9238 ;;		_get_fat
  9239 ;;		_put_fat
  9240 ;; This function is called by:
  9241 ;;		_dir_next
  9242 ;;		_f_write
  9243 ;;		_f_lseek
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text24
  9248  003692                     __ptext24:
  9249                           	opt callstack 0
  9250  003692                     _create_chain:
  9251                           	opt callstack 19
  9252                           
  9253                           ;ff.c: 991:  FATFS* fs,;ff.c: 992:  DWORD clst;ff.c: 994: {;ff.c: 995:  DWORD cs, ncl, s
      +                          cl;;ff.c: 996:  FRESULT res;;ff.c: 999:  if (clst == 0) {
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;incstack = 0
  9257  003692  5058               	movf	create_chain@clst,w,c
  9258  003694  1059               	iorwf	create_chain@clst+1,w,c
  9259  003696  105A               	iorwf	create_chain@clst+2,w,c
  9260  003698  105B               	iorwf	create_chain@clst+3,w,c
  9261  00369A  A4D8               	btfss	status,2,c
  9262  00369C  D02E               	goto	l4883
  9263                           
  9264                           ;ff.c: 1000:   scl = fs->last_clust;
  9265  00369E  EE20 F00A          	lfsr	2,10
  9266  0036A2  5056               	movf	create_chain@fs,w,c
  9267  0036A4  26D9               	addwf	fsr2l,f,c
  9268  0036A6  5057               	movf	create_chain@fs+1,w,c
  9269  0036A8  22DA               	addwfc	fsr2h,f,c
  9270  0036AA  CFDE F061          	movff	postinc2,create_chain@scl
  9271  0036AE  CFDE F062          	movff	postinc2,create_chain@scl+1
  9272  0036B2  CFDE F063          	movff	postinc2,create_chain@scl+2
  9273  0036B6  CFDE F064          	movff	postinc2,create_chain@scl+3
  9274                           
  9275                           ;ff.c: 1001:   if (!scl || scl >= fs->n_fatent) scl = 1;
  9276  0036BA  0100               	movlb	0	; () banked
  9277  0036BC  5161               	movf	create_chain@scl& (0+255),w,b
  9278  0036BE  1162               	iorwf	(create_chain@scl+1)& (0+255),w,b
  9279  0036C0  1163               	iorwf	(create_chain@scl+2)& (0+255),w,b
  9280  0036C2  1164               	iorwf	(create_chain@scl+3)& (0+255),w,b
  9281  0036C4  B4D8               	btfsc	status,2,c
  9282  0036C6  D010               	goto	u5880
  9283                           
  9284                           ; BSR set to: 0
  9285  0036C8  EE20 F012          	lfsr	2,18
  9286  0036CC  5056               	movf	create_chain@fs,w,c
  9287  0036CE  26D9               	addwf	fsr2l,f,c
  9288  0036D0  5057               	movf	create_chain@fs+1,w,c
  9289  0036D2  22DA               	addwfc	fsr2h,f,c
  9290  0036D4  50DE               	movf	postinc2,w,c
  9291  0036D6  5D61               	subwf	create_chain@scl& (0+255),w,b
  9292  0036D8  50DE               	movf	postinc2,w,c
  9293  0036DA  5962               	subwfb	(create_chain@scl+1)& (0+255),w,b
  9294  0036DC  50DE               	movf	postinc2,w,c
  9295  0036DE  5963               	subwfb	(create_chain@scl+2)& (0+255),w,b
  9296  0036E0  50DE               	movf	postinc2,w,c
  9297  0036E2  5964               	subwfb	(create_chain@scl+3)& (0+255),w,b
  9298  0036E4  A0D8               	btfss	status,0,c
  9299  0036E6  D05B               	goto	l317
  9300  0036E8                     u5880:
  9301                           
  9302                           ; BSR set to: 0
  9303  0036E8  0E01               	movlw	1
  9304  0036EA  6F61               	movwf	create_chain@scl& (0+255),b
  9305  0036EC  0E00               	movlw	0
  9306  0036EE  6F62               	movwf	(create_chain@scl+1)& (0+255),b
  9307  0036F0  0E00               	movlw	0
  9308  0036F2  6F63               	movwf	(create_chain@scl+2)& (0+255),b
  9309  0036F4  0E00               	movlw	0
  9310  0036F6  6F64               	movwf	(create_chain@scl+3)& (0+255),b
  9311  0036F8  D052               	goto	l317
  9312  0036FA                     l4883:
  9313                           
  9314                           ;ff.c: 1004:   cs = get_fat(fs, clst);
  9315  0036FA  C056  F03B         	movff	create_chain@fs,get_fat@fs
  9316  0036FE  C057  F03C         	movff	create_chain@fs+1,get_fat@fs+1
  9317  003702  C058  F03D         	movff	create_chain@clst,get_fat@clst
  9318  003706  C059  F03E         	movff	create_chain@clst+1,get_fat@clst+1
  9319  00370A  C05A  F03F         	movff	create_chain@clst+2,get_fat@clst+2
  9320  00370E  C05B  F040         	movff	create_chain@clst+3,get_fat@clst+3
  9321  003712  EC04  F016         	call	_get_fat	;wreg free
  9322  003716  C03B  F069         	movff	?_get_fat,create_chain@cs
  9323  00371A  C03C  F06A         	movff	?_get_fat+1,create_chain@cs+1
  9324  00371E  C03D  F06B         	movff	?_get_fat+2,create_chain@cs+2
  9325  003722  C03E  F06C         	movff	?_get_fat+3,create_chain@cs+3
  9326                           
  9327                           ;ff.c: 1005:   if (cs < 2) return 1;
  9328  003726  0100               	movlb	0	; () banked
  9329  003728  516C               	movf	(create_chain@cs+3)& (0+255),w,b
  9330  00372A  116B               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9331  00372C  116A               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9332  00372E  E10D               	bnz	l4891
  9333  003730  0E02               	movlw	2
  9334  003732  5D69               	subwf	create_chain@cs& (0+255),w,b
  9335  003734  B0D8               	btfsc	status,0,c
  9336  003736  D009               	goto	l4891
  9337                           
  9338                           ; BSR set to: 0
  9339  003738  0E01               	movlw	1
  9340  00373A  6E56               	movwf	?_create_chain,c
  9341  00373C  0E00               	movlw	0
  9342  00373E  6E57               	movwf	?_create_chain+1,c
  9343  003740  0E00               	movlw	0
  9344  003742  6E58               	movwf	?_create_chain+2,c
  9345  003744  0E00               	movlw	0
  9346  003746  6E59               	movwf	?_create_chain+3,c
  9347  003748  0012               	return	
  9348  00374A                     l4891:
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;ff.c: 1006:   if (cs == 0xFFFFFFFF) return cs;
  9352  00374A  2969               	incf	create_chain@cs& (0+255),w,b
  9353  00374C  E110               	bnz	l4895
  9354  00374E  296A               	incf	(create_chain@cs+1)& (0+255),w,b
  9355  003750  E10E               	bnz	l4895
  9356  003752  296B               	incf	(create_chain@cs+2)& (0+255),w,b
  9357  003754  E10C               	bnz	l4895
  9358  003756  296C               	incf	(create_chain@cs+3)& (0+255),w,b
  9359  003758  A4D8               	btfss	status,2,c
  9360  00375A  D009               	goto	l4895
  9361  00375C                     u5900:
  9362                           
  9363                           ; BSR set to: 0
  9364  00375C  C069  F056         	movff	create_chain@cs,?_create_chain
  9365  003760  C06A  F057         	movff	create_chain@cs+1,?_create_chain+1
  9366  003764  C06B  F058         	movff	create_chain@cs+2,?_create_chain+2
  9367  003768  C06C  F059         	movff	create_chain@cs+3,?_create_chain+3
  9368  00376C  0012               	return	
  9369  00376E                     l4895:
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;ff.c: 1007:   if (cs < fs->n_fatent) return cs;
  9373  00376E  EE20 F012          	lfsr	2,18
  9374  003772  5056               	movf	create_chain@fs,w,c
  9375  003774  26D9               	addwf	fsr2l,f,c
  9376  003776  5057               	movf	create_chain@fs+1,w,c
  9377  003778  22DA               	addwfc	fsr2h,f,c
  9378  00377A  50DE               	movf	postinc2,w,c
  9379  00377C  5D69               	subwf	create_chain@cs& (0+255),w,b
  9380  00377E  50DE               	movf	postinc2,w,c
  9381  003780  596A               	subwfb	(create_chain@cs+1)& (0+255),w,b
  9382  003782  50DE               	movf	postinc2,w,c
  9383  003784  596B               	subwfb	(create_chain@cs+2)& (0+255),w,b
  9384  003786  50DE               	movf	postinc2,w,c
  9385  003788  596C               	subwfb	(create_chain@cs+3)& (0+255),w,b
  9386  00378A  A0D8               	btfss	status,0,c
  9387  00378C  D7E7               	goto	u5900
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;ff.c: 1008:   scl = clst;
  9391  00378E  C058  F061         	movff	create_chain@clst,create_chain@scl
  9392  003792  C059  F062         	movff	create_chain@clst+1,create_chain@scl+1
  9393  003796  C05A  F063         	movff	create_chain@clst+2,create_chain@scl+2
  9394  00379A  C05B  F064         	movff	create_chain@clst+3,create_chain@scl+3
  9395  00379E                     l317:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;ff.c: 1011:  ncl = scl;
  9399  00379E  C061  F065         	movff	create_chain@scl,create_chain@ncl
  9400  0037A2  C062  F066         	movff	create_chain@scl+1,create_chain@ncl+1
  9401  0037A6  C063  F067         	movff	create_chain@scl+2,create_chain@ncl+2
  9402  0037AA  C064  F068         	movff	create_chain@scl+3,create_chain@ncl+3
  9403  0037AE                     l4899:
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;ff.c: 1013:   ncl++;
  9407  0037AE  0E01               	movlw	1
  9408  0037B0  2765               	addwf	create_chain@ncl& (0+255),f,b
  9409  0037B2  0E00               	movlw	0
  9410  0037B4  2366               	addwfc	(create_chain@ncl+1)& (0+255),f,b
  9411  0037B6  2367               	addwfc	(create_chain@ncl+2)& (0+255),f,b
  9412  0037B8  2368               	addwfc	(create_chain@ncl+3)& (0+255),f,b
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;ff.c: 1014:   if (ncl >= fs->n_fatent) {
  9416  0037BA  EE20 F012          	lfsr	2,18
  9417  0037BE  5056               	movf	create_chain@fs,w,c
  9418  0037C0  26D9               	addwf	fsr2l,f,c
  9419  0037C2  5057               	movf	create_chain@fs+1,w,c
  9420  0037C4  22DA               	addwfc	fsr2h,f,c
  9421  0037C6  50DE               	movf	postinc2,w,c
  9422  0037C8  5D65               	subwf	create_chain@ncl& (0+255),w,b
  9423  0037CA  50DE               	movf	postinc2,w,c
  9424  0037CC  5966               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  9425  0037CE  50DE               	movf	postinc2,w,c
  9426  0037D0  5967               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  9427  0037D2  50DE               	movf	postinc2,w,c
  9428  0037D4  5968               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  9429  0037D6  A0D8               	btfss	status,0,c
  9430  0037D8  D019               	goto	l4911
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;ff.c: 1015:    ncl = 2;
  9434  0037DA  0E02               	movlw	2
  9435  0037DC  6F65               	movwf	create_chain@ncl& (0+255),b
  9436  0037DE  0E00               	movlw	0
  9437  0037E0  6F66               	movwf	(create_chain@ncl+1)& (0+255),b
  9438  0037E2  0E00               	movlw	0
  9439  0037E4  6F67               	movwf	(create_chain@ncl+2)& (0+255),b
  9440  0037E6  0E00               	movlw	0
  9441  0037E8  6F68               	movwf	(create_chain@ncl+3)& (0+255),b
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;ff.c: 1016:    if (ncl > scl) return 0;
  9445  0037EA  5164               	movf	(create_chain@scl+3)& (0+255),w,b
  9446  0037EC  1163               	iorwf	(create_chain@scl+2)& (0+255),w,b
  9447  0037EE  1162               	iorwf	(create_chain@scl+1)& (0+255),w,b
  9448  0037F0  E10D               	bnz	l4911
  9449  0037F2  0E02               	movlw	2
  9450  0037F4  5D61               	subwf	create_chain@scl& (0+255),w,b
  9451  0037F6  B0D8               	btfsc	status,0,c
  9452  0037F8  D009               	goto	l4911
  9453  0037FA                     u5930:
  9454                           
  9455                           ; BSR set to: 0
  9456  0037FA  0E00               	movlw	0
  9457  0037FC  6E56               	movwf	?_create_chain,c
  9458  0037FE  0E00               	movlw	0
  9459  003800  6E57               	movwf	?_create_chain+1,c
  9460  003802  0E00               	movlw	0
  9461  003804  6E58               	movwf	?_create_chain+2,c
  9462  003806  0E00               	movlw	0
  9463  003808  6E59               	movwf	?_create_chain+3,c
  9464  00380A  0012               	return	
  9465  00380C                     l4911:
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;ff.c: 1018:   cs = get_fat(fs, ncl);
  9469  00380C  C056  F03B         	movff	create_chain@fs,get_fat@fs
  9470  003810  C057  F03C         	movff	create_chain@fs+1,get_fat@fs+1
  9471  003814  C065  F03D         	movff	create_chain@ncl,get_fat@clst
  9472  003818  C066  F03E         	movff	create_chain@ncl+1,get_fat@clst+1
  9473  00381C  C067  F03F         	movff	create_chain@ncl+2,get_fat@clst+2
  9474  003820  C068  F040         	movff	create_chain@ncl+3,get_fat@clst+3
  9475  003824  EC04  F016         	call	_get_fat	;wreg free
  9476  003828  C03B  F069         	movff	?_get_fat,create_chain@cs
  9477  00382C  C03C  F06A         	movff	?_get_fat+1,create_chain@cs+1
  9478  003830  C03D  F06B         	movff	?_get_fat+2,create_chain@cs+2
  9479  003834  C03E  F06C         	movff	?_get_fat+3,create_chain@cs+3
  9480                           
  9481                           ;ff.c: 1019:   if (cs == 0) break;
  9482  003838  0100               	movlb	0	; () banked
  9483  00383A  5169               	movf	create_chain@cs& (0+255),w,b
  9484  00383C  116A               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9485  00383E  116B               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9486  003840  116C               	iorwf	(create_chain@cs+3)& (0+255),w,b
  9487  003842  B4D8               	btfsc	status,2,c
  9488  003844  D01D               	goto	l4927
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;ff.c: 1020:   if (cs == 0xFFFFFFFF || cs == 1)
  9492  003846  2969               	incf	create_chain@cs& (0+255),w,b
  9493  003848  E107               	bnz	u5950
  9494  00384A  296A               	incf	(create_chain@cs+1)& (0+255),w,b
  9495  00384C  E105               	bnz	u5950
  9496  00384E  296B               	incf	(create_chain@cs+2)& (0+255),w,b
  9497  003850  E103               	bnz	u5950
  9498  003852  296C               	incf	(create_chain@cs+3)& (0+255),w,b
  9499  003854  B4D8               	btfsc	status,2,c
  9500  003856  D782               	goto	u5900
  9501  003858                     u5950:
  9502                           
  9503                           ; BSR set to: 0
  9504  003858  0569               	decf	create_chain@cs& (0+255),w,b
  9505  00385A  116A               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9506  00385C  116B               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9507  00385E  116C               	iorwf	(create_chain@cs+3)& (0+255),w,b
  9508  003860  B4D8               	btfsc	status,2,c
  9509  003862  D77C               	goto	u5900
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;ff.c: 1022:   if (ncl == scl) return 0;
  9513  003864  5161               	movf	create_chain@scl& (0+255),w,b
  9514  003866  1965               	xorwf	create_chain@ncl& (0+255),w,b
  9515  003868  E1A2               	bnz	l4899
  9516  00386A  5162               	movf	(create_chain@scl+1)& (0+255),w,b
  9517  00386C  1966               	xorwf	(create_chain@ncl+1)& (0+255),w,b
  9518  00386E  E19F               	bnz	l4899
  9519  003870  5163               	movf	(create_chain@scl+2)& (0+255),w,b
  9520  003872  1967               	xorwf	(create_chain@ncl+2)& (0+255),w,b
  9521  003874  E19C               	bnz	l4899
  9522  003876  5164               	movf	(create_chain@scl+3)& (0+255),w,b
  9523  003878  1968               	xorwf	(create_chain@ncl+3)& (0+255),w,b
  9524  00387A  B4D8               	btfsc	status,2,c
  9525  00387C  D7BE               	goto	u5930
  9526  00387E  D797               	goto	l4899
  9527  003880                     l4927:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;ff.c: 1025:  res = put_fat(fs, ncl, 0x0FFFFFFF);
  9531  003880  C056  F03B         	movff	create_chain@fs,put_fat@fs
  9532  003884  C057  F03C         	movff	create_chain@fs+1,put_fat@fs+1
  9533  003888  C065  F03D         	movff	create_chain@ncl,put_fat@clst
  9534  00388C  C066  F03E         	movff	create_chain@ncl+1,put_fat@clst+1
  9535  003890  C067  F03F         	movff	create_chain@ncl+2,put_fat@clst+2
  9536  003894  C068  F040         	movff	create_chain@ncl+3,put_fat@clst+3
  9537  003898  0EFF               	movlw	255
  9538  00389A  6E41               	movwf	put_fat@val,c
  9539  00389C  0EFF               	movlw	255
  9540  00389E  6E42               	movwf	put_fat@val+1,c
  9541  0038A0  0EFF               	movlw	255
  9542  0038A2  6E43               	movwf	put_fat@val+2,c
  9543  0038A4  0E0F               	movlw	15
  9544  0038A6  6E44               	movwf	put_fat@val+3,c
  9545  0038A8  ECEC  F011         	call	_put_fat	;wreg free
  9546  0038AC  0100               	movlb	0	; () banked
  9547  0038AE  6F60               	movwf	create_chain@res& (0+255),b
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;ff.c: 1026:  if (res == FR_OK && clst != 0) {
  9551  0038B0  5160               	movf	create_chain@res& (0+255),w,b
  9552  0038B2  A4D8               	btfss	status,2,c
  9553  0038B4  D01E               	goto	l4935
  9554                           
  9555                           ; BSR set to: 0
  9556  0038B6  5058               	movf	create_chain@clst,w,c
  9557  0038B8  1059               	iorwf	create_chain@clst+1,w,c
  9558  0038BA  105A               	iorwf	create_chain@clst+2,w,c
  9559  0038BC  105B               	iorwf	create_chain@clst+3,w,c
  9560  0038BE  B4D8               	btfsc	status,2,c
  9561  0038C0  D018               	goto	l4935
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;ff.c: 1027:   res = put_fat(fs, clst, ncl);
  9565  0038C2  C056  F03B         	movff	create_chain@fs,put_fat@fs
  9566  0038C6  C057  F03C         	movff	create_chain@fs+1,put_fat@fs+1
  9567  0038CA  C058  F03D         	movff	create_chain@clst,put_fat@clst
  9568  0038CE  C059  F03E         	movff	create_chain@clst+1,put_fat@clst+1
  9569  0038D2  C05A  F03F         	movff	create_chain@clst+2,put_fat@clst+2
  9570  0038D6  C05B  F040         	movff	create_chain@clst+3,put_fat@clst+3
  9571  0038DA  C065  F041         	movff	create_chain@ncl,put_fat@val
  9572  0038DE  C066  F042         	movff	create_chain@ncl+1,put_fat@val+1
  9573  0038E2  C067  F043         	movff	create_chain@ncl+2,put_fat@val+2
  9574  0038E6  C068  F044         	movff	create_chain@ncl+3,put_fat@val+3
  9575  0038EA  ECEC  F011         	call	_put_fat	;wreg free
  9576  0038EE  0100               	movlb	0	; () banked
  9577  0038F0  6F60               	movwf	create_chain@res& (0+255),b
  9578  0038F2                     l4935:
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;ff.c: 1029:  if (res == FR_OK) {
  9582  0038F2  5160               	movf	create_chain@res& (0+255),w,b
  9583  0038F4  A4D8               	btfss	status,2,c
  9584  0038F6  D031               	goto	l4941
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;ff.c: 1030:   fs->last_clust = ncl;
  9588  0038F8  EE20 F00A          	lfsr	2,10
  9589  0038FC  5056               	movf	create_chain@fs,w,c
  9590  0038FE  26D9               	addwf	fsr2l,f,c
  9591  003900  5057               	movf	create_chain@fs+1,w,c
  9592  003902  22DA               	addwfc	fsr2h,f,c
  9593  003904  C065  FFDE         	movff	create_chain@ncl,postinc2
  9594  003908  C066  FFDE         	movff	create_chain@ncl+1,postinc2
  9595  00390C  C067  FFDE         	movff	create_chain@ncl+2,postinc2
  9596  003910  C068  FFDE         	movff	create_chain@ncl+3,postinc2
  9597                           
  9598                           ;ff.c: 1031:   if (fs->free_clust != 0xFFFFFFFF) {
  9599  003914  EE20 F00E          	lfsr	2,14
  9600  003918  5056               	movf	create_chain@fs,w,c
  9601  00391A  26D9               	addwf	fsr2l,f,c
  9602  00391C  5057               	movf	create_chain@fs+1,w,c
  9603  00391E  22DA               	addwfc	fsr2h,f,c
  9604  003920  28DE               	incf	postinc2,w,c
  9605  003922  E107               	bnz	u6010
  9606  003924  28DE               	incf	postinc2,w,c
  9607  003926  E105               	bnz	u6010
  9608  003928  28DE               	incf	postinc2,w,c
  9609  00392A  E103               	bnz	u6010
  9610  00392C  28DE               	incf	postinc2,w,c
  9611  00392E  B4D8               	btfsc	status,2,c
  9612  003930  D024               	goto	l334
  9613  003932                     u6010:
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;ff.c: 1032:    fs->free_clust--;
  9617  003932  EE20 F00E          	lfsr	2,14
  9618  003936  5056               	movf	create_chain@fs,w,c
  9619  003938  26D9               	addwf	fsr2l,f,c
  9620  00393A  5057               	movf	create_chain@fs+1,w,c
  9621  00393C  22DA               	addwfc	fsr2h,f,c
  9622  00393E  06DE               	decf	postinc2,f,c
  9623  003940  0E00               	movlw	0
  9624  003942  5ADE               	subwfb	postinc2,f,c
  9625  003944  5ADE               	subwfb	postinc2,f,c
  9626  003946  5ADE               	subwfb	postinc2,f,c
  9627                           
  9628                           ;ff.c: 1033:    fs->fsi_flag |= 1;
  9629  003948  EE20 F005          	lfsr	2,5
  9630  00394C  5056               	movf	create_chain@fs,w,c
  9631  00394E  26D9               	addwf	fsr2l,f,c
  9632  003950  5057               	movf	create_chain@fs+1,w,c
  9633  003952  22DA               	addwfc	fsr2h,f,c
  9634  003954  0E00               	movlw	0
  9635  003956  80DB               	bsf	plusw2,0,c
  9636  003958  D010               	goto	l334
  9637  00395A                     l4941:
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;ff.c: 1036:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
  9641  00395A  0560               	decf	create_chain@res& (0+255),w,b
  9642  00395C  B4D8               	btfsc	status,2,c
  9643  00395E  D009               	goto	l336
  9644                           
  9645                           ; BSR set to: 0
  9646  003960  0E01               	movlw	1
  9647  003962  6F65               	movwf	create_chain@ncl& (0+255),b
  9648  003964  0E00               	movlw	0
  9649  003966  6F66               	movwf	(create_chain@ncl+1)& (0+255),b
  9650  003968  0E00               	movlw	0
  9651  00396A  6F67               	movwf	(create_chain@ncl+2)& (0+255),b
  9652  00396C  0E00               	movlw	0
  9653  00396E  6F68               	movwf	(create_chain@ncl+3)& (0+255),b
  9654  003970  D004               	goto	l334
  9655  003972                     l336:
  9656                           
  9657                           ; BSR set to: 0
  9658  003972  6965               	setf	create_chain@ncl& (0+255),b
  9659  003974  6966               	setf	(create_chain@ncl+1)& (0+255),b
  9660  003976  6967               	setf	(create_chain@ncl+2)& (0+255),b
  9661  003978  6968               	setf	(create_chain@ncl+3)& (0+255),b
  9662  00397A                     l334:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;ff.c: 1039:  return ncl;
  9666  00397A  C065  F056         	movff	create_chain@ncl,?_create_chain
  9667  00397E  C066  F057         	movff	create_chain@ncl+1,?_create_chain+1
  9668  003982  C067  F058         	movff	create_chain@ncl+2,?_create_chain+2
  9669  003986  C068  F059         	movff	create_chain@ncl+3,?_create_chain+3
  9670                           
  9671                           ; BSR set to: 0
  9672  00398A  0012               	return		;funcret
  9673  00398C                     __end_of_create_chain:
  9674                           	opt callstack 0
  9675                           
  9676 ;; *************** function _put_fat *****************
  9677 ;; Defined at:
  9678 ;;		line 873 in file "ff.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  fs              2   58[COMRAM] PTR struct .
  9681 ;;		 -> FatFs(558), NULL(0), 
  9682 ;;  clst            4   60[COMRAM] unsigned long 
  9683 ;;  val             4   64[COMRAM] unsigned long 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;  p               2   83[COMRAM] PTR unsigned char 
  9686 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
  9687 ;;  bc              2   80[COMRAM] unsigned short 
  9688 ;;  res             1   82[COMRAM] enum E93
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  1    wreg      enum E93
  9691 ;; Registers used:
  9692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9698 ;;      Params:        10       0       0       0       0       0       0       0       0
  9699 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9700 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9701 ;;      Totals:        27       0       0       0       0       0       0       0       0
  9702 ;;Total ram usage:       27 bytes
  9703 ;; Hardware stack levels used:    1
  9704 ;; Hardware stack levels required when called:    8
  9705 ;; This function calls:
  9706 ;;		_move_window
  9707 ;; This function is called by:
  9708 ;;		_remove_chain
  9709 ;;		_create_chain
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           	psect	text25
  9714  0023D8                     __ptext25:
  9715                           	opt callstack 0
  9716  0023D8                     _put_fat:
  9717                           	opt callstack 19
  9718                           
  9719                           ;ff.c: 874:  FATFS* fs,;ff.c: 875:  DWORD clst,;ff.c: 876:  DWORD val;ff.c: 878: {;ff.c:
      +                           879:  UINT bc;;ff.c: 880:  BYTE *p;;ff.c: 881:  FRESULT res;;ff.c: 884:  if (clst < 2 |
      +                          | clst >= fs->n_fatent) {
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;incstack = 0
  9723  0023D8  5040               	movf	put_fat@clst+3,w,c
  9724  0023DA  103F               	iorwf	put_fat@clst+2,w,c
  9725  0023DC  103E               	iorwf	put_fat@clst+1,w,c
  9726  0023DE  E104               	bnz	u5700
  9727  0023E0  0E02               	movlw	2
  9728  0023E2  5C3D               	subwf	put_fat@clst,w,c
  9729  0023E4  A0D8               	btfss	status,0,c
  9730  0023E6  D010               	goto	u5710
  9731  0023E8                     u5700:
  9732  0023E8  EE20 F012          	lfsr	2,18
  9733  0023EC  503B               	movf	put_fat@fs,w,c
  9734  0023EE  26D9               	addwf	fsr2l,f,c
  9735  0023F0  503C               	movf	put_fat@fs+1,w,c
  9736  0023F2  22DA               	addwfc	fsr2h,f,c
  9737  0023F4  50DE               	movf	postinc2,w,c
  9738  0023F6  5C3D               	subwf	put_fat@clst,w,c
  9739  0023F8  50DE               	movf	postinc2,w,c
  9740  0023FA  583E               	subwfb	put_fat@clst+1,w,c
  9741  0023FC  50DE               	movf	postinc2,w,c
  9742  0023FE  583F               	subwfb	put_fat@clst+2,w,c
  9743  002400  50DE               	movf	postinc2,w,c
  9744  002402  5840               	subwfb	put_fat@clst+3,w,c
  9745  002404  A0D8               	btfss	status,0,c
  9746  002406  D1E5               	goto	l4833
  9747  002408                     u5710:
  9748                           
  9749                           ;ff.c: 885:   res = FR_INT_ERR;
  9750  002408  0E02               	movlw	2
  9751  00240A  6E53               	movwf	put_fat@res,c
  9752                           
  9753                           ;ff.c: 887:  } else {
  9754  00240C  D1F8               	goto	l4835
  9755  00240E                     l278:
  9756                           
  9757                           ;ff.c: 890:    bc = (UINT)clst; bc += bc / 2;
  9758  00240E  C03D  F051         	movff	put_fat@clst,put_fat@bc
  9759  002412  C03E  F052         	movff	put_fat@clst+1,put_fat@bc+1
  9760  002416  90D8               	bcf	status,0,c
  9761  002418  3052               	rrcf	put_fat@bc+1,w,c
  9762  00241A  6E46               	movwf	(??_put_fat+1)& (0+255),c
  9763  00241C  3051               	rrcf	put_fat@bc,w,c
  9764  00241E  6E45               	movwf	??_put_fat& (0+255),c
  9765  002420  5045               	movf	??_put_fat,w,c
  9766  002422  2651               	addwf	put_fat@bc,f,c
  9767  002424  5046               	movf	??_put_fat+1,w,c
  9768  002426  2252               	addwfc	put_fat@bc+1,f,c
  9769                           
  9770                           ;ff.c: 891:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
  9771  002428  C03B  F030         	movff	put_fat@fs,move_window@fs
  9772  00242C  C03C  F031         	movff	put_fat@fs+1,move_window@fs+1
  9773  002430  EE20 F01E          	lfsr	2,30
  9774  002434  503B               	movf	put_fat@fs,w,c
  9775  002436  26D9               	addwf	fsr2l,f,c
  9776  002438  503C               	movf	put_fat@fs+1,w,c
  9777  00243A  22DA               	addwfc	fsr2h,f,c
  9778  00243C  CFDE F045          	movff	postinc2,??_put_fat
  9779  002440  CFDE F046          	movff	postinc2,??_put_fat+1
  9780  002444  CFDE F047          	movff	postinc2,??_put_fat+2
  9781  002448  CFDE F048          	movff	postinc2,??_put_fat+3
  9782  00244C  C051  F049         	movff	put_fat@bc,??_put_fat+4
  9783  002450  C052  F04A         	movff	put_fat@bc+1,??_put_fat+5
  9784  002454  0E09               	movlw	9
  9785  002456  6E4B               	movwf	(??_put_fat+6)& (0+255),c
  9786  002458                     u5725:
  9787  002458  90D8               	bcf	status,0,c
  9788  00245A  324A               	rrcf	??_put_fat+5,f,c
  9789  00245C  3249               	rrcf	??_put_fat+4,f,c
  9790  00245E  2E4B               	decfsz	(??_put_fat+6)& (0+255),f,c
  9791  002460  D7FB               	goto	u5725
  9792  002462  5049               	movf	??_put_fat+4,w,c
  9793  002464  2445               	addwf	??_put_fat,w,c
  9794  002466  6E32               	movwf	move_window@sector,c
  9795  002468  504A               	movf	??_put_fat+5,w,c
  9796  00246A  2046               	addwfc	??_put_fat+1,w,c
  9797  00246C  6E33               	movwf	move_window@sector+1,c
  9798  00246E  0E00               	movlw	0
  9799  002470  2047               	addwfc	??_put_fat+2,w,c
  9800  002472  6E34               	movwf	move_window@sector+2,c
  9801  002474  0E00               	movlw	0
  9802  002476  2048               	addwfc	??_put_fat+3,w,c
  9803  002478  6E35               	movwf	move_window@sector+3,c
  9804  00247A  EC49  F02B         	call	_move_window	;wreg free
  9805  00247E  6E53               	movwf	put_fat@res,c
  9806                           
  9807                           ;ff.c: 892:    if (res != FR_OK) break;
  9808  002480  5053               	movf	put_fat@res,w,c
  9809  002482  A4D8               	btfss	status,2,c
  9810  002484  D1BC               	goto	l4835
  9811                           
  9812                           ;ff.c: 893:    p = &fs->win[bc++ % ((UINT)512)];
  9813  002486  0EFF               	movlw	255
  9814  002488  6E45               	movwf	??_put_fat& (0+255),c
  9815  00248A  0E01               	movlw	1
  9816  00248C  6E46               	movwf	(??_put_fat+1)& (0+255),c
  9817  00248E  C051  F047         	movff	put_fat@bc,??_put_fat+2
  9818  002492  C052  F048         	movff	put_fat@bc+1,??_put_fat+3
  9819  002496  5045               	movf	??_put_fat,w,c
  9820  002498  1647               	andwf	??_put_fat+2,f,c
  9821  00249A  5046               	movf	??_put_fat+1,w,c
  9822  00249C  1648               	andwf	??_put_fat+3,f,c
  9823  00249E  C03B  F049         	movff	put_fat@fs,??_put_fat+4
  9824  0024A2  C03C  F04A         	movff	put_fat@fs+1,??_put_fat+5
  9825  0024A6  5047               	movf	??_put_fat+2,w,c
  9826  0024A8  2649               	addwf	??_put_fat+4,f,c
  9827  0024AA  5048               	movf	??_put_fat+3,w,c
  9828  0024AC  224A               	addwfc	??_put_fat+5,f,c
  9829  0024AE  0E2E               	movlw	46
  9830  0024B0  2449               	addwf	??_put_fat+4,w,c
  9831  0024B2  6E54               	movwf	put_fat@p,c
  9832  0024B4  0E00               	movlw	0
  9833  0024B6  204A               	addwfc	??_put_fat+5,w,c
  9834  0024B8  6E55               	movwf	put_fat@p+1,c
  9835  0024BA  4A51               	infsnz	put_fat@bc,f,c
  9836  0024BC  2A52               	incf	put_fat@bc+1,f,c
  9837                           
  9838                           ;ff.c: 894:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
  9839  0024BE  B03D               	btfsc	put_fat@clst,0,c
  9840  0024C0  D004               	goto	l4787
  9841  0024C2  C041  F04D         	movff	put_fat@val,_put_fat$400
  9842  0024C6  6A4E               	clrf	_put_fat$400+1,c
  9843  0024C8  D01A               	goto	l4789
  9844  0024CA                     l4787:
  9845  0024CA  5041               	movf	put_fat@val,w,c
  9846  0024CC  6E45               	movwf	??_put_fat& (0+255),c
  9847  0024CE  6A46               	clrf	(??_put_fat+1)& (0+255),c
  9848  0024D0  3A45               	swapf	??_put_fat,f,c
  9849  0024D2  3A46               	swapf	??_put_fat+1,f,c
  9850  0024D4  0EF0               	movlw	240
  9851  0024D6  1646               	andwf	??_put_fat+1,f,c
  9852  0024D8  5045               	movf	??_put_fat,w,c
  9853  0024DA  0B0F               	andlw	15
  9854  0024DC  1246               	iorwf	??_put_fat+1,f,c
  9855  0024DE  0EF0               	movlw	240
  9856  0024E0  1645               	andwf	??_put_fat,f,c
  9857  0024E2  C054  FFD9         	movff	put_fat@p,fsr2l
  9858  0024E6  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9859  0024EA  50DF               	movf	indf2,w,c
  9860  0024EC  0B0F               	andlw	15
  9861  0024EE  6E47               	movwf	(??_put_fat+2)& (0+255),c
  9862  0024F0  6A48               	clrf	(??_put_fat+3)& (0+255),c
  9863  0024F2  5045               	movf	??_put_fat,w,c
  9864  0024F4  1047               	iorwf	??_put_fat+2,w,c
  9865  0024F6  6E4D               	movwf	_put_fat$400,c
  9866  0024F8  5046               	movf	??_put_fat+1,w,c
  9867  0024FA  1048               	iorwf	??_put_fat+3,w,c
  9868  0024FC  6E4E               	movwf	_put_fat$400+1,c
  9869  0024FE                     l4789:
  9870  0024FE  C054  FFD9         	movff	put_fat@p,fsr2l
  9871  002502  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9872  002506  C04D  FFDF         	movff	_put_fat$400,indf2
  9873                           
  9874                           ;ff.c: 895:    fs->wflag = 1;
  9875  00250A  EE20 F004          	lfsr	2,4
  9876  00250E  503B               	movf	put_fat@fs,w,c
  9877  002510  26D9               	addwf	fsr2l,f,c
  9878  002512  503C               	movf	put_fat@fs+1,w,c
  9879  002514  22DA               	addwfc	fsr2h,f,c
  9880  002516  0E01               	movlw	1
  9881  002518  6EDF               	movwf	indf2,c
  9882                           
  9883                           ;ff.c: 896:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
  9884  00251A  C03B  F030         	movff	put_fat@fs,move_window@fs
  9885  00251E  C03C  F031         	movff	put_fat@fs+1,move_window@fs+1
  9886  002522  EE20 F01E          	lfsr	2,30
  9887  002526  503B               	movf	put_fat@fs,w,c
  9888  002528  26D9               	addwf	fsr2l,f,c
  9889  00252A  503C               	movf	put_fat@fs+1,w,c
  9890  00252C  22DA               	addwfc	fsr2h,f,c
  9891  00252E  CFDE F045          	movff	postinc2,??_put_fat
  9892  002532  CFDE F046          	movff	postinc2,??_put_fat+1
  9893  002536  CFDE F047          	movff	postinc2,??_put_fat+2
  9894  00253A  CFDE F048          	movff	postinc2,??_put_fat+3
  9895  00253E  C051  F049         	movff	put_fat@bc,??_put_fat+4
  9896  002542  C052  F04A         	movff	put_fat@bc+1,??_put_fat+5
  9897  002546  0E09               	movlw	9
  9898  002548  6E4B               	movwf	(??_put_fat+6)& (0+255),c
  9899  00254A                     u5755:
  9900  00254A  90D8               	bcf	status,0,c
  9901  00254C  324A               	rrcf	??_put_fat+5,f,c
  9902  00254E  3249               	rrcf	??_put_fat+4,f,c
  9903  002550  2E4B               	decfsz	(??_put_fat+6)& (0+255),f,c
  9904  002552  D7FB               	goto	u5755
  9905  002554  5049               	movf	??_put_fat+4,w,c
  9906  002556  2445               	addwf	??_put_fat,w,c
  9907  002558  6E32               	movwf	move_window@sector,c
  9908  00255A  504A               	movf	??_put_fat+5,w,c
  9909  00255C  2046               	addwfc	??_put_fat+1,w,c
  9910  00255E  6E33               	movwf	move_window@sector+1,c
  9911  002560  0E00               	movlw	0
  9912  002562  2047               	addwfc	??_put_fat+2,w,c
  9913  002564  6E34               	movwf	move_window@sector+2,c
  9914  002566  0E00               	movlw	0
  9915  002568  2048               	addwfc	??_put_fat+3,w,c
  9916  00256A  6E35               	movwf	move_window@sector+3,c
  9917  00256C  EC49  F02B         	call	_move_window	;wreg free
  9918  002570  6E53               	movwf	put_fat@res,c
  9919                           
  9920                           ;ff.c: 897:    if (res != FR_OK) break;
  9921  002572  5053               	movf	put_fat@res,w,c
  9922  002574  A4D8               	btfss	status,2,c
  9923  002576  D143               	goto	l4835
  9924                           
  9925                           ;ff.c: 898:    p = &fs->win[bc % ((UINT)512)];
  9926  002578  0EFF               	movlw	255
  9927  00257A  6E45               	movwf	??_put_fat& (0+255),c
  9928  00257C  0E01               	movlw	1
  9929  00257E  6E46               	movwf	(??_put_fat+1)& (0+255),c
  9930  002580  C051  F047         	movff	put_fat@bc,??_put_fat+2
  9931  002584  C052  F048         	movff	put_fat@bc+1,??_put_fat+3
  9932  002588  5045               	movf	??_put_fat,w,c
  9933  00258A  1647               	andwf	??_put_fat+2,f,c
  9934  00258C  5046               	movf	??_put_fat+1,w,c
  9935  00258E  1648               	andwf	??_put_fat+3,f,c
  9936  002590  C03B  F049         	movff	put_fat@fs,??_put_fat+4
  9937  002594  C03C  F04A         	movff	put_fat@fs+1,??_put_fat+5
  9938  002598  5047               	movf	??_put_fat+2,w,c
  9939  00259A  2649               	addwf	??_put_fat+4,f,c
  9940  00259C  5048               	movf	??_put_fat+3,w,c
  9941  00259E  224A               	addwfc	??_put_fat+5,f,c
  9942  0025A0  0E2E               	movlw	46
  9943  0025A2  2449               	addwf	??_put_fat+4,w,c
  9944  0025A4  6E54               	movwf	put_fat@p,c
  9945  0025A6  0E00               	movlw	0
  9946  0025A8  204A               	addwfc	??_put_fat+5,w,c
  9947  0025AA  6E55               	movwf	put_fat@p+1,c
  9948                           
  9949                           ;ff.c: 899:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0
      +                          x0F));
  9950  0025AC  B03D               	btfsc	put_fat@clst,0,c
  9951  0025AE  D01B               	goto	l4805
  9952  0025B0  C041  F045         	movff	put_fat@val,??_put_fat
  9953  0025B4  C042  F046         	movff	put_fat@val+1,??_put_fat+1
  9954  0025B8  C043  F047         	movff	put_fat@val+2,??_put_fat+2
  9955  0025BC  C044  F048         	movff	put_fat@val+3,??_put_fat+3
  9956  0025C0  C046  F045         	movff	??_put_fat+1,??_put_fat
  9957  0025C4  C047  F046         	movff	??_put_fat+2,??_put_fat+1
  9958  0025C8  C048  F047         	movff	??_put_fat+3,??_put_fat+2
  9959  0025CC  6A48               	clrf	??_put_fat+3,c
  9960  0025CE  0E0F               	movlw	15
  9961  0025D0  1645               	andwf	??_put_fat,f,c
  9962  0025D2  C054  FFD9         	movff	put_fat@p,fsr2l
  9963  0025D6  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9964  0025DA  50DF               	movf	indf2,w,c
  9965  0025DC  0BF0               	andlw	240
  9966  0025DE  1045               	iorwf	??_put_fat,w,c
  9967  0025E0  6E49               	movwf	(??_put_fat+4)& (0+255),c
  9968  0025E2  5049               	movf	??_put_fat+4,w,c
  9969  0025E4  D012               	goto	L9
  9970  0025E6                     l4805:
  9971  0025E6  C041  F045         	movff	put_fat@val,??_put_fat
  9972  0025EA  C042  F046         	movff	put_fat@val+1,??_put_fat+1
  9973  0025EE  C043  F047         	movff	put_fat@val+2,??_put_fat+2
  9974  0025F2  C044  F048         	movff	put_fat@val+3,??_put_fat+3
  9975  0025F6  0E05               	movlw	5
  9976  0025F8  D005               	goto	u5780
  9977  0025FA                     u5785:
  9978  0025FA  90D8               	bcf	status,0,c
  9979  0025FC  3248               	rrcf	??_put_fat+3,f,c
  9980  0025FE  3247               	rrcf	??_put_fat+2,f,c
  9981  002600  3246               	rrcf	??_put_fat+1,f,c
  9982  002602  3245               	rrcf	??_put_fat,f,c
  9983  002604                     u5780:
  9984  002604  2EE8               	decfsz	wreg,f,c
  9985  002606  D7F9               	goto	u5785
  9986  002608  5045               	movf	??_put_fat,w,c
  9987  00260A                     L9:
  9988  00260A  6E4F               	movwf	_put_fat$401,c
  9989  00260C  6A50               	clrf	_put_fat$401+1,c
  9990  00260E  C054  FFD9         	movff	put_fat@p,fsr2l
  9991  002612  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9992  002616  C04F  FFDF         	movff	_put_fat$401,indf2
  9993  00261A  D0D2               	goto	l4829
  9994  00261C                     l4809:
  9995                           
  9996                           ;ff.c: 904:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)));
  9997  00261C  C03B  F030         	movff	put_fat@fs,move_window@fs
  9998  002620  C03C  F031         	movff	put_fat@fs+1,move_window@fs+1
  9999  002624  EE20 F01E          	lfsr	2,30
 10000  002628  503B               	movf	put_fat@fs,w,c
 10001  00262A  26D9               	addwf	fsr2l,f,c
 10002  00262C  503C               	movf	put_fat@fs+1,w,c
 10003  00262E  22DA               	addwfc	fsr2h,f,c
 10004  002630  CFDE F045          	movff	postinc2,??_put_fat
 10005  002634  CFDE F046          	movff	postinc2,??_put_fat+1
 10006  002638  CFDE F047          	movff	postinc2,??_put_fat+2
 10007  00263C  CFDE F048          	movff	postinc2,??_put_fat+3
 10008  002640  C03D  F049         	movff	put_fat@clst,??_put_fat+4
 10009  002644  C03E  F04A         	movff	put_fat@clst+1,??_put_fat+5
 10010  002648  C03F  F04B         	movff	put_fat@clst+2,??_put_fat+6
 10011  00264C  C040  F04C         	movff	put_fat@clst+3,??_put_fat+7
 10012  002650  C04A  F049         	movff	??_put_fat+5,??_put_fat+4
 10013  002654  C04B  F04A         	movff	??_put_fat+6,??_put_fat+5
 10014  002658  C04C  F04B         	movff	??_put_fat+7,??_put_fat+6
 10015  00265C  6A4C               	clrf	??_put_fat+7,c
 10016  00265E  5045               	movf	??_put_fat,w,c
 10017  002660  2449               	addwf	??_put_fat+4,w,c
 10018  002662  6E32               	movwf	move_window@sector,c
 10019  002664  5046               	movf	??_put_fat+1,w,c
 10020  002666  204A               	addwfc	??_put_fat+5,w,c
 10021  002668  6E33               	movwf	move_window@sector+1,c
 10022  00266A  5047               	movf	??_put_fat+2,w,c
 10023  00266C  204B               	addwfc	??_put_fat+6,w,c
 10024  00266E  6E34               	movwf	move_window@sector+2,c
 10025  002670  5048               	movf	??_put_fat+3,w,c
 10026  002672  204C               	addwfc	??_put_fat+7,w,c
 10027  002674  6E35               	movwf	move_window@sector+3,c
 10028  002676  EC49  F02B         	call	_move_window	;wreg free
 10029  00267A  6E53               	movwf	put_fat@res,c
 10030                           
 10031                           ;ff.c: 905:    if (res != FR_OK) break;
 10032  00267C  5053               	movf	put_fat@res,w,c
 10033  00267E  A4D8               	btfss	status,2,c
 10034  002680  D0BE               	goto	l4835
 10035                           
 10036                           ;ff.c: 906:    p = &fs->win[clst * 2 % ((UINT)512)];
 10037  002682  0EFF               	movlw	255
 10038  002684  6E45               	movwf	??_put_fat& (0+255),c
 10039  002686  0E01               	movlw	1
 10040  002688  6E46               	movwf	(??_put_fat+1)& (0+255),c
 10041  00268A  C03D  F047         	movff	put_fat@clst,??_put_fat+2
 10042  00268E  C03E  F048         	movff	put_fat@clst+1,??_put_fat+3
 10043  002692  90D8               	bcf	status,0,c
 10044  002694  3647               	rlcf	??_put_fat+2,f,c
 10045  002696  3648               	rlcf	??_put_fat+3,f,c
 10046  002698  5045               	movf	??_put_fat,w,c
 10047  00269A  1647               	andwf	??_put_fat+2,f,c
 10048  00269C  5046               	movf	??_put_fat+1,w,c
 10049  00269E  1648               	andwf	??_put_fat+3,f,c
 10050  0026A0  C03B  F049         	movff	put_fat@fs,??_put_fat+4
 10051  0026A4  C03C  F04A         	movff	put_fat@fs+1,??_put_fat+5
 10052  0026A8  5047               	movf	??_put_fat+2,w,c
 10053  0026AA  2649               	addwf	??_put_fat+4,f,c
 10054  0026AC  5048               	movf	??_put_fat+3,w,c
 10055  0026AE  224A               	addwfc	??_put_fat+5,f,c
 10056  0026B0  0E2E               	movlw	46
 10057  0026B2  2449               	addwf	??_put_fat+4,w,c
 10058  0026B4  6E54               	movwf	put_fat@p,c
 10059  0026B6  0E00               	movlw	0
 10060  0026B8  204A               	addwfc	??_put_fat+5,w,c
 10061  0026BA  6E55               	movwf	put_fat@p+1,c
 10062                           
 10063                           ;ff.c: 907:    *(WORD*)(BYTE*)(p)=(WORD)((WORD)val);
 10064  0026BC  C054  FFD9         	movff	put_fat@p,fsr2l
 10065  0026C0  C055  FFDA         	movff	put_fat@p+1,fsr2h
 10066  0026C4  C041  FFDE         	movff	put_fat@val,postinc2
 10067  0026C8  C042  FFDD         	movff	put_fat@val+1,postdec2
 10068  0026CC  D079               	goto	l4829
 10069  0026CE                     l4819:
 10070                           
 10071                           ;ff.c: 912:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)));
 10072  0026CE  C03B  F030         	movff	put_fat@fs,move_window@fs
 10073  0026D2  C03C  F031         	movff	put_fat@fs+1,move_window@fs+1
 10074  0026D6  EE20 F01E          	lfsr	2,30
 10075  0026DA  503B               	movf	put_fat@fs,w,c
 10076  0026DC  26D9               	addwf	fsr2l,f,c
 10077  0026DE  503C               	movf	put_fat@fs+1,w,c
 10078  0026E0  22DA               	addwfc	fsr2h,f,c
 10079  0026E2  CFDE F045          	movff	postinc2,??_put_fat
 10080  0026E6  CFDE F046          	movff	postinc2,??_put_fat+1
 10081  0026EA  CFDE F047          	movff	postinc2,??_put_fat+2
 10082  0026EE  CFDE F048          	movff	postinc2,??_put_fat+3
 10083  0026F2  C03D  F049         	movff	put_fat@clst,??_put_fat+4
 10084  0026F6  C03E  F04A         	movff	put_fat@clst+1,??_put_fat+5
 10085  0026FA  C03F  F04B         	movff	put_fat@clst+2,??_put_fat+6
 10086  0026FE  C040  F04C         	movff	put_fat@clst+3,??_put_fat+7
 10087  002702  0E08               	movlw	8
 10088  002704  D005               	goto	u5800
 10089  002706                     u5805:
 10090  002706  90D8               	bcf	status,0,c
 10091  002708  324C               	rrcf	??_put_fat+7,f,c
 10092  00270A  324B               	rrcf	??_put_fat+6,f,c
 10093  00270C  324A               	rrcf	??_put_fat+5,f,c
 10094  00270E  3249               	rrcf	??_put_fat+4,f,c
 10095  002710                     u5800:
 10096  002710  2EE8               	decfsz	wreg,f,c
 10097  002712  D7F9               	goto	u5805
 10098  002714  5045               	movf	??_put_fat,w,c
 10099  002716  2449               	addwf	??_put_fat+4,w,c
 10100  002718  6E32               	movwf	move_window@sector,c
 10101  00271A  5046               	movf	??_put_fat+1,w,c
 10102  00271C  204A               	addwfc	??_put_fat+5,w,c
 10103  00271E  6E33               	movwf	move_window@sector+1,c
 10104  002720  5047               	movf	??_put_fat+2,w,c
 10105  002722  204B               	addwfc	??_put_fat+6,w,c
 10106  002724  6E34               	movwf	move_window@sector+2,c
 10107  002726  5048               	movf	??_put_fat+3,w,c
 10108  002728  204C               	addwfc	??_put_fat+7,w,c
 10109  00272A  6E35               	movwf	move_window@sector+3,c
 10110  00272C  EC49  F02B         	call	_move_window	;wreg free
 10111  002730  6E53               	movwf	put_fat@res,c
 10112                           
 10113                           ;ff.c: 913:    if (res != FR_OK) break;
 10114  002732  5053               	movf	put_fat@res,w,c
 10115  002734  A4D8               	btfss	status,2,c
 10116  002736  D063               	goto	l4835
 10117                           
 10118                           ;ff.c: 914:    p = &fs->win[clst * 4 % ((UINT)512)];
 10119  002738  0EFF               	movlw	255
 10120  00273A  6E45               	movwf	??_put_fat& (0+255),c
 10121  00273C  0E01               	movlw	1
 10122  00273E  6E46               	movwf	(??_put_fat+1)& (0+255),c
 10123  002740  C03D  F047         	movff	put_fat@clst,??_put_fat+2
 10124  002744  C03E  F048         	movff	put_fat@clst+1,??_put_fat+3
 10125  002748  90D8               	bcf	status,0,c
 10126  00274A  3647               	rlcf	??_put_fat+2,f,c
 10127  00274C  3648               	rlcf	??_put_fat+3,f,c
 10128  00274E  90D8               	bcf	status,0,c
 10129  002750  3647               	rlcf	??_put_fat+2,f,c
 10130  002752  3648               	rlcf	??_put_fat+3,f,c
 10131  002754  5045               	movf	??_put_fat,w,c
 10132  002756  1647               	andwf	??_put_fat+2,f,c
 10133  002758  5046               	movf	??_put_fat+1,w,c
 10134  00275A  1648               	andwf	??_put_fat+3,f,c
 10135  00275C  C03B  F049         	movff	put_fat@fs,??_put_fat+4
 10136  002760  C03C  F04A         	movff	put_fat@fs+1,??_put_fat+5
 10137  002764  5047               	movf	??_put_fat+2,w,c
 10138  002766  2649               	addwf	??_put_fat+4,f,c
 10139  002768  5048               	movf	??_put_fat+3,w,c
 10140  00276A  224A               	addwfc	??_put_fat+5,f,c
 10141  00276C  0E2E               	movlw	46
 10142  00276E  2449               	addwf	??_put_fat+4,w,c
 10143  002770  6E54               	movwf	put_fat@p,c
 10144  002772  0E00               	movlw	0
 10145  002774  204A               	addwfc	??_put_fat+5,w,c
 10146  002776  6E55               	movwf	put_fat@p+1,c
 10147                           
 10148                           ;ff.c: 915:    val |= (DWORD)(*(DWORD*)(BYTE*)(p)) & 0xF0000000;
 10149  002778  C054  FFD9         	movff	put_fat@p,fsr2l
 10150  00277C  C055  FFDA         	movff	put_fat@p+1,fsr2h
 10151  002780  0E00               	movlw	0
 10152  002782  14DE               	andwf	postinc2,w,c
 10153  002784  6E45               	movwf	??_put_fat& (0+255),c
 10154  002786  0E00               	movlw	0
 10155  002788  14DE               	andwf	postinc2,w,c
 10156  00278A  6E46               	movwf	(??_put_fat+1)& (0+255),c
 10157  00278C  0E00               	movlw	0
 10158  00278E  14DE               	andwf	postinc2,w,c
 10159  002790  6E47               	movwf	(??_put_fat+2)& (0+255),c
 10160  002792  0EF0               	movlw	240
 10161  002794  14DE               	andwf	postinc2,w,c
 10162  002796  6E48               	movwf	(??_put_fat+3)& (0+255),c
 10163  002798  5045               	movf	??_put_fat,w,c
 10164  00279A  1241               	iorwf	put_fat@val,f,c
 10165  00279C  5046               	movf	??_put_fat+1,w,c
 10166  00279E  1242               	iorwf	put_fat@val+1,f,c
 10167  0027A0  5047               	movf	??_put_fat+2,w,c
 10168  0027A2  1243               	iorwf	put_fat@val+2,f,c
 10169  0027A4  5048               	movf	??_put_fat+3,w,c
 10170  0027A6  1244               	iorwf	put_fat@val+3,f,c
 10171                           
 10172                           ;ff.c: 916:    *(DWORD*)(BYTE*)(p)=(DWORD)(val);
 10173  0027A8  C054  FFD9         	movff	put_fat@p,fsr2l
 10174  0027AC  C055  FFDA         	movff	put_fat@p+1,fsr2h
 10175  0027B0  C041  FFDE         	movff	put_fat@val,postinc2
 10176  0027B4  C042  FFDE         	movff	put_fat@val+1,postinc2
 10177  0027B8  C043  FFDE         	movff	put_fat@val+2,postinc2
 10178  0027BC  C044  FFDE         	movff	put_fat@val+3,postinc2
 10179  0027C0                     l4829:
 10180                           
 10181                           ;ff.c: 917:    fs->wflag = 1;
 10182  0027C0  EE20 F004          	lfsr	2,4
 10183  0027C4  503B               	movf	put_fat@fs,w,c
 10184  0027C6  26D9               	addwf	fsr2l,f,c
 10185  0027C8  503C               	movf	put_fat@fs+1,w,c
 10186  0027CA  22DA               	addwfc	fsr2h,f,c
 10187  0027CC  0E01               	movlw	1
 10188  0027CE  6EDF               	movwf	indf2,c
 10189                           
 10190                           ;ff.c: 918:    break;
 10191  0027D0  D016               	goto	l4835
 10192  0027D2                     l4833:
 10193  0027D2  C03B  FFD9         	movff	put_fat@fs,fsr2l
 10194  0027D6  C03C  FFDA         	movff	put_fat@fs+1,fsr2h
 10195  0027DA  50DF               	movf	indf2,w,c
 10196  0027DC  6E45               	movwf	??_put_fat& (0+255),c
 10197  0027DE  6A46               	clrf	(??_put_fat+1)& (0+255),c
 10198                           
 10199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10200                           ; Switch size 1, requested type "simple"
 10201                           ; Number of cases is 1, Range of values is 0 to 0
 10202                           ; switch strategies available:
 10203                           ; Name         Instructions Cycles
 10204                           ; simple_byte            4     3 (average)
 10205                           ;	Chosen strategy is simple_byte
 10206  0027E0  5046               	movf	??_put_fat+1,w,c
 10207  0027E2  0A00               	xorlw	0	; case 0
 10208  0027E4  A4D8               	btfss	status,2,c
 10209  0027E6  D610               	goto	u5710
 10210                           
 10211                           ; Switch size 1, requested type "simple"
 10212                           ; Number of cases is 3, Range of values is 1 to 3
 10213                           ; switch strategies available:
 10214                           ; Name         Instructions Cycles
 10215                           ; simple_byte           10     6 (average)
 10216                           ;	Chosen strategy is simple_byte
 10217  0027E8  5045               	movf	??_put_fat,w,c
 10218  0027EA  0A01               	xorlw	1	; case 1
 10219  0027EC  B4D8               	btfsc	status,2,c
 10220  0027EE  D60F               	goto	l278
 10221  0027F0  0A03               	xorlw	3	; case 2
 10222  0027F2  B4D8               	btfsc	status,2,c
 10223  0027F4  D713               	goto	l4809
 10224  0027F6  0A01               	xorlw	1	; case 3
 10225  0027F8  B4D8               	btfsc	status,2,c
 10226  0027FA  D769               	goto	l4819
 10227  0027FC  D605               	goto	u5710
 10228  0027FE                     l4835:
 10229                           
 10230                           ;ff.c: 925:  return res;
 10231  0027FE  5053               	movf	put_fat@res,w,c
 10232  002800  0012               	return		;funcret
 10233  002802                     __end_of_put_fat:
 10234                           	opt callstack 0
 10235                           
 10236 ;; *************** function _get_fat *****************
 10237 ;; Defined at:
 10238 ;;		line 818 in file "ff.c"
 10239 ;; Parameters:    Size  Location     Type
 10240 ;;  fs              2   58[COMRAM] PTR struct .
 10241 ;;		 -> FatFs(558), NULL(0), 
 10242 ;;  clst            4   60[COMRAM] unsigned long 
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;  val             4   75[COMRAM] unsigned long 
 10245 ;;  bc              2   83[COMRAM] unsigned short 
 10246 ;;  p               2   81[COMRAM] PTR unsigned char 
 10247 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
 10248 ;;  wc              2   79[COMRAM] unsigned short 
 10249 ;; Return value:  Size  Location     Type
 10250 ;;                  4   58[COMRAM] unsigned long 
 10251 ;; Registers used:
 10252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10253 ;; Tracked objects:
 10254 ;;		On entry : 0/0
 10255 ;;		On exit  : 0/0
 10256 ;;		Unchanged: 0/0
 10257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10258 ;;      Params:         6       0       0       0       0       0       0       0       0
 10259 ;;      Locals:        12       0       0       0       0       0       0       0       0
 10260 ;;      Temps:          9       0       0       0       0       0       0       0       0
 10261 ;;      Totals:        27       0       0       0       0       0       0       0       0
 10262 ;;Total ram usage:       27 bytes
 10263 ;; Hardware stack levels used:    1
 10264 ;; Hardware stack levels required when called:    8
 10265 ;; This function calls:
 10266 ;;		_move_window
 10267 ;; This function is called by:
 10268 ;;		_remove_chain
 10269 ;;		_create_chain
 10270 ;;		_dir_sdi
 10271 ;;		_dir_next
 10272 ;;		_f_lseek
 10273 ;;		_f_read
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276                           
 10277                           	psect	text26
 10278  002C08                     __ptext26:
 10279                           	opt callstack 0
 10280  002C08                     _get_fat:
 10281                           	opt callstack 19
 10282                           
 10283                           ;ff.c: 819:  FATFS* fs,;ff.c: 820:  DWORD clst;ff.c: 822: {;ff.c: 823:  UINT wc, bc;;ff.
      +                          c: 824:  BYTE *p;;ff.c: 825:  DWORD val;;ff.c: 828:  if (clst < 2 || clst >= fs->n_faten
      +                          t) {
 10284                           
 10285                           ;incstack = 0
 10286  002C08  5040               	movf	get_fat@clst+3,w,c
 10287  002C0A  103F               	iorwf	get_fat@clst+2,w,c
 10288  002C0C  103E               	iorwf	get_fat@clst+1,w,c
 10289  002C0E  E104               	bnz	u5590
 10290  002C10  0E02               	movlw	2
 10291  002C12  5C3D               	subwf	get_fat@clst,w,c
 10292  002C14  A0D8               	btfss	status,0,c
 10293  002C16  D010               	goto	u5600
 10294  002C18                     u5590:
 10295  002C18  EE20 F012          	lfsr	2,18
 10296  002C1C  503B               	movf	get_fat@fs,w,c
 10297  002C1E  26D9               	addwf	fsr2l,f,c
 10298  002C20  503C               	movf	get_fat@fs+1,w,c
 10299  002C22  22DA               	addwfc	fsr2h,f,c
 10300  002C24  50DE               	movf	postinc2,w,c
 10301  002C26  5C3D               	subwf	get_fat@clst,w,c
 10302  002C28  50DE               	movf	postinc2,w,c
 10303  002C2A  583E               	subwfb	get_fat@clst+1,w,c
 10304  002C2C  50DE               	movf	postinc2,w,c
 10305  002C2E  583F               	subwfb	get_fat@clst+2,w,c
 10306  002C30  50DE               	movf	postinc2,w,c
 10307  002C32  5840               	subwfb	get_fat@clst+3,w,c
 10308  002C34  A0D8               	btfss	status,0,c
 10309  002C36  D008               	goto	l252
 10310  002C38                     u5600:
 10311                           
 10312                           ;ff.c: 829:   val = 1;
 10313  002C38  0E01               	movlw	1
 10314  002C3A  6E4C               	movwf	get_fat@val,c
 10315  002C3C  0E00               	movlw	0
 10316  002C3E  6E4D               	movwf	get_fat@val+1,c
 10317  002C40  0E00               	movlw	0
 10318  002C42  6E4E               	movwf	get_fat@val+2,c
 10319  002C44  0E00               	movlw	0
 10320  002C46  D190               	goto	L11
 10321  002C48                     l252:
 10322                           
 10323                           ;ff.c: 832:   val = 0xFFFFFFFF;
 10324  002C48  684C               	setf	get_fat@val,c
 10325  002C4A  684D               	setf	get_fat@val+1,c
 10326  002C4C  684E               	setf	get_fat@val+2,c
 10327  002C4E  684F               	setf	get_fat@val+3,c
 10328                           
 10329                           ;ff.c: 834:   switch (fs->fs_type) {
 10330  002C50  D18D               	goto	l4759
 10331  002C52                     l257:
 10332                           
 10333                           ;ff.c: 836:    bc = (UINT)clst; bc += bc / 2;
 10334  002C52  C03D  F054         	movff	get_fat@clst,get_fat@bc
 10335  002C56  C03E  F055         	movff	get_fat@clst+1,get_fat@bc+1
 10336  002C5A  90D8               	bcf	status,0,c
 10337  002C5C  3055               	rrcf	get_fat@bc+1,w,c
 10338  002C5E  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10339  002C60  3054               	rrcf	get_fat@bc,w,c
 10340  002C62  6E41               	movwf	??_get_fat& (0+255),c
 10341  002C64  5041               	movf	??_get_fat,w,c
 10342  002C66  2654               	addwf	get_fat@bc,f,c
 10343  002C68  5042               	movf	??_get_fat+1,w,c
 10344  002C6A  2255               	addwfc	get_fat@bc+1,f,c
 10345                           
 10346                           ;ff.c: 837:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
 10347  002C6C  C03B  F030         	movff	get_fat@fs,move_window@fs
 10348  002C70  C03C  F031         	movff	get_fat@fs+1,move_window@fs+1
 10349  002C74  EE20 F01E          	lfsr	2,30
 10350  002C78  503B               	movf	get_fat@fs,w,c
 10351  002C7A  26D9               	addwf	fsr2l,f,c
 10352  002C7C  503C               	movf	get_fat@fs+1,w,c
 10353  002C7E  22DA               	addwfc	fsr2h,f,c
 10354  002C80  CFDE F041          	movff	postinc2,??_get_fat
 10355  002C84  CFDE F042          	movff	postinc2,??_get_fat+1
 10356  002C88  CFDE F043          	movff	postinc2,??_get_fat+2
 10357  002C8C  CFDE F044          	movff	postinc2,??_get_fat+3
 10358  002C90  C054  F045         	movff	get_fat@bc,??_get_fat+4
 10359  002C94  C055  F046         	movff	get_fat@bc+1,??_get_fat+5
 10360  002C98  0E09               	movlw	9
 10361  002C9A  6E47               	movwf	(??_get_fat+6)& (0+255),c
 10362  002C9C                     u5615:
 10363  002C9C  90D8               	bcf	status,0,c
 10364  002C9E  3246               	rrcf	??_get_fat+5,f,c
 10365  002CA0  3245               	rrcf	??_get_fat+4,f,c
 10366  002CA2  2E47               	decfsz	(??_get_fat+6)& (0+255),f,c
 10367  002CA4  D7FB               	goto	u5615
 10368  002CA6  5045               	movf	??_get_fat+4,w,c
 10369  002CA8  2441               	addwf	??_get_fat,w,c
 10370  002CAA  6E32               	movwf	move_window@sector,c
 10371  002CAC  5046               	movf	??_get_fat+5,w,c
 10372  002CAE  2042               	addwfc	??_get_fat+1,w,c
 10373  002CB0  6E33               	movwf	move_window@sector+1,c
 10374  002CB2  0E00               	movlw	0
 10375  002CB4  2043               	addwfc	??_get_fat+2,w,c
 10376  002CB6  6E34               	movwf	move_window@sector+2,c
 10377  002CB8  0E00               	movlw	0
 10378  002CBA  2044               	addwfc	??_get_fat+3,w,c
 10379  002CBC  6E35               	movwf	move_window@sector+3,c
 10380  002CBE  EC49  F02B         	call	_move_window	;wreg free
 10381  002CC2  0900               	iorlw	0
 10382  002CC4  A4D8               	btfss	status,2,c
 10383  002CC6  D168               	goto	l255
 10384                           
 10385                           ;ff.c: 838:    wc = fs->win[bc++ % ((UINT)512)];
 10386  002CC8  0EFF               	movlw	255
 10387  002CCA  6E41               	movwf	??_get_fat& (0+255),c
 10388  002CCC  0E01               	movlw	1
 10389  002CCE  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10390  002CD0  C054  F043         	movff	get_fat@bc,??_get_fat+2
 10391  002CD4  C055  F044         	movff	get_fat@bc+1,??_get_fat+3
 10392  002CD8  5041               	movf	??_get_fat,w,c
 10393  002CDA  1643               	andwf	??_get_fat+2,f,c
 10394  002CDC  5042               	movf	??_get_fat+1,w,c
 10395  002CDE  1644               	andwf	??_get_fat+3,f,c
 10396  002CE0  C03B  F045         	movff	get_fat@fs,??_get_fat+4
 10397  002CE4  C03C  F046         	movff	get_fat@fs+1,??_get_fat+5
 10398  002CE8  5043               	movf	??_get_fat+2,w,c
 10399  002CEA  2645               	addwf	??_get_fat+4,f,c
 10400  002CEC  5044               	movf	??_get_fat+3,w,c
 10401  002CEE  2246               	addwfc	??_get_fat+5,f,c
 10402  002CF0  0E2E               	movlw	46
 10403  002CF2  2445               	addwf	??_get_fat+4,w,c
 10404  002CF4  6ED9               	movwf	fsr2l,c
 10405  002CF6  0E00               	movlw	0
 10406  002CF8  2046               	addwfc	??_get_fat+5,w,c
 10407  002CFA  6EDA               	movwf	fsr2h,c
 10408  002CFC  50DF               	movf	indf2,w,c
 10409  002CFE  6E47               	movwf	(??_get_fat+6)& (0+255),c
 10410  002D00  5047               	movf	??_get_fat+6,w,c
 10411  002D02  6E50               	movwf	get_fat@wc,c
 10412  002D04  6A51               	clrf	get_fat@wc+1,c
 10413  002D06  4A54               	infsnz	get_fat@bc,f,c
 10414  002D08  2A55               	incf	get_fat@bc+1,f,c
 10415                           
 10416                           ;ff.c: 839:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
 10417  002D0A  C03B  F030         	movff	get_fat@fs,move_window@fs
 10418  002D0E  C03C  F031         	movff	get_fat@fs+1,move_window@fs+1
 10419  002D12  EE20 F01E          	lfsr	2,30
 10420  002D16  503B               	movf	get_fat@fs,w,c
 10421  002D18  26D9               	addwf	fsr2l,f,c
 10422  002D1A  503C               	movf	get_fat@fs+1,w,c
 10423  002D1C  22DA               	addwfc	fsr2h,f,c
 10424  002D1E  CFDE F041          	movff	postinc2,??_get_fat
 10425  002D22  CFDE F042          	movff	postinc2,??_get_fat+1
 10426  002D26  CFDE F043          	movff	postinc2,??_get_fat+2
 10427  002D2A  CFDE F044          	movff	postinc2,??_get_fat+3
 10428  002D2E  C054  F045         	movff	get_fat@bc,??_get_fat+4
 10429  002D32  C055  F046         	movff	get_fat@bc+1,??_get_fat+5
 10430  002D36  0E09               	movlw	9
 10431  002D38  6E47               	movwf	(??_get_fat+6)& (0+255),c
 10432  002D3A                     u5635:
 10433  002D3A  90D8               	bcf	status,0,c
 10434  002D3C  3246               	rrcf	??_get_fat+5,f,c
 10435  002D3E  3245               	rrcf	??_get_fat+4,f,c
 10436  002D40  2E47               	decfsz	(??_get_fat+6)& (0+255),f,c
 10437  002D42  D7FB               	goto	u5635
 10438  002D44  5045               	movf	??_get_fat+4,w,c
 10439  002D46  2441               	addwf	??_get_fat,w,c
 10440  002D48  6E32               	movwf	move_window@sector,c
 10441  002D4A  5046               	movf	??_get_fat+5,w,c
 10442  002D4C  2042               	addwfc	??_get_fat+1,w,c
 10443  002D4E  6E33               	movwf	move_window@sector+1,c
 10444  002D50  0E00               	movlw	0
 10445  002D52  2043               	addwfc	??_get_fat+2,w,c
 10446  002D54  6E34               	movwf	move_window@sector+2,c
 10447  002D56  0E00               	movlw	0
 10448  002D58  2044               	addwfc	??_get_fat+3,w,c
 10449  002D5A  6E35               	movwf	move_window@sector+3,c
 10450  002D5C  EC49  F02B         	call	_move_window	;wreg free
 10451  002D60  0900               	iorlw	0
 10452  002D62  A4D8               	btfss	status,2,c
 10453  002D64  D119               	goto	l255
 10454                           
 10455                           ;ff.c: 840:    wc |= fs->win[bc % ((UINT)512)] << 8;
 10456  002D66  0EFF               	movlw	255
 10457  002D68  6E41               	movwf	??_get_fat& (0+255),c
 10458  002D6A  0E01               	movlw	1
 10459  002D6C  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10460  002D6E  C054  F043         	movff	get_fat@bc,??_get_fat+2
 10461  002D72  C055  F044         	movff	get_fat@bc+1,??_get_fat+3
 10462  002D76  5041               	movf	??_get_fat,w,c
 10463  002D78  1643               	andwf	??_get_fat+2,f,c
 10464  002D7A  5042               	movf	??_get_fat+1,w,c
 10465  002D7C  1644               	andwf	??_get_fat+3,f,c
 10466  002D7E  C03B  F045         	movff	get_fat@fs,??_get_fat+4
 10467  002D82  C03C  F046         	movff	get_fat@fs+1,??_get_fat+5
 10468  002D86  5043               	movf	??_get_fat+2,w,c
 10469  002D88  2645               	addwf	??_get_fat+4,f,c
 10470  002D8A  5044               	movf	??_get_fat+3,w,c
 10471  002D8C  2246               	addwfc	??_get_fat+5,f,c
 10472  002D8E  0E2E               	movlw	46
 10473  002D90  2445               	addwf	??_get_fat+4,w,c
 10474  002D92  6ED9               	movwf	fsr2l,c
 10475  002D94  0E00               	movlw	0
 10476  002D96  2046               	addwfc	??_get_fat+5,w,c
 10477  002D98  6EDA               	movwf	fsr2h,c
 10478  002D9A  50DF               	movf	indf2,w,c
 10479  002D9C  6E47               	movwf	(??_get_fat+6)& (0+255),c
 10480  002D9E  5047               	movf	??_get_fat+6,w,c
 10481  002DA0  6E49               	movwf	(??_get_fat+8)& (0+255),c
 10482  002DA2  6A48               	clrf	(??_get_fat+7)& (0+255),c
 10483  002DA4  5048               	movf	??_get_fat+7,w,c
 10484  002DA6  1250               	iorwf	get_fat@wc,f,c
 10485  002DA8  5049               	movf	??_get_fat+8,w,c
 10486  002DAA  1251               	iorwf	get_fat@wc+1,f,c
 10487                           
 10488                           ;ff.c: 841:    val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 10489  002DAC  B03D               	btfsc	get_fat@clst,0,c
 10490  002DAE  D007               	goto	l4737
 10491  002DB0  0EFF               	movlw	255
 10492  002DB2  1450               	andwf	get_fat@wc,w,c
 10493  002DB4  6E4A               	movwf	_get_fat$374,c
 10494  002DB6  0E0F               	movlw	15
 10495  002DB8  1451               	andwf	get_fat@wc+1,w,c
 10496  002DBA  6E4B               	movwf	_get_fat$374+1,c
 10497  002DBC  D00F               	goto	l4739
 10498  002DBE                     l4737:
 10499  002DBE  C050  F041         	movff	get_fat@wc,??_get_fat
 10500  002DC2  C051  F042         	movff	get_fat@wc+1,??_get_fat+1
 10501  002DC6  0E04               	movlw	4
 10502  002DC8  6E43               	movwf	(??_get_fat+2)& (0+255),c
 10503  002DCA                     u5665:
 10504  002DCA  90D8               	bcf	status,0,c
 10505  002DCC  3242               	rrcf	??_get_fat+1,f,c
 10506  002DCE  3241               	rrcf	??_get_fat,f,c
 10507  002DD0  2E43               	decfsz	(??_get_fat+2)& (0+255),f,c
 10508  002DD2  D7FB               	goto	u5665
 10509  002DD4  C041  F04A         	movff	??_get_fat,_get_fat$374
 10510  002DD8  C042  F04B         	movff	??_get_fat+1,_get_fat$374+1
 10511  002DDC                     l4739:
 10512  002DDC  C04A  F04C         	movff	_get_fat$374,get_fat@val
 10513  002DE0  C04B  F04D         	movff	_get_fat$374+1,get_fat@val+1
 10514  002DE4  D05B               	goto	L12
 10515  002DE6                     l4741:
 10516                           
 10517                           ;ff.c: 845:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) != FR_OK) b
      +                          reak;
 10518  002DE6  C03B  F030         	movff	get_fat@fs,move_window@fs
 10519  002DEA  C03C  F031         	movff	get_fat@fs+1,move_window@fs+1
 10520  002DEE  EE20 F01E          	lfsr	2,30
 10521  002DF2  503B               	movf	get_fat@fs,w,c
 10522  002DF4  26D9               	addwf	fsr2l,f,c
 10523  002DF6  503C               	movf	get_fat@fs+1,w,c
 10524  002DF8  22DA               	addwfc	fsr2h,f,c
 10525  002DFA  CFDE F041          	movff	postinc2,??_get_fat
 10526  002DFE  CFDE F042          	movff	postinc2,??_get_fat+1
 10527  002E02  CFDE F043          	movff	postinc2,??_get_fat+2
 10528  002E06  CFDE F044          	movff	postinc2,??_get_fat+3
 10529  002E0A  C03D  F045         	movff	get_fat@clst,??_get_fat+4
 10530  002E0E  C03E  F046         	movff	get_fat@clst+1,??_get_fat+5
 10531  002E12  C03F  F047         	movff	get_fat@clst+2,??_get_fat+6
 10532  002E16  C040  F048         	movff	get_fat@clst+3,??_get_fat+7
 10533  002E1A  C046  F045         	movff	??_get_fat+5,??_get_fat+4
 10534  002E1E  C047  F046         	movff	??_get_fat+6,??_get_fat+5
 10535  002E22  C048  F047         	movff	??_get_fat+7,??_get_fat+6
 10536  002E26  6A48               	clrf	??_get_fat+7,c
 10537  002E28  5041               	movf	??_get_fat,w,c
 10538  002E2A  2445               	addwf	??_get_fat+4,w,c
 10539  002E2C  6E32               	movwf	move_window@sector,c
 10540  002E2E  5042               	movf	??_get_fat+1,w,c
 10541  002E30  2046               	addwfc	??_get_fat+5,w,c
 10542  002E32  6E33               	movwf	move_window@sector+1,c
 10543  002E34  5043               	movf	??_get_fat+2,w,c
 10544  002E36  2047               	addwfc	??_get_fat+6,w,c
 10545  002E38  6E34               	movwf	move_window@sector+2,c
 10546  002E3A  5044               	movf	??_get_fat+3,w,c
 10547  002E3C  2048               	addwfc	??_get_fat+7,w,c
 10548  002E3E  6E35               	movwf	move_window@sector+3,c
 10549  002E40  EC49  F02B         	call	_move_window	;wreg free
 10550  002E44  0900               	iorlw	0
 10551  002E46  A4D8               	btfss	status,2,c
 10552  002E48  D0A7               	goto	l255
 10553                           
 10554                           ;ff.c: 846:    p = &fs->win[clst * 2 % ((UINT)512)];
 10555  002E4A  0EFF               	movlw	255
 10556  002E4C  6E41               	movwf	??_get_fat& (0+255),c
 10557  002E4E  0E01               	movlw	1
 10558  002E50  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10559  002E52  C03D  F043         	movff	get_fat@clst,??_get_fat+2
 10560  002E56  C03E  F044         	movff	get_fat@clst+1,??_get_fat+3
 10561  002E5A  90D8               	bcf	status,0,c
 10562  002E5C  3643               	rlcf	??_get_fat+2,f,c
 10563  002E5E  3644               	rlcf	??_get_fat+3,f,c
 10564  002E60  5041               	movf	??_get_fat,w,c
 10565  002E62  1643               	andwf	??_get_fat+2,f,c
 10566  002E64  5042               	movf	??_get_fat+1,w,c
 10567  002E66  1644               	andwf	??_get_fat+3,f,c
 10568  002E68  C03B  F045         	movff	get_fat@fs,??_get_fat+4
 10569  002E6C  C03C  F046         	movff	get_fat@fs+1,??_get_fat+5
 10570  002E70  5043               	movf	??_get_fat+2,w,c
 10571  002E72  2645               	addwf	??_get_fat+4,f,c
 10572  002E74  5044               	movf	??_get_fat+3,w,c
 10573  002E76  2246               	addwfc	??_get_fat+5,f,c
 10574  002E78  0E2E               	movlw	46
 10575  002E7A  2445               	addwf	??_get_fat+4,w,c
 10576  002E7C  6E52               	movwf	get_fat@p,c
 10577  002E7E  0E00               	movlw	0
 10578  002E80  2046               	addwfc	??_get_fat+5,w,c
 10579  002E82  6E53               	movwf	get_fat@p+1,c
 10580                           
 10581                           ;ff.c: 847:    val = (WORD)(*(WORD*)(BYTE*)(p));
 10582  002E84  C052  FFD9         	movff	get_fat@p,fsr2l
 10583  002E88  C053  FFDA         	movff	get_fat@p+1,fsr2h
 10584  002E8C  CFDE F041          	movff	postinc2,??_get_fat
 10585  002E90  CFDD F042          	movff	postdec2,??_get_fat+1
 10586  002E94  C041  F04C         	movff	??_get_fat,get_fat@val
 10587  002E98  C042  F04D         	movff	??_get_fat+1,get_fat@val+1
 10588  002E9C                     L12:
 10589  002E9C  6A4E               	clrf	get_fat@val+2,c
 10590  002E9E  6A4F               	clrf	get_fat@val+3,c
 10591                           
 10592                           ;ff.c: 848:    break;
 10593  002EA0  D07B               	goto	l255
 10594  002EA2                     l4749:
 10595                           
 10596                           ;ff.c: 851:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) != FR_OK) b
      +                          reak;
 10597  002EA2  C03B  F030         	movff	get_fat@fs,move_window@fs
 10598  002EA6  C03C  F031         	movff	get_fat@fs+1,move_window@fs+1
 10599  002EAA  EE20 F01E          	lfsr	2,30
 10600  002EAE  503B               	movf	get_fat@fs,w,c
 10601  002EB0  26D9               	addwf	fsr2l,f,c
 10602  002EB2  503C               	movf	get_fat@fs+1,w,c
 10603  002EB4  22DA               	addwfc	fsr2h,f,c
 10604  002EB6  CFDE F041          	movff	postinc2,??_get_fat
 10605  002EBA  CFDE F042          	movff	postinc2,??_get_fat+1
 10606  002EBE  CFDE F043          	movff	postinc2,??_get_fat+2
 10607  002EC2  CFDE F044          	movff	postinc2,??_get_fat+3
 10608  002EC6  C03D  F045         	movff	get_fat@clst,??_get_fat+4
 10609  002ECA  C03E  F046         	movff	get_fat@clst+1,??_get_fat+5
 10610  002ECE  C03F  F047         	movff	get_fat@clst+2,??_get_fat+6
 10611  002ED2  C040  F048         	movff	get_fat@clst+3,??_get_fat+7
 10612  002ED6  0E08               	movlw	8
 10613  002ED8  D005               	goto	u5680
 10614  002EDA                     u5685:
 10615  002EDA  90D8               	bcf	status,0,c
 10616  002EDC  3248               	rrcf	??_get_fat+7,f,c
 10617  002EDE  3247               	rrcf	??_get_fat+6,f,c
 10618  002EE0  3246               	rrcf	??_get_fat+5,f,c
 10619  002EE2  3245               	rrcf	??_get_fat+4,f,c
 10620  002EE4                     u5680:
 10621  002EE4  2EE8               	decfsz	wreg,f,c
 10622  002EE6  D7F9               	goto	u5685
 10623  002EE8  5041               	movf	??_get_fat,w,c
 10624  002EEA  2445               	addwf	??_get_fat+4,w,c
 10625  002EEC  6E32               	movwf	move_window@sector,c
 10626  002EEE  5042               	movf	??_get_fat+1,w,c
 10627  002EF0  2046               	addwfc	??_get_fat+5,w,c
 10628  002EF2  6E33               	movwf	move_window@sector+1,c
 10629  002EF4  5043               	movf	??_get_fat+2,w,c
 10630  002EF6  2047               	addwfc	??_get_fat+6,w,c
 10631  002EF8  6E34               	movwf	move_window@sector+2,c
 10632  002EFA  5044               	movf	??_get_fat+3,w,c
 10633  002EFC  2048               	addwfc	??_get_fat+7,w,c
 10634  002EFE  6E35               	movwf	move_window@sector+3,c
 10635  002F00  EC49  F02B         	call	_move_window	;wreg free
 10636  002F04  0900               	iorlw	0
 10637  002F06  A4D8               	btfss	status,2,c
 10638  002F08  D047               	goto	l255
 10639                           
 10640                           ;ff.c: 852:    p = &fs->win[clst * 4 % ((UINT)512)];
 10641  002F0A  0EFF               	movlw	255
 10642  002F0C  6E41               	movwf	??_get_fat& (0+255),c
 10643  002F0E  0E01               	movlw	1
 10644  002F10  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10645  002F12  C03D  F043         	movff	get_fat@clst,??_get_fat+2
 10646  002F16  C03E  F044         	movff	get_fat@clst+1,??_get_fat+3
 10647  002F1A  90D8               	bcf	status,0,c
 10648  002F1C  3643               	rlcf	??_get_fat+2,f,c
 10649  002F1E  3644               	rlcf	??_get_fat+3,f,c
 10650  002F20  90D8               	bcf	status,0,c
 10651  002F22  3643               	rlcf	??_get_fat+2,f,c
 10652  002F24  3644               	rlcf	??_get_fat+3,f,c
 10653  002F26  5041               	movf	??_get_fat,w,c
 10654  002F28  1643               	andwf	??_get_fat+2,f,c
 10655  002F2A  5042               	movf	??_get_fat+1,w,c
 10656  002F2C  1644               	andwf	??_get_fat+3,f,c
 10657  002F2E  C03B  F045         	movff	get_fat@fs,??_get_fat+4
 10658  002F32  C03C  F046         	movff	get_fat@fs+1,??_get_fat+5
 10659  002F36  5043               	movf	??_get_fat+2,w,c
 10660  002F38  2645               	addwf	??_get_fat+4,f,c
 10661  002F3A  5044               	movf	??_get_fat+3,w,c
 10662  002F3C  2246               	addwfc	??_get_fat+5,f,c
 10663  002F3E  0E2E               	movlw	46
 10664  002F40  2445               	addwf	??_get_fat+4,w,c
 10665  002F42  6E52               	movwf	get_fat@p,c
 10666  002F44  0E00               	movlw	0
 10667  002F46  2046               	addwfc	??_get_fat+5,w,c
 10668  002F48  6E53               	movwf	get_fat@p+1,c
 10669                           
 10670                           ;ff.c: 853:    val = (DWORD)(*(DWORD*)(BYTE*)(p)) & 0x0FFFFFFF;
 10671  002F4A  C052  FFD9         	movff	get_fat@p,fsr2l
 10672  002F4E  C053  FFDA         	movff	get_fat@p+1,fsr2h
 10673  002F52  0EFF               	movlw	255
 10674  002F54  14DE               	andwf	postinc2,w,c
 10675  002F56  6E4C               	movwf	get_fat@val,c
 10676  002F58  0EFF               	movlw	255
 10677  002F5A  14DE               	andwf	postinc2,w,c
 10678  002F5C  6E4D               	movwf	get_fat@val+1,c
 10679  002F5E  0EFF               	movlw	255
 10680  002F60  14DE               	andwf	postinc2,w,c
 10681  002F62  6E4E               	movwf	get_fat@val+2,c
 10682  002F64  0E0F               	movlw	15
 10683  002F66  14DE               	andwf	postinc2,w,c
 10684  002F68                     L11:
 10685  002F68  6E4F               	movwf	get_fat@val+3,c
 10686                           
 10687                           ;ff.c: 854:    break;
 10688  002F6A  D016               	goto	l255
 10689  002F6C                     l4759:
 10690  002F6C  C03B  FFD9         	movff	get_fat@fs,fsr2l
 10691  002F70  C03C  FFDA         	movff	get_fat@fs+1,fsr2h
 10692  002F74  50DF               	movf	indf2,w,c
 10693  002F76  6E41               	movwf	??_get_fat& (0+255),c
 10694  002F78  6A42               	clrf	(??_get_fat+1)& (0+255),c
 10695                           
 10696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10697                           ; Switch size 1, requested type "simple"
 10698                           ; Number of cases is 1, Range of values is 0 to 0
 10699                           ; switch strategies available:
 10700                           ; Name         Instructions Cycles
 10701                           ; simple_byte            4     3 (average)
 10702                           ;	Chosen strategy is simple_byte
 10703  002F7A  5042               	movf	??_get_fat+1,w,c
 10704  002F7C  0A00               	xorlw	0	; case 0
 10705  002F7E  A4D8               	btfss	status,2,c
 10706  002F80  D65B               	goto	u5600
 10707                           
 10708                           ; Switch size 1, requested type "simple"
 10709                           ; Number of cases is 3, Range of values is 1 to 3
 10710                           ; switch strategies available:
 10711                           ; Name         Instructions Cycles
 10712                           ; simple_byte           10     6 (average)
 10713                           ;	Chosen strategy is simple_byte
 10714  002F82  5041               	movf	??_get_fat,w,c
 10715  002F84  0A01               	xorlw	1	; case 1
 10716  002F86  B4D8               	btfsc	status,2,c
 10717  002F88  D664               	goto	l257
 10718  002F8A  0A03               	xorlw	3	; case 2
 10719  002F8C  B4D8               	btfsc	status,2,c
 10720  002F8E  D72B               	goto	l4741
 10721  002F90  0A01               	xorlw	1	; case 3
 10722  002F92  B4D8               	btfsc	status,2,c
 10723  002F94  D786               	goto	l4749
 10724  002F96  D650               	goto	u5600
 10725  002F98                     l255:
 10726                           
 10727                           ;ff.c: 861:  return val;
 10728  002F98  C04C  F03B         	movff	get_fat@val,?_get_fat
 10729  002F9C  C04D  F03C         	movff	get_fat@val+1,?_get_fat+1
 10730  002FA0  C04E  F03D         	movff	get_fat@val+2,?_get_fat+2
 10731  002FA4  C04F  F03E         	movff	get_fat@val+3,?_get_fat+3
 10732  002FA8  0012               	return		;funcret
 10733  002FAA                     __end_of_get_fat:
 10734                           	opt callstack 0
 10735                           
 10736 ;; *************** function _clust2sect *****************
 10737 ;; Defined at:
 10738 ;;		line 800 in file "ff.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  fs              2   12[COMRAM] PTR struct .
 10741 ;;		 -> FatFs(558), NULL(0), 
 10742 ;;  clst            4   14[COMRAM] unsigned long 
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;		None
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  4   12[COMRAM] unsigned long 
 10747 ;; Registers used:
 10748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10754 ;;      Params:         6       0       0       0       0       0       0       0       0
 10755 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10756 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10757 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10758 ;;Total ram usage:       11 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:    1
 10761 ;; This function calls:
 10762 ;;		___lmul
 10763 ;; This function is called by:
 10764 ;;		_dir_sdi
 10765 ;;		_dir_next
 10766 ;;		_f_write
 10767 ;;		_f_lseek
 10768 ;;		_f_read
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772                           	psect	text27
 10773  00546E                     __ptext27:
 10774                           	opt callstack 0
 10775  00546E                     _clust2sect:
 10776                           	opt callstack 27
 10777                           
 10778                           ;ff.c: 801:  FATFS* fs,;ff.c: 802:  DWORD clst;ff.c: 804: {;ff.c: 805:  clst -= 2;
 10779                           
 10780                           ;incstack = 0
 10781  00546E  0E02               	movlw	2
 10782  005470  5E0F               	subwf	clust2sect@clst,f,c
 10783  005472  0E00               	movlw	0
 10784  005474  5A10               	subwfb	clust2sect@clst+1,f,c
 10785  005476  5A11               	subwfb	clust2sect@clst+2,f,c
 10786  005478  5A12               	subwfb	clust2sect@clst+3,f,c
 10787                           
 10788                           ;ff.c: 806:  if (clst >= fs->n_fatent - 2) return 0;
 10789  00547A  EE20 F012          	lfsr	2,18
 10790  00547E  500D               	movf	clust2sect@fs,w,c
 10791  005480  26D9               	addwf	fsr2l,f,c
 10792  005482  500E               	movf	clust2sect@fs+1,w,c
 10793  005484  22DA               	addwfc	fsr2h,f,c
 10794  005486  0EFE               	movlw	254
 10795  005488  24DE               	addwf	postinc2,w,c
 10796  00548A  6E13               	movwf	??_clust2sect& (0+255),c
 10797  00548C  0EFF               	movlw	255
 10798  00548E  20DE               	addwfc	postinc2,w,c
 10799  005490  6E14               	movwf	(??_clust2sect+1)& (0+255),c
 10800  005492  0EFF               	movlw	255
 10801  005494  20DE               	addwfc	postinc2,w,c
 10802  005496  6E15               	movwf	(??_clust2sect+2)& (0+255),c
 10803  005498  0EFF               	movlw	255
 10804  00549A  20DE               	addwfc	postinc2,w,c
 10805  00549C  6E16               	movwf	(??_clust2sect+3)& (0+255),c
 10806  00549E  5013               	movf	??_clust2sect,w,c
 10807  0054A0  5C0F               	subwf	clust2sect@clst,w,c
 10808  0054A2  5014               	movf	??_clust2sect+1,w,c
 10809  0054A4  5810               	subwfb	clust2sect@clst+1,w,c
 10810  0054A6  5015               	movf	??_clust2sect+2,w,c
 10811  0054A8  5811               	subwfb	clust2sect@clst+2,w,c
 10812  0054AA  5016               	movf	??_clust2sect+3,w,c
 10813  0054AC  5812               	subwfb	clust2sect@clst+3,w,c
 10814  0054AE  A0D8               	btfss	status,0,c
 10815  0054B0  D009               	goto	l4869
 10816  0054B2  0E00               	movlw	0
 10817  0054B4  6E0D               	movwf	?_clust2sect,c
 10818  0054B6  0E00               	movlw	0
 10819  0054B8  6E0E               	movwf	?_clust2sect+1,c
 10820  0054BA  0E00               	movlw	0
 10821  0054BC  6E0F               	movwf	?_clust2sect+2,c
 10822  0054BE  0E00               	movlw	0
 10823  0054C0  6E10               	movwf	?_clust2sect+3,c
 10824  0054C2  0012               	return	
 10825  0054C4                     l4869:
 10826                           
 10827                           ;ff.c: 807:  return clst * fs->csize + fs->database;
 10828  0054C4  EE20 F026          	lfsr	2,38
 10829  0054C8  500D               	movf	clust2sect@fs,w,c
 10830  0054CA  26D9               	addwf	fsr2l,f,c
 10831  0054CC  500E               	movf	clust2sect@fs+1,w,c
 10832  0054CE  22DA               	addwfc	fsr2h,f,c
 10833  0054D0  CFDE F013          	movff	postinc2,??_clust2sect
 10834  0054D4  CFDE F014          	movff	postinc2,??_clust2sect+1
 10835  0054D8  CFDE F015          	movff	postinc2,??_clust2sect+2
 10836  0054DC  CFDE F016          	movff	postinc2,??_clust2sect+3
 10837  0054E0  EE20 F002          	lfsr	2,2
 10838  0054E4  500D               	movf	clust2sect@fs,w,c
 10839  0054E6  26D9               	addwf	fsr2l,f,c
 10840  0054E8  500E               	movf	clust2sect@fs+1,w,c
 10841  0054EA  22DA               	addwfc	fsr2h,f,c
 10842  0054EC  50DF               	movf	indf2,w,c
 10843  0054EE  6E17               	movwf	(??_clust2sect+4)& (0+255),c
 10844  0054F0  5017               	movf	??_clust2sect+4,w,c
 10845  0054F2  6E01               	movwf	___lmul@multiplier,c
 10846  0054F4  6A02               	clrf	___lmul@multiplier+1,c
 10847  0054F6  6A03               	clrf	___lmul@multiplier+2,c
 10848  0054F8  6A04               	clrf	___lmul@multiplier+3,c
 10849  0054FA  C00F  F005         	movff	clust2sect@clst,___lmul@multiplicand
 10850  0054FE  C010  F006         	movff	clust2sect@clst+1,___lmul@multiplicand+1
 10851  005502  C011  F007         	movff	clust2sect@clst+2,___lmul@multiplicand+2
 10852  005506  C012  F008         	movff	clust2sect@clst+3,___lmul@multiplicand+3
 10853  00550A  ECAD  F02D         	call	___lmul	;wreg free
 10854  00550E  5013               	movf	??_clust2sect,w,c
 10855  005510  2401               	addwf	?___lmul,w,c
 10856  005512  6E0D               	movwf	?_clust2sect,c
 10857  005514  5014               	movf	??_clust2sect+1,w,c
 10858  005516  2002               	addwfc	?___lmul+1,w,c
 10859  005518  6E0E               	movwf	?_clust2sect+1,c
 10860  00551A  5015               	movf	??_clust2sect+2,w,c
 10861  00551C  2003               	addwfc	?___lmul+2,w,c
 10862  00551E  6E0F               	movwf	?_clust2sect+2,c
 10863  005520  5016               	movf	??_clust2sect+3,w,c
 10864  005522  2004               	addwfc	?___lmul+3,w,c
 10865  005524  6E10               	movwf	?_clust2sect+3,c
 10866  005526  0012               	return		;funcret
 10867  005528                     __end_of_clust2sect:
 10868                           	opt callstack 0
 10869                           
 10870 ;; *************** function ___lmul *****************
 10871 ;; Defined at:
 10872 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 10873 ;; Parameters:    Size  Location     Type
 10874 ;;  multiplier      4    0[COMRAM] unsigned long 
 10875 ;;  multiplicand    4    4[COMRAM] unsigned long 
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;  product         4    8[COMRAM] unsigned long 
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  4    0[COMRAM] unsigned long 
 10880 ;; Registers used:
 10881 ;;		wreg, status,2, status,0
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10887 ;;      Params:         8       0       0       0       0       0       0       0       0
 10888 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10889 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10890 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10891 ;;Total ram usage:       12 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; This function calls:
 10894 ;;		Nothing
 10895 ;; This function is called by:
 10896 ;;		_clust2sect
 10897 ;;		_find_volume
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           
 10901                           	psect	text28
 10902  005B5A                     __ptext28:
 10903                           	opt callstack 0
 10904  005B5A                     ___lmul:
 10905                           	opt callstack 27
 10906                           
 10907                           ;incstack = 0
 10908  005B5A  0E00               	movlw	0
 10909  005B5C  6E09               	movwf	___lmul@product,c
 10910  005B5E  0E00               	movlw	0
 10911  005B60  6E0A               	movwf	___lmul@product+1,c
 10912  005B62  0E00               	movlw	0
 10913  005B64  6E0B               	movwf	___lmul@product+2,c
 10914  005B66  0E00               	movlw	0
 10915  005B68  6E0C               	movwf	___lmul@product+3,c
 10916  005B6A                     l4845:
 10917  005B6A  A001               	btfss	___lmul@multiplier,0,c
 10918  005B6C  D008               	goto	l4849
 10919  005B6E  5005               	movf	___lmul@multiplicand,w,c
 10920  005B70  2609               	addwf	___lmul@product,f,c
 10921  005B72  5006               	movf	___lmul@multiplicand+1,w,c
 10922  005B74  220A               	addwfc	___lmul@product+1,f,c
 10923  005B76  5007               	movf	___lmul@multiplicand+2,w,c
 10924  005B78  220B               	addwfc	___lmul@product+2,f,c
 10925  005B7A  5008               	movf	___lmul@multiplicand+3,w,c
 10926  005B7C  220C               	addwfc	___lmul@product+3,f,c
 10927  005B7E                     l4849:
 10928  005B7E  90D8               	bcf	status,0,c
 10929  005B80  3605               	rlcf	___lmul@multiplicand,f,c
 10930  005B82  3606               	rlcf	___lmul@multiplicand+1,f,c
 10931  005B84  3607               	rlcf	___lmul@multiplicand+2,f,c
 10932  005B86  3608               	rlcf	___lmul@multiplicand+3,f,c
 10933  005B88  90D8               	bcf	status,0,c
 10934  005B8A  3204               	rrcf	___lmul@multiplier+3,f,c
 10935  005B8C  3203               	rrcf	___lmul@multiplier+2,f,c
 10936  005B8E  3202               	rrcf	___lmul@multiplier+1,f,c
 10937  005B90  3201               	rrcf	___lmul@multiplier,f,c
 10938  005B92  5001               	movf	___lmul@multiplier,w,c
 10939  005B94  1002               	iorwf	___lmul@multiplier+1,w,c
 10940  005B96  1003               	iorwf	___lmul@multiplier+2,w,c
 10941  005B98  1004               	iorwf	___lmul@multiplier+3,w,c
 10942  005B9A  A4D8               	btfss	status,2,c
 10943  005B9C  D7E6               	goto	l4845
 10944  005B9E  C009  F001         	movff	___lmul@product,?___lmul
 10945  005BA2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 10946  005BA6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 10947  005BAA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 10948  005BAE  0012               	return		;funcret
 10949  005BB0                     __end_of___lmul:
 10950                           	opt callstack 0
 10951                           
 10952 ;; *************** function ___lldiv *****************
 10953 ;; Defined at:
 10954 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 10955 ;; Parameters:    Size  Location     Type
 10956 ;;  dividend        4    0[COMRAM] unsigned long 
 10957 ;;  divisor         4    4[COMRAM] unsigned long 
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;  quotient        4    8[COMRAM] unsigned long 
 10960 ;;  counter         1   12[COMRAM] unsigned char 
 10961 ;; Return value:  Size  Location     Type
 10962 ;;                  4    0[COMRAM] unsigned long 
 10963 ;; Registers used:
 10964 ;;		wreg, status,2, status,0
 10965 ;; Tracked objects:
 10966 ;;		On entry : 0/0
 10967 ;;		On exit  : 0/0
 10968 ;;		Unchanged: 0/0
 10969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10970 ;;      Params:         8       0       0       0       0       0       0       0       0
 10971 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10972 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10973 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10974 ;;Total ram usage:       13 bytes
 10975 ;; Hardware stack levels used:    1
 10976 ;; This function calls:
 10977 ;;		Nothing
 10978 ;; This function is called by:
 10979 ;;		_find_volume
 10980 ;;		_f_lseek
 10981 ;; This function uses a non-reentrant model
 10982 ;;
 10983                           
 10984                           	psect	text29
 10985  0057CC                     __ptext29:
 10986                           	opt callstack 0
 10987  0057CC                     ___lldiv:
 10988                           	opt callstack 27
 10989                           
 10990                           ;incstack = 0
 10991  0057CC  0E00               	movlw	0
 10992  0057CE  6E09               	movwf	___lldiv@quotient,c
 10993  0057D0  0E00               	movlw	0
 10994  0057D2  6E0A               	movwf	___lldiv@quotient+1,c
 10995  0057D4  0E00               	movlw	0
 10996  0057D6  6E0B               	movwf	___lldiv@quotient+2,c
 10997  0057D8  0E00               	movlw	0
 10998  0057DA  6E0C               	movwf	___lldiv@quotient+3,c
 10999  0057DC  5005               	movf	___lldiv@divisor,w,c
 11000  0057DE  1006               	iorwf	___lldiv@divisor+1,w,c
 11001  0057E0  1007               	iorwf	___lldiv@divisor+2,w,c
 11002  0057E2  1008               	iorwf	___lldiv@divisor+3,w,c
 11003  0057E4  B4D8               	btfsc	status,2,c
 11004  0057E6  D02A               	goto	l929
 11005  0057E8  0E01               	movlw	1
 11006  0057EA  6E0D               	movwf	___lldiv@counter,c
 11007  0057EC  D006               	goto	l5745
 11008  0057EE                     l5743:
 11009  0057EE  90D8               	bcf	status,0,c
 11010  0057F0  3605               	rlcf	___lldiv@divisor,f,c
 11011  0057F2  3606               	rlcf	___lldiv@divisor+1,f,c
 11012  0057F4  3607               	rlcf	___lldiv@divisor+2,f,c
 11013  0057F6  3608               	rlcf	___lldiv@divisor+3,f,c
 11014  0057F8  2A0D               	incf	___lldiv@counter,f,c
 11015  0057FA                     l5745:
 11016  0057FA  AE08               	btfss	___lldiv@divisor+3,7,c
 11017  0057FC  D7F8               	goto	l5743
 11018  0057FE                     u7560:
 11019  0057FE  90D8               	bcf	status,0,c
 11020  005800  3609               	rlcf	___lldiv@quotient,f,c
 11021  005802  360A               	rlcf	___lldiv@quotient+1,f,c
 11022  005804  360B               	rlcf	___lldiv@quotient+2,f,c
 11023  005806  360C               	rlcf	___lldiv@quotient+3,f,c
 11024  005808  5005               	movf	___lldiv@divisor,w,c
 11025  00580A  5C01               	subwf	___lldiv@dividend,w,c
 11026  00580C  5006               	movf	___lldiv@divisor+1,w,c
 11027  00580E  5802               	subwfb	___lldiv@dividend+1,w,c
 11028  005810  5007               	movf	___lldiv@divisor+2,w,c
 11029  005812  5803               	subwfb	___lldiv@dividend+2,w,c
 11030  005814  5008               	movf	___lldiv@divisor+3,w,c
 11031  005816  5804               	subwfb	___lldiv@dividend+3,w,c
 11032  005818  A0D8               	btfss	status,0,c
 11033  00581A  D009               	goto	l5755
 11034  00581C  5005               	movf	___lldiv@divisor,w,c
 11035  00581E  5E01               	subwf	___lldiv@dividend,f,c
 11036  005820  5006               	movf	___lldiv@divisor+1,w,c
 11037  005822  5A02               	subwfb	___lldiv@dividend+1,f,c
 11038  005824  5007               	movf	___lldiv@divisor+2,w,c
 11039  005826  5A03               	subwfb	___lldiv@dividend+2,f,c
 11040  005828  5008               	movf	___lldiv@divisor+3,w,c
 11041  00582A  5A04               	subwfb	___lldiv@dividend+3,f,c
 11042  00582C  8009               	bsf	___lldiv@quotient,0,c
 11043  00582E                     l5755:
 11044  00582E  90D8               	bcf	status,0,c
 11045  005830  3208               	rrcf	___lldiv@divisor+3,f,c
 11046  005832  3207               	rrcf	___lldiv@divisor+2,f,c
 11047  005834  3206               	rrcf	___lldiv@divisor+1,f,c
 11048  005836  3205               	rrcf	___lldiv@divisor,f,c
 11049  005838  2E0D               	decfsz	___lldiv@counter,f,c
 11050  00583A  D7E1               	goto	u7560
 11051  00583C                     l929:
 11052  00583C  C009  F001         	movff	___lldiv@quotient,?___lldiv
 11053  005840  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 11054  005844  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 11055  005848  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 11056  00584C  0012               	return		;funcret
 11057  00584E                     __end_of___lldiv:
 11058                           	opt callstack 0
 11059                           
 11060 ;; *************** function _f_close *****************
 11061 ;; Defined at:
 11062 ;;		line 2861 in file "ff.c"
 11063 ;; Parameters:    Size  Location     Type
 11064 ;;  fp              2   77[COMRAM] PTR struct .
 11065 ;;		 -> Fil(32), 
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;  res             1   79[COMRAM] enum E93
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      enum E93
 11070 ;; Registers used:
 11071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11077 ;;      Params:         2       0       0       0       0       0       0       0       0
 11078 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11079 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11080 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11081 ;;Total ram usage:        3 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    9
 11084 ;; This function calls:
 11085 ;;		_f_sync
 11086 ;;		_validate
 11087 ;; This function is called by:
 11088 ;;		_guardar
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text30
 11093  005C76                     __ptext30:
 11094                           	opt callstack 0
 11095  005C76                     _f_close:
 11096                           	opt callstack 20
 11097                           
 11098                           ;ff.c: 2862:  FIL *fp;ff.c: 2864: {;ff.c: 2865:  FRESULT res;;ff.c: 2869:  res = f_sync(
      +                          fp);
 11099                           
 11100                           ;incstack = 0
 11101  005C76  C04E  F045         	movff	f_close@fp,f_sync@fp
 11102  005C7A  C04F  F046         	movff	f_close@fp+1,f_sync@fp+1
 11103  005C7E  EC76  F024         	call	_f_sync	;wreg free
 11104  005C82  6E50               	movwf	f_close@res,c
 11105                           
 11106                           ;ff.c: 2870:  if (res == FR_OK)
 11107  005C84  5050               	movf	f_close@res,w,c
 11108  005C86  A4D8               	btfss	status,2,c
 11109  005C88  0012               	return	
 11110                           
 11111                           ;ff.c: 2872:  {;ff.c: 2873:   res = validate(fp);
 11112  005C8A  C04E  F002         	movff	f_close@fp,validate@obj
 11113  005C8E  C04F  F003         	movff	f_close@fp+1,validate@obj+1
 11114  005C92  EC9C  F02B         	call	_validate	;wreg free
 11115  005C96  6E50               	movwf	f_close@res,c
 11116                           
 11117                           ;ff.c: 2874:   if (res == FR_OK) {
 11118  005C98  5050               	movf	f_close@res,w,c
 11119  005C9A  A4D8               	btfss	status,2,c
 11120  005C9C  0012               	return	
 11121                           
 11122                           ;ff.c: 2882:     fp->fs = 0;
 11123  005C9E  C04E  FFD9         	movff	f_close@fp,fsr2l
 11124  005CA2  C04F  FFDA         	movff	f_close@fp+1,fsr2h
 11125  005CA6  0E00               	movlw	0
 11126  005CA8  6EDE               	movwf	postinc2,c
 11127  005CAA  0E00               	movlw	0
 11128  005CAC  6EDD               	movwf	postdec2,c
 11129  005CAE  0012               	return		;funcret
 11130  005CB0                     __end_of_f_close:
 11131                           	opt callstack 0
 11132                           
 11133 ;; *************** function _f_sync *****************
 11134 ;; Defined at:
 11135 ;;		line 2813 in file "ff.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;  fp              2   68[COMRAM] PTR struct .
 11138 ;;		 -> Fil(32), 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  tm              4    0        unsigned long 
 11141 ;;  dir             2   75[COMRAM] PTR unsigned char 
 11142 ;;		 -> FatFs(558), NULL(0), 
 11143 ;;  res             1   74[COMRAM] enum E93
 11144 ;; Return value:  Size  Location     Type
 11145 ;;                  1    wreg      enum E93
 11146 ;; Registers used:
 11147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11153 ;;      Params:         2       0       0       0       0       0       0       0       0
 11154 ;;      Locals:         7       0       0       0       0       0       0       0       0
 11155 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11156 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11157 ;;Total ram usage:        9 bytes
 11158 ;; Hardware stack levels used:    1
 11159 ;; Hardware stack levels required when called:    8
 11160 ;; This function calls:
 11161 ;;		_move_window
 11162 ;;		_st_clust
 11163 ;;		_sync_fs
 11164 ;;		_validate
 11165 ;; This function is called by:
 11166 ;;		_f_close
 11167 ;; This function uses a non-reentrant model
 11168 ;;
 11169                           
 11170                           	psect	text31
 11171  0048EC                     __ptext31:
 11172                           	opt callstack 0
 11173  0048EC                     _f_sync:
 11174                           	opt callstack 20
 11175                           
 11176                           ;ff.c: 2814:  FIL* fp;ff.c: 2816: {;ff.c: 2817:  FRESULT res;;ff.c: 2818:  DWORD tm;;ff.
      +                          c: 2819:  BYTE *dir;;ff.c: 2822:  res = validate(fp);
 11177                           
 11178                           ;incstack = 0
 11179  0048EC  C045  F002         	movff	f_sync@fp,validate@obj
 11180  0048F0  C046  F003         	movff	f_sync@fp+1,validate@obj+1
 11181  0048F4  EC9C  F02B         	call	_validate	;wreg free
 11182  0048F8  6E4B               	movwf	f_sync@res,c
 11183                           
 11184                           ;ff.c: 2823:  if (res == FR_OK) {
 11185  0048FA  504B               	movf	f_sync@res,w,c
 11186  0048FC  A4D8               	btfss	status,2,c
 11187  0048FE  D095               	goto	l6159
 11188                           
 11189                           ;ff.c: 2824:   if (fp->flag & 0x20) {
 11190  004900  EE20 F004          	lfsr	2,4
 11191  004904  5045               	movf	f_sync@fp,w,c
 11192  004906  26D9               	addwf	fsr2l,f,c
 11193  004908  5046               	movf	f_sync@fp+1,w,c
 11194  00490A  22DA               	addwfc	fsr2h,f,c
 11195  00490C  AADF               	btfss	indf2,5,c
 11196  00490E  D08D               	goto	l6159
 11197                           
 11198                           ;ff.c: 2833:    res = move_window(fp->fs, fp->dir_sect);
 11199  004910  C045  FFD9         	movff	f_sync@fp,fsr2l
 11200  004914  C046  FFDA         	movff	f_sync@fp+1,fsr2h
 11201  004918  CFDE F030          	movff	postinc2,move_window@fs
 11202  00491C  CFDD F031          	movff	postdec2,move_window@fs+1
 11203  004920  EE20 F01A          	lfsr	2,26
 11204  004924  5045               	movf	f_sync@fp,w,c
 11205  004926  26D9               	addwf	fsr2l,f,c
 11206  004928  5046               	movf	f_sync@fp+1,w,c
 11207  00492A  22DA               	addwfc	fsr2h,f,c
 11208  00492C  CFDE F032          	movff	postinc2,move_window@sector
 11209  004930  CFDE F033          	movff	postinc2,move_window@sector+1
 11210  004934  CFDE F034          	movff	postinc2,move_window@sector+2
 11211  004938  CFDE F035          	movff	postinc2,move_window@sector+3
 11212  00493C  EC49  F02B         	call	_move_window	;wreg free
 11213  004940  6E4B               	movwf	f_sync@res,c
 11214                           
 11215                           ;ff.c: 2834:    if (res == FR_OK) {
 11216  004942  504B               	movf	f_sync@res,w,c
 11217  004944  A4D8               	btfss	status,2,c
 11218  004946  D071               	goto	l6159
 11219                           
 11220                           ;ff.c: 2835:     dir = fp->dir_ptr;
 11221  004948  EE20 F01E          	lfsr	2,30
 11222  00494C  5045               	movf	f_sync@fp,w,c
 11223  00494E  26D9               	addwf	fsr2l,f,c
 11224  004950  5046               	movf	f_sync@fp+1,w,c
 11225  004952  22DA               	addwfc	fsr2h,f,c
 11226  004954  CFDE F04C          	movff	postinc2,f_sync@dir
 11227  004958  CFDD F04D          	movff	postdec2,f_sync@dir+1
 11228                           
 11229                           ;ff.c: 2836:     dir[11] |= 0x20;
 11230  00495C  EE20 F00B          	lfsr	2,11
 11231  004960  504C               	movf	f_sync@dir,w,c
 11232  004962  26D9               	addwf	fsr2l,f,c
 11233  004964  504D               	movf	f_sync@dir+1,w,c
 11234  004966  22DA               	addwfc	fsr2h,f,c
 11235  004968  0E00               	movlw	0
 11236  00496A  8ADB               	bsf	plusw2,5,c
 11237                           
 11238                           ;ff.c: 2837:     *(DWORD*)(BYTE*)(dir + 28)=(DWORD)(fp->fsize);
 11239  00496C  EE20 F00A          	lfsr	2,10
 11240  004970  5045               	movf	f_sync@fp,w,c
 11241  004972  26D9               	addwf	fsr2l,f,c
 11242  004974  5046               	movf	f_sync@fp+1,w,c
 11243  004976  22DA               	addwfc	fsr2h,f,c
 11244  004978  EE10 F01C          	lfsr	1,28
 11245  00497C  504C               	movf	f_sync@dir,w,c
 11246  00497E  26E1               	addwf	fsr1l,f,c
 11247  004980  504D               	movf	f_sync@dir+1,w,c
 11248  004982  22E2               	addwfc	fsr1h,f,c
 11249  004984  CFDE FFE6          	movff	postinc2,postinc1
 11250  004988  CFDE FFE6          	movff	postinc2,postinc1
 11251  00498C  CFDE FFE6          	movff	postinc2,postinc1
 11252  004990  CFDE FFE6          	movff	postinc2,postinc1
 11253                           
 11254                           ;ff.c: 2838:     st_clust(dir, fp->sclust);
 11255  004994  C04C  F001         	movff	f_sync@dir,st_clust@dir
 11256  004998  C04D  F002         	movff	f_sync@dir+1,st_clust@dir+1
 11257  00499C  EE20 F00E          	lfsr	2,14
 11258  0049A0  5045               	movf	f_sync@fp,w,c
 11259  0049A2  26D9               	addwf	fsr2l,f,c
 11260  0049A4  5046               	movf	f_sync@fp+1,w,c
 11261  0049A6  22DA               	addwfc	fsr2h,f,c
 11262  0049A8  CFDE F003          	movff	postinc2,st_clust@cl
 11263  0049AC  CFDE F004          	movff	postinc2,st_clust@cl+1
 11264  0049B0  CFDE F005          	movff	postinc2,st_clust@cl+2
 11265  0049B4  CFDE F006          	movff	postinc2,st_clust@cl+3
 11266  0049B8  EC6E  F02E         	call	_st_clust	;wreg free
 11267                           
 11268                           ;ff.c: 2840:     *(DWORD*)(BYTE*)(dir + 22)=(DWORD)(tm);
 11269  0049BC  EE20 F016          	lfsr	2,22
 11270  0049C0  504C               	movf	f_sync@dir,w,c
 11271  0049C2  26D9               	addwf	fsr2l,f,c
 11272  0049C4  504D               	movf	f_sync@dir+1,w,c
 11273  0049C6  22DA               	addwfc	fsr2h,f,c
 11274  0049C8  0E00               	movlw	0
 11275  0049CA  6EDE               	movwf	postinc2,c
 11276  0049CC  0E00               	movlw	0
 11277  0049CE  6EDE               	movwf	postinc2,c
 11278  0049D0  0E21               	movlw	33
 11279  0049D2  6EDE               	movwf	postinc2,c
 11280  0049D4  0E46               	movlw	70
 11281  0049D6  6EDD               	movwf	postdec2,c
 11282                           
 11283                           ;ff.c: 2841:     *(WORD*)(BYTE*)(dir + 18)=(WORD)(0);
 11284  0049D8  EE20 F012          	lfsr	2,18
 11285  0049DC  504C               	movf	f_sync@dir,w,c
 11286  0049DE  26D9               	addwf	fsr2l,f,c
 11287  0049E0  504D               	movf	f_sync@dir+1,w,c
 11288  0049E2  22DA               	addwfc	fsr2h,f,c
 11289  0049E4  0E00               	movlw	0
 11290  0049E6  6EDE               	movwf	postinc2,c
 11291  0049E8  0E00               	movlw	0
 11292  0049EA  6EDD               	movwf	postdec2,c
 11293                           
 11294                           ;ff.c: 2842:     fp->flag &= ~0x20;
 11295  0049EC  EE20 F004          	lfsr	2,4
 11296  0049F0  5045               	movf	f_sync@fp,w,c
 11297  0049F2  26D9               	addwf	fsr2l,f,c
 11298  0049F4  5046               	movf	f_sync@fp+1,w,c
 11299  0049F6  22DA               	addwfc	fsr2h,f,c
 11300  0049F8  0EDF               	movlw	223
 11301  0049FA  16DF               	andwf	indf2,f,c
 11302                           
 11303                           ;ff.c: 2843:     fp->fs->wflag = 1;
 11304  0049FC  C045  FFD9         	movff	f_sync@fp,fsr2l
 11305  004A00  C046  FFDA         	movff	f_sync@fp+1,fsr2h
 11306  004A04  EE10 F004          	lfsr	1,4
 11307  004A08  50DE               	movf	postinc2,w,c
 11308  004A0A  26E1               	addwf	fsr1l,f,c
 11309  004A0C  50DD               	movf	postdec2,w,c
 11310  004A0E  22E2               	addwfc	fsr1h,f,c
 11311  004A10  0E01               	movlw	1
 11312  004A12  6EE7               	movwf	indf1,c
 11313                           
 11314                           ;ff.c: 2844:     res = sync_fs(fp->fs);
 11315  004A14  C045  FFD9         	movff	f_sync@fp,fsr2l
 11316  004A18  C046  FFDA         	movff	f_sync@fp+1,fsr2h
 11317  004A1C  CFDE F03A          	movff	postinc2,sync_fs@fs
 11318  004A20  CFDD F03B          	movff	postdec2,sync_fs@fs+1
 11319  004A24  ECA2  F021         	call	_sync_fs	;wreg free
 11320  004A28  6E4B               	movwf	f_sync@res,c
 11321  004A2A                     l6159:
 11322                           
 11323                           ;ff.c: 2849:  return res;
 11324  004A2A  504B               	movf	f_sync@res,w,c
 11325  004A2C  0012               	return		;funcret
 11326  004A2E                     __end_of_f_sync:
 11327                           	opt callstack 0
 11328                           
 11329 ;; *************** function _validate *****************
 11330 ;; Defined at:
 11331 ;;		line 2372 in file "ff.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;  obj             2    1[COMRAM] PTR void 
 11334 ;;		 -> Fil(32), 
 11335 ;; Auto vars:     Size  Location     Type
 11336 ;;  fil             2    7[COMRAM] PTR struct .
 11337 ;;		 -> Fil(32), 
 11338 ;; Return value:  Size  Location     Type
 11339 ;;                  1    wreg      enum E93
 11340 ;; Registers used:
 11341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11342 ;; Tracked objects:
 11343 ;;		On entry : 0/0
 11344 ;;		On exit  : 0/0
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11347 ;;      Params:         2       0       0       0       0       0       0       0       0
 11348 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11349 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11350 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11351 ;;Total ram usage:        8 bytes
 11352 ;; Hardware stack levels used:    1
 11353 ;; Hardware stack levels required when called:    1
 11354 ;; This function calls:
 11355 ;;		_disk_status
 11356 ;; This function is called by:
 11357 ;;		_f_write
 11358 ;;		_f_sync
 11359 ;;		_f_close
 11360 ;;		_f_lseek
 11361 ;;		_f_read
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           	psect	text32
 11366  005738                     __ptext32:
 11367                           	opt callstack 0
 11368  005738                     _validate:
 11369                           	opt callstack 27
 11370                           
 11371                           ;ff.c: 2373:  void* obj;ff.c: 2375: {;ff.c: 2376:  FIL *fil = (FIL*)obj;
 11372                           
 11373                           ;incstack = 0
 11374  005738  C002  F008         	movff	validate@obj,validate@fil
 11375  00573C  C003  F009         	movff	validate@obj+1,validate@fil+1
 11376                           
 11377                           ;ff.c: 2379:  if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id || (di
      +                          sk_status(fil->fs->drv) & 0x01))
 11378  005740  5008               	movf	validate@fil,w,c
 11379  005742  1009               	iorwf	validate@fil+1,w,c
 11380  005744  B4D8               	btfsc	status,2,c
 11381  005746  D03E               	goto	u7540
 11382  005748  C008  FFD9         	movff	validate@fil,fsr2l
 11383  00574C  C009  FFDA         	movff	validate@fil+1,fsr2h
 11384  005750  50DE               	movf	postinc2,w,c
 11385  005752  10DE               	iorwf	postinc2,w,c
 11386  005754  B4D8               	btfsc	status,2,c
 11387  005756  D036               	goto	u7540
 11388  005758  C008  FFD9         	movff	validate@fil,fsr2l
 11389  00575C  C009  FFDA         	movff	validate@fil+1,fsr2h
 11390  005760  CFDE F004          	movff	postinc2,??_validate
 11391  005764  CFDD F005          	movff	postdec2,??_validate+1
 11392  005768  C004  FFD9         	movff	??_validate,fsr2l
 11393  00576C  C005  FFDA         	movff	??_validate+1,fsr2h
 11394  005770  50DF               	movf	indf2,w,c
 11395  005772  B4D8               	btfsc	status,2,c
 11396  005774  D027               	goto	u7540
 11397  005776  EE20 F002          	lfsr	2,2
 11398  00577A  5008               	movf	validate@fil,w,c
 11399  00577C  26D9               	addwf	fsr2l,f,c
 11400  00577E  5009               	movf	validate@fil+1,w,c
 11401  005780  22DA               	addwfc	fsr2h,f,c
 11402  005782  C008  FFE1         	movff	validate@fil,fsr1l
 11403  005786  C009  FFE2         	movff	validate@fil+1,fsr1h
 11404  00578A  EE00 F006          	lfsr	0,6
 11405  00578E  50E6               	movf	postinc1,w,c
 11406  005790  26E9               	addwf	fsr0l,f,c
 11407  005792  50E5               	movf	postdec1,w,c
 11408  005794  22EA               	addwfc	fsr0h,f,c
 11409  005796  50DE               	movf	postinc2,w,c
 11410  005798  18EE               	xorwf	postinc0,w,c
 11411  00579A  E114               	bnz	l5729
 11412  00579C  50DE               	movf	postinc2,w,c
 11413  00579E  18EE               	xorwf	postinc0,w,c
 11414  0057A0  A4D8               	btfss	status,2,c
 11415  0057A2  D010               	goto	u7540
 11416  0057A4  C008  FFD9         	movff	validate@fil,fsr2l
 11417  0057A8  C009  FFDA         	movff	validate@fil+1,fsr2h
 11418  0057AC  EE10 F001          	lfsr	1,1
 11419  0057B0  50DE               	movf	postinc2,w,c
 11420  0057B2  26E1               	addwf	fsr1l,f,c
 11421  0057B4  50DD               	movf	postdec2,w,c
 11422  0057B6  22E2               	addwfc	fsr1h,f,c
 11423  0057B8  50E7               	movf	indf1,w,c
 11424  0057BA  ECC8  F02E         	call	_disk_status
 11425  0057BE  6E04               	movwf	??_validate& (0+255),c
 11426  0057C0  A004               	btfss	??_validate,0,c
 11427  0057C2  D002               	goto	l5733
 11428  0057C4                     u7540:
 11429  0057C4                     l5729:
 11430                           
 11431                           ;ff.c: 2380:   return FR_INVALID_OBJECT;
 11432  0057C4  0E09               	movlw	9
 11433  0057C6  0012               	return	
 11434  0057C8                     l5733:
 11435                           
 11436                           ;ff.c: 2384:  return FR_OK;
 11437  0057C8  0E00               	movlw	0
 11438  0057CA  0012               	return		;funcret
 11439  0057CC                     __end_of_validate:
 11440                           	opt callstack 0
 11441                           
 11442 ;; *************** function _disk_status *****************
 11443 ;; Defined at:
 11444 ;;		line 356 in file "diskio.c"
 11445 ;; Parameters:    Size  Location     Type
 11446 ;;  pdrv            1    wreg     unsigned char 
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;  pdrv            1    0[COMRAM] unsigned char 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      unsigned char 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11458 ;;      Params:         0       0       0       0       0       0       0       0       0
 11459 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11461 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11462 ;;Total ram usage:        1 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_find_volume
 11468 ;;		_validate
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text33
 11473  005D90                     __ptext33:
 11474                           	opt callstack 0
 11475  005D90                     _disk_status:
 11476                           	opt callstack 27
 11477                           
 11478                           ;incstack = 0
 11479                           ;disk_status@pdrv stored from wreg
 11480  005D90  6E01               	movwf	disk_status@pdrv,c
 11481                           
 11482                           ;diskio.c: 357:  BYTE pdrv;diskio.c: 359: {;diskio.c: 360:  if (pdrv) return 0x01;
 11483  005D92  5001               	movf	disk_status@pdrv,w,c
 11484  005D94  B4D8               	btfsc	status,2,c
 11485  005D96  D002               	goto	l4961
 11486  005D98  0E01               	movlw	1
 11487  005D9A  0012               	return	
 11488  005D9C                     l4961:
 11489                           
 11490                           ;diskio.c: 361:  return Stat;
 11491  005D9C  0100               	movlb	0	; () banked
 11492  005D9E  51E4               	movf	_Stat& (0+255),w,b
 11493  005DA0  0012               	return		;funcret
 11494  005DA2                     __end_of_disk_status:
 11495                           	opt callstack 0
 11496                           
 11497 ;; *************** function _sync_fs *****************
 11498 ;; Defined at:
 11499 ;;		line 760 in file "ff.c"
 11500 ;; Parameters:    Size  Location     Type
 11501 ;;  fs              2   57[COMRAM] PTR struct .
 11502 ;;		 -> FatFs(558), NULL(0), 
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;  res             1   67[COMRAM] enum E93
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  1    wreg      enum E93
 11507 ;; Registers used:
 11508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11509 ;; Tracked objects:
 11510 ;;		On entry : 0/0
 11511 ;;		On exit  : 0/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11514 ;;      Params:         2       0       0       0       0       0       0       0       0
 11515 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11516 ;;      Temps:          8       0       0       0       0       0       0       0       0
 11517 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11518 ;;Total ram usage:       11 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:    7
 11521 ;; This function calls:
 11522 ;;		_disk_ioctl
 11523 ;;		_disk_write
 11524 ;;		_mem_set
 11525 ;;		_sync_window
 11526 ;; This function is called by:
 11527 ;;		_f_sync
 11528 ;; This function uses a non-reentrant model
 11529 ;;
 11530                           
 11531                           	psect	text34
 11532  004344                     __ptext34:
 11533                           	opt callstack 0
 11534  004344                     _sync_fs:
 11535                           	opt callstack 20
 11536                           
 11537                           ;ff.c: 761:  FATFS* fs;ff.c: 763: {;ff.c: 764:  FRESULT res;;ff.c: 767:  res = sync_wind
      +                          ow(fs);
 11538                           
 11539                           ;incstack = 0
 11540  004344  C03A  F01B         	movff	sync_fs@fs,sync_window@fs
 11541  004348  C03B  F01C         	movff	sync_fs@fs+1,sync_window@fs+1
 11542  00434C  EC82  F022         	call	_sync_window	;wreg free
 11543  004350  6E44               	movwf	sync_fs@res,c
 11544                           
 11545                           ;ff.c: 768:  if (res == FR_OK) {
 11546  004352  5044               	movf	sync_fs@res,w,c
 11547  004354  A4D8               	btfss	status,2,c
 11548  004356  D0D4               	goto	l242
 11549                           
 11550                           ;ff.c: 770:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 11551  004358  C03A  FFD9         	movff	sync_fs@fs,fsr2l
 11552  00435C  C03B  FFDA         	movff	sync_fs@fs+1,fsr2h
 11553  004360  0E03               	movlw	3
 11554  004362  18DE               	xorwf	postinc2,w,c
 11555  004364  A4D8               	btfss	status,2,c
 11556  004366  D0B8               	goto	l5425
 11557  004368  EE20 F005          	lfsr	2,5
 11558  00436C  503A               	movf	sync_fs@fs,w,c
 11559  00436E  26D9               	addwf	fsr2l,f,c
 11560  004370  503B               	movf	sync_fs@fs+1,w,c
 11561  004372  22DA               	addwfc	fsr2h,f,c
 11562  004374  04DE               	decf	postinc2,w,c
 11563  004376  A4D8               	btfss	status,2,c
 11564  004378  D0AF               	goto	l5425
 11565                           
 11566                           ;ff.c: 772:    mem_set(fs->win, 0, ((UINT)512));
 11567  00437A  0E2E               	movlw	46
 11568  00437C  243A               	addwf	sync_fs@fs,w,c
 11569  00437E  6E01               	movwf	mem_set@dst,c
 11570  004380  0E00               	movlw	0
 11571  004382  203B               	addwfc	sync_fs@fs+1,w,c
 11572  004384  6E02               	movwf	mem_set@dst+1,c
 11573  004386  0E00               	movlw	0
 11574  004388  6E04               	movwf	mem_set@val+1,c
 11575  00438A  0E00               	movlw	0
 11576  00438C  6E03               	movwf	mem_set@val,c
 11577  00438E  0E02               	movlw	2
 11578  004390  6E06               	movwf	mem_set@cnt+1,c
 11579  004392  0E00               	movlw	0
 11580  004394  6E05               	movwf	mem_set@cnt,c
 11581  004396  EC58  F02E         	call	_mem_set	;wreg free
 11582                           
 11583                           ;ff.c: 773:    *(WORD*)(BYTE*)(fs->win + 510)=(WORD)(0xAA55);
 11584  00439A  EE22 F02C          	lfsr	2,556
 11585  00439E  503A               	movf	sync_fs@fs,w,c
 11586  0043A0  26D9               	addwf	fsr2l,f,c
 11587  0043A2  503B               	movf	sync_fs@fs+1,w,c
 11588  0043A4  22DA               	addwfc	fsr2h,f,c
 11589  0043A6  0E55               	movlw	85
 11590  0043A8  6EDE               	movwf	postinc2,c
 11591  0043AA  0EAA               	movlw	170
 11592  0043AC  6EDD               	movwf	postdec2,c
 11593                           
 11594                           ;ff.c: 774:    *(DWORD*)(BYTE*)(fs->win + 0)=(DWORD)(0x41615252);
 11595  0043AE  EE20 F02E          	lfsr	2,46
 11596  0043B2  503A               	movf	sync_fs@fs,w,c
 11597  0043B4  26D9               	addwf	fsr2l,f,c
 11598  0043B6  503B               	movf	sync_fs@fs+1,w,c
 11599  0043B8  22DA               	addwfc	fsr2h,f,c
 11600  0043BA  0E52               	movlw	82
 11601  0043BC  6EDE               	movwf	postinc2,c
 11602  0043BE  0E52               	movlw	82
 11603  0043C0  6EDE               	movwf	postinc2,c
 11604  0043C2  0E61               	movlw	97
 11605  0043C4  6EDE               	movwf	postinc2,c
 11606  0043C6  0E41               	movlw	65
 11607  0043C8  6EDD               	movwf	postdec2,c
 11608                           
 11609                           ;ff.c: 775:    *(DWORD*)(BYTE*)(fs->win + 484)=(DWORD)(0x61417272);
 11610  0043CA  EE22 F012          	lfsr	2,530
 11611  0043CE  503A               	movf	sync_fs@fs,w,c
 11612  0043D0  26D9               	addwf	fsr2l,f,c
 11613  0043D2  503B               	movf	sync_fs@fs+1,w,c
 11614  0043D4  22DA               	addwfc	fsr2h,f,c
 11615  0043D6  0E72               	movlw	114
 11616  0043D8  6EDE               	movwf	postinc2,c
 11617  0043DA  0E72               	movlw	114
 11618  0043DC  6EDE               	movwf	postinc2,c
 11619  0043DE  0E41               	movlw	65
 11620  0043E0  6EDE               	movwf	postinc2,c
 11621  0043E2  0E61               	movlw	97
 11622  0043E4  6EDD               	movwf	postdec2,c
 11623                           
 11624                           ;ff.c: 776:    *(DWORD*)(BYTE*)(fs->win + 488)=(DWORD)(fs->free_clust);
 11625  0043E6  EE20 F00E          	lfsr	2,14
 11626  0043EA  503A               	movf	sync_fs@fs,w,c
 11627  0043EC  26D9               	addwf	fsr2l,f,c
 11628  0043EE  503B               	movf	sync_fs@fs+1,w,c
 11629  0043F0  22DA               	addwfc	fsr2h,f,c
 11630  0043F2  EE12 F016          	lfsr	1,534
 11631  0043F6  503A               	movf	sync_fs@fs,w,c
 11632  0043F8  26E1               	addwf	fsr1l,f,c
 11633  0043FA  503B               	movf	sync_fs@fs+1,w,c
 11634  0043FC  22E2               	addwfc	fsr1h,f,c
 11635  0043FE  CFDE FFE6          	movff	postinc2,postinc1
 11636  004402  CFDE FFE6          	movff	postinc2,postinc1
 11637  004406  CFDE FFE6          	movff	postinc2,postinc1
 11638  00440A  CFDE FFE6          	movff	postinc2,postinc1
 11639                           
 11640                           ;ff.c: 777:    *(DWORD*)(BYTE*)(fs->win + 492)=(DWORD)(fs->last_clust);
 11641  00440E  EE20 F00A          	lfsr	2,10
 11642  004412  503A               	movf	sync_fs@fs,w,c
 11643  004414  26D9               	addwf	fsr2l,f,c
 11644  004416  503B               	movf	sync_fs@fs+1,w,c
 11645  004418  22DA               	addwfc	fsr2h,f,c
 11646  00441A  EE12 F01A          	lfsr	1,538
 11647  00441E  503A               	movf	sync_fs@fs,w,c
 11648  004420  26E1               	addwf	fsr1l,f,c
 11649  004422  503B               	movf	sync_fs@fs+1,w,c
 11650  004424  22E2               	addwfc	fsr1h,f,c
 11651  004426  CFDE FFE6          	movff	postinc2,postinc1
 11652  00442A  CFDE FFE6          	movff	postinc2,postinc1
 11653  00442E  CFDE FFE6          	movff	postinc2,postinc1
 11654  004432  CFDE FFE6          	movff	postinc2,postinc1
 11655                           
 11656                           ;ff.c: 779:    fs->winsect = fs->volbase + 1;
 11657  004436  EE20 F01A          	lfsr	2,26
 11658  00443A  503A               	movf	sync_fs@fs,w,c
 11659  00443C  26D9               	addwf	fsr2l,f,c
 11660  00443E  503B               	movf	sync_fs@fs+1,w,c
 11661  004440  22DA               	addwfc	fsr2h,f,c
 11662  004442  CFDE F03C          	movff	postinc2,??_sync_fs
 11663  004446  CFDE F03D          	movff	postinc2,??_sync_fs+1
 11664  00444A  CFDE F03E          	movff	postinc2,??_sync_fs+2
 11665  00444E  CFDE F03F          	movff	postinc2,??_sync_fs+3
 11666  004452  0E01               	movlw	1
 11667  004454  243C               	addwf	??_sync_fs,w,c
 11668  004456  6E40               	movwf	(??_sync_fs+4)& (0+255),c
 11669  004458  0E00               	movlw	0
 11670  00445A  203D               	addwfc	??_sync_fs+1,w,c
 11671  00445C  6E41               	movwf	(??_sync_fs+5)& (0+255),c
 11672  00445E  0E00               	movlw	0
 11673  004460  203E               	addwfc	??_sync_fs+2,w,c
 11674  004462  6E42               	movwf	(??_sync_fs+6)& (0+255),c
 11675  004464  0E00               	movlw	0
 11676  004466  203F               	addwfc	??_sync_fs+3,w,c
 11677  004468  6E43               	movwf	(??_sync_fs+7)& (0+255),c
 11678  00446A  EE20 F02A          	lfsr	2,42
 11679  00446E  503A               	movf	sync_fs@fs,w,c
 11680  004470  26D9               	addwf	fsr2l,f,c
 11681  004472  503B               	movf	sync_fs@fs+1,w,c
 11682  004474  22DA               	addwfc	fsr2h,f,c
 11683  004476  C040  FFDE         	movff	??_sync_fs+4,postinc2
 11684  00447A  C041  FFDE         	movff	??_sync_fs+5,postinc2
 11685  00447E  C042  FFDE         	movff	??_sync_fs+6,postinc2
 11686  004482  C043  FFDE         	movff	??_sync_fs+7,postinc2
 11687                           
 11688                           ;ff.c: 780:    disk_write(fs->drv, fs->win, fs->winsect, 1);
 11689  004486  0E2E               	movlw	46
 11690  004488  243A               	addwf	sync_fs@fs,w,c
 11691  00448A  6E11               	movwf	disk_write@buff,c
 11692  00448C  0E00               	movlw	0
 11693  00448E  203B               	addwfc	sync_fs@fs+1,w,c
 11694  004490  6E12               	movwf	disk_write@buff+1,c
 11695  004492  EE20 F02A          	lfsr	2,42
 11696  004496  503A               	movf	sync_fs@fs,w,c
 11697  004498  26D9               	addwf	fsr2l,f,c
 11698  00449A  503B               	movf	sync_fs@fs+1,w,c
 11699  00449C  22DA               	addwfc	fsr2h,f,c
 11700  00449E  CFDE F013          	movff	postinc2,disk_write@sector
 11701  0044A2  CFDE F014          	movff	postinc2,disk_write@sector+1
 11702  0044A6  CFDE F015          	movff	postinc2,disk_write@sector+2
 11703  0044AA  CFDE F016          	movff	postinc2,disk_write@sector+3
 11704  0044AE  0E00               	movlw	0
 11705  0044B0  6E18               	movwf	disk_write@count+1,c
 11706  0044B2  0E01               	movlw	1
 11707  0044B4  6E17               	movwf	disk_write@count,c
 11708  0044B6  EE20 F001          	lfsr	2,1
 11709  0044BA  503A               	movf	sync_fs@fs,w,c
 11710  0044BC  26D9               	addwf	fsr2l,f,c
 11711  0044BE  503B               	movf	sync_fs@fs+1,w,c
 11712  0044C0  22DA               	addwfc	fsr2h,f,c
 11713  0044C2  50DF               	movf	indf2,w,c
 11714  0044C4  EC45  F026         	call	_disk_write
 11715                           
 11716                           ;ff.c: 781:    fs->fsi_flag = 0;
 11717  0044C8  EE20 F005          	lfsr	2,5
 11718  0044CC  503A               	movf	sync_fs@fs,w,c
 11719  0044CE  26D9               	addwf	fsr2l,f,c
 11720  0044D0  503B               	movf	sync_fs@fs+1,w,c
 11721  0044D2  22DA               	addwfc	fsr2h,f,c
 11722  0044D4  0E00               	movlw	0
 11723  0044D6  6EDF               	movwf	indf2,c
 11724  0044D8                     l5425:
 11725                           
 11726                           ;ff.c: 784:   if (disk_ioctl(fs->drv, 0, 0) != RES_OK)
 11727  0044D8  0E00               	movlw	0
 11728  0044DA  6E11               	movwf	disk_ioctl@cmd,c
 11729  0044DC  0E00               	movlw	0
 11730  0044DE  6E12               	movwf	disk_ioctl@buff,c
 11731  0044E0  0E00               	movlw	0
 11732  0044E2  6E13               	movwf	disk_ioctl@buff+1,c
 11733  0044E4  EE20 F001          	lfsr	2,1
 11734  0044E8  503A               	movf	sync_fs@fs,w,c
 11735  0044EA  26D9               	addwf	fsr2l,f,c
 11736  0044EC  503B               	movf	sync_fs@fs+1,w,c
 11737  0044EE  22DA               	addwfc	fsr2h,f,c
 11738  0044F0  50DF               	movf	indf2,w,c
 11739  0044F2  EC9D  F00F         	call	_disk_ioctl
 11740  0044F6  0900               	iorlw	0
 11741  0044F8  B4D8               	btfsc	status,2,c
 11742  0044FA  D002               	goto	l242
 11743                           
 11744                           ;ff.c: 785:    res = FR_DISK_ERR;
 11745  0044FC  0E01               	movlw	1
 11746  0044FE  6E44               	movwf	sync_fs@res,c
 11747  004500                     l242:
 11748                           
 11749                           ;ff.c: 788:  return res;
 11750  004500  5044               	movf	sync_fs@res,w,c
 11751  004502  0012               	return		;funcret
 11752  004504                     __end_of_sync_fs:
 11753                           	opt callstack 0
 11754                           
 11755 ;; *************** function _mem_set *****************
 11756 ;; Defined at:
 11757 ;;		line 524 in file "ff.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;  dst             2    0[COMRAM] PTR void 
 11760 ;;		 -> FatFs(558), f_open@sfn(12), NULL(0), 
 11761 ;;  val             2    2[COMRAM] int 
 11762 ;;  cnt             2    4[COMRAM] unsigned short 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;  d               2    6[COMRAM] PTR unsigned char 
 11765 ;;		 -> FatFs(558), f_open@sfn(12), NULL(0), 
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  1    wreg      void 
 11768 ;; Registers used:
 11769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11770 ;; Tracked objects:
 11771 ;;		On entry : 0/0
 11772 ;;		On exit  : 0/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11775 ;;      Params:         6       0       0       0       0       0       0       0       0
 11776 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11777 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11778 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11779 ;;Total ram usage:        8 bytes
 11780 ;; Hardware stack levels used:    1
 11781 ;; This function calls:
 11782 ;;		Nothing
 11783 ;; This function is called by:
 11784 ;;		_sync_fs
 11785 ;;		_dir_next
 11786 ;;		_dir_register
 11787 ;;		_create_name
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text35
 11792  005CB0                     __ptext35:
 11793                           	opt callstack 0
 11794  005CB0                     _mem_set:
 11795                           	opt callstack 25
 11796                           
 11797                           ;ff.c: 525:  BYTE *d = (BYTE*)dst;
 11798                           
 11799                           ;incstack = 0
 11800  005CB0  C001  F007         	movff	mem_set@dst,mem_set@d
 11801  005CB4  C002  F008         	movff	mem_set@dst+1,mem_set@d+1
 11802                           
 11803                           ;ff.c: 527:  while (cnt--)
 11804  005CB8  D008               	goto	l4859
 11805  005CBA                     l4855:
 11806                           
 11807                           ;ff.c: 528:   *d++ = (BYTE)val;
 11808  005CBA  C007  FFD9         	movff	mem_set@d,fsr2l
 11809  005CBE  C008  FFDA         	movff	mem_set@d+1,fsr2h
 11810  005CC2  C003  FFDF         	movff	mem_set@val,indf2
 11811  005CC6  4A07               	infsnz	mem_set@d,f,c
 11812  005CC8  2A08               	incf	mem_set@d+1,f,c
 11813  005CCA                     l4859:
 11814                           
 11815                           ;ff.c: 527:  while (cnt--)
 11816  005CCA  0605               	decf	mem_set@cnt,f,c
 11817  005CCC  A0D8               	btfss	status,0,c
 11818  005CCE  0606               	decf	mem_set@cnt+1,f,c
 11819  005CD0  2805               	incf	mem_set@cnt,w,c
 11820  005CD2  E1F3               	bnz	l4855
 11821  005CD4  2806               	incf	mem_set@cnt+1,w,c
 11822  005CD6  B4D8               	btfsc	status,2,c
 11823  005CD8  0012               	return	
 11824  005CDA  D7EF               	goto	l4855
 11825  005CDC                     __end_of_mem_set:
 11826                           	opt callstack 0
 11827                           
 11828 ;; *************** function _disk_ioctl *****************
 11829 ;; Defined at:
 11830 ;;		line 446 in file "diskio.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;  pdrv            1    wreg     unsigned char 
 11833 ;;  cmd             1   16[COMRAM] unsigned char 
 11834 ;;  buff            2   17[COMRAM] PTR void 
 11835 ;;		 -> NULL(0), 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;  pdrv            1   48[COMRAM] unsigned char 
 11838 ;;  csd            16   32[COMRAM] unsigned char [16]
 11839 ;;  csize           4   49[COMRAM] unsigned long 
 11840 ;;  ptr             2   55[COMRAM] PTR unsigned char 
 11841 ;;		 -> NULL(0), 
 11842 ;;  n               1   54[COMRAM] unsigned char 
 11843 ;;  res             1   53[COMRAM] enum E43
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      enum E43
 11846 ;; Registers used:
 11847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11853 ;;      Params:         3       0       0       0       0       0       0       0       0
 11854 ;;      Locals:        25       0       0       0       0       0       0       0       0
 11855 ;;      Temps:         13       0       0       0       0       0       0       0       0
 11856 ;;      Totals:        41       0       0       0       0       0       0       0       0
 11857 ;;Total ram usage:       41 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; Hardware stack levels required when called:    5
 11860 ;; This function calls:
 11861 ;;		_SPI1_Exchange8bit
 11862 ;;		___wmul
 11863 ;;		_deselect
 11864 ;;		_rcvr_datablock
 11865 ;;		_select
 11866 ;;		_send_cmd
 11867 ;; This function is called by:
 11868 ;;		_sync_fs
 11869 ;; This function uses a non-reentrant model
 11870 ;;
 11871                           
 11872                           	psect	text36
 11873  001F3A                     __ptext36:
 11874                           	opt callstack 0
 11875  001F3A                     _disk_ioctl:
 11876                           	opt callstack 21
 11877                           
 11878                           ;incstack = 0
 11879                           ;disk_ioctl@pdrv stored from wreg
 11880  001F3A  6E31               	movwf	disk_ioctl@pdrv,c
 11881                           
 11882                           ;diskio.c: 447:  BYTE pdrv,;diskio.c: 448:  BYTE cmd,;diskio.c: 449:  void *buff;diskio.
      +                          c: 451: {;diskio.c: 452:  DRESULT res;;diskio.c: 453:  BYTE n, csd[16], *ptr = buff;
 11883  001F3C  C012  F038         	movff	disk_ioctl@buff,disk_ioctl@ptr
 11884  001F40  C013  F039         	movff	disk_ioctl@buff+1,disk_ioctl@ptr+1
 11885                           
 11886                           ;diskio.c: 454:  DWORD csize;;diskio.c: 457:  if (pdrv) return RES_PARERR;
 11887  001F44  5031               	movf	disk_ioctl@pdrv,w,c
 11888  001F46  B4D8               	btfsc	status,2,c
 11889  001F48  D002               	goto	l4973
 11890  001F4A  0E04               	movlw	4
 11891  001F4C  0012               	return	
 11892  001F4E                     l4973:
 11893                           
 11894                           ;diskio.c: 459:  res = RES_ERROR;
 11895  001F4E  0E01               	movlw	1
 11896  001F50  6E36               	movwf	disk_ioctl@res,c
 11897                           
 11898                           ;diskio.c: 461:  if (Stat & 0x01) return RES_NOTRDY;
 11899  001F52  0100               	movlb	0	; () banked
 11900  001F54  A1E4               	btfss	_Stat& (0+255),0,b
 11901  001F56  D21B               	goto	l5073
 11902                           
 11903                           ; BSR set to: 0
 11904  001F58  0E03               	movlw	3
 11905  001F5A  0012               	return	
 11906  001F5C                     l4981:
 11907                           
 11908                           ; BSR set to: 0
 11909                           ;diskio.c: 465:   if (select()) res = RES_OK;
 11910  001F5C  ECB9  F02E         	call	_select	;wreg free
 11911  001F60  0900               	iorlw	0
 11912  001F62  B4D8               	btfsc	status,2,c
 11913  001F64  D235               	goto	l5075
 11914  001F66                     u6060:
 11915  001F66  0E00               	movlw	0
 11916  001F68  D210               	goto	L13
 11917  001F6A                     l4985:
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;diskio.c: 469:   if ((send_cmd((9), 0) == 0) && rcvr_datablock(csd, 16)) {
 11921  001F6A  0E00               	movlw	0
 11922  001F6C  6E0B               	movwf	send_cmd@arg,c
 11923  001F6E  0E00               	movlw	0
 11924  001F70  6E0C               	movwf	send_cmd@arg+1,c
 11925  001F72  0E00               	movlw	0
 11926  001F74  6E0D               	movwf	send_cmd@arg+2,c
 11927  001F76  0E00               	movlw	0
 11928  001F78  6E0E               	movwf	send_cmd@arg+3,c
 11929  001F7A  0E09               	movlw	9
 11930  001F7C  ECFC  F02D         	call	_send_cmd
 11931  001F80  0900               	iorlw	0
 11932  001F82  A4D8               	btfss	status,2,c
 11933  001F84  D225               	goto	l5075
 11934  001F86  0E21               	movlw	low disk_ioctl@csd
 11935  001F88  6E02               	movwf	rcvr_datablock@buff,c
 11936  001F8A  0E00               	movlw	high disk_ioctl@csd
 11937  001F8C  6E03               	movwf	rcvr_datablock@buff+1,c
 11938  001F8E  0E00               	movlw	0
 11939  001F90  6E05               	movwf	rcvr_datablock@btr+1,c
 11940  001F92  0E10               	movlw	16
 11941  001F94  6E04               	movwf	rcvr_datablock@btr,c
 11942  001F96  ECE6  F02C         	call	_rcvr_datablock	;wreg free
 11943  001F9A  0900               	iorlw	0
 11944  001F9C  B4D8               	btfsc	status,2,c
 11945  001F9E  D218               	goto	l5075
 11946                           
 11947                           ;diskio.c: 470:    if ((csd[0] >> 6) == 1) {
 11948  001FA0  4421               	rlncf	disk_ioctl@csd,w,c
 11949  001FA2  46E8               	rlncf	wreg,f,c
 11950  001FA4  0B03               	andlw	3
 11951  001FA6  06E8               	decf	wreg,f,c
 11952  001FA8  A4D8               	btfss	status,2,c
 11953  001FAA  D04E               	goto	l4995
 11954                           
 11955                           ;diskio.c: 471:     csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) 
      +                          + 1;
 11956  001FAC  C028  F014         	movff	disk_ioctl@csd+7,??_disk_ioctl
 11957  001FB0  0E3F               	movlw	63
 11958  001FB2  1614               	andwf	??_disk_ioctl,f,c
 11959  001FB4  C014  F015         	movff	??_disk_ioctl,??_disk_ioctl+1
 11960  001FB8  6A16               	clrf	(??_disk_ioctl+2)& (0+255),c
 11961  001FBA  6A17               	clrf	(??_disk_ioctl+3)& (0+255),c
 11962  001FBC  6A18               	clrf	(??_disk_ioctl+4)& (0+255),c
 11963  001FBE  C016  F018         	movff	??_disk_ioctl+2,??_disk_ioctl+4
 11964  001FC2  C015  F017         	movff	??_disk_ioctl+1,??_disk_ioctl+3
 11965  001FC6  6A16               	clrf	??_disk_ioctl+2,c
 11966  001FC8  6A15               	clrf	??_disk_ioctl+1,c
 11967  001FCA  5029               	movf	disk_ioctl@csd+8,w,c
 11968  001FCC  6E1A               	movwf	(??_disk_ioctl+6)& (0+255),c
 11969  001FCE  6A19               	clrf	(??_disk_ioctl+5)& (0+255),c
 11970  001FD0  502A               	movf	disk_ioctl@csd+9,w,c
 11971  001FD2  6E1B               	movwf	(??_disk_ioctl+7)& (0+255),c
 11972  001FD4  6A1C               	clrf	(??_disk_ioctl+8)& (0+255),c
 11973  001FD6  5019               	movf	??_disk_ioctl+5,w,c
 11974  001FD8  261B               	addwf	??_disk_ioctl+7,f,c
 11975  001FDA  501A               	movf	??_disk_ioctl+6,w,c
 11976  001FDC  221C               	addwfc	??_disk_ioctl+8,f,c
 11977  001FDE  501B               	movf	??_disk_ioctl+7,w,c
 11978  001FE0  2415               	addwf	??_disk_ioctl+1,w,c
 11979  001FE2  6E1D               	movwf	(??_disk_ioctl+9)& (0+255),c
 11980  001FE4  501C               	movf	??_disk_ioctl+8,w,c
 11981  001FE6  2016               	addwfc	??_disk_ioctl+2,w,c
 11982  001FE8  6E1E               	movwf	(??_disk_ioctl+10)& (0+255),c
 11983  001FEA  0E00               	movlw	0
 11984  001FEC  2017               	addwfc	??_disk_ioctl+3,w,c
 11985  001FEE  6E1F               	movwf	(??_disk_ioctl+11)& (0+255),c
 11986  001FF0  0E00               	movlw	0
 11987  001FF2  2018               	addwfc	??_disk_ioctl+4,w,c
 11988  001FF4  6E20               	movwf	(??_disk_ioctl+12)& (0+255),c
 11989  001FF6  0E01               	movlw	1
 11990  001FF8  241D               	addwf	??_disk_ioctl+9,w,c
 11991  001FFA  6E32               	movwf	disk_ioctl@csize,c
 11992  001FFC  0E00               	movlw	0
 11993  001FFE  201E               	addwfc	??_disk_ioctl+10,w,c
 11994  002000  6E33               	movwf	disk_ioctl@csize+1,c
 11995  002002  0E00               	movlw	0
 11996  002004  201F               	addwfc	??_disk_ioctl+11,w,c
 11997  002006  6E34               	movwf	disk_ioctl@csize+2,c
 11998  002008  0E00               	movlw	0
 11999  00200A  2020               	addwfc	??_disk_ioctl+12,w,c
 12000  00200C  6E35               	movwf	disk_ioctl@csize+3,c
 12001                           
 12002                           ;diskio.c: 472:     *(DWORD*)buff = csize << 10;
 12003  00200E  C032  F014         	movff	disk_ioctl@csize,??_disk_ioctl
 12004  002012  C033  F015         	movff	disk_ioctl@csize+1,??_disk_ioctl+1
 12005  002016  C034  F016         	movff	disk_ioctl@csize+2,??_disk_ioctl+2
 12006  00201A  C035  F017         	movff	disk_ioctl@csize+3,??_disk_ioctl+3
 12007  00201E  0E0A               	movlw	10
 12008  002020                     u6105:
 12009  002020  90D8               	bcf	status,0,c
 12010  002022  3614               	rlcf	??_disk_ioctl,f,c
 12011  002024  3615               	rlcf	??_disk_ioctl+1,f,c
 12012  002026  3616               	rlcf	??_disk_ioctl+2,f,c
 12013  002028  3617               	rlcf	??_disk_ioctl+3,f,c
 12014  00202A  2EE8               	decfsz	wreg,f,c
 12015  00202C  D7F9               	goto	u6105
 12016  00202E  C012  FFD9         	movff	disk_ioctl@buff,fsr2l
 12017  002032  C013  FFDA         	movff	disk_ioctl@buff+1,fsr2h
 12018  002036  C014  FFDE         	movff	??_disk_ioctl,postinc2
 12019  00203A  C015  FFDE         	movff	??_disk_ioctl+1,postinc2
 12020  00203E  C016  FFDE         	movff	??_disk_ioctl+2,postinc2
 12021  002042  C017  FFDE         	movff	??_disk_ioctl+3,postinc2
 12022                           
 12023                           ;diskio.c: 473:    } else {
 12024  002046  D78F               	goto	u6060
 12025  002048                     l4995:
 12026                           
 12027                           ;diskio.c: 474:     n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2
      +                          ;
 12028  002048  6A14               	clrf	??_disk_ioctl& (0+255),c
 12029  00204A  AE2B               	btfss	disk_ioctl@csd+10,7,c
 12030  00204C  D001               	bra	u6115
 12031  00204E  2A14               	incf	??_disk_ioctl& (0+255),f,c
 12032  002050                     u6115:
 12033  002050  0E01               	movlw	1
 12034  002052  1614               	andwf	??_disk_ioctl,f,c
 12035  002054  C026  F015         	movff	disk_ioctl@csd+5,??_disk_ioctl+1
 12036  002058  0E0F               	movlw	15
 12037  00205A  1615               	andwf	??_disk_ioctl+1,f,c
 12038  00205C  502A               	movf	disk_ioctl@csd+9,w,c
 12039  00205E  0B03               	andlw	3
 12040  002060  0D02               	mullw	2
 12041  002062  50F3               	movf	prodl,w,c
 12042  002064  2415               	addwf	??_disk_ioctl+1,w,c
 12043  002066  2414               	addwf	??_disk_ioctl,w,c
 12044  002068  0F02               	addlw	2
 12045  00206A  6E37               	movwf	disk_ioctl@n,c
 12046                           
 12047                           ;diskio.c: 475:     csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) <<
      +                           10) + 1;
 12048  00206C  5027               	movf	disk_ioctl@csd+6,w,c
 12049  00206E  0B03               	andlw	3
 12050  002070  6E14               	movwf	??_disk_ioctl& (0+255),c
 12051  002072  6A15               	clrf	(??_disk_ioctl+1)& (0+255),c
 12052  002074  0E0A               	movlw	10
 12053  002076                     u6125:
 12054  002076  90D8               	bcf	status,0,c
 12055  002078  3614               	rlcf	??_disk_ioctl,f,c
 12056  00207A  3615               	rlcf	??_disk_ioctl+1,f,c
 12057  00207C  2EE8               	decfsz	wreg,f,c
 12058  00207E  D7FB               	goto	u6125
 12059  002080  5028               	movf	disk_ioctl@csd+7,w,c
 12060  002082  6E16               	movwf	(??_disk_ioctl+2)& (0+255),c
 12061  002084  6A17               	clrf	(??_disk_ioctl+3)& (0+255),c
 12062  002086  90D8               	bcf	status,0,c
 12063  002088  3616               	rlcf	??_disk_ioctl+2,f,c
 12064  00208A  3617               	rlcf	??_disk_ioctl+3,f,c
 12065  00208C  90D8               	bcf	status,0,c
 12066  00208E  3616               	rlcf	??_disk_ioctl+2,f,c
 12067  002090  3617               	rlcf	??_disk_ioctl+3,f,c
 12068  002092  4429               	rlncf	disk_ioctl@csd+8,w,c
 12069  002094  46E8               	rlncf	wreg,f,c
 12070  002096  0B03               	andlw	3
 12071  002098  6E18               	movwf	(??_disk_ioctl+4)& (0+255),c
 12072  00209A  6A19               	clrf	(??_disk_ioctl+5)& (0+255),c
 12073  00209C  5016               	movf	??_disk_ioctl+2,w,c
 12074  00209E  2618               	addwf	??_disk_ioctl+4,f,c
 12075  0020A0  5017               	movf	??_disk_ioctl+3,w,c
 12076  0020A2  2219               	addwfc	??_disk_ioctl+5,f,c
 12077  0020A4  5014               	movf	??_disk_ioctl,w,c
 12078  0020A6  2618               	addwf	??_disk_ioctl+4,f,c
 12079  0020A8  5015               	movf	??_disk_ioctl+1,w,c
 12080  0020AA  2219               	addwfc	??_disk_ioctl+5,f,c
 12081  0020AC  0E01               	movlw	1
 12082  0020AE  2618               	addwf	??_disk_ioctl+4,f,c
 12083  0020B0  0E00               	movlw	0
 12084  0020B2  2219               	addwfc	??_disk_ioctl+5,f,c
 12085  0020B4  C018  F032         	movff	??_disk_ioctl+4,disk_ioctl@csize
 12086  0020B8  C019  F033         	movff	??_disk_ioctl+5,disk_ioctl@csize+1
 12087  0020BC  6A34               	clrf	disk_ioctl@csize+2,c
 12088  0020BE  6A35               	clrf	disk_ioctl@csize+3,c
 12089                           
 12090                           ;diskio.c: 476:     *(DWORD*)buff = csize << (n - 9);
 12091  0020C0  C037  F014         	movff	disk_ioctl@n,??_disk_ioctl
 12092  0020C4  0EF7               	movlw	-9
 12093  0020C6  2614               	addwf	??_disk_ioctl,f,c
 12094  0020C8  C032  F015         	movff	disk_ioctl@csize,??_disk_ioctl+1
 12095  0020CC  C033  F016         	movff	disk_ioctl@csize+1,??_disk_ioctl+2
 12096  0020D0  C034  F017         	movff	disk_ioctl@csize+2,??_disk_ioctl+3
 12097  0020D4  C035  F018         	movff	disk_ioctl@csize+3,??_disk_ioctl+4
 12098  0020D8  2A14               	incf	??_disk_ioctl,f,c
 12099  0020DA  D005               	goto	u6130
 12100  0020DC                     u6135:
 12101  0020DC  90D8               	bcf	status,0,c
 12102  0020DE  3615               	rlcf	??_disk_ioctl+1,f,c
 12103  0020E0  3616               	rlcf	??_disk_ioctl+2,f,c
 12104  0020E2  3617               	rlcf	??_disk_ioctl+3,f,c
 12105  0020E4  3618               	rlcf	??_disk_ioctl+4,f,c
 12106  0020E6                     u6130:
 12107  0020E6  2E14               	decfsz	??_disk_ioctl,f,c
 12108  0020E8  D7F9               	goto	u6135
 12109  0020EA  D03D               	goto	L15
 12110  0020EC                     l155:
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;diskio.c: 483:   if (CardType & 0x04) {
 12114  0020EC  A5ED               	btfss	_CardType& (0+255),2,b
 12115  0020EE  D048               	goto	l5021
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;diskio.c: 484:    if (send_cmd((0x80+13), 0) == 0) {
 12119  0020F0  0E00               	movlw	0
 12120  0020F2  6E0B               	movwf	send_cmd@arg,c
 12121  0020F4  0E00               	movlw	0
 12122  0020F6  6E0C               	movwf	send_cmd@arg+1,c
 12123  0020F8  0E00               	movlw	0
 12124  0020FA  6E0D               	movwf	send_cmd@arg+2,c
 12125  0020FC  0E00               	movlw	0
 12126  0020FE  6E0E               	movwf	send_cmd@arg+3,c
 12127  002100  0E8D               	movlw	141
 12128  002102  ECFC  F02D         	call	_send_cmd
 12129  002106  0900               	iorlw	0
 12130  002108  A4D8               	btfss	status,2,c
 12131  00210A  D162               	goto	l5075
 12132                           
 12133                           ;diskio.c: 485:     SPI1_Exchange8bit(0xFF);
 12134  00210C  0EFF               	movlw	255
 12135  00210E  ECDA  F02E         	call	_SPI1_Exchange8bit
 12136                           
 12137                           ;diskio.c: 486:     if (rcvr_datablock(csd, 16)) {
 12138  002112  0E21               	movlw	low disk_ioctl@csd
 12139  002114  6E02               	movwf	rcvr_datablock@buff,c
 12140  002116  0E00               	movlw	high disk_ioctl@csd
 12141  002118  6E03               	movwf	rcvr_datablock@buff+1,c
 12142  00211A  0E00               	movlw	0
 12143  00211C  6E05               	movwf	rcvr_datablock@btr+1,c
 12144  00211E  0E10               	movlw	16
 12145  002120  6E04               	movwf	rcvr_datablock@btr,c
 12146  002122  ECE6  F02C         	call	_rcvr_datablock	;wreg free
 12147  002126  0900               	iorlw	0
 12148  002128  B4D8               	btfsc	status,2,c
 12149  00212A  D152               	goto	l5075
 12150                           
 12151                           ;diskio.c: 487:      for (n = 64 - 16; n; n--) SPI1_Exchange8bit(0xFF);
 12152  00212C  0E30               	movlw	48
 12153  00212E  6E37               	movwf	disk_ioctl@n,c
 12154  002130  D004               	goto	l5015
 12155  002132                     l5011:
 12156  002132  0EFF               	movlw	255
 12157  002134  ECDA  F02E         	call	_SPI1_Exchange8bit
 12158  002138  0637               	decf	disk_ioctl@n,f,c
 12159  00213A                     l5015:
 12160  00213A  5037               	movf	disk_ioctl@n,w,c
 12161  00213C  A4D8               	btfss	status,2,c
 12162  00213E  D7F9               	goto	l5011
 12163                           
 12164                           ;diskio.c: 488:      *(DWORD*)buff = 16UL << (csd[10] >> 4);
 12165  002140  C02B  F014         	movff	disk_ioctl@csd+10,??_disk_ioctl
 12166  002144  3A14               	swapf	??_disk_ioctl,f,c
 12167  002146  0E0F               	movlw	15
 12168  002148  1614               	andwf	??_disk_ioctl,f,c
 12169  00214A  0E10               	movlw	16
 12170  00214C  6E15               	movwf	(??_disk_ioctl+1)& (0+255),c
 12171  00214E  6A16               	clrf	(??_disk_ioctl+2)& (0+255),c
 12172  002150  6A17               	clrf	(??_disk_ioctl+3)& (0+255),c
 12173  002152  6A18               	clrf	(??_disk_ioctl+4)& (0+255),c
 12174  002154  2A14               	incf	??_disk_ioctl,f,c
 12175  002156  D005               	goto	u6180
 12176  002158                     u6185:
 12177  002158  90D8               	bcf	status,0,c
 12178  00215A  3615               	rlcf	??_disk_ioctl+1,f,c
 12179  00215C  3616               	rlcf	??_disk_ioctl+2,f,c
 12180  00215E  3617               	rlcf	??_disk_ioctl+3,f,c
 12181  002160  3618               	rlcf	??_disk_ioctl+4,f,c
 12182  002162                     u6180:
 12183  002162  2E14               	decfsz	??_disk_ioctl,f,c
 12184  002164  D7F9               	goto	u6185
 12185  002166                     L15:
 12186  002166  C012  FFD9         	movff	disk_ioctl@buff,fsr2l
 12187  00216A  C013  FFDA         	movff	disk_ioctl@buff+1,fsr2h
 12188  00216E  C015  FFDE         	movff	??_disk_ioctl+1,postinc2
 12189  002172  C016  FFDE         	movff	??_disk_ioctl+2,postinc2
 12190  002176  C017  FFDE         	movff	??_disk_ioctl+3,postinc2
 12191  00217A  C018  FFDE         	movff	??_disk_ioctl+4,postinc2
 12192  00217E  D6F3               	goto	u6060
 12193  002180                     l5021:
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;diskio.c: 493:    if ((send_cmd((9), 0) == 0) && rcvr_datablock(csd, 16)) {
 12197  002180  0E00               	movlw	0
 12198  002182  6E0B               	movwf	send_cmd@arg,c
 12199  002184  0E00               	movlw	0
 12200  002186  6E0C               	movwf	send_cmd@arg+1,c
 12201  002188  0E00               	movlw	0
 12202  00218A  6E0D               	movwf	send_cmd@arg+2,c
 12203  00218C  0E00               	movlw	0
 12204  00218E  6E0E               	movwf	send_cmd@arg+3,c
 12205  002190  0E09               	movlw	9
 12206  002192  ECFC  F02D         	call	_send_cmd
 12207  002196  0900               	iorlw	0
 12208  002198  A4D8               	btfss	status,2,c
 12209  00219A  D11A               	goto	l5075
 12210  00219C  0E21               	movlw	low disk_ioctl@csd
 12211  00219E  6E02               	movwf	rcvr_datablock@buff,c
 12212  0021A0  0E00               	movlw	high disk_ioctl@csd
 12213  0021A2  6E03               	movwf	rcvr_datablock@buff+1,c
 12214  0021A4  0E00               	movlw	0
 12215  0021A6  6E05               	movwf	rcvr_datablock@btr+1,c
 12216  0021A8  0E10               	movlw	16
 12217  0021AA  6E04               	movwf	rcvr_datablock@btr,c
 12218  0021AC  ECE6  F02C         	call	_rcvr_datablock	;wreg free
 12219  0021B0  0900               	iorlw	0
 12220  0021B2  B4D8               	btfsc	status,2,c
 12221  0021B4  D10D               	goto	l5075
 12222                           
 12223                           ;diskio.c: 494:     if (CardType & 0x02) {
 12224  0021B6  0100               	movlb	0	; () banked
 12225  0021B8  A3ED               	btfss	_CardType& (0+255),1,b
 12226  0021BA  D02A               	goto	l5029
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;diskio.c: 495:      *(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 
      +                          7) + 1) << ((csd[13] >> 6) - 1);
 12230  0021BC  C02E  F014         	movff	disk_ioctl@csd+13,??_disk_ioctl
 12231  0021C0  0E06               	movlw	6
 12232  0021C2  6E15               	movwf	(??_disk_ioctl+1)& (0+255),c
 12233  0021C4                     u6225:
 12234  0021C4  90D8               	bcf	status,0,c
 12235  0021C6  3214               	rrcf	??_disk_ioctl,f,c
 12236  0021C8  2E15               	decfsz	(??_disk_ioctl+1)& (0+255),f,c
 12237  0021CA  D7FC               	goto	u6225
 12238  0021CC  0EFF               	movlw	-1
 12239  0021CE  2614               	addwf	??_disk_ioctl,f,c
 12240  0021D0  502B               	movf	disk_ioctl@csd+10,w,c
 12241  0021D2  0B3F               	andlw	63
 12242  0021D4  6E16               	movwf	(??_disk_ioctl+2)& (0+255),c
 12243  0021D6  6A17               	clrf	(??_disk_ioctl+3)& (0+255),c
 12244  0021D8  90D8               	bcf	status,0,c
 12245  0021DA  3616               	rlcf	??_disk_ioctl+2,f,c
 12246  0021DC  3617               	rlcf	??_disk_ioctl+3,f,c
 12247  0021DE  6A18               	clrf	(??_disk_ioctl+4)& (0+255),c
 12248  0021E0  AE2C               	btfss	disk_ioctl@csd+11,7,c
 12249  0021E2  D001               	bra	u6235
 12250  0021E4  2A18               	incf	(??_disk_ioctl+4)& (0+255),f,c
 12251  0021E6                     u6235:
 12252  0021E6  0E01               	movlw	1
 12253  0021E8  1618               	andwf	??_disk_ioctl+4,f,c
 12254  0021EA  5018               	movf	??_disk_ioctl+4,w,c
 12255  0021EC  2616               	addwf	??_disk_ioctl+2,f,c
 12256  0021EE  0E00               	movlw	0
 12257  0021F0  2217               	addwfc	??_disk_ioctl+3,f,c
 12258  0021F2  0E01               	movlw	1
 12259  0021F4  2616               	addwf	??_disk_ioctl+2,f,c
 12260  0021F6  0E00               	movlw	0
 12261  0021F8  2217               	addwfc	??_disk_ioctl+3,f,c
 12262  0021FA  2A14               	incf	??_disk_ioctl,f,c
 12263  0021FC  D003               	goto	u6244
 12264  0021FE                     u6245:
 12265  0021FE  90D8               	bcf	status,0,c
 12266  002200  3616               	rlcf	??_disk_ioctl+2,f,c
 12267  002202  3617               	rlcf	??_disk_ioctl+3,f,c
 12268  002204                     u6244:
 12269  002204  2E14               	decfsz	??_disk_ioctl,f,c
 12270  002206  D7FB               	goto	u6245
 12271  002208  5016               	movf	??_disk_ioctl+2,w,c
 12272  00220A  6E19               	movwf	(??_disk_ioctl+5)& (0+255),c
 12273  00220C  5017               	movf	??_disk_ioctl+3,w,c
 12274  00220E  D034               	goto	L16
 12275  002210                     l5029:
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;diskio.c: 497:      *(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3
      +                          ) << 3) + ((csd[11] & 224) >> 5) + 1);
 12279  002210  C02B  F014         	movff	disk_ioctl@csd+10,??_disk_ioctl
 12280  002214  90D8               	bcf	status,0,c
 12281  002216  3214               	rrcf	??_disk_ioctl,f,c
 12282  002218  90D8               	bcf	status,0,c
 12283  00221A  3214               	rrcf	??_disk_ioctl,f,c
 12284  00221C  0E1F               	movlw	31
 12285  00221E  1614               	andwf	??_disk_ioctl,f,c
 12286  002220  0E01               	movlw	1
 12287  002222  2414               	addwf	??_disk_ioctl,w,c
 12288  002224  6E01               	movwf	___wmul@multiplier,c
 12289  002226  6A02               	clrf	___wmul@multiplier+1,c
 12290  002228  0E00               	movlw	0
 12291  00222A  2202               	addwfc	___wmul@multiplier+1,f,c
 12292  00222C  502C               	movf	disk_ioctl@csd+11,w,c
 12293  00222E  0B03               	andlw	3
 12294  002230  6E15               	movwf	(??_disk_ioctl+1)& (0+255),c
 12295  002232  6A16               	clrf	(??_disk_ioctl+2)& (0+255),c
 12296  002234  90D8               	bcf	status,0,c
 12297  002236  3615               	rlcf	??_disk_ioctl+1,f,c
 12298  002238  3616               	rlcf	??_disk_ioctl+2,f,c
 12299  00223A  90D8               	bcf	status,0,c
 12300  00223C  3615               	rlcf	??_disk_ioctl+1,f,c
 12301  00223E  3616               	rlcf	??_disk_ioctl+2,f,c
 12302  002240  90D8               	bcf	status,0,c
 12303  002242  3615               	rlcf	??_disk_ioctl+1,f,c
 12304  002244  3616               	rlcf	??_disk_ioctl+2,f,c
 12305  002246  C02C  F017         	movff	disk_ioctl@csd+11,??_disk_ioctl+3
 12306  00224A  0E05               	movlw	5
 12307  00224C  6E18               	movwf	(??_disk_ioctl+4)& (0+255),c
 12308  00224E                     u6255:
 12309  00224E  90D8               	bcf	status,0,c
 12310  002250  3217               	rrcf	??_disk_ioctl+3,f,c
 12311  002252  2E18               	decfsz	(??_disk_ioctl+4)& (0+255),f,c
 12312  002254  D7FC               	goto	u6255
 12313  002256  0E07               	movlw	7
 12314  002258  1617               	andwf	??_disk_ioctl+3,f,c
 12315  00225A  5017               	movf	??_disk_ioctl+3,w,c
 12316  00225C  2615               	addwf	??_disk_ioctl+1,f,c
 12317  00225E  0E00               	movlw	0
 12318  002260  2216               	addwfc	??_disk_ioctl+2,f,c
 12319  002262  0E01               	movlw	1
 12320  002264  2415               	addwf	??_disk_ioctl+1,w,c
 12321  002266  6E03               	movwf	___wmul@multiplicand,c
 12322  002268  0E00               	movlw	0
 12323  00226A  2016               	addwfc	??_disk_ioctl+2,w,c
 12324  00226C  6E04               	movwf	___wmul@multiplicand+1,c
 12325  00226E  EC96  F02E         	call	___wmul	;wreg free
 12326  002272  5001               	movf	?___wmul,w,c
 12327  002274  6E19               	movwf	(??_disk_ioctl+5)& (0+255),c
 12328  002276  5002               	movf	?___wmul+1,w,c
 12329  002278                     L16:
 12330  002278  6E1A               	movwf	(??_disk_ioctl+6)& (0+255),c
 12331  00227A  6A1B               	clrf	(??_disk_ioctl+7)& (0+255),c
 12332  00227C  6A1C               	clrf	(??_disk_ioctl+8)& (0+255),c
 12333  00227E  C012  FFD9         	movff	disk_ioctl@buff,fsr2l
 12334  002282  C013  FFDA         	movff	disk_ioctl@buff+1,fsr2h
 12335  002286  C019  FFDE         	movff	??_disk_ioctl+5,postinc2
 12336  00228A  C01A  FFDE         	movff	??_disk_ioctl+6,postinc2
 12337  00228E  C01B  FFDE         	movff	??_disk_ioctl+7,postinc2
 12338  002292  C01C  FFDE         	movff	??_disk_ioctl+8,postinc2
 12339  002296  D667               	goto	u6060
 12340  002298                     l5033:
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;diskio.c: 507:   *ptr = CardType;
 12344  002298  C038  FFD9         	movff	disk_ioctl@ptr,fsr2l
 12345  00229C  C039  FFDA         	movff	disk_ioctl@ptr+1,fsr2h
 12346  0022A0  C0ED  FFDF         	movff	_CardType,indf2
 12347  0022A4  D660               	goto	u6060
 12348  0022A6                     l5037:
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;diskio.c: 512:   if (send_cmd((9), 0) == 0
 12352  0022A6  0E00               	movlw	0
 12353  0022A8  6E0B               	movwf	send_cmd@arg,c
 12354  0022AA  0E00               	movlw	0
 12355  0022AC  6E0C               	movwf	send_cmd@arg+1,c
 12356  0022AE  0E00               	movlw	0
 12357  0022B0  6E0D               	movwf	send_cmd@arg+2,c
 12358  0022B2  0E00               	movlw	0
 12359  0022B4  6E0E               	movwf	send_cmd@arg+3,c
 12360  0022B6  0E09               	movlw	9
 12361  0022B8  ECFC  F02D         	call	_send_cmd
 12362  0022BC  0900               	iorlw	0
 12363  0022BE  A4D8               	btfss	status,2,c
 12364  0022C0  D087               	goto	l5075
 12365  0022C2  C038  F002         	movff	disk_ioctl@ptr,rcvr_datablock@buff
 12366  0022C6  C039  F003         	movff	disk_ioctl@ptr+1,rcvr_datablock@buff+1
 12367  0022CA  0E00               	movlw	0
 12368  0022CC  6E05               	movwf	rcvr_datablock@btr+1,c
 12369  0022CE  0E10               	movlw	16
 12370  0022D0  6E04               	movwf	rcvr_datablock@btr,c
 12371  0022D2  ECE6  F02C         	call	_rcvr_datablock	;wreg free
 12372  0022D6                     L14:
 12373  0022D6  0900               	iorlw	0
 12374  0022D8  A4D8               	btfss	status,2,c
 12375  0022DA  D645               	goto	u6060
 12376  0022DC  D079               	goto	l5075
 12377  0022DE                     l5043:
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;diskio.c: 518:   if (send_cmd((10), 0) == 0
 12381  0022DE  0E00               	movlw	0
 12382  0022E0  6E0B               	movwf	send_cmd@arg,c
 12383  0022E2  0E00               	movlw	0
 12384  0022E4  6E0C               	movwf	send_cmd@arg+1,c
 12385  0022E6  0E00               	movlw	0
 12386  0022E8  6E0D               	movwf	send_cmd@arg+2,c
 12387  0022EA  0E00               	movlw	0
 12388  0022EC  6E0E               	movwf	send_cmd@arg+3,c
 12389  0022EE  0E0A               	movlw	10
 12390  0022F0  ECFC  F02D         	call	_send_cmd
 12391  0022F4  0900               	iorlw	0
 12392  0022F6  A4D8               	btfss	status,2,c
 12393  0022F8  D06B               	goto	l5075
 12394  0022FA  C038  F002         	movff	disk_ioctl@ptr,rcvr_datablock@buff
 12395  0022FE  C039  F003         	movff	disk_ioctl@ptr+1,rcvr_datablock@buff+1
 12396  002302  0E00               	movlw	0
 12397  002304  6E05               	movwf	rcvr_datablock@btr+1,c
 12398  002306  0E10               	movlw	16
 12399  002308  6E04               	movwf	rcvr_datablock@btr,c
 12400  00230A  ECE6  F02C         	call	_rcvr_datablock	;wreg free
 12401  00230E  D7E3               	goto	L14
 12402  002310                     l5049:
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;diskio.c: 524:   if (send_cmd((58), 0) == 0) {
 12406  002310  0E00               	movlw	0
 12407  002312  6E0B               	movwf	send_cmd@arg,c
 12408  002314  0E00               	movlw	0
 12409  002316  6E0C               	movwf	send_cmd@arg+1,c
 12410  002318  0E00               	movlw	0
 12411  00231A  6E0D               	movwf	send_cmd@arg+2,c
 12412  00231C  0E00               	movlw	0
 12413  00231E  6E0E               	movwf	send_cmd@arg+3,c
 12414  002320  0E3A               	movlw	58
 12415  002322  ECFC  F02D         	call	_send_cmd
 12416  002326  0900               	iorlw	0
 12417  002328  A4D8               	btfss	status,2,c
 12418  00232A  D052               	goto	l5075
 12419                           
 12420                           ;diskio.c: 525:    for (n = 4; n; n--) *ptr++ = SPI1_Exchange8bit(0xFF);
 12421  00232C  0E04               	movlw	4
 12422  00232E  6E37               	movwf	disk_ioctl@n,c
 12423  002330  D00B               	goto	l5059
 12424  002332                     l5053:
 12425  002332  0EFF               	movlw	255
 12426  002334  ECDA  F02E         	call	_SPI1_Exchange8bit
 12427  002338  C038  FFD9         	movff	disk_ioctl@ptr,fsr2l
 12428  00233C  C039  FFDA         	movff	disk_ioctl@ptr+1,fsr2h
 12429  002340  6EDF               	movwf	indf2,c
 12430  002342  4A38               	infsnz	disk_ioctl@ptr,f,c
 12431  002344  2A39               	incf	disk_ioctl@ptr+1,f,c
 12432  002346  0637               	decf	disk_ioctl@n,f,c
 12433  002348                     l5059:
 12434  002348  5037               	movf	disk_ioctl@n,w,c
 12435  00234A  B4D8               	btfsc	status,2,c
 12436  00234C  D60C               	goto	u6060
 12437  00234E  D7F1               	goto	l5053
 12438  002350                     l5063:
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;diskio.c: 531:   if (send_cmd((0x80+13), 0) == 0) {
 12442  002350  0E00               	movlw	0
 12443  002352  6E0B               	movwf	send_cmd@arg,c
 12444  002354  0E00               	movlw	0
 12445  002356  6E0C               	movwf	send_cmd@arg+1,c
 12446  002358  0E00               	movlw	0
 12447  00235A  6E0D               	movwf	send_cmd@arg+2,c
 12448  00235C  0E00               	movlw	0
 12449  00235E  6E0E               	movwf	send_cmd@arg+3,c
 12450  002360  0E8D               	movlw	141
 12451  002362  ECFC  F02D         	call	_send_cmd
 12452  002366  0900               	iorlw	0
 12453  002368  A4D8               	btfss	status,2,c
 12454  00236A  D032               	goto	l5075
 12455                           
 12456                           ;diskio.c: 532:    SPI1_Exchange8bit(0xFF);
 12457  00236C  0EFF               	movlw	255
 12458  00236E  ECDA  F02E         	call	_SPI1_Exchange8bit
 12459                           
 12460                           ;diskio.c: 533:    if (rcvr_datablock(ptr, 64))
 12461  002372  C038  F002         	movff	disk_ioctl@ptr,rcvr_datablock@buff
 12462  002376  C039  F003         	movff	disk_ioctl@ptr+1,rcvr_datablock@buff+1
 12463  00237A  0E00               	movlw	0
 12464  00237C  6E05               	movwf	rcvr_datablock@btr+1,c
 12465  00237E  0E40               	movlw	64
 12466  002380  6E04               	movwf	rcvr_datablock@btr,c
 12467  002382  ECE6  F02C         	call	_rcvr_datablock	;wreg free
 12468  002386  D7A7               	goto	L14
 12469  002388                     l5071:
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;diskio.c: 539:   res = RES_PARERR;
 12473  002388  0E04               	movlw	4
 12474  00238A                     L13:
 12475  00238A  6E36               	movwf	disk_ioctl@res,c
 12476                           
 12477                           ;diskio.c: 540:  }
 12478  00238C  D021               	goto	l5075
 12479  00238E                     l5073:
 12480                           
 12481                           ; BSR set to: 0
 12482  00238E  5011               	movf	disk_ioctl@cmd,w,c
 12483  002390  6E14               	movwf	??_disk_ioctl& (0+255),c
 12484  002392  6A15               	clrf	(??_disk_ioctl+1)& (0+255),c
 12485                           
 12486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12487                           ; Switch size 1, requested type "simple"
 12488                           ; Number of cases is 1, Range of values is 0 to 0
 12489                           ; switch strategies available:
 12490                           ; Name         Instructions Cycles
 12491                           ; simple_byte            4     3 (average)
 12492                           ;	Chosen strategy is simple_byte
 12493  002394  5015               	movf	??_disk_ioctl+1,w,c
 12494  002396  0A00               	xorlw	0	; case 0
 12495  002398  A4D8               	btfss	status,2,c
 12496  00239A  D7F6               	goto	l5071
 12497                           
 12498                           ; BSR set to: 0
 12499                           ; Switch size 1, requested type "simple"
 12500                           ; Number of cases is 8, Range of values is 0 to 14
 12501                           ; switch strategies available:
 12502                           ; Name         Instructions Cycles
 12503                           ; simple_byte           25    13 (average)
 12504                           ;	Chosen strategy is simple_byte
 12505  00239C  5014               	movf	??_disk_ioctl,w,c
 12506  00239E  0A00               	xorlw	0	; case 0
 12507  0023A0  B4D8               	btfsc	status,2,c
 12508  0023A2  D5DC               	goto	l4981
 12509  0023A4  0A01               	xorlw	1	; case 1
 12510  0023A6  B4D8               	btfsc	status,2,c
 12511  0023A8  D5E0               	goto	l4985
 12512  0023AA  0A02               	xorlw	2	; case 3
 12513  0023AC  B4D8               	btfsc	status,2,c
 12514  0023AE  D69E               	goto	l155
 12515  0023B0  0A09               	xorlw	9	; case 10
 12516  0023B2  B4D8               	btfsc	status,2,c
 12517  0023B4  D771               	goto	l5033
 12518  0023B6  0A01               	xorlw	1	; case 11
 12519  0023B8  B4D8               	btfsc	status,2,c
 12520  0023BA  D775               	goto	l5037
 12521  0023BC  0A07               	xorlw	7	; case 12
 12522  0023BE  B4D8               	btfsc	status,2,c
 12523  0023C0  D78E               	goto	l5043
 12524  0023C2  0A01               	xorlw	1	; case 13
 12525  0023C4  B4D8               	btfsc	status,2,c
 12526  0023C6  D7A4               	goto	l5049
 12527  0023C8  0A03               	xorlw	3	; case 14
 12528  0023CA  B4D8               	btfsc	status,2,c
 12529  0023CC  D7C1               	goto	l5063
 12530  0023CE  D7DC               	goto	l5071
 12531  0023D0                     l5075:
 12532                           
 12533                           ;diskio.c: 542:  deselect();
 12534  0023D0  EC05  F02F         	call	_deselect	;wreg free
 12535                           
 12536                           ;diskio.c: 544:  return res;
 12537  0023D4  5036               	movf	disk_ioctl@res,w,c
 12538  0023D6  0012               	return		;funcret
 12539  0023D8                     __end_of_disk_ioctl:
 12540                           	opt callstack 0
 12541                           
 12542 ;; *************** function ___wmul *****************
 12543 ;; Defined at:
 12544 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 12545 ;; Parameters:    Size  Location     Type
 12546 ;;  multiplier      2    0[COMRAM] unsigned int 
 12547 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;  product         2    4[COMRAM] unsigned int 
 12550 ;; Return value:  Size  Location     Type
 12551 ;;                  2    0[COMRAM] unsigned int 
 12552 ;; Registers used:
 12553 ;;		wreg, status,2, status,0, prodl, prodh
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12559 ;;      Params:         4       0       0       0       0       0       0       0       0
 12560 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12561 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12562 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12563 ;;Total ram usage:        6 bytes
 12564 ;; Hardware stack levels used:    1
 12565 ;; This function calls:
 12566 ;;		Nothing
 12567 ;; This function is called by:
 12568 ;;		_disk_ioctl
 12569 ;; This function uses a non-reentrant model
 12570 ;;
 12571                           
 12572                           	psect	text37
 12573  005D2C                     __ptext37:
 12574                           	opt callstack 0
 12575  005D2C                     ___wmul:
 12576                           	opt callstack 25
 12577                           
 12578                           ;incstack = 0
 12579  005D2C  5001               	movf	___wmul@multiplier,w,c
 12580  005D2E  0203               	mulwf	___wmul@multiplicand,c
 12581  005D30  CFF3 F005          	movff	prodl,___wmul@product
 12582  005D34  CFF4 F006          	movff	prodh,___wmul@product+1
 12583  005D38  5001               	movf	___wmul@multiplier,w,c
 12584  005D3A  0204               	mulwf	___wmul@multiplicand+1,c
 12585  005D3C  50F3               	movf	prodl,w,c
 12586  005D3E  2606               	addwf	___wmul@product+1,f,c
 12587  005D40  5002               	movf	___wmul@multiplier+1,w,c
 12588  005D42  0203               	mulwf	___wmul@multiplicand,c
 12589  005D44  50F3               	movf	prodl,w,c
 12590  005D46  2606               	addwf	___wmul@product+1,f,c
 12591  005D48  C005  F001         	movff	___wmul@product,?___wmul
 12592  005D4C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12593  005D50  0012               	return		;funcret
 12594  005D52                     __end_of___wmul:
 12595                           	opt callstack 0
 12596                           
 12597 ;; *************** function _st_clust *****************
 12598 ;; Defined at:
 12599 ;;		line 1252 in file "ff.c"
 12600 ;; Parameters:    Size  Location     Type
 12601 ;;  dir             2    0[COMRAM] PTR unsigned char 
 12602 ;;		 -> FatFs(558), NULL(0), 
 12603 ;;  cl              4    2[COMRAM] unsigned long 
 12604 ;; Auto vars:     Size  Location     Type
 12605 ;;		None
 12606 ;; Return value:  Size  Location     Type
 12607 ;;                  1    wreg      void 
 12608 ;; Registers used:
 12609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12610 ;; Tracked objects:
 12611 ;;		On entry : 0/0
 12612 ;;		On exit  : 0/0
 12613 ;;		Unchanged: 0/0
 12614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12615 ;;      Params:         6       0       0       0       0       0       0       0       0
 12616 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12617 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12618 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12619 ;;Total ram usage:        6 bytes
 12620 ;; Hardware stack levels used:    1
 12621 ;; This function calls:
 12622 ;;		Nothing
 12623 ;; This function is called by:
 12624 ;;		_f_open
 12625 ;;		_f_sync
 12626 ;; This function uses a non-reentrant model
 12627 ;;
 12628                           
 12629                           	psect	text38
 12630  005CDC                     __ptext38:
 12631                           	opt callstack 0
 12632  005CDC                     _st_clust:
 12633                           	opt callstack 28
 12634                           
 12635                           ;ff.c: 1253:  BYTE* dir,;ff.c: 1254:  DWORD cl;ff.c: 1256: {;ff.c: 1257:  *(WORD*)(BYTE*
      +                          )(dir + 26)=(WORD)(cl);
 12636                           
 12637                           ;incstack = 0
 12638  005CDC  EE20 F01A          	lfsr	2,26
 12639  005CE0  5001               	movf	st_clust@dir,w,c
 12640  005CE2  26D9               	addwf	fsr2l,f,c
 12641  005CE4  5002               	movf	st_clust@dir+1,w,c
 12642  005CE6  22DA               	addwfc	fsr2h,f,c
 12643  005CE8  C003  FFDE         	movff	st_clust@cl,postinc2
 12644  005CEC  C004  FFDD         	movff	st_clust@cl+1,postdec2
 12645                           
 12646                           ;ff.c: 1258:  *(WORD*)(BYTE*)(dir + 20)=(WORD)(cl >> 16);
 12647  005CF0  EE20 F014          	lfsr	2,20
 12648  005CF4  5001               	movf	st_clust@dir,w,c
 12649  005CF6  26D9               	addwf	fsr2l,f,c
 12650  005CF8  5002               	movf	st_clust@dir+1,w,c
 12651  005CFA  22DA               	addwfc	fsr2h,f,c
 12652  005CFC  C005  FFDE         	movff	st_clust@cl+2,postinc2
 12653  005D00  C006  FFDD         	movff	st_clust@cl+3,postdec2
 12654  005D04  0012               	return		;funcret
 12655  005D06                     __end_of_st_clust:
 12656                           	opt callstack 0
 12657                           
 12658 ;; *************** function _move_window *****************
 12659 ;; Defined at:
 12660 ;;		line 729 in file "ff.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  fs              2   47[COMRAM] PTR struct .
 12663 ;;		 -> FatFs(558), NULL(0), 
 12664 ;;  sector          4   49[COMRAM] unsigned long 
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;  res             1   57[COMRAM] enum E93
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  1    wreg      enum E93
 12669 ;; Registers used:
 12670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12676 ;;      Params:         6       0       0       0       0       0       0       0       0
 12677 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12678 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12679 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12680 ;;Total ram usage:       11 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; Hardware stack levels required when called:    7
 12683 ;; This function calls:
 12684 ;;		_disk_read
 12685 ;;		_sync_window
 12686 ;; This function is called by:
 12687 ;;		_get_fat
 12688 ;;		_put_fat
 12689 ;;		_dir_alloc
 12690 ;;		_dir_find
 12691 ;;		_dir_register
 12692 ;;		_check_fs
 12693 ;;		_find_volume
 12694 ;;		_f_open
 12695 ;;		_f_write
 12696 ;;		_f_sync
 12697 ;;		_f_read
 12698 ;; This function uses a non-reentrant model
 12699 ;;
 12700                           
 12701                           	psect	text39
 12702  005692                     __ptext39:
 12703                           	opt callstack 0
 12704  005692                     _move_window:
 12705                           	opt callstack 21
 12706                           
 12707                           ;ff.c: 730:  FATFS* fs,;ff.c: 731:  DWORD sector;ff.c: 733: {;ff.c: 734:  FRESULT res = 
      +                          FR_OK;
 12708                           
 12709                           ;incstack = 0
 12710  005692  0E00               	movlw	0
 12711  005694  6E3A               	movwf	move_window@res,c
 12712                           
 12713                           ;ff.c: 737:  if (sector != fs->winsect) {
 12714  005696  EE20 F02A          	lfsr	2,42
 12715  00569A  5030               	movf	move_window@fs,w,c
 12716  00569C  26D9               	addwf	fsr2l,f,c
 12717  00569E  5031               	movf	move_window@fs+1,w,c
 12718  0056A0  22DA               	addwfc	fsr2h,f,c
 12719  0056A2  5032               	movf	move_window@sector,w,c
 12720  0056A4  18DE               	xorwf	postinc2,w,c
 12721  0056A6  E10A               	bnz	u5560
 12722  0056A8  5033               	movf	move_window@sector+1,w,c
 12723  0056AA  18DE               	xorwf	postinc2,w,c
 12724  0056AC  E107               	bnz	u5560
 12725  0056AE  5034               	movf	move_window@sector+2,w,c
 12726  0056B0  18DE               	xorwf	postinc2,w,c
 12727  0056B2  E104               	bnz	u5560
 12728  0056B4  5035               	movf	move_window@sector+3,w,c
 12729  0056B6  18DE               	xorwf	postinc2,w,c
 12730  0056B8  B4D8               	btfsc	status,2,c
 12731  0056BA  D03C               	goto	l4707
 12732  0056BC                     u5560:
 12733                           
 12734                           ;ff.c: 739:   res = sync_window(fs);
 12735  0056BC  C030  F01B         	movff	move_window@fs,sync_window@fs
 12736  0056C0  C031  F01C         	movff	move_window@fs+1,sync_window@fs+1
 12737  0056C4  EC82  F022         	call	_sync_window	;wreg free
 12738  0056C8  6E3A               	movwf	move_window@res,c
 12739                           
 12740                           ;ff.c: 741:   if (res == FR_OK) {
 12741  0056CA  503A               	movf	move_window@res,w,c
 12742  0056CC  A4D8               	btfss	status,2,c
 12743  0056CE  D032               	goto	l4707
 12744                           
 12745                           ;ff.c: 742:    if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 12746  0056D0  0E2E               	movlw	46
 12747  0056D2  2430               	addwf	move_window@fs,w,c
 12748  0056D4  6E11               	movwf	disk_read@buff,c
 12749  0056D6  0E00               	movlw	0
 12750  0056D8  2031               	addwfc	move_window@fs+1,w,c
 12751  0056DA  6E12               	movwf	disk_read@buff+1,c
 12752  0056DC  C032  F013         	movff	move_window@sector,disk_read@sector
 12753  0056E0  C033  F014         	movff	move_window@sector+1,disk_read@sector+1
 12754  0056E4  C034  F015         	movff	move_window@sector+2,disk_read@sector+2
 12755  0056E8  C035  F016         	movff	move_window@sector+3,disk_read@sector+3
 12756  0056EC  0E00               	movlw	0
 12757  0056EE  6E18               	movwf	disk_read@count+1,c
 12758  0056F0  0E01               	movlw	1
 12759  0056F2  6E17               	movwf	disk_read@count,c
 12760  0056F4  EE20 F001          	lfsr	2,1
 12761  0056F8  5030               	movf	move_window@fs,w,c
 12762  0056FA  26D9               	addwf	fsr2l,f,c
 12763  0056FC  5031               	movf	move_window@fs+1,w,c
 12764  0056FE  22DA               	addwfc	fsr2h,f,c
 12765  005700  50DF               	movf	indf2,w,c
 12766  005702  EC0B  F029         	call	_disk_read
 12767  005706  0900               	iorlw	0
 12768  005708  B4D8               	btfsc	status,2,c
 12769  00570A  D006               	goto	l4705
 12770                           
 12771                           ;ff.c: 743:     sector = 0xFFFFFFFF;
 12772  00570C  6832               	setf	move_window@sector,c
 12773  00570E  6833               	setf	move_window@sector+1,c
 12774  005710  6834               	setf	move_window@sector+2,c
 12775  005712  6835               	setf	move_window@sector+3,c
 12776                           
 12777                           ;ff.c: 744:     res = FR_DISK_ERR;
 12778  005714  0E01               	movlw	1
 12779  005716  6E3A               	movwf	move_window@res,c
 12780  005718                     l4705:
 12781                           
 12782                           ;ff.c: 746:    fs->winsect = sector;
 12783  005718  EE20 F02A          	lfsr	2,42
 12784  00571C  5030               	movf	move_window@fs,w,c
 12785  00571E  26D9               	addwf	fsr2l,f,c
 12786  005720  5031               	movf	move_window@fs+1,w,c
 12787  005722  22DA               	addwfc	fsr2h,f,c
 12788  005724  C032  FFDE         	movff	move_window@sector,postinc2
 12789  005728  C033  FFDE         	movff	move_window@sector+1,postinc2
 12790  00572C  C034  FFDE         	movff	move_window@sector+2,postinc2
 12791  005730  C035  FFDE         	movff	move_window@sector+3,postinc2
 12792  005734                     l4707:
 12793                           
 12794                           ;ff.c: 749:  return res;
 12795  005734  503A               	movf	move_window@res,w,c
 12796  005736  0012               	return		;funcret
 12797  005738                     __end_of_move_window:
 12798                           	opt callstack 0
 12799                           
 12800 ;; *************** function _sync_window *****************
 12801 ;; Defined at:
 12802 ;;		line 700 in file "ff.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;  fs              2   26[COMRAM] PTR struct .
 12805 ;;		 -> FatFs(558), NULL(0), 
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;  wsect           4   43[COMRAM] unsigned long 
 12808 ;;  nf              2   41[COMRAM] unsigned short 
 12809 ;;  res             1   40[COMRAM] enum E93
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  1    wreg      enum E93
 12812 ;; Registers used:
 12813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12819 ;;      Params:         2       0       0       0       0       0       0       0       0
 12820 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12821 ;;      Temps:         12       0       0       0       0       0       0       0       0
 12822 ;;      Totals:        21       0       0       0       0       0       0       0       0
 12823 ;;Total ram usage:       21 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; Hardware stack levels required when called:    6
 12826 ;; This function calls:
 12827 ;;		_disk_write
 12828 ;; This function is called by:
 12829 ;;		_move_window
 12830 ;;		_sync_fs
 12831 ;;		_dir_next
 12832 ;;		_f_write
 12833 ;; This function uses a non-reentrant model
 12834 ;;
 12835                           
 12836                           	psect	text40
 12837  004504                     __ptext40:
 12838                           	opt callstack 0
 12839  004504                     _sync_window:
 12840                           	opt callstack 22
 12841                           
 12842                           ;ff.c: 701:  FATFS* fs;ff.c: 703: {;ff.c: 704:  DWORD wsect;;ff.c: 705:  UINT nf;;ff.c: 
      +                          706:  FRESULT res = FR_OK;
 12843                           
 12844                           ;incstack = 0
 12845  004504  0E00               	movlw	0
 12846  004506  6E29               	movwf	sync_window@res,c
 12847                           
 12848                           ;ff.c: 709:  if (fs->wflag) {
 12849  004508  EE20 F004          	lfsr	2,4
 12850  00450C  501B               	movf	sync_window@fs,w,c
 12851  00450E  26D9               	addwf	fsr2l,f,c
 12852  004510  501C               	movf	sync_window@fs+1,w,c
 12853  004512  22DA               	addwfc	fsr2h,f,c
 12854  004514  50DF               	movf	indf2,w,c
 12855  004516  B4D8               	btfsc	status,2,c
 12856  004518  D09F               	goto	l4687
 12857                           
 12858                           ;ff.c: 710:   wsect = fs->winsect;
 12859  00451A  EE20 F02A          	lfsr	2,42
 12860  00451E  501B               	movf	sync_window@fs,w,c
 12861  004520  26D9               	addwf	fsr2l,f,c
 12862  004522  501C               	movf	sync_window@fs+1,w,c
 12863  004524  22DA               	addwfc	fsr2h,f,c
 12864  004526  CFDE F02C          	movff	postinc2,sync_window@wsect
 12865  00452A  CFDE F02D          	movff	postinc2,sync_window@wsect+1
 12866  00452E  CFDE F02E          	movff	postinc2,sync_window@wsect+2
 12867  004532  CFDE F02F          	movff	postinc2,sync_window@wsect+3
 12868                           
 12869                           ;ff.c: 711:   if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 12870  004536  0E2E               	movlw	46
 12871  004538  241B               	addwf	sync_window@fs,w,c
 12872  00453A  6E11               	movwf	disk_write@buff,c
 12873  00453C  0E00               	movlw	0
 12874  00453E  201C               	addwfc	sync_window@fs+1,w,c
 12875  004540  6E12               	movwf	disk_write@buff+1,c
 12876  004542  C02C  F013         	movff	sync_window@wsect,disk_write@sector
 12877  004546  C02D  F014         	movff	sync_window@wsect+1,disk_write@sector+1
 12878  00454A  C02E  F015         	movff	sync_window@wsect+2,disk_write@sector+2
 12879  00454E  C02F  F016         	movff	sync_window@wsect+3,disk_write@sector+3
 12880  004552  0E00               	movlw	0
 12881  004554  6E18               	movwf	disk_write@count+1,c
 12882  004556  0E01               	movlw	1
 12883  004558  6E17               	movwf	disk_write@count,c
 12884  00455A  EE20 F001          	lfsr	2,1
 12885  00455E  501B               	movf	sync_window@fs,w,c
 12886  004560  26D9               	addwf	fsr2l,f,c
 12887  004562  501C               	movf	sync_window@fs+1,w,c
 12888  004564  22DA               	addwfc	fsr2h,f,c
 12889  004566  50DF               	movf	indf2,w,c
 12890  004568  EC45  F026         	call	_disk_write
 12891  00456C  0900               	iorlw	0
 12892  00456E  B4D8               	btfsc	status,2,c
 12893  004570  D003               	goto	l4669
 12894                           
 12895                           ;ff.c: 712:    res = FR_DISK_ERR;
 12896  004572  0E01               	movlw	1
 12897  004574  6E29               	movwf	sync_window@res,c
 12898                           
 12899                           ;ff.c: 713:   } else {
 12900  004576  D070               	goto	l4687
 12901  004578                     l4669:
 12902                           
 12903                           ;ff.c: 714:    fs->wflag = 0;
 12904  004578  EE20 F004          	lfsr	2,4
 12905  00457C  501B               	movf	sync_window@fs,w,c
 12906  00457E  26D9               	addwf	fsr2l,f,c
 12907  004580  501C               	movf	sync_window@fs+1,w,c
 12908  004582  22DA               	addwfc	fsr2h,f,c
 12909  004584  0E00               	movlw	0
 12910  004586  6EDF               	movwf	indf2,c
 12911                           
 12912                           ;ff.c: 715:    if (wsect - fs->fatbase < fs->fsize) {
 12913  004588  EE20 F016          	lfsr	2,22
 12914  00458C  501B               	movf	sync_window@fs,w,c
 12915  00458E  26D9               	addwf	fsr2l,f,c
 12916  004590  501C               	movf	sync_window@fs+1,w,c
 12917  004592  22DA               	addwfc	fsr2h,f,c
 12918  004594  EE10 F01E          	lfsr	1,30
 12919  004598  501B               	movf	sync_window@fs,w,c
 12920  00459A  26E1               	addwf	fsr1l,f,c
 12921  00459C  501C               	movf	sync_window@fs+1,w,c
 12922  00459E  22E2               	addwfc	fsr1h,f,c
 12923  0045A0  CFE6 F021          	movff	postinc1,??_sync_window+4
 12924  0045A4  CFE6 F022          	movff	postinc1,??_sync_window+5
 12925  0045A8  CFE6 F023          	movff	postinc1,??_sync_window+6
 12926  0045AC  CFE6 F024          	movff	postinc1,??_sync_window+7
 12927  0045B0  5021               	movf	??_sync_window+4,w,c
 12928  0045B2  5C2C               	subwf	sync_window@wsect,w,c
 12929  0045B4  6E25               	movwf	(??_sync_window+8)& (0+255),c
 12930  0045B6  5022               	movf	??_sync_window+5,w,c
 12931  0045B8  582D               	subwfb	sync_window@wsect+1,w,c
 12932  0045BA  6E26               	movwf	(??_sync_window+9)& (0+255),c
 12933  0045BC  5023               	movf	??_sync_window+6,w,c
 12934  0045BE  582E               	subwfb	sync_window@wsect+2,w,c
 12935  0045C0  6E27               	movwf	(??_sync_window+10)& (0+255),c
 12936  0045C2  5024               	movf	??_sync_window+7,w,c
 12937  0045C4  582F               	subwfb	sync_window@wsect+3,w,c
 12938  0045C6  6E28               	movwf	(??_sync_window+11)& (0+255),c
 12939  0045C8  50DE               	movf	postinc2,w,c
 12940  0045CA  5C25               	subwf	??_sync_window+8,w,c
 12941  0045CC  50DE               	movf	postinc2,w,c
 12942  0045CE  5826               	subwfb	??_sync_window+9,w,c
 12943  0045D0  50DE               	movf	postinc2,w,c
 12944  0045D2  5827               	subwfb	??_sync_window+10,w,c
 12945  0045D4  50DE               	movf	postinc2,w,c
 12946  0045D6  5828               	subwfb	??_sync_window+11,w,c
 12947  0045D8  B0D8               	btfsc	status,0,c
 12948  0045DA  D03E               	goto	l4687
 12949                           
 12950                           ;ff.c: 716:     for (nf = fs->n_fats; nf >= 2; nf--) {
 12951  0045DC  EE20 F003          	lfsr	2,3
 12952  0045E0  501B               	movf	sync_window@fs,w,c
 12953  0045E2  26D9               	addwf	fsr2l,f,c
 12954  0045E4  501C               	movf	sync_window@fs+1,w,c
 12955  0045E6  22DA               	addwfc	fsr2h,f,c
 12956  0045E8  50DF               	movf	indf2,w,c
 12957  0045EA  6E1D               	movwf	??_sync_window& (0+255),c
 12958  0045EC  501D               	movf	??_sync_window,w,c
 12959  0045EE  6E2A               	movwf	sync_window@nf,c
 12960  0045F0  6A2B               	clrf	sync_window@nf+1,c
 12961  0045F2                     l4675:
 12962  0045F2  502B               	movf	sync_window@nf+1,w,c
 12963  0045F4  E104               	bnz	l4679
 12964  0045F6  0E02               	movlw	2
 12965  0045F8  5C2A               	subwf	sync_window@nf,w,c
 12966  0045FA  A0D8               	btfss	status,0,c
 12967  0045FC  D02D               	goto	l4687
 12968  0045FE                     l4679:
 12969                           
 12970                           ;ff.c: 717:      wsect += fs->fsize;
 12971  0045FE  EE20 F016          	lfsr	2,22
 12972  004602  501B               	movf	sync_window@fs,w,c
 12973  004604  26D9               	addwf	fsr2l,f,c
 12974  004606  501C               	movf	sync_window@fs+1,w,c
 12975  004608  22DA               	addwfc	fsr2h,f,c
 12976  00460A  50DE               	movf	postinc2,w,c
 12977  00460C  262C               	addwf	sync_window@wsect,f,c
 12978  00460E  50DE               	movf	postinc2,w,c
 12979  004610  222D               	addwfc	sync_window@wsect+1,f,c
 12980  004612  50DE               	movf	postinc2,w,c
 12981  004614  222E               	addwfc	sync_window@wsect+2,f,c
 12982  004616  50DD               	movf	postdec2,w,c
 12983  004618  222F               	addwfc	sync_window@wsect+3,f,c
 12984                           
 12985                           ;ff.c: 718:      disk_write(fs->drv, fs->win, wsect, 1);
 12986  00461A  0E2E               	movlw	46
 12987  00461C  241B               	addwf	sync_window@fs,w,c
 12988  00461E  6E11               	movwf	disk_write@buff,c
 12989  004620  0E00               	movlw	0
 12990  004622  201C               	addwfc	sync_window@fs+1,w,c
 12991  004624  6E12               	movwf	disk_write@buff+1,c
 12992  004626  C02C  F013         	movff	sync_window@wsect,disk_write@sector
 12993  00462A  C02D  F014         	movff	sync_window@wsect+1,disk_write@sector+1
 12994  00462E  C02E  F015         	movff	sync_window@wsect+2,disk_write@sector+2
 12995  004632  C02F  F016         	movff	sync_window@wsect+3,disk_write@sector+3
 12996  004636  0E00               	movlw	0
 12997  004638  6E18               	movwf	disk_write@count+1,c
 12998  00463A  0E01               	movlw	1
 12999  00463C  6E17               	movwf	disk_write@count,c
 13000  00463E  EE20 F001          	lfsr	2,1
 13001  004642  501B               	movf	sync_window@fs,w,c
 13002  004644  26D9               	addwf	fsr2l,f,c
 13003  004646  501C               	movf	sync_window@fs+1,w,c
 13004  004648  22DA               	addwfc	fsr2h,f,c
 13005  00464A  50DF               	movf	indf2,w,c
 13006  00464C  EC45  F026         	call	_disk_write
 13007                           
 13008                           ;ff.c: 719:     }
 13009  004650  062A               	decf	sync_window@nf,f,c
 13010  004652  A0D8               	btfss	status,0,c
 13011  004654  062B               	decf	sync_window@nf+1,f,c
 13012  004656  D7CD               	goto	l4675
 13013  004658                     l4687:
 13014                           
 13015                           ;ff.c: 723:  return res;
 13016  004658  5029               	movf	sync_window@res,w,c
 13017  00465A  0012               	return		;funcret
 13018  00465C                     __end_of_sync_window:
 13019                           	opt callstack 0
 13020                           
 13021 ;; *************** function _disk_write *****************
 13022 ;; Defined at:
 13023 ;;		line 405 in file "diskio.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;  pdrv            1    wreg     unsigned char 
 13026 ;;  buff            2   16[COMRAM] PTR const unsigned char 
 13027 ;;		 -> FatFs.win(512), FatFs(558), RAM(2047), NULL(0), 
 13028 ;;  sector          4   18[COMRAM] unsigned long 
 13029 ;;  count           2   22[COMRAM] unsigned short 
 13030 ;; Auto vars:     Size  Location     Type
 13031 ;;  pdrv            1   25[COMRAM] unsigned char 
 13032 ;; Return value:  Size  Location     Type
 13033 ;;                  1    wreg      enum E43
 13034 ;; Registers used:
 13035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13036 ;; Tracked objects:
 13037 ;;		On entry : 0/0
 13038 ;;		On exit  : 0/0
 13039 ;;		Unchanged: 0/0
 13040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13041 ;;      Params:         8       0       0       0       0       0       0       0       0
 13042 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13043 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13044 ;;      Totals:        10       0       0       0       0       0       0       0       0
 13045 ;;Total ram usage:       10 bytes
 13046 ;; Hardware stack levels used:    1
 13047 ;; Hardware stack levels required when called:    5
 13048 ;; This function calls:
 13049 ;;		_deselect
 13050 ;;		_send_cmd
 13051 ;;		_xmit_datablock
 13052 ;; This function is called by:
 13053 ;;		_sync_window
 13054 ;;		_sync_fs
 13055 ;;		_f_write
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059                           	psect	text41
 13060  004C8A                     __ptext41:
 13061                           	opt callstack 0
 13062  004C8A                     _disk_write:
 13063                           	opt callstack 22
 13064                           
 13065                           ;incstack = 0
 13066                           ;disk_write@pdrv stored from wreg
 13067  004C8A  6E1A               	movwf	disk_write@pdrv,c
 13068                           
 13069                           ;diskio.c: 406:  BYTE pdrv,;diskio.c: 407:  const BYTE *buff,;diskio.c: 408:  DWORD sect
      +                          or,;diskio.c: 409:  UINT count;diskio.c: 411: {;diskio.c: 412:  if (pdrv || !count) retu
      +                          rn RES_PARERR;
 13070  004C8C  501A               	movf	disk_write@pdrv,w,c
 13071  004C8E  A4D8               	btfss	status,2,c
 13072  004C90  D004               	goto	u5250
 13073  004C92  5017               	movf	disk_write@count,w,c
 13074  004C94  1018               	iorwf	disk_write@count+1,w,c
 13075  004C96  A4D8               	btfss	status,2,c
 13076  004C98  D002               	goto	l126
 13077  004C9A                     u5250:
 13078  004C9A  0E04               	movlw	4
 13079  004C9C  0012               	return	
 13080  004C9E                     l126:
 13081                           
 13082                           ;diskio.c: 413:  if (Stat & 0x01) return RES_NOTRDY;
 13083  004C9E  0100               	movlb	0	; () banked
 13084  004CA0  A1E4               	btfss	_Stat& (0+255),0,b
 13085  004CA2  D002               	goto	l130
 13086                           
 13087                           ; BSR set to: 0
 13088  004CA4  0E03               	movlw	3
 13089  004CA6  0012               	return	
 13090  004CA8                     l130:
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;diskio.c: 414:  if (Stat & 0x04) return RES_WRPRT;
 13094  004CA8  A5E4               	btfss	_Stat& (0+255),2,b
 13095  004CAA  D002               	goto	l131
 13096                           
 13097                           ; BSR set to: 0
 13098  004CAC  0E02               	movlw	2
 13099  004CAE  0012               	return	
 13100  004CB0                     l131:
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;diskio.c: 416:  if (!(CardType & 0x08)) sector *= 512;
 13104  004CB0  B7ED               	btfsc	_CardType& (0+255),3,b
 13105  004CB2  D008               	goto	l132
 13106                           
 13107                           ; BSR set to: 0
 13108  004CB4  0E09               	movlw	9
 13109  004CB6                     u5295:
 13110  004CB6  90D8               	bcf	status,0,c
 13111  004CB8  3613               	rlcf	disk_write@sector,f,c
 13112  004CBA  3614               	rlcf	disk_write@sector+1,f,c
 13113  004CBC  3615               	rlcf	disk_write@sector+2,f,c
 13114  004CBE  3616               	rlcf	disk_write@sector+3,f,c
 13115  004CC0  2EE8               	decfsz	wreg,f,c
 13116  004CC2  D7F9               	goto	u5295
 13117  004CC4                     l132:
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;diskio.c: 418:  if (count == 1) {
 13121  004CC4  0417               	decf	disk_write@count,w,c
 13122  004CC6  1018               	iorwf	disk_write@count+1,w,c
 13123  004CC8  A4D8               	btfss	status,2,c
 13124  004CCA  D01D               	goto	l4601
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;diskio.c: 419:   if ((send_cmd((24), sector) == 0)
 13128  004CCC  C013  F00B         	movff	disk_write@sector,send_cmd@arg
 13129  004CD0  C014  F00C         	movff	disk_write@sector+1,send_cmd@arg+1
 13130  004CD4  C015  F00D         	movff	disk_write@sector+2,send_cmd@arg+2
 13131  004CD8  C016  F00E         	movff	disk_write@sector+3,send_cmd@arg+3
 13132  004CDC  0E18               	movlw	24
 13133  004CDE  ECFC  F02D         	call	_send_cmd
 13134  004CE2  0900               	iorlw	0
 13135  004CE4  A4D8               	btfss	status,2,c
 13136  004CE6  D04F               	goto	l4615
 13137  004CE8  C011  F004         	movff	disk_write@buff,xmit_datablock@buff
 13138  004CEC  C012  F005         	movff	disk_write@buff+1,xmit_datablock@buff+1
 13139  004CF0  0EFE               	movlw	254
 13140  004CF2  6E06               	movwf	xmit_datablock@token,c
 13141  004CF4  EC4F  F02D         	call	_xmit_datablock	;wreg free
 13142  004CF8  0900               	iorlw	0
 13143  004CFA  B4D8               	btfsc	status,2,c
 13144  004CFC  D044               	goto	l4615
 13145                           
 13146                           ;diskio.c: 421:    count = 0;
 13147  004CFE  0E00               	movlw	0
 13148  004D00  6E18               	movwf	disk_write@count+1,c
 13149  004D02  0E00               	movlw	0
 13150  004D04  D03F               	goto	L17
 13151  004D06                     l4601:
 13152                           
 13153                           ; BSR set to: 0
 13154                           ;diskio.c: 424:   if (CardType & (0x02|0x04)) send_cmd((0x80+23), count);
 13155  004D06  C0ED  F019         	movff	_CardType,??_disk_write
 13156  004D0A  0E06               	movlw	6
 13157  004D0C  1619               	andwf	??_disk_write,f,c
 13158  004D0E  B4D8               	btfsc	status,2,c
 13159  004D10  D009               	goto	l136
 13160                           
 13161                           ; BSR set to: 0
 13162  004D12  C017  F00B         	movff	disk_write@count,send_cmd@arg
 13163  004D16  C018  F00C         	movff	disk_write@count+1,send_cmd@arg+1
 13164  004D1A  6A0D               	clrf	send_cmd@arg+2,c
 13165  004D1C  6A0E               	clrf	send_cmd@arg+3,c
 13166  004D1E  0E97               	movlw	151
 13167  004D20  ECFC  F02D         	call	_send_cmd
 13168  004D24                     l136:
 13169                           
 13170                           ;diskio.c: 425:   if (send_cmd((25), sector) == 0) {
 13171  004D24  C013  F00B         	movff	disk_write@sector,send_cmd@arg
 13172  004D28  C014  F00C         	movff	disk_write@sector+1,send_cmd@arg+1
 13173  004D2C  C015  F00D         	movff	disk_write@sector+2,send_cmd@arg+2
 13174  004D30  C016  F00E         	movff	disk_write@sector+3,send_cmd@arg+3
 13175  004D34  0E19               	movlw	25
 13176  004D36  ECFC  F02D         	call	_send_cmd
 13177  004D3A  0900               	iorlw	0
 13178  004D3C  A4D8               	btfss	status,2,c
 13179  004D3E  D023               	goto	l4615
 13180  004D40                     u5340:
 13181                           
 13182                           ;diskio.c: 427:     if (!xmit_datablock(buff, 0xFC)) break;
 13183  004D40  C011  F004         	movff	disk_write@buff,xmit_datablock@buff
 13184  004D44  C012  F005         	movff	disk_write@buff+1,xmit_datablock@buff+1
 13185  004D48  0EFC               	movlw	252
 13186  004D4A  6E06               	movwf	xmit_datablock@token,c
 13187  004D4C  EC4F  F02D         	call	_xmit_datablock	;wreg free
 13188  004D50  0900               	iorlw	0
 13189  004D52  B4D8               	btfsc	status,2,c
 13190  004D54  D009               	goto	u5360
 13191                           
 13192                           ;diskio.c: 428:     buff += 512;
 13193  004D56  0E02               	movlw	2
 13194  004D58  2612               	addwf	disk_write@buff+1,f,c
 13195                           
 13196                           ;diskio.c: 429:    } while (--count);
 13197  004D5A  0617               	decf	disk_write@count,f,c
 13198  004D5C  A0D8               	btfss	status,0,c
 13199  004D5E  0618               	decf	disk_write@count+1,f,c
 13200  004D60  5017               	movf	disk_write@count,w,c
 13201  004D62  1018               	iorwf	disk_write@count+1,w,c
 13202  004D64  A4D8               	btfss	status,2,c
 13203  004D66  D7EC               	goto	u5340
 13204  004D68                     u5360:
 13205                           
 13206                           ;diskio.c: 430:    if (!xmit_datablock(0, 0xFD))
 13207  004D68  0E00               	movlw	0
 13208  004D6A  6E04               	movwf	xmit_datablock@buff,c
 13209  004D6C  0E00               	movlw	0
 13210  004D6E  6E05               	movwf	xmit_datablock@buff+1,c
 13211  004D70  0EFD               	movlw	253
 13212  004D72  6E06               	movwf	xmit_datablock@token,c
 13213  004D74  EC4F  F02D         	call	_xmit_datablock	;wreg free
 13214  004D78  0900               	iorlw	0
 13215  004D7A  A4D8               	btfss	status,2,c
 13216  004D7C  D004               	goto	l4615
 13217                           
 13218                           ;diskio.c: 431:     count = 1;
 13219  004D7E  0E00               	movlw	0
 13220  004D80  6E18               	movwf	disk_write@count+1,c
 13221  004D82  0E01               	movlw	1
 13222  004D84                     L17:
 13223  004D84  6E17               	movwf	disk_write@count,c
 13224  004D86                     l4615:
 13225                           
 13226                           ;diskio.c: 434:  deselect();
 13227  004D86  EC05  F02F         	call	_deselect	;wreg free
 13228                           
 13229                           ;diskio.c: 436:  return count ? RES_ERROR : RES_OK;
 13230  004D8A  5017               	movf	disk_write@count,w,c
 13231  004D8C  1018               	iorwf	disk_write@count+1,w,c
 13232  004D8E  B4D8               	btfsc	status,2,c
 13233  004D90  D002               	goto	u5380
 13234  004D92  0E01               	movlw	1
 13235  004D94  0012               	return	
 13236  004D96                     u5380:
 13237  004D96  0E00               	movlw	0
 13238  004D98  0012               	return		;funcret
 13239  004D9A                     __end_of_disk_write:
 13240                           	opt callstack 0
 13241                           
 13242 ;; *************** function _xmit_datablock *****************
 13243 ;; Defined at:
 13244 ;;		line 156 in file "diskio.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;  buff            2    3[COMRAM] PTR const unsigned char 
 13247 ;;		 -> FatFs.win(512), FatFs(558), RAM(2047), NULL(0), 
 13248 ;;  token           1    5[COMRAM] unsigned char 
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;  i               2    6[COMRAM] unsigned short 
 13251 ;;  resp            1    8[COMRAM] unsigned char 
 13252 ;; Return value:  Size  Location     Type
 13253 ;;                  1    wreg      unsigned char 
 13254 ;; Registers used:
 13255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13256 ;; Tracked objects:
 13257 ;;		On entry : 0/0
 13258 ;;		On exit  : 0/0
 13259 ;;		Unchanged: 0/0
 13260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13261 ;;      Params:         3       0       0       0       0       0       0       0       0
 13262 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13263 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13264 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13265 ;;Total ram usage:        6 bytes
 13266 ;; Hardware stack levels used:    1
 13267 ;; Hardware stack levels required when called:    2
 13268 ;; This function calls:
 13269 ;;		_SPI1_Exchange8bit
 13270 ;;		_wait_ready
 13271 ;; This function is called by:
 13272 ;;		_disk_write
 13273 ;; This function uses a non-reentrant model
 13274 ;;
 13275                           
 13276                           	psect	text42
 13277  005A9E                     __ptext42:
 13278                           	opt callstack 0
 13279  005A9E                     _xmit_datablock:
 13280                           	opt callstack 24
 13281                           
 13282                           ;diskio.c: 157:  const BYTE *buff,;diskio.c: 158:  BYTE token;diskio.c: 160: {;diskio.c:
      +                           161:  BYTE resp;;diskio.c: 162:  WORD i;;diskio.c: 165:  if (!wait_ready()) return 0;
 13283                           
 13284                           ;incstack = 0
 13285  005A9E  EC1D  F02E         	call	_wait_ready	;wreg free
 13286  005AA2  0900               	iorlw	0
 13287  005AA4  A4D8               	btfss	status,2,c
 13288  005AA6  D002               	goto	l4507
 13289  005AA8                     u5140:
 13290  005AA8  0E00               	movlw	0
 13291  005AAA  0012               	return	
 13292  005AAC                     l4507:
 13293                           
 13294                           ;diskio.c: 167:  SPI1_Exchange8bit(token);
 13295  005AAC  5006               	movf	xmit_datablock@token,w,c
 13296  005AAE  ECDA  F02E         	call	_SPI1_Exchange8bit
 13297                           
 13298                           ;diskio.c: 168:  if (token != 0xFD) {
 13299  005AB2  0EFD               	movlw	253
 13300  005AB4  1806               	xorwf	xmit_datablock@token,w,c
 13301  005AB6  B4D8               	btfsc	status,2,c
 13302  005AB8  D023               	goto	l4527
 13303                           
 13304                           ;diskio.c: 169:   i = 512;
 13305  005ABA  0E02               	movlw	2
 13306  005ABC  6E08               	movwf	xmit_datablock@i+1,c
 13307  005ABE  0E00               	movlw	0
 13308  005AC0  6E07               	movwf	xmit_datablock@i,c
 13309  005AC2                     l4513:
 13310                           
 13311                           ;diskio.c: 171:    SPI1_Exchange8bit(*buff++);
 13312  005AC2  C004  FFD9         	movff	xmit_datablock@buff,fsr2l
 13313  005AC6  C005  FFDA         	movff	xmit_datablock@buff+1,fsr2h
 13314  005ACA  50DF               	movf	indf2,w,c
 13315  005ACC  ECDA  F02E         	call	_SPI1_Exchange8bit
 13316  005AD0  4A04               	infsnz	xmit_datablock@buff,f,c
 13317  005AD2  2A05               	incf	xmit_datablock@buff+1,f,c
 13318  005AD4  0607               	decf	xmit_datablock@i,f,c
 13319  005AD6  A0D8               	btfss	status,0,c
 13320  005AD8  0608               	decf	xmit_datablock@i+1,f,c
 13321  005ADA  5007               	movf	xmit_datablock@i,w,c
 13322  005ADC  1008               	iorwf	xmit_datablock@i+1,w,c
 13323  005ADE  A4D8               	btfss	status,2,c
 13324  005AE0  D7F0               	goto	l4513
 13325                           
 13326                           ;diskio.c: 173:   SPI1_Exchange8bit(0xFF);
 13327  005AE2  0EFF               	movlw	255
 13328  005AE4  ECDA  F02E         	call	_SPI1_Exchange8bit
 13329                           
 13330                           ;diskio.c: 174:   SPI1_Exchange8bit(0xFF);
 13331  005AE8  0EFF               	movlw	255
 13332  005AEA  ECDA  F02E         	call	_SPI1_Exchange8bit
 13333                           
 13334                           ;diskio.c: 175:   resp = SPI1_Exchange8bit(0xFF);
 13335  005AEE  0EFF               	movlw	255
 13336  005AF0  ECDA  F02E         	call	_SPI1_Exchange8bit
 13337  005AF4  6E09               	movwf	xmit_datablock@resp,c
 13338                           
 13339                           ;diskio.c: 176:   if ((resp & 0x1F) != 0x05)
 13340  005AF6  5009               	movf	xmit_datablock@resp,w,c
 13341  005AF8  0B1F               	andlw	31
 13342  005AFA  0A05               	xorlw	5
 13343  005AFC  A4D8               	btfss	status,2,c
 13344  005AFE  D7D4               	goto	u5140
 13345  005B00                     l4527:
 13346                           
 13347                           ;diskio.c: 180:  return 1;
 13348  005B00  0E01               	movlw	1
 13349  005B02  0012               	return		;funcret
 13350  005B04                     __end_of_xmit_datablock:
 13351                           	opt callstack 0
 13352                           
 13353 ;; *************** function _disk_read *****************
 13354 ;; Defined at:
 13355 ;;		line 370 in file "diskio.c"
 13356 ;; Parameters:    Size  Location     Type
 13357 ;;  pdrv            1    wreg     unsigned char 
 13358 ;;  buff            2   16[COMRAM] PTR unsigned char 
 13359 ;;		 -> FatFs(558), NULL(0), 
 13360 ;;  sector          4   18[COMRAM] unsigned long 
 13361 ;;  count           2   22[COMRAM] unsigned short 
 13362 ;; Auto vars:     Size  Location     Type
 13363 ;;  pdrv            1   24[COMRAM] unsigned char 
 13364 ;;  cmd             1   27[COMRAM] unsigned char 
 13365 ;; Return value:  Size  Location     Type
 13366 ;;                  1    wreg      enum E43
 13367 ;; Registers used:
 13368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13374 ;;      Params:         8       0       0       0       0       0       0       0       0
 13375 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13376 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13377 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13378 ;;Total ram usage:       12 bytes
 13379 ;; Hardware stack levels used:    1
 13380 ;; Hardware stack levels required when called:    5
 13381 ;; This function calls:
 13382 ;;		_deselect
 13383 ;;		_rcvr_datablock
 13384 ;;		_send_cmd
 13385 ;; This function is called by:
 13386 ;;		_move_window
 13387 ;;		_f_read
 13388 ;; This function uses a non-reentrant model
 13389 ;;
 13390                           
 13391                           	psect	text43
 13392  005216                     __ptext43:
 13393                           	opt callstack 0
 13394  005216                     _disk_read:
 13395                           	opt callstack 22
 13396                           
 13397                           ;incstack = 0
 13398                           ;disk_read@pdrv stored from wreg
 13399  005216  6E19               	movwf	disk_read@pdrv,c
 13400                           
 13401                           ;diskio.c: 371:  BYTE pdrv,;diskio.c: 372:  BYTE *buff,;diskio.c: 373:  DWORD sector,;di
      +                          skio.c: 374:  UINT count;diskio.c: 376: {;diskio.c: 377:  BYTE cmd;;diskio.c: 380:  if (
      +                          pdrv || !count) return RES_PARERR;
 13402  005218  5019               	movf	disk_read@pdrv,w,c
 13403  00521A  A4D8               	btfss	status,2,c
 13404  00521C  D004               	goto	u5410
 13405  00521E  5017               	movf	disk_read@count,w,c
 13406  005220  1018               	iorwf	disk_read@count+1,w,c
 13407  005222  A4D8               	btfss	status,2,c
 13408  005224  D002               	goto	l109
 13409  005226                     u5410:
 13410  005226  0E04               	movlw	4
 13411  005228  0012               	return	
 13412  00522A                     l109:
 13413                           
 13414                           ;diskio.c: 381:  if (Stat & 0x01) return RES_NOTRDY;
 13415  00522A  0100               	movlb	0	; () banked
 13416  00522C  A1E4               	btfss	_Stat& (0+255),0,b
 13417  00522E  D002               	goto	l113
 13418                           
 13419                           ; BSR set to: 0
 13420  005230  0E03               	movlw	3
 13421  005232  0012               	return	
 13422  005234                     l113:
 13423                           
 13424                           ; BSR set to: 0
 13425                           ;diskio.c: 383:  if (!(CardType & 0x08)) sector *= 512;
 13426  005234  B7ED               	btfsc	_CardType& (0+255),3,b
 13427  005236  D008               	goto	l114
 13428                           
 13429                           ; BSR set to: 0
 13430  005238  0E09               	movlw	9
 13431  00523A                     u5445:
 13432  00523A  90D8               	bcf	status,0,c
 13433  00523C  3613               	rlcf	disk_read@sector,f,c
 13434  00523E  3614               	rlcf	disk_read@sector+1,f,c
 13435  005240  3615               	rlcf	disk_read@sector+2,f,c
 13436  005242  3616               	rlcf	disk_read@sector+3,f,c
 13437  005244  2EE8               	decfsz	wreg,f,c
 13438  005246  D7F9               	goto	u5445
 13439  005248                     l114:
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;diskio.c: 385:  cmd = count > 1 ? (18) : (17);
 13443  005248  5018               	movf	disk_read@count+1,w,c
 13444  00524A  E108               	bnz	l4637
 13445  00524C  0E02               	movlw	2
 13446  00524E  5C17               	subwf	disk_read@count,w,c
 13447  005250  B0D8               	btfsc	status,0,c
 13448  005252  D004               	goto	l4637
 13449                           
 13450                           ; BSR set to: 0
 13451  005254  0E00               	movlw	0
 13452  005256  6E1B               	movwf	_disk_read$143+1,c
 13453  005258  0E11               	movlw	17
 13454  00525A  D003               	goto	L18
 13455  00525C                     l4637:
 13456                           
 13457                           ; BSR set to: 0
 13458  00525C  0E00               	movlw	0
 13459  00525E  6E1B               	movwf	_disk_read$143+1,c
 13460  005260  0E12               	movlw	18
 13461  005262                     L18:
 13462  005262  6E1A               	movwf	_disk_read$143,c
 13463                           
 13464                           ; BSR set to: 0
 13465  005264  C01A  F01C         	movff	_disk_read$143,disk_read@cmd
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;diskio.c: 386:  if (send_cmd(cmd, sector) == 0) {
 13469  005268  C013  F00B         	movff	disk_read@sector,send_cmd@arg
 13470  00526C  C014  F00C         	movff	disk_read@sector+1,send_cmd@arg+1
 13471  005270  C015  F00D         	movff	disk_read@sector+2,send_cmd@arg+2
 13472  005274  C016  F00E         	movff	disk_read@sector+3,send_cmd@arg+3
 13473  005278  501C               	movf	disk_read@cmd,w,c
 13474  00527A  ECFC  F02D         	call	_send_cmd
 13475  00527E  0900               	iorlw	0
 13476  005280  A4D8               	btfss	status,2,c
 13477  005282  D025               	goto	l4653
 13478  005284                     u5460:
 13479                           
 13480                           ;diskio.c: 388:    if (!rcvr_datablock(buff, 512)) break;
 13481  005284  C011  F002         	movff	disk_read@buff,rcvr_datablock@buff
 13482  005288  C012  F003         	movff	disk_read@buff+1,rcvr_datablock@buff+1
 13483  00528C  0E02               	movlw	2
 13484  00528E  6E05               	movwf	rcvr_datablock@btr+1,c
 13485  005290  0E00               	movlw	0
 13486  005292  6E04               	movwf	rcvr_datablock@btr,c
 13487  005294  ECE6  F02C         	call	_rcvr_datablock	;wreg free
 13488  005298  0900               	iorlw	0
 13489  00529A  B4D8               	btfsc	status,2,c
 13490  00529C  D009               	goto	u5480
 13491                           
 13492                           ;diskio.c: 389:    buff += 512;
 13493  00529E  0E02               	movlw	2
 13494  0052A0  2612               	addwf	disk_read@buff+1,f,c
 13495                           
 13496                           ;diskio.c: 390:   } while (--count);
 13497  0052A2  0617               	decf	disk_read@count,f,c
 13498  0052A4  A0D8               	btfss	status,0,c
 13499  0052A6  0618               	decf	disk_read@count+1,f,c
 13500  0052A8  5017               	movf	disk_read@count,w,c
 13501  0052AA  1018               	iorwf	disk_read@count+1,w,c
 13502  0052AC  A4D8               	btfss	status,2,c
 13503  0052AE  D7EA               	goto	u5460
 13504  0052B0                     u5480:
 13505                           
 13506                           ;diskio.c: 391:   if (cmd == (18)) send_cmd((12), 0);
 13507  0052B0  0E12               	movlw	18
 13508  0052B2  181C               	xorwf	disk_read@cmd,w,c
 13509  0052B4  A4D8               	btfss	status,2,c
 13510  0052B6  D00B               	goto	l4653
 13511  0052B8  0E00               	movlw	0
 13512  0052BA  6E0B               	movwf	send_cmd@arg,c
 13513  0052BC  0E00               	movlw	0
 13514  0052BE  6E0C               	movwf	send_cmd@arg+1,c
 13515  0052C0  0E00               	movlw	0
 13516  0052C2  6E0D               	movwf	send_cmd@arg+2,c
 13517  0052C4  0E00               	movlw	0
 13518  0052C6  6E0E               	movwf	send_cmd@arg+3,c
 13519  0052C8  0E0C               	movlw	12
 13520  0052CA  ECFC  F02D         	call	_send_cmd
 13521  0052CE                     l4653:
 13522                           
 13523                           ;diskio.c: 393:  deselect();
 13524  0052CE  EC05  F02F         	call	_deselect	;wreg free
 13525                           
 13526                           ;diskio.c: 395:  return count ? RES_ERROR : RES_OK;
 13527  0052D2  5017               	movf	disk_read@count,w,c
 13528  0052D4  1018               	iorwf	disk_read@count+1,w,c
 13529  0052D6  B4D8               	btfsc	status,2,c
 13530  0052D8  D002               	goto	u5500
 13531  0052DA  0E01               	movlw	1
 13532  0052DC  0012               	return	
 13533  0052DE                     u5500:
 13534  0052DE  0E00               	movlw	0
 13535  0052E0  0012               	return		;funcret
 13536  0052E2                     __end_of_disk_read:
 13537                           	opt callstack 0
 13538                           
 13539 ;; *************** function _send_cmd *****************
 13540 ;; Defined at:
 13541 ;;		line 231 in file "diskio.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  cmd             1    wreg     unsigned char 
 13544 ;;  arg             4   10[COMRAM] unsigned long 
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;  cmd             1   14[COMRAM] unsigned char 
 13547 ;;  res             1   15[COMRAM] unsigned char 
 13548 ;; Return value:  Size  Location     Type
 13549 ;;                  1    wreg      unsigned char 
 13550 ;; Registers used:
 13551 ;;		wreg, status,2, status,0, cstack
 13552 ;; Tracked objects:
 13553 ;;		On entry : 0/0
 13554 ;;		On exit  : 0/0
 13555 ;;		Unchanged: 0/0
 13556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13557 ;;      Params:         4       0       0       0       0       0       0       0       0
 13558 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13559 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13560 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13561 ;;Total ram usage:        6 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; Hardware stack levels required when called:    4
 13564 ;; This function calls:
 13565 ;;		___send_cmd
 13566 ;; This function is called by:
 13567 ;;		_disk_initialize
 13568 ;;		_disk_read
 13569 ;;		_disk_write
 13570 ;;		_disk_ioctl
 13571 ;; This function uses a non-reentrant model
 13572 ;;
 13573                           
 13574                           	psect	text44
 13575  005BF8                     __ptext44:
 13576                           	opt callstack 0
 13577  005BF8                     _send_cmd:
 13578                           	opt callstack 22
 13579                           
 13580                           ;incstack = 0
 13581                           ;send_cmd@cmd stored from wreg
 13582  005BF8  6E0F               	movwf	send_cmd@cmd,c
 13583                           
 13584                           ;diskio.c: 232:  BYTE cmd,;diskio.c: 233:  DWORD arg;diskio.c: 235: {;diskio.c: 239:  BY
      +                          TE res;;diskio.c: 242:  if (cmd & 0x80) {
 13585  005BFA  AE0F               	btfss	send_cmd@cmd,7,c
 13586  005BFC  D012               	goto	l4543
 13587                           
 13588                           ;diskio.c: 243:   cmd &= 0x7F;
 13589  005BFE  9E0F               	bcf	send_cmd@cmd,7,c
 13590                           
 13591                           ;diskio.c: 245:   res = __send_cmd((55), 0);
 13592  005C00  0E00               	movlw	0
 13593  005C02  6E04               	movwf	___send_cmd@arg,c
 13594  005C04  0E00               	movlw	0
 13595  005C06  6E05               	movwf	___send_cmd@arg+1,c
 13596  005C08  0E00               	movlw	0
 13597  005C0A  6E06               	movwf	___send_cmd@arg+2,c
 13598  005C0C  0E00               	movlw	0
 13599  005C0E  6E07               	movwf	___send_cmd@arg+3,c
 13600  005C10  0E37               	movlw	55
 13601  005C12  EC27  F02C         	call	___send_cmd
 13602  005C16  6E10               	movwf	send_cmd@res,c
 13603                           
 13604                           ;diskio.c: 249:   if (res > 1) return res;
 13605  005C18  0E01               	movlw	1
 13606  005C1A  6410               	cpfsgt	send_cmd@res,c
 13607  005C1C  D002               	goto	l4543
 13608  005C1E  5010               	movf	send_cmd@res,w,c
 13609  005C20  0012               	return	
 13610  005C22                     l4543:
 13611                           
 13612                           ;diskio.c: 253:  return __send_cmd(cmd, arg);
 13613  005C22  C00B  F004         	movff	send_cmd@arg,___send_cmd@arg
 13614  005C26  C00C  F005         	movff	send_cmd@arg+1,___send_cmd@arg+1
 13615  005C2A  C00D  F006         	movff	send_cmd@arg+2,___send_cmd@arg+2
 13616  005C2E  C00E  F007         	movff	send_cmd@arg+3,___send_cmd@arg+3
 13617  005C32  500F               	movf	send_cmd@cmd,w,c
 13618  005C34  EC27  F02C         	call	___send_cmd
 13619  005C38  0012               	return		;funcret
 13620  005C3A                     __end_of_send_cmd:
 13621                           	opt callstack 0
 13622                           
 13623 ;; *************** function ___send_cmd *****************
 13624 ;; Defined at:
 13625 ;;		line 195 in file "diskio.c"
 13626 ;; Parameters:    Size  Location     Type
 13627 ;;  cmd             1    wreg     unsigned char 
 13628 ;;  arg             4    3[COMRAM] unsigned long 
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;  cmd             1    9[COMRAM] unsigned char 
 13631 ;;  n               1    8[COMRAM] unsigned char 
 13632 ;;  res             1    7[COMRAM] unsigned char 
 13633 ;; Return value:  Size  Location     Type
 13634 ;;                  1    wreg      unsigned char 
 13635 ;; Registers used:
 13636 ;;		wreg, status,2, status,0, cstack
 13637 ;; Tracked objects:
 13638 ;;		On entry : 0/0
 13639 ;;		On exit  : 0/0
 13640 ;;		Unchanged: 0/0
 13641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13642 ;;      Params:         4       0       0       0       0       0       0       0       0
 13643 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13645 ;;      Totals:         7       0       0       0       0       0       0       0       0
 13646 ;;Total ram usage:        7 bytes
 13647 ;; Hardware stack levels used:    1
 13648 ;; Hardware stack levels required when called:    3
 13649 ;; This function calls:
 13650 ;;		_SPI1_Exchange8bit
 13651 ;;		_deselect
 13652 ;;		_select
 13653 ;; This function is called by:
 13654 ;;		_send_cmd
 13655 ;; This function uses a non-reentrant model
 13656 ;;
 13657                           
 13658                           	psect	text45
 13659  00584E                     __ptext45:
 13660                           	opt callstack 0
 13661  00584E                     ___send_cmd:
 13662                           	opt callstack 22
 13663                           
 13664                           ;incstack = 0
 13665                           ;___send_cmd@cmd stored from wreg
 13666  00584E  6E0A               	movwf	___send_cmd@cmd,c
 13667                           
 13668                           ;diskio.c: 196:  BYTE cmd,;diskio.c: 197:  DWORD arg;diskio.c: 199: {;diskio.c: 200:  BY
      +                          TE n, res;;diskio.c: 203:  if (cmd != (12)) {
 13669  005850  0E0C               	movlw	12
 13670  005852  180A               	xorwf	___send_cmd@cmd,w,c
 13671  005854  B4D8               	btfsc	status,2,c
 13672  005856  D009               	goto	l4463
 13673                           
 13674                           ;diskio.c: 204:   deselect();
 13675  005858  EC05  F02F         	call	_deselect	;wreg free
 13676                           
 13677                           ;diskio.c: 205:   if (!select()) return 0xFF;
 13678  00585C  ECB9  F02E         	call	_select	;wreg free
 13679  005860  0900               	iorlw	0
 13680  005862  A4D8               	btfss	status,2,c
 13681  005864  D002               	goto	l4463
 13682  005866  0EFF               	movlw	255
 13683  005868  0012               	return	
 13684  00586A                     l4463:
 13685                           
 13686                           ;diskio.c: 209:  SPI1_Exchange8bit(0x40 | cmd);
 13687  00586A  500A               	movf	___send_cmd@cmd,w,c
 13688  00586C  0940               	iorlw	64
 13689  00586E  ECDA  F02E         	call	_SPI1_Exchange8bit
 13690                           
 13691                           ;diskio.c: 210:  SPI1_Exchange8bit((BYTE)(arg >> 24));
 13692  005872  5007               	movf	___send_cmd@arg+3,w,c
 13693  005874  ECDA  F02E         	call	_SPI1_Exchange8bit
 13694                           
 13695                           ;diskio.c: 211:  SPI1_Exchange8bit((BYTE)(arg >> 16));
 13696  005878  5006               	movf	___send_cmd@arg+2,w,c
 13697  00587A  ECDA  F02E         	call	_SPI1_Exchange8bit
 13698                           
 13699                           ;diskio.c: 212:  SPI1_Exchange8bit((BYTE)(arg >> 8));
 13700  00587E  5005               	movf	___send_cmd@arg+1,w,c
 13701  005880  ECDA  F02E         	call	_SPI1_Exchange8bit
 13702                           
 13703                           ;diskio.c: 213:  SPI1_Exchange8bit((BYTE)arg);
 13704  005884  5004               	movf	___send_cmd@arg,w,c
 13705  005886  ECDA  F02E         	call	_SPI1_Exchange8bit
 13706                           
 13707                           ;diskio.c: 214:  n = 0x01;
 13708  00588A  0E01               	movlw	1
 13709  00588C  6E09               	movwf	___send_cmd@n,c
 13710                           
 13711                           ;diskio.c: 215:  if (cmd == (0)) n = 0x95;
 13712  00588E  500A               	movf	___send_cmd@cmd,w,c
 13713  005890  A4D8               	btfss	status,2,c
 13714  005892  D002               	goto	l4479
 13715  005894  0E95               	movlw	149
 13716  005896  6E09               	movwf	___send_cmd@n,c
 13717  005898                     l4479:
 13718                           
 13719                           ;diskio.c: 216:  if (cmd == (8)) n = 0x87;
 13720  005898  0E08               	movlw	8
 13721  00589A  180A               	xorwf	___send_cmd@cmd,w,c
 13722  00589C  A4D8               	btfss	status,2,c
 13723  00589E  D002               	goto	l4483
 13724  0058A0  0E87               	movlw	135
 13725  0058A2  6E09               	movwf	___send_cmd@n,c
 13726  0058A4                     l4483:
 13727                           
 13728                           ;diskio.c: 217:  SPI1_Exchange8bit(n);
 13729  0058A4  5009               	movf	___send_cmd@n,w,c
 13730  0058A6  ECDA  F02E         	call	_SPI1_Exchange8bit
 13731                           
 13732                           ;diskio.c: 220:  if (cmd == (12)) SPI1_Exchange8bit(0xFF);
 13733  0058AA  0E0C               	movlw	12
 13734  0058AC  180A               	xorwf	___send_cmd@cmd,w,c
 13735  0058AE  A4D8               	btfss	status,2,c
 13736  0058B0  D003               	goto	l4489
 13737  0058B2  0EFF               	movlw	255
 13738  0058B4  ECDA  F02E         	call	_SPI1_Exchange8bit
 13739  0058B8                     l4489:
 13740                           
 13741                           ;diskio.c: 221:  n = 10;
 13742  0058B8  0E0A               	movlw	10
 13743  0058BA  6E09               	movwf	___send_cmd@n,c
 13744  0058BC                     l4491:
 13745                           
 13746                           ;diskio.c: 223:   res = SPI1_Exchange8bit(0xFF);
 13747  0058BC  0EFF               	movlw	255
 13748  0058BE  ECDA  F02E         	call	_SPI1_Exchange8bit
 13749  0058C2  6E08               	movwf	___send_cmd@res,c
 13750  0058C4  AE08               	btfss	___send_cmd@res,7,c
 13751  0058C6  D002               	goto	l4497
 13752  0058C8  2E09               	decfsz	___send_cmd@n,f,c
 13753  0058CA  D7F8               	goto	l4491
 13754  0058CC                     l4497:
 13755                           
 13756                           ;diskio.c: 226:  return res;
 13757  0058CC  5008               	movf	___send_cmd@res,w,c
 13758  0058CE  0012               	return		;funcret
 13759  0058D0                     __end_of___send_cmd:
 13760                           	opt callstack 0
 13761                           
 13762 ;; *************** function _select *****************
 13763 ;; Defined at:
 13764 ;;		line 106 in file "diskio.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;		None
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;		None
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  1    wreg      unsigned char 
 13771 ;; Registers used:
 13772 ;;		wreg, status,2, status,0, cstack
 13773 ;; Tracked objects:
 13774 ;;		On entry : 0/0
 13775 ;;		On exit  : 0/0
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13778 ;;      Params:         0       0       0       0       0       0       0       0       0
 13779 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13780 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13781 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13782 ;;Total ram usage:        0 bytes
 13783 ;; Hardware stack levels used:    1
 13784 ;; Hardware stack levels required when called:    2
 13785 ;; This function calls:
 13786 ;;		_SPI1_Exchange8bit
 13787 ;;		_deselect
 13788 ;;		_wait_ready
 13789 ;; This function is called by:
 13790 ;;		___send_cmd
 13791 ;;		_disk_ioctl
 13792 ;; This function uses a non-reentrant model
 13793 ;;
 13794                           
 13795                           	psect	text46
 13796  005D72                     __ptext46:
 13797                           	opt callstack 0
 13798  005D72                     _select:
 13799                           	opt callstack 22
 13800                           
 13801                           ;incstack = 0
 13802                           ;diskio.c: 108:  do { LATBbits.LATB2 = 0; } while(0);
 13803  005D72  948A               	bcf	3978,2,c	;volatile
 13804                           
 13805                           ;diskio.c: 109:  SPI1_Exchange8bit(0xFF);
 13806  005D74  0EFF               	movlw	255
 13807  005D76  ECDA  F02E         	call	_SPI1_Exchange8bit
 13808                           
 13809                           ;diskio.c: 110:  if (wait_ready()) return 1;
 13810  005D7A  EC1D  F02E         	call	_wait_ready	;wreg free
 13811  005D7E  0900               	iorlw	0
 13812  005D80  B4D8               	btfsc	status,2,c
 13813  005D82  D002               	goto	l4447
 13814  005D84  0E01               	movlw	1
 13815  005D86  0012               	return	
 13816  005D88                     l4447:
 13817                           
 13818                           ;diskio.c: 112:  deselect();
 13819  005D88  EC05  F02F         	call	_deselect	;wreg free
 13820                           
 13821                           ;diskio.c: 113:  return 0;
 13822  005D8C  0E00               	movlw	0
 13823  005D8E  0012               	return		;funcret
 13824  005D90                     __end_of_select:
 13825                           	opt callstack 0
 13826                           
 13827 ;; *************** function _wait_ready *****************
 13828 ;; Defined at:
 13829 ;;		line 74 in file "diskio.c"
 13830 ;; Parameters:    Size  Location     Type
 13831 ;;		None
 13832 ;; Auto vars:     Size  Location     Type
 13833 ;;  tmr             2    1[COMRAM] unsigned short 
 13834 ;; Return value:  Size  Location     Type
 13835 ;;                  1    wreg      unsigned char 
 13836 ;; Registers used:
 13837 ;;		wreg, status,2, status,0, cstack
 13838 ;; Tracked objects:
 13839 ;;		On entry : 0/0
 13840 ;;		On exit  : 0/0
 13841 ;;		Unchanged: 0/0
 13842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13843 ;;      Params:         0       0       0       0       0       0       0       0       0
 13844 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13846 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13847 ;;Total ram usage:        2 bytes
 13848 ;; Hardware stack levels used:    1
 13849 ;; Hardware stack levels required when called:    1
 13850 ;; This function calls:
 13851 ;;		_SPI1_Exchange8bit
 13852 ;; This function is called by:
 13853 ;;		_select
 13854 ;;		_xmit_datablock
 13855 ;; This function uses a non-reentrant model
 13856 ;;
 13857                           
 13858                           	psect	text47
 13859  005C3A                     __ptext47:
 13860                           	opt callstack 0
 13861  005C3A                     _wait_ready:
 13862                           	opt callstack 24
 13863                           
 13864                           ;diskio.c: 76:  UINT tmr;;diskio.c: 78:  for (tmr = 5000; tmr; tmr--) {
 13865                           
 13866                           ;incstack = 0
 13867  005C3A  0E13               	movlw	19
 13868  005C3C  6E03               	movwf	wait_ready@tmr+1,c
 13869  005C3E  0E88               	movlw	136
 13870  005C40  6E02               	movwf	wait_ready@tmr,c
 13871  005C42  D00D               	goto	l17
 13872  005C44                     l4425:
 13873                           
 13874                           ;diskio.c: 79:   if (SPI1_Exchange8bit(0xFF) == 0xFF) break;
 13875  005C44  0EFF               	movlw	255
 13876  005C46  ECDA  F02E         	call	_SPI1_Exchange8bit
 13877  005C4A  0AFF               	xorlw	255
 13878  005C4C  B4D8               	btfsc	status,2,c
 13879  005C4E  D00B               	goto	u5040
 13880                           
 13881                           ;diskio.c: 80:   _delay((unsigned long)((100)*(8000000/4000000.0)));
 13882  005C50  0E42               	movlw	66
 13883  005C52                     u10047:
 13884  005C52  2EE8               	decfsz	wreg,f,c
 13885  005C54  D7FE               	bra	u10047
 13886  005C56  D000               	nop2	
 13887                           
 13888                           ;diskio.c: 81:  }
 13889  005C58  0602               	decf	wait_ready@tmr,f,c
 13890  005C5A  A0D8               	btfss	status,0,c
 13891  005C5C  0603               	decf	wait_ready@tmr+1,f,c
 13892  005C5E                     l17:
 13893  005C5E  5002               	movf	wait_ready@tmr,w,c
 13894  005C60  1003               	iorwf	wait_ready@tmr+1,w,c
 13895  005C62  A4D8               	btfss	status,2,c
 13896  005C64  D7EF               	goto	l4425
 13897  005C66                     u5040:
 13898                           
 13899                           ;diskio.c: 83:  return tmr ? 1 : 0;
 13900  005C66  5002               	movf	wait_ready@tmr,w,c
 13901  005C68  1003               	iorwf	wait_ready@tmr+1,w,c
 13902  005C6A  B4D8               	btfsc	status,2,c
 13903  005C6C  D002               	goto	u5050
 13904  005C6E  0E01               	movlw	1
 13905  005C70  0012               	return	
 13906  005C72                     u5050:
 13907  005C72  0E00               	movlw	0
 13908  005C74  0012               	return		;funcret
 13909  005C76                     __end_of_wait_ready:
 13910                           	opt callstack 0
 13911                           
 13912 ;; *************** function _deselect *****************
 13913 ;; Defined at:
 13914 ;;		line 93 in file "diskio.c"
 13915 ;; Parameters:    Size  Location     Type
 13916 ;;		None
 13917 ;; Auto vars:     Size  Location     Type
 13918 ;;		None
 13919 ;; Return value:  Size  Location     Type
 13920 ;;                  1    wreg      void 
 13921 ;; Registers used:
 13922 ;;		wreg, status,2, cstack
 13923 ;; Tracked objects:
 13924 ;;		On entry : 0/0
 13925 ;;		On exit  : 0/0
 13926 ;;		Unchanged: 0/0
 13927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13928 ;;      Params:         0       0       0       0       0       0       0       0       0
 13929 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13930 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13931 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13932 ;;Total ram usage:        0 bytes
 13933 ;; Hardware stack levels used:    1
 13934 ;; Hardware stack levels required when called:    1
 13935 ;; This function calls:
 13936 ;;		_SPI1_Exchange8bit
 13937 ;; This function is called by:
 13938 ;;		_select
 13939 ;;		___send_cmd
 13940 ;;		_disk_initialize
 13941 ;;		_disk_read
 13942 ;;		_disk_write
 13943 ;;		_disk_ioctl
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           	psect	text48
 13948  005E0A                     __ptext48:
 13949                           	opt callstack 0
 13950  005E0A                     _deselect:
 13951                           	opt callstack 22
 13952                           
 13953                           ;incstack = 0
 13954                           ;diskio.c: 95:  do { LATBbits.LATB2 = 1; } while(0);
 13955  005E0A  848A               	bsf	3978,2,c	;volatile
 13956                           
 13957                           ;diskio.c: 96:  SPI1_Exchange8bit(0xFF);
 13958  005E0C  0EFF               	movlw	255
 13959  005E0E  ECDA  F02E         	call	_SPI1_Exchange8bit
 13960  005E12  0012               	return		;funcret
 13961  005E14                     __end_of_deselect:
 13962                           	opt callstack 0
 13963                           
 13964 ;; *************** function _rcvr_datablock *****************
 13965 ;; Defined at:
 13966 ;;		line 123 in file "diskio.c"
 13967 ;; Parameters:    Size  Location     Type
 13968 ;;  buff            2    1[COMRAM] PTR unsigned char 
 13969 ;;		 -> FatFs(558), disk_ioctl@csd(16), NULL(0), 
 13970 ;;  btr             2    3[COMRAM] unsigned short 
 13971 ;; Auto vars:     Size  Location     Type
 13972 ;;  tmr             2    5[COMRAM] unsigned short 
 13973 ;;  token           1    7[COMRAM] unsigned char 
 13974 ;; Return value:  Size  Location     Type
 13975 ;;                  1    wreg      unsigned char 
 13976 ;; Registers used:
 13977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13978 ;; Tracked objects:
 13979 ;;		On entry : 0/0
 13980 ;;		On exit  : 0/0
 13981 ;;		Unchanged: 0/0
 13982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13983 ;;      Params:         4       0       0       0       0       0       0       0       0
 13984 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13985 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13986 ;;      Totals:         7       0       0       0       0       0       0       0       0
 13987 ;;Total ram usage:        7 bytes
 13988 ;; Hardware stack levels used:    1
 13989 ;; Hardware stack levels required when called:    1
 13990 ;; This function calls:
 13991 ;;		_SPI1_Exchange8bit
 13992 ;; This function is called by:
 13993 ;;		_disk_read
 13994 ;;		_disk_ioctl
 13995 ;; This function uses a non-reentrant model
 13996 ;;
 13997                           
 13998                           	psect	text49
 13999  0059CC                     __ptext49:
 14000                           	opt callstack 0
 14001  0059CC                     _rcvr_datablock:
 14002                           	opt callstack 25
 14003                           
 14004                           ;diskio.c: 124:  BYTE *buff,;diskio.c: 125:  UINT btr;diskio.c: 127: {;diskio.c: 128:  B
      +                          YTE token;;diskio.c: 129:  UINT tmr;;diskio.c: 132:  for (tmr = 2000; tmr; tmr--) {
 14005                           
 14006                           ;incstack = 0
 14007  0059CC  0E07               	movlw	7
 14008  0059CE  6E07               	movwf	rcvr_datablock@tmr+1,c
 14009  0059D0  0ED0               	movlw	208
 14010  0059D2  6E06               	movwf	rcvr_datablock@tmr,c
 14011  0059D4  D00E               	goto	l35
 14012  0059D6                     l4549:
 14013                           
 14014                           ;diskio.c: 133:   token = SPI1_Exchange8bit(0xFF);
 14015  0059D6  0EFF               	movlw	255
 14016  0059D8  ECDA  F02E         	call	_SPI1_Exchange8bit
 14017  0059DC  6E08               	movwf	rcvr_datablock@token,c
 14018                           
 14019                           ;diskio.c: 134:   if (token != 0xFF) break;
 14020  0059DE  2808               	incf	rcvr_datablock@token,w,c
 14021  0059E0  A4D8               	btfss	status,2,c
 14022  0059E2  D00B               	goto	u5210
 14023                           
 14024                           ;diskio.c: 135:   _delay((unsigned long)((100)*(8000000/4000000.0)));
 14025  0059E4  0E42               	movlw	66
 14026  0059E6                     u10057:
 14027  0059E6  2EE8               	decfsz	wreg,f,c
 14028  0059E8  D7FE               	bra	u10057
 14029  0059EA  D000               	nop2	
 14030                           
 14031                           ;diskio.c: 136:  }
 14032  0059EC  0606               	decf	rcvr_datablock@tmr,f,c
 14033  0059EE  A0D8               	btfss	status,0,c
 14034  0059F0  0607               	decf	rcvr_datablock@tmr+1,f,c
 14035  0059F2                     l35:
 14036  0059F2  5006               	movf	rcvr_datablock@tmr,w,c
 14037  0059F4  1007               	iorwf	rcvr_datablock@tmr+1,w,c
 14038  0059F6  A4D8               	btfss	status,2,c
 14039  0059F8  D7EE               	goto	l4549
 14040  0059FA                     u5210:
 14041                           
 14042                           ;diskio.c: 137:  if (token != 0xFE) return 0;
 14043  0059FA  0EFE               	movlw	254
 14044  0059FC  1808               	xorwf	rcvr_datablock@token,w,c
 14045  0059FE  B4D8               	btfsc	status,2,c
 14046  005A00  D002               	goto	l4565
 14047  005A02  0E00               	movlw	0
 14048  005A04  0012               	return	
 14049  005A06                     l4565:
 14050                           
 14051                           ;diskio.c: 140:   *buff++ = SPI1_Exchange8bit(0xFF);
 14052  005A06  0EFF               	movlw	255
 14053  005A08  ECDA  F02E         	call	_SPI1_Exchange8bit
 14054  005A0C  C002  FFD9         	movff	rcvr_datablock@buff,fsr2l
 14055  005A10  C003  FFDA         	movff	rcvr_datablock@buff+1,fsr2h
 14056  005A14  6EDF               	movwf	indf2,c
 14057  005A16  4A02               	infsnz	rcvr_datablock@buff,f,c
 14058  005A18  2A03               	incf	rcvr_datablock@buff+1,f,c
 14059  005A1A  0604               	decf	rcvr_datablock@btr,f,c
 14060  005A1C  A0D8               	btfss	status,0,c
 14061  005A1E  0605               	decf	rcvr_datablock@btr+1,f,c
 14062  005A20  5004               	movf	rcvr_datablock@btr,w,c
 14063  005A22  1005               	iorwf	rcvr_datablock@btr+1,w,c
 14064  005A24  A4D8               	btfss	status,2,c
 14065  005A26  D7EF               	goto	l4565
 14066                           
 14067                           ;diskio.c: 142:  SPI1_Exchange8bit(0xFF);
 14068  005A28  0EFF               	movlw	255
 14069  005A2A  ECDA  F02E         	call	_SPI1_Exchange8bit
 14070                           
 14071                           ;diskio.c: 143:  SPI1_Exchange8bit(0xFF);
 14072  005A2E  0EFF               	movlw	255
 14073  005A30  ECDA  F02E         	call	_SPI1_Exchange8bit
 14074                           
 14075                           ;diskio.c: 145:  return 1;
 14076  005A34  0E01               	movlw	1
 14077  005A36  0012               	return		;funcret
 14078  005A38                     __end_of_rcvr_datablock:
 14079                           	opt callstack 0
 14080                           
 14081 ;; *************** function _SPI1_Exchange8bit *****************
 14082 ;; Defined at:
 14083 ;;		line 90 in file "mcc_generated_files/spi1.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;  data            1    wreg     unsigned char 
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;  data            1    0[COMRAM] unsigned char 
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  1    wreg      unsigned char 
 14090 ;; Registers used:
 14091 ;;		wreg, status,2
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14097 ;;      Params:         0       0       0       0       0       0       0       0       0
 14098 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14100 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14101 ;;Total ram usage:        1 bytes
 14102 ;; Hardware stack levels used:    1
 14103 ;; This function calls:
 14104 ;;		Nothing
 14105 ;; This function is called by:
 14106 ;;		_wait_ready
 14107 ;;		_deselect
 14108 ;;		_select
 14109 ;;		_rcvr_datablock
 14110 ;;		_xmit_datablock
 14111 ;;		___send_cmd
 14112 ;;		_disk_initialize
 14113 ;;		_disk_ioctl
 14114 ;;		_SPI1_Exchange8bitBuffer
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text50
 14119  005DB4                     __ptext50:
 14120                           	opt callstack 0
 14121  005DB4                     _SPI1_Exchange8bit:
 14122                           	opt callstack 24
 14123                           
 14124                           ;incstack = 0
 14125                           ;SPI1_Exchange8bit@data stored from wreg
 14126  005DB4  6E01               	movwf	SPI1_Exchange8bit@data,c
 14127                           
 14128                           ;mcc_generated_files/spi1.c: 90: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 91: {;mcc_generated_files/spi1.c: 93:     SSP1CON1bits.WCOL = 0;
 14129  005DB6  9EC6               	bcf	4038,7,c	;volatile
 14130                           
 14131                           ;mcc_generated_files/spi1.c: 95:     SSP1BUF = data;
 14132  005DB8  C001  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
 14133  005DBC                     l748:
 14134                           
 14135                           ;mcc_generated_files/spi1.c: 97:     while(SSP1STATbits.BF == 0x0)
 14136  005DBC  A0C7               	btfss	4039,0,c	;volatile
 14137  005DBE  D7FE               	goto	l748
 14138                           
 14139                           ;mcc_generated_files/spi1.c: 101:     return (SSP1BUF);
 14140  005DC0  50C9               	movf	4041,w,c	;volatile
 14141  005DC2  0012               	return		;funcret
 14142  005DC4                     __end_of_SPI1_Exchange8bit:
 14143                           	opt callstack 0
 14144                           
 14145 ;; *************** function _SYSTEM_Initialize *****************
 14146 ;; Defined at:
 14147 ;;		line 116 in file "mcc_generated_files/mcc.c"
 14148 ;; Parameters:    Size  Location     Type
 14149 ;;		None
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;		None
 14152 ;; Return value:  Size  Location     Type
 14153 ;;                  1    wreg      void 
 14154 ;; Registers used:
 14155 ;;		wreg, status,2, cstack
 14156 ;; Tracked objects:
 14157 ;;		On entry : 0/0
 14158 ;;		On exit  : 0/0
 14159 ;;		Unchanged: 0/0
 14160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14161 ;;      Params:         0       0       0       0       0       0       0       0       0
 14162 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14163 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14164 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14165 ;;Total ram usage:        0 bytes
 14166 ;; Hardware stack levels used:    1
 14167 ;; Hardware stack levels required when called:    1
 14168 ;; This function calls:
 14169 ;;		_OSCILLATOR_Initialize
 14170 ;;		_PIN_MANAGER_Initialize
 14171 ;;		_SPI1_Initialize
 14172 ;; This function is called by:
 14173 ;;		_guardar
 14174 ;; This function uses a non-reentrant model
 14175 ;;
 14176                           
 14177                           	psect	text51
 14178  005DE2                     __ptext51:
 14179                           	opt callstack 0
 14180  005DE2                     _SYSTEM_Initialize:
 14181                           	opt callstack 28
 14182                           
 14183                           ;mcc_generated_files/mcc.c: 119:     PIN_MANAGER_Initialize();
 14184                           
 14185                           ;incstack = 0
 14186  005DE2  ECA9  F02E         	call	_PIN_MANAGER_Initialize	;wreg free
 14187                           
 14188                           ;mcc_generated_files/mcc.c: 120:     OSCILLATOR_Initialize();
 14189  005DE6  ECD1  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 14190                           
 14191                           ;mcc_generated_files/mcc.c: 121:     SPI1_Initialize();
 14192  005DEA  ECF8  F02E         	call	_SPI1_Initialize	;wreg free
 14193  005DEE  0012               	return		;funcret
 14194  005DF0                     __end_of_SYSTEM_Initialize:
 14195                           	opt callstack 0
 14196                           
 14197 ;; *************** function _SPI1_Initialize *****************
 14198 ;; Defined at:
 14199 ;;		line 63 in file "mcc_generated_files/spi1.c"
 14200 ;; Parameters:    Size  Location     Type
 14201 ;;		None
 14202 ;; Auto vars:     Size  Location     Type
 14203 ;;		None
 14204 ;; Return value:  Size  Location     Type
 14205 ;;                  1    wreg      void 
 14206 ;; Registers used:
 14207 ;;		wreg, status,2
 14208 ;; Tracked objects:
 14209 ;;		On entry : 0/0
 14210 ;;		On exit  : 0/0
 14211 ;;		Unchanged: 0/0
 14212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14213 ;;      Params:         0       0       0       0       0       0       0       0       0
 14214 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14215 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14216 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14217 ;;Total ram usage:        0 bytes
 14218 ;; Hardware stack levels used:    1
 14219 ;; This function calls:
 14220 ;;		Nothing
 14221 ;; This function is called by:
 14222 ;;		_disk_initialize
 14223 ;;		_SYSTEM_Initialize
 14224 ;; This function uses a non-reentrant model
 14225 ;;
 14226                           
 14227                           	psect	text52
 14228  005DF0                     __ptext52:
 14229                           	opt callstack 0
 14230  005DF0                     _SPI1_Initialize:
 14231                           	opt callstack 26
 14232                           
 14233                           ;mcc_generated_files/spi1.c: 68:     SSP1STAT = 0x40;
 14234                           
 14235                           ;incstack = 0
 14236  005DF0  0E40               	movlw	64
 14237  005DF2  6EC7               	movwf	4039,c	;volatile
 14238                           
 14239                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x22;
 14240  005DF4  0E22               	movlw	34
 14241  005DF6  6EC6               	movwf	4038,c	;volatile
 14242                           
 14243                           ;mcc_generated_files/spi1.c: 74:     SSP1ADD = 0x00;
 14244  005DF8  0E00               	movlw	0
 14245  005DFA  6EC8               	movwf	4040,c	;volatile
 14246  005DFC  0012               	return		;funcret
 14247  005DFE                     __end_of_SPI1_Initialize:
 14248                           	opt callstack 0
 14249                           
 14250 ;; *************** function _PIN_MANAGER_Initialize *****************
 14251 ;; Defined at:
 14252 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;		None
 14255 ;; Auto vars:     Size  Location     Type
 14256 ;;		None
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  1    wreg      void 
 14259 ;; Registers used:
 14260 ;;		wreg, status,2
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14266 ;;      Params:         0       0       0       0       0       0       0       0       0
 14267 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14269 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14270 ;;Total ram usage:        0 bytes
 14271 ;; Hardware stack levels used:    1
 14272 ;; This function calls:
 14273 ;;		Nothing
 14274 ;; This function is called by:
 14275 ;;		_SYSTEM_Initialize
 14276 ;; This function uses a non-reentrant model
 14277 ;;
 14278                           
 14279                           	psect	text53
 14280  005D52                     __ptext53:
 14281                           	opt callstack 0
 14282  005D52                     _PIN_MANAGER_Initialize:
 14283                           	opt callstack 28
 14284                           
 14285                           ;mcc_generated_files/pin_manager.c: 59:     LATB = 0x04;
 14286                           
 14287                           ;incstack = 0
 14288  005D52  0E04               	movlw	4
 14289  005D54  6E8A               	movwf	3978,c	;volatile
 14290                           
 14291                           ;mcc_generated_files/pin_manager.c: 60:     LATC = 0x00;
 14292  005D56  0E00               	movlw	0
 14293  005D58  6E8B               	movwf	3979,c	;volatile
 14294                           
 14295                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF1;
 14296  005D5A  0EF1               	movlw	241
 14297  005D5C  6E93               	movwf	3987,c	;volatile
 14298                           
 14299                           ;mcc_generated_files/pin_manager.c: 68:     TRISC = 0xC7;
 14300  005D5E  0EC7               	movlw	199
 14301  005D60  6E94               	movwf	3988,c	;volatile
 14302                           
 14303                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC4;
 14304  005D62  0EC4               	movlw	196
 14305  005D64  010F               	movlb	15	; () banked
 14306  005D66  6F5D               	movwf	93,b	;volatile
 14307                           
 14308                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x30;
 14309  005D68  0E30               	movlw	48
 14310  005D6A  6F5C               	movwf	92,b	;volatile
 14311                           
 14312                           ; BSR set to: 15
 14313                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0xFF;
 14314  005D6C  6885               	setf	3973,c	;volatile
 14315                           
 14316                           ; BSR set to: 15
 14317                           ;mcc_generated_files/pin_manager.c: 84:     INTCON2bits.nRBPU = 0;
 14318  005D6E  9EF1               	bcf	4081,7,c	;volatile
 14319                           
 14320                           ; BSR set to: 15
 14321  005D70  0012               	return		;funcret
 14322  005D72                     __end_of_PIN_MANAGER_Initialize:
 14323                           	opt callstack 0
 14324                           
 14325 ;; *************** function _OSCILLATOR_Initialize *****************
 14326 ;; Defined at:
 14327 ;;		line 124 in file "mcc_generated_files/mcc.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;		None
 14330 ;; Auto vars:     Size  Location     Type
 14331 ;;		None
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  1    wreg      void 
 14334 ;; Registers used:
 14335 ;;		wreg, status,2
 14336 ;; Tracked objects:
 14337 ;;		On entry : 0/0
 14338 ;;		On exit  : 0/0
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14341 ;;      Params:         0       0       0       0       0       0       0       0       0
 14342 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14343 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14344 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14345 ;;Total ram usage:        0 bytes
 14346 ;; Hardware stack levels used:    1
 14347 ;; This function calls:
 14348 ;;		Nothing
 14349 ;; This function is called by:
 14350 ;;		_SYSTEM_Initialize
 14351 ;; This function uses a non-reentrant model
 14352 ;;
 14353                           
 14354                           	psect	text54
 14355  005DA2                     __ptext54:
 14356                           	opt callstack 0
 14357  005DA2                     _OSCILLATOR_Initialize:
 14358                           	opt callstack 28
 14359                           
 14360                           ;mcc_generated_files/mcc.c: 127:     OSCCON = 0x60;
 14361                           
 14362                           ; BSR set to: 15
 14363                           ;incstack = 0
 14364  005DA2  0E60               	movlw	96
 14365  005DA4  6ED3               	movwf	4051,c	;volatile
 14366                           
 14367                           ;mcc_generated_files/mcc.c: 129:     OSCCON2 = 0x00;
 14368  005DA6  0E00               	movlw	0
 14369  005DA8  6ED2               	movwf	4050,c	;volatile
 14370                           
 14371                           ;mcc_generated_files/mcc.c: 131:     OSCTUNE = 0x00;
 14372  005DAA  0E00               	movlw	0
 14373  005DAC  6E9B               	movwf	3995,c	;volatile
 14374                           
 14375                           ;mcc_generated_files/mcc.c: 133:     ACTCON = 0x00;
 14376  005DAE  0E00               	movlw	0
 14377  005DB0  6EB5               	movwf	4021,c	;volatile
 14378  005DB2  0012               	return		;funcret
 14379  005DB4                     __end_of_OSCILLATOR_Initialize:
 14380                           	opt callstack 0
 14381                           
 14382 ;; *************** function _Error *****************
 14383 ;; Defined at:
 14384 ;;		line 13 in file "./Errores.h"
 14385 ;; Parameters:    Size  Location     Type
 14386 ;;  a               2    0[COMRAM] int 
 14387 ;; Auto vars:     Size  Location     Type
 14388 ;;  v_seg          10    3[COMRAM] unsigned char [10]
 14389 ;; Return value:  Size  Location     Type
 14390 ;;                  1    wreg      void 
 14391 ;; Registers used:
 14392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14393 ;; Tracked objects:
 14394 ;;		On entry : 0/0
 14395 ;;		On exit  : 0/0
 14396 ;;		Unchanged: 0/0
 14397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14398 ;;      Params:         2       0       0       0       0       0       0       0       0
 14399 ;;      Locals:        10       0       0       0       0       0       0       0       0
 14400 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14401 ;;      Totals:        13       0       0       0       0       0       0       0       0
 14402 ;;Total ram usage:       13 bytes
 14403 ;; Hardware stack levels used:    1
 14404 ;; This function calls:
 14405 ;;		Nothing
 14406 ;; This function is called by:
 14407 ;;		_guardar
 14408 ;; This function uses a non-reentrant model
 14409 ;;
 14410                           
 14411                           	psect	text55
 14412  0052E2                     __ptext55:
 14413                           	opt callstack 0
 14414  0052E2                     _Error:
 14415                           	opt callstack 29
 14416                           
 14417                           ;./Errores.h: 14:     LATD = 0x00;
 14418                           
 14419                           ;incstack = 0
 14420  0052E2  0E00               	movlw	0
 14421  0052E4  6E8C               	movwf	3980,c	;volatile
 14422                           
 14423                           ;./Errores.h: 15:     TRISD = 0x00;
 14424  0052E6  0E00               	movlw	0
 14425  0052E8  6E95               	movwf	3989,c	;volatile
 14426                           
 14427                           ;./Errores.h: 16:     ANSELD = 0x00;
 14428  0052EA  0E00               	movlw	0
 14429  0052EC  010F               	movlb	15	; () banked
 14430  0052EE  6F5E               	movwf	94,b	;volatile
 14431                           
 14432                           ;./Errores.h: 17:     LATE = 0x00;
 14433  0052F0  0E00               	movlw	0
 14434  0052F2  6E8D               	movwf	3981,c	;volatile
 14435                           
 14436                           ;./Errores.h: 18:     TRISE = 0x00;
 14437  0052F4  0E00               	movlw	0
 14438  0052F6  6E96               	movwf	3990,c	;volatile
 14439                           
 14440                           ;./Errores.h: 19:     ANSELE = 0x00;
 14441  0052F8  0E00               	movlw	0
 14442  0052FA  6F5F               	movwf	95,b	;volatile
 14443                           
 14444                           ; BSR set to: 15
 14445                           ;./Errores.h: 21:     unsigned char v_seg[10]={0x7E,0x30,0x6D,0x79,0x33,0x5B,0x5F,0x70,0
      +                          x7F,0x73};
 14446  0052FC  EE20  F0DA         	lfsr	2,Error@F5051
 14447  005300  EE10  F004         	lfsr	1,Error@v_seg
 14448  005304  0E09               	movlw	9
 14449  005306                     u9051:
 14450  005306  CFDB FFE3          	movff	plusw2,plusw1
 14451  00530A  06E8               	decf	wreg,f,c
 14452  00530C  E2FC               	bc	u9051
 14453                           
 14454                           ; BSR set to: 15
 14455                           ;./Errores.h: 22:     if(a != 33 && a != 55){
 14456  00530E  0E21               	movlw	33
 14457  005310  1801               	xorwf	Error@a,w,c
 14458  005312  1002               	iorwf	Error@a+1,w,c
 14459  005314  B4D8               	btfsc	status,2,c
 14460  005316  D010               	goto	l6611
 14461                           
 14462                           ; BSR set to: 15
 14463  005318  0E37               	movlw	55
 14464  00531A  1801               	xorwf	Error@a,w,c
 14465  00531C  1002               	iorwf	Error@a+1,w,c
 14466  00531E  B4D8               	btfsc	status,2,c
 14467  005320  D00B               	goto	l6611
 14468                           
 14469                           ; BSR set to: 15
 14470                           ;./Errores.h: 23:     LATD = v_seg[a];
 14471  005322  0E04               	movlw	low Error@v_seg
 14472  005324  2401               	addwf	Error@a,w,c
 14473  005326  6ED9               	movwf	fsr2l,c
 14474  005328  0E00               	movlw	high Error@v_seg
 14475  00532A  2002               	addwfc	Error@a+1,w,c
 14476  00532C  6EDA               	movwf	fsr2h,c
 14477  00532E  50DF               	movf	indf2,w,c
 14478  005330  6E8C               	movwf	3980,c	;volatile
 14479                           
 14480                           ; BSR set to: 15
 14481                           ;./Errores.h: 24:     LATE = 0x01;
 14482  005332  0E01               	movlw	1
 14483  005334  6E8D               	movwf	3981,c	;volatile
 14484                           
 14485                           ;./Errores.h: 25:     }
 14486  005336  0012               	return	
 14487  005338                     l6611:
 14488                           
 14489                           ; BSR set to: 15
 14490  005338  0E21               	movlw	33
 14491  00533A  1801               	xorwf	Error@a,w,c
 14492  00533C  1002               	iorwf	Error@a+1,w,c
 14493  00533E  A4D8               	btfss	status,2,c
 14494  005340  D005               	goto	l6617
 14495                           
 14496                           ; BSR set to: 15
 14497                           ;./Errores.h: 27:     LATD = v_seg[6];
 14498  005342  C00A  FF8C         	movff	Error@v_seg+6,3980	;volatile
 14499                           
 14500                           ; BSR set to: 15
 14501                           ;./Errores.h: 28:     LATE = 0x02;
 14502  005346  0E02               	movlw	2
 14503  005348  6E8D               	movwf	3981,c	;volatile
 14504                           
 14505                           ;./Errores.h: 29:     }
 14506  00534A  0012               	return	
 14507  00534C                     l6617:
 14508                           
 14509                           ; BSR set to: 15
 14510  00534C  0EE7               	movlw	231
 14511  00534E  1801               	xorwf	Error@a,w,c
 14512  005350  E107               	bnz	l850
 14513  005352  0E03               	movlw	3
 14514  005354  1802               	xorwf	Error@a+1,w,c
 14515  005356  A4D8               	btfss	status,2,c
 14516  005358  D003               	goto	l850
 14517  00535A                     u9090:
 14518                           
 14519                           ;./Errores.h: 31:     LATE = 0x00;
 14520  00535A  0E00               	movlw	0
 14521  00535C  6E8D               	movwf	3981,c	;volatile
 14522                           
 14523                           ;./Errores.h: 32:     }
 14524  00535E  0012               	return	
 14525  005360                     l850:
 14526                           
 14527                           ; BSR set to: 15
 14528                           ;./Errores.h: 34:     LATD = v_seg[0];
 14529  005360  C004  FF8C         	movff	Error@v_seg,3980	;volatile
 14530                           
 14531                           ; BSR set to: 15
 14532                           ;./Errores.h: 35:     LATE = 0x01;
 14533  005364  0E01               	movlw	1
 14534  005366  6E8D               	movwf	3981,c	;volatile
 14535                           
 14536                           ; BSR set to: 15
 14537                           ;./Errores.h: 36:     _delay((unsigned long)((1)*(8000000/4000.0)));
 14538  005368  0E03               	movlw	3
 14539  00536A  6E03               	movwf	??_Error& (0+255),c
 14540  00536C  0E98               	movlw	152
 14541  00536E                     u10067:
 14542  00536E  2EE8               	decfsz	wreg,f,c
 14543  005370  D7FE               	bra	u10067
 14544  005372  2E03               	decfsz	??_Error& (0+255),f,c
 14545  005374  D7FC               	bra	u10067
 14546                           
 14547                           ;./Errores.h: 38:     LATE = 0x00;
 14548  005376  0E00               	movlw	0
 14549  005378  6E8D               	movwf	3981,c	;volatile
 14550                           
 14551                           ;./Errores.h: 39:     LATD = v_seg[9];
 14552  00537A  C00D  FF8C         	movff	Error@v_seg+9,3980	;volatile
 14553                           
 14554                           ;./Errores.h: 40:     LATE = 0x02;
 14555  00537E  0E02               	movlw	2
 14556  005380  6E8D               	movwf	3981,c	;volatile
 14557                           
 14558                           ;./Errores.h: 41:     _delay((unsigned long)((1)*(8000000/4000.0)));
 14559  005382  0E03               	movlw	3
 14560  005384  6E03               	movwf	??_Error& (0+255),c
 14561  005386  0E98               	movlw	152
 14562  005388                     u10077:
 14563  005388  2EE8               	decfsz	wreg,f,c
 14564  00538A  D7FE               	bra	u10077
 14565  00538C  2E03               	decfsz	??_Error& (0+255),f,c
 14566  00538E  D7FC               	bra	u10077
 14567                           
 14568                           ;./Errores.h: 43:     LATE = 0x00;
 14569  005390  0E00               	movlw	0
 14570  005392  6E8D               	movwf	3981,c	;volatile
 14571                           
 14572                           ;./Errores.h: 44:     LATD = v_seg[6];
 14573  005394  C00A  FF8C         	movff	Error@v_seg+6,3980	;volatile
 14574                           
 14575                           ;./Errores.h: 45:     LATE = 0x04;
 14576  005398  0E04               	movlw	4
 14577  00539A  6E8D               	movwf	3981,c	;volatile
 14578                           
 14579                           ;./Errores.h: 46:     _delay((unsigned long)((1)*(8000000/4000.0)));
 14580  00539C  0E03               	movlw	3
 14581  00539E  6E03               	movwf	??_Error& (0+255),c
 14582  0053A0  0E98               	movlw	152
 14583  0053A2                     u10087:
 14584  0053A2  2EE8               	decfsz	wreg,f,c
 14585  0053A4  D7FE               	bra	u10087
 14586  0053A6  2E03               	decfsz	??_Error& (0+255),f,c
 14587  0053A8  D7FC               	bra	u10087
 14588  0053AA  D7D7               	goto	u9090
 14589  0053AC                     __end_of_Error:
 14590                           	opt callstack 0
 14591                           
 14592 ;; *************** function ___xxtofl *****************
 14593 ;; Defined at:
 14594 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;  sign            1    wreg     unsigned char 
 14597 ;;  val             4    0[COMRAM] long 
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;  sign            1    8[COMRAM] unsigned char 
 14600 ;;  arg             4   10[COMRAM] unsigned long 
 14601 ;;  exp             1    9[COMRAM] unsigned char 
 14602 ;; Return value:  Size  Location     Type
 14603 ;;                  4    0[COMRAM] unsigned char 
 14604 ;; Registers used:
 14605 ;;		wreg, status,2, status,0
 14606 ;; Tracked objects:
 14607 ;;		On entry : 0/0
 14608 ;;		On exit  : 0/0
 14609 ;;		Unchanged: 0/0
 14610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14611 ;;      Params:         4       0       0       0       0       0       0       0       0
 14612 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14613 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14614 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14615 ;;Total ram usage:       14 bytes
 14616 ;; Hardware stack levels used:    1
 14617 ;; This function calls:
 14618 ;;		Nothing
 14619 ;; This function is called by:
 14620 ;;		_main
 14621 ;; This function uses a non-reentrant model
 14622 ;;
 14623                           
 14624                           	psect	text56
 14625  004A2E                     __ptext56:
 14626                           	opt callstack 0
 14627  004A2E                     ___xxtofl:
 14628                           	opt callstack 30
 14629                           
 14630                           ;incstack = 0
 14631                           ;___xxtofl@sign stored from wreg
 14632  004A2E  6E09               	movwf	___xxtofl@sign,c
 14633  004A30  5009               	movf	___xxtofl@sign,w,c
 14634  004A32  A4D8               	btfss	status,2,c
 14635  004A34  AE04               	btfss	___xxtofl@val+3,7,c
 14636  004A36  D01A               	goto	l1557
 14637  004A38  C001  F005         	movff	___xxtofl@val,??___xxtofl
 14638  004A3C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 14639  004A40  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 14640  004A44  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 14641  004A48  1E05               	comf	??___xxtofl,f,c
 14642  004A4A  1E06               	comf	??___xxtofl+1,f,c
 14643  004A4C  1E07               	comf	??___xxtofl+2,f,c
 14644  004A4E  1E08               	comf	??___xxtofl+3,f,c
 14645  004A50  2A05               	incf	??___xxtofl,f,c
 14646  004A52  0E00               	movlw	0
 14647  004A54  2206               	addwfc	??___xxtofl+1,f,c
 14648  004A56  2207               	addwfc	??___xxtofl+2,f,c
 14649  004A58  2208               	addwfc	??___xxtofl+3,f,c
 14650  004A5A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14651  004A5E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14652  004A62  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14653  004A66  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14654  004A6A  D008               	goto	l6995
 14655  004A6C                     l1557:
 14656  004A6C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14657  004A70  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14658  004A74  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14659  004A78  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14660  004A7C                     l6995:
 14661  004A7C  5001               	movf	___xxtofl@val,w,c
 14662  004A7E  1002               	iorwf	___xxtofl@val+1,w,c
 14663  004A80  1003               	iorwf	___xxtofl@val+2,w,c
 14664  004A82  1004               	iorwf	___xxtofl@val+3,w,c
 14665  004A84  A4D8               	btfss	status,2,c
 14666  004A86  D009               	goto	l7001
 14667  004A88  0E00               	movlw	0
 14668  004A8A  6E01               	movwf	?___xxtofl,c
 14669  004A8C  0E00               	movlw	0
 14670  004A8E  6E02               	movwf	?___xxtofl+1,c
 14671  004A90  0E00               	movlw	0
 14672  004A92  6E03               	movwf	?___xxtofl+2,c
 14673  004A94  0E00               	movlw	0
 14674  004A96  6E04               	movwf	?___xxtofl+3,c
 14675  004A98  0012               	return	
 14676  004A9A                     l7001:
 14677  004A9A  0E96               	movlw	150
 14678  004A9C  6E0A               	movwf	___xxtofl@exp,c
 14679  004A9E  D006               	goto	l7005
 14680  004AA0                     l7003:
 14681  004AA0  2A0A               	incf	___xxtofl@exp,f,c
 14682  004AA2  90D8               	bcf	status,0,c
 14683  004AA4  320E               	rrcf	___xxtofl@arg+3,f,c
 14684  004AA6  320D               	rrcf	___xxtofl@arg+2,f,c
 14685  004AA8  320C               	rrcf	___xxtofl@arg+1,f,c
 14686  004AAA  320B               	rrcf	___xxtofl@arg,f,c
 14687  004AAC                     l7005:
 14688  004AAC  0E00               	movlw	0
 14689  004AAE  140B               	andwf	___xxtofl@arg,w,c
 14690  004AB0  6E05               	movwf	??___xxtofl& (0+255),c
 14691  004AB2  0E00               	movlw	0
 14692  004AB4  140C               	andwf	___xxtofl@arg+1,w,c
 14693  004AB6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14694  004AB8  0E00               	movlw	0
 14695  004ABA  140D               	andwf	___xxtofl@arg+2,w,c
 14696  004ABC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14697  004ABE  0EFE               	movlw	254
 14698  004AC0  140E               	andwf	___xxtofl@arg+3,w,c
 14699  004AC2  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14700  004AC4  5005               	movf	??___xxtofl,w,c
 14701  004AC6  1006               	iorwf	??___xxtofl+1,w,c
 14702  004AC8  1007               	iorwf	??___xxtofl+2,w,c
 14703  004ACA  1008               	iorwf	??___xxtofl+3,w,c
 14704  004ACC  B4D8               	btfsc	status,2,c
 14705  004ACE  D00D               	goto	l1564
 14706  004AD0  D7E7               	goto	l7003
 14707  004AD2                     l7007:
 14708  004AD2  2A0A               	incf	___xxtofl@exp,f,c
 14709  004AD4  0E01               	movlw	1
 14710  004AD6  260B               	addwf	___xxtofl@arg,f,c
 14711  004AD8  0E00               	movlw	0
 14712  004ADA  220C               	addwfc	___xxtofl@arg+1,f,c
 14713  004ADC  220D               	addwfc	___xxtofl@arg+2,f,c
 14714  004ADE  220E               	addwfc	___xxtofl@arg+3,f,c
 14715  004AE0  90D8               	bcf	status,0,c
 14716  004AE2  320E               	rrcf	___xxtofl@arg+3,f,c
 14717  004AE4  320D               	rrcf	___xxtofl@arg+2,f,c
 14718  004AE6  320C               	rrcf	___xxtofl@arg+1,f,c
 14719  004AE8  320B               	rrcf	___xxtofl@arg,f,c
 14720  004AEA                     l1564:
 14721  004AEA  0E00               	movlw	0
 14722  004AEC  140B               	andwf	___xxtofl@arg,w,c
 14723  004AEE  6E05               	movwf	??___xxtofl& (0+255),c
 14724  004AF0  0E00               	movlw	0
 14725  004AF2  140C               	andwf	___xxtofl@arg+1,w,c
 14726  004AF4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14727  004AF6  0E00               	movlw	0
 14728  004AF8  140D               	andwf	___xxtofl@arg+2,w,c
 14729  004AFA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14730  004AFC  0EFF               	movlw	255
 14731  004AFE  140E               	andwf	___xxtofl@arg+3,w,c
 14732  004B00  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14733  004B02  5005               	movf	??___xxtofl,w,c
 14734  004B04  1006               	iorwf	??___xxtofl+1,w,c
 14735  004B06  1007               	iorwf	??___xxtofl+2,w,c
 14736  004B08  1008               	iorwf	??___xxtofl+3,w,c
 14737  004B0A  B4D8               	btfsc	status,2,c
 14738  004B0C  D007               	goto	l7015
 14739  004B0E  D7E1               	goto	l7007
 14740  004B10                     l7013:
 14741  004B10  060A               	decf	___xxtofl@exp,f,c
 14742  004B12  90D8               	bcf	status,0,c
 14743  004B14  360B               	rlcf	___xxtofl@arg,f,c
 14744  004B16  360C               	rlcf	___xxtofl@arg+1,f,c
 14745  004B18  360D               	rlcf	___xxtofl@arg+2,f,c
 14746  004B1A  360E               	rlcf	___xxtofl@arg+3,f,c
 14747  004B1C                     l7015:
 14748  004B1C  BE0D               	btfsc	___xxtofl@arg+2,7,c
 14749  004B1E  D003               	goto	u9700
 14750  004B20  0E02               	movlw	2
 14751  004B22  600A               	cpfslt	___xxtofl@exp,c
 14752  004B24  D7F5               	goto	l7013
 14753  004B26                     u9700:
 14754  004B26  A00A               	btfss	___xxtofl@exp,0,c
 14755  004B28  9E0D               	bcf	___xxtofl@arg+2,7,c
 14756  004B2A  90D8               	bcf	status,0,c
 14757  004B2C  320A               	rrcf	___xxtofl@exp,f,c
 14758  004B2E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14759  004B32  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 14760  004B34  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 14761  004B36  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 14762  004B38  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14763  004B3C  6A07               	clrf	??___xxtofl+2,c
 14764  004B3E  6A06               	clrf	??___xxtofl+1,c
 14765  004B40  6A05               	clrf	??___xxtofl,c
 14766  004B42  5005               	movf	??___xxtofl,w,c
 14767  004B44  120B               	iorwf	___xxtofl@arg,f,c
 14768  004B46  5006               	movf	??___xxtofl+1,w,c
 14769  004B48  120C               	iorwf	___xxtofl@arg+1,f,c
 14770  004B4A  5007               	movf	??___xxtofl+2,w,c
 14771  004B4C  120D               	iorwf	___xxtofl@arg+2,f,c
 14772  004B4E  5008               	movf	??___xxtofl+3,w,c
 14773  004B50  120E               	iorwf	___xxtofl@arg+3,f,c
 14774  004B52  5009               	movf	___xxtofl@sign,w,c
 14775  004B54  A4D8               	btfss	status,2,c
 14776  004B56  AE04               	btfss	___xxtofl@val+3,7,c
 14777  004B58  D001               	goto	l7031
 14778  004B5A  8E0E               	bsf	___xxtofl@arg+3,7,c
 14779  004B5C                     l7031:
 14780  004B5C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14781  004B60  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14782  004B64  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14783  004B68  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14784  004B6C  0012               	return		;funcret
 14785  004B6E                     __end_of___xxtofl:
 14786                           	opt callstack 0
 14787                           
 14788 ;; *************** function ___fltol *****************
 14789 ;; Defined at:
 14790 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14791 ;; Parameters:    Size  Location     Type
 14792 ;;  f1              4    0[COMRAM] unsigned char 
 14793 ;; Auto vars:     Size  Location     Type
 14794 ;;  exp1            1    9[COMRAM] unsigned char 
 14795 ;;  sign1           1    8[COMRAM] unsigned char 
 14796 ;; Return value:  Size  Location     Type
 14797 ;;                  4    0[COMRAM] long 
 14798 ;; Registers used:
 14799 ;;		wreg, status,2, status,0
 14800 ;; Tracked objects:
 14801 ;;		On entry : 0/0
 14802 ;;		On exit  : 0/0
 14803 ;;		Unchanged: 0/0
 14804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14805 ;;      Params:         4       0       0       0       0       0       0       0       0
 14806 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14807 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14808 ;;      Totals:        10       0       0       0       0       0       0       0       0
 14809 ;;Total ram usage:       10 bytes
 14810 ;; Hardware stack levels used:    1
 14811 ;; This function calls:
 14812 ;;		Nothing
 14813 ;; This function is called by:
 14814 ;;		_main
 14815 ;; This function uses a non-reentrant model
 14816 ;;
 14817                           
 14818                           	psect	text57
 14819  005528                     __ptext57:
 14820                           	opt callstack 0
 14821  005528                     ___fltol:
 14822                           	opt callstack 30
 14823                           
 14824                           ;incstack = 0
 14825  005528  3403               	rlcf	___fltol@f1+2,w,c
 14826  00552A  3404               	rlcf	___fltol@f1+3,w,c
 14827  00552C  6E0A               	movwf	___fltol@exp1,c
 14828  00552E  500A               	movf	___fltol@exp1,w,c
 14829  005530  A4D8               	btfss	status,2,c
 14830  005532  D009               	goto	l6951
 14831  005534                     u9570:
 14832  005534  0E00               	movlw	0
 14833  005536  6E01               	movwf	?___fltol,c
 14834  005538  0E00               	movlw	0
 14835  00553A  6E02               	movwf	?___fltol+1,c
 14836  00553C  0E00               	movlw	0
 14837  00553E  6E03               	movwf	?___fltol+2,c
 14838  005540  0E00               	movlw	0
 14839  005542  6E04               	movwf	?___fltol+3,c
 14840  005544  0012               	return	
 14841  005546                     l6951:
 14842  005546  C001  F005         	movff	___fltol@f1,??___fltol
 14843  00554A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 14844  00554E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 14845  005552  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 14846  005556  0E20               	movlw	32
 14847  005558  D005               	goto	u9580
 14848  00555A                     u9585:
 14849  00555A  90D8               	bcf	status,0,c
 14850  00555C  3208               	rrcf	??___fltol+3,f,c
 14851  00555E  3207               	rrcf	??___fltol+2,f,c
 14852  005560  3206               	rrcf	??___fltol+1,f,c
 14853  005562  3205               	rrcf	??___fltol,f,c
 14854  005564                     u9580:
 14855  005564  2EE8               	decfsz	wreg,f,c
 14856  005566  D7F9               	goto	u9585
 14857  005568  5005               	movf	??___fltol,w,c
 14858  00556A  6E09               	movwf	___fltol@sign1,c
 14859  00556C  8E03               	bsf	___fltol@f1+2,7,c
 14860  00556E  0EFF               	movlw	255
 14861  005570  1601               	andwf	___fltol@f1,f,c
 14862  005572  0EFF               	movlw	255
 14863  005574  1602               	andwf	___fltol@f1+1,f,c
 14864  005576  0EFF               	movlw	255
 14865  005578  1603               	andwf	___fltol@f1+2,f,c
 14866  00557A  0E00               	movlw	0
 14867  00557C  1604               	andwf	___fltol@f1+3,f,c
 14868  00557E  0E96               	movlw	150
 14869  005580  5E0A               	subwf	___fltol@exp1,f,c
 14870  005582  AE0A               	btfss	___fltol@exp1,7,c
 14871  005584  D00D               	goto	l6971
 14872  005586  500A               	movf	___fltol@exp1,w,c
 14873  005588  0A80               	xorlw	128
 14874  00558A  0F97               	addlw	151
 14875  00558C  A0D8               	btfss	status,0,c
 14876  00558E  D7D2               	goto	u9570
 14877  005590                     l6967:
 14878  005590  90D8               	bcf	status,0,c
 14879  005592  3204               	rrcf	___fltol@f1+3,f,c
 14880  005594  3203               	rrcf	___fltol@f1+2,f,c
 14881  005596  3202               	rrcf	___fltol@f1+1,f,c
 14882  005598  3201               	rrcf	___fltol@f1,f,c
 14883  00559A  3E0A               	incfsz	___fltol@exp1,f,c
 14884  00559C  D7F9               	goto	l6967
 14885  00559E  D00D               	goto	u9620
 14886  0055A0                     l6971:
 14887  0055A0  0E1F               	movlw	31
 14888  0055A2  640A               	cpfsgt	___fltol@exp1,c
 14889  0055A4  D007               	goto	l6979
 14890  0055A6  D7C6               	goto	u9570
 14891  0055A8                     l6977:
 14892  0055A8  90D8               	bcf	status,0,c
 14893  0055AA  3601               	rlcf	___fltol@f1,f,c
 14894  0055AC  3602               	rlcf	___fltol@f1+1,f,c
 14895  0055AE  3603               	rlcf	___fltol@f1+2,f,c
 14896  0055B0  3604               	rlcf	___fltol@f1+3,f,c
 14897  0055B2  060A               	decf	___fltol@exp1,f,c
 14898  0055B4                     l6979:
 14899  0055B4  500A               	movf	___fltol@exp1,w,c
 14900  0055B6  A4D8               	btfss	status,2,c
 14901  0055B8  D7F7               	goto	l6977
 14902  0055BA                     u9620:
 14903  0055BA  5009               	movf	___fltol@sign1,w,c
 14904  0055BC  B4D8               	btfsc	status,2,c
 14905  0055BE  D008               	goto	l6985
 14906  0055C0  1E04               	comf	___fltol@f1+3,f,c
 14907  0055C2  1E03               	comf	___fltol@f1+2,f,c
 14908  0055C4  1E02               	comf	___fltol@f1+1,f,c
 14909  0055C6  6C01               	negf	___fltol@f1,c
 14910  0055C8  0E00               	movlw	0
 14911  0055CA  2202               	addwfc	___fltol@f1+1,f,c
 14912  0055CC  2203               	addwfc	___fltol@f1+2,f,c
 14913  0055CE  2204               	addwfc	___fltol@f1+3,f,c
 14914  0055D0                     l6985:
 14915  0055D0  C001  F001         	movff	___fltol@f1,?___fltol
 14916  0055D4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 14917  0055D8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 14918  0055DC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 14919  0055E0  0012               	return		;funcret
 14920  0055E2                     __end_of___fltol:
 14921                           	opt callstack 0
 14922                           
 14923 ;; *************** function ___flmul *****************
 14924 ;; Defined at:
 14925 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 14926 ;; Parameters:    Size  Location     Type
 14927 ;;  b               4   14[COMRAM] long 
 14928 ;;  a               4   18[COMRAM] long 
 14929 ;; Auto vars:     Size  Location     Type
 14930 ;;  prod            4   33[COMRAM] struct .
 14931 ;;  grs             4   27[COMRAM] unsigned long 
 14932 ;;  temp            2   37[COMRAM] struct .
 14933 ;;  bexp            1   32[COMRAM] unsigned char 
 14934 ;;  aexp            1   31[COMRAM] unsigned char 
 14935 ;;  sign            1   26[COMRAM] unsigned char 
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  4   14[COMRAM] unsigned char 
 14938 ;; Registers used:
 14939 ;;		wreg, status,2, status,0, prodl, prodh
 14940 ;; Tracked objects:
 14941 ;;		On entry : 0/0
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14945 ;;      Params:         8       0       0       0       0       0       0       0       0
 14946 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14947 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14948 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14949 ;;Total ram usage:       25 bytes
 14950 ;; Hardware stack levels used:    1
 14951 ;; This function calls:
 14952 ;;		Nothing
 14953 ;; This function is called by:
 14954 ;;		_main
 14955 ;; This function uses a non-reentrant model
 14956 ;;
 14957                           
 14958                           	psect	text58
 14959  003340                     __ptext58:
 14960                           	opt callstack 0
 14961  003340                     ___flmul:
 14962                           	opt callstack 30
 14963                           
 14964                           ;incstack = 0
 14965  003340  5012               	movf	___flmul@b+3,w,c
 14966  003342  0B80               	andlw	128
 14967  003344  6E1B               	movwf	___flmul@sign,c
 14968  003346  5012               	movf	___flmul@b+3,w,c
 14969  003348  2412               	addwf	___flmul@b+3,w,c
 14970  00334A  6E21               	movwf	___flmul@bexp,c
 14971  00334C  BE11               	btfsc	___flmul@b+2,7,c
 14972  00334E  8021               	bsf	___flmul@bexp,0,c
 14973  003350  5021               	movf	___flmul@bexp,w,c
 14974  003352  B4D8               	btfsc	status,2,c
 14975  003354  D00D               	goto	l6829
 14976  003356  2821               	incf	___flmul@bexp,w,c
 14977  003358  A4D8               	btfss	status,2,c
 14978  00335A  D008               	goto	l6827
 14979  00335C  0E00               	movlw	0
 14980  00335E  6E0F               	movwf	___flmul@b,c
 14981  003360  0E00               	movlw	0
 14982  003362  6E10               	movwf	___flmul@b+1,c
 14983  003364  0E00               	movlw	0
 14984  003366  6E11               	movwf	___flmul@b+2,c
 14985  003368  0E00               	movlw	0
 14986  00336A  6E12               	movwf	___flmul@b+3,c
 14987  00336C                     l6827:
 14988  00336C  8E11               	bsf	___flmul@b+2,7,c
 14989  00336E  D008               	goto	l6831
 14990  003370                     l6829:
 14991  003370  0E00               	movlw	0
 14992  003372  6E0F               	movwf	___flmul@b,c
 14993  003374  0E00               	movlw	0
 14994  003376  6E10               	movwf	___flmul@b+1,c
 14995  003378  0E00               	movlw	0
 14996  00337A  6E11               	movwf	___flmul@b+2,c
 14997  00337C  0E00               	movlw	0
 14998  00337E  6E12               	movwf	___flmul@b+3,c
 14999  003380                     l6831:
 15000  003380  5016               	movf	___flmul@a+3,w,c
 15001  003382  0B80               	andlw	128
 15002  003384  1A1B               	xorwf	___flmul@sign,f,c
 15003  003386  5016               	movf	___flmul@a+3,w,c
 15004  003388  2416               	addwf	___flmul@a+3,w,c
 15005  00338A  6E20               	movwf	___flmul@aexp,c
 15006  00338C  BE15               	btfsc	___flmul@a+2,7,c
 15007  00338E  8020               	bsf	___flmul@aexp,0,c
 15008  003390  5020               	movf	___flmul@aexp,w,c
 15009  003392  B4D8               	btfsc	status,2,c
 15010  003394  D00D               	goto	l6847
 15011  003396  2820               	incf	___flmul@aexp,w,c
 15012  003398  A4D8               	btfss	status,2,c
 15013  00339A  D008               	goto	l6845
 15014  00339C  0E00               	movlw	0
 15015  00339E  6E13               	movwf	___flmul@a,c
 15016  0033A0  0E00               	movlw	0
 15017  0033A2  6E14               	movwf	___flmul@a+1,c
 15018  0033A4  0E00               	movlw	0
 15019  0033A6  6E15               	movwf	___flmul@a+2,c
 15020  0033A8  0E00               	movlw	0
 15021  0033AA  6E16               	movwf	___flmul@a+3,c
 15022  0033AC                     l6845:
 15023  0033AC  8E15               	bsf	___flmul@a+2,7,c
 15024  0033AE  D008               	goto	l1516
 15025  0033B0                     l6847:
 15026  0033B0  0E00               	movlw	0
 15027  0033B2  6E13               	movwf	___flmul@a,c
 15028  0033B4  0E00               	movlw	0
 15029  0033B6  6E14               	movwf	___flmul@a+1,c
 15030  0033B8  0E00               	movlw	0
 15031  0033BA  6E15               	movwf	___flmul@a+2,c
 15032  0033BC  0E00               	movlw	0
 15033  0033BE  6E16               	movwf	___flmul@a+3,c
 15034  0033C0                     l1516:
 15035  0033C0  5020               	movf	___flmul@aexp,w,c
 15036  0033C2  B4D8               	btfsc	status,2,c
 15037  0033C4  D003               	goto	u9450
 15038  0033C6  5021               	movf	___flmul@bexp,w,c
 15039  0033C8  A4D8               	btfss	status,2,c
 15040  0033CA  D009               	goto	l6855
 15041  0033CC                     u9450:
 15042  0033CC  0E00               	movlw	0
 15043  0033CE  6E0F               	movwf	?___flmul,c
 15044  0033D0  0E00               	movlw	0
 15045  0033D2  6E10               	movwf	?___flmul+1,c
 15046  0033D4  0E00               	movlw	0
 15047  0033D6  6E11               	movwf	?___flmul+2,c
 15048  0033D8  0E00               	movlw	0
 15049  0033DA  6E12               	movwf	?___flmul+3,c
 15050  0033DC  0012               	return	
 15051  0033DE                     l6855:
 15052  0033DE  5015               	movf	___flmul@a+2,w,c
 15053  0033E0  020F               	mulwf	___flmul@b,c
 15054  0033E2  CFF3 F026          	movff	prodl,___flmul@temp
 15055  0033E6  CFF4 F027          	movff	prodh,___flmul@temp+1
 15056  0033EA  5026               	movf	___flmul@temp,w,c
 15057  0033EC  6E1C               	movwf	___flmul@grs,c
 15058  0033EE  6A1D               	clrf	___flmul@grs+1,c
 15059  0033F0  6A1E               	clrf	___flmul@grs+2,c
 15060  0033F2  6A1F               	clrf	___flmul@grs+3,c
 15061  0033F4  5027               	movf	___flmul@temp+1,w,c
 15062  0033F6  6E22               	movwf	___flmul@prod,c
 15063  0033F8  6A23               	clrf	___flmul@prod+1,c
 15064  0033FA  6A24               	clrf	___flmul@prod+2,c
 15065  0033FC  6A25               	clrf	___flmul@prod+3,c
 15066  0033FE  5014               	movf	___flmul@a+1,w,c
 15067  003400  0210               	mulwf	___flmul@b+1,c
 15068  003402  CFF3 F026          	movff	prodl,___flmul@temp
 15069  003406  CFF4 F027          	movff	prodh,___flmul@temp+1
 15070  00340A  5026               	movf	___flmul@temp,w,c
 15071  00340C  261C               	addwf	___flmul@grs,f,c
 15072  00340E  0E00               	movlw	0
 15073  003410  221D               	addwfc	___flmul@grs+1,f,c
 15074  003412  221E               	addwfc	___flmul@grs+2,f,c
 15075  003414  221F               	addwfc	___flmul@grs+3,f,c
 15076  003416  5027               	movf	___flmul@temp+1,w,c
 15077  003418  2622               	addwf	___flmul@prod,f,c
 15078  00341A  0E00               	movlw	0
 15079  00341C  2223               	addwfc	___flmul@prod+1,f,c
 15080  00341E  2224               	addwfc	___flmul@prod+2,f,c
 15081  003420  2225               	addwfc	___flmul@prod+3,f,c
 15082  003422  5013               	movf	___flmul@a,w,c
 15083  003424  0211               	mulwf	___flmul@b+2,c
 15084  003426  CFF3 F026          	movff	prodl,___flmul@temp
 15085  00342A  CFF4 F027          	movff	prodh,___flmul@temp+1
 15086  00342E  5026               	movf	___flmul@temp,w,c
 15087  003430  261C               	addwf	___flmul@grs,f,c
 15088  003432  0E00               	movlw	0
 15089  003434  221D               	addwfc	___flmul@grs+1,f,c
 15090  003436  221E               	addwfc	___flmul@grs+2,f,c
 15091  003438  221F               	addwfc	___flmul@grs+3,f,c
 15092  00343A  5027               	movf	___flmul@temp+1,w,c
 15093  00343C  2622               	addwf	___flmul@prod,f,c
 15094  00343E  0E00               	movlw	0
 15095  003440  2223               	addwfc	___flmul@prod+1,f,c
 15096  003442  2224               	addwfc	___flmul@prod+2,f,c
 15097  003444  2225               	addwfc	___flmul@prod+3,f,c
 15098  003446  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 15099  00344A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 15100  00344E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 15101  003452  6A1C               	clrf	___flmul@grs,c
 15102  003454  5013               	movf	___flmul@a,w,c
 15103  003456  0210               	mulwf	___flmul@b+1,c
 15104  003458  CFF3 F026          	movff	prodl,___flmul@temp
 15105  00345C  CFF4 F027          	movff	prodh,___flmul@temp+1
 15106  003460  5026               	movf	___flmul@temp,w,c
 15107  003462  261C               	addwf	___flmul@grs,f,c
 15108  003464  5027               	movf	___flmul@temp+1,w,c
 15109  003466  221D               	addwfc	___flmul@grs+1,f,c
 15110  003468  0E00               	movlw	0
 15111  00346A  221E               	addwfc	___flmul@grs+2,f,c
 15112  00346C  0E00               	movlw	0
 15113  00346E  221F               	addwfc	___flmul@grs+3,f,c
 15114  003470  5014               	movf	___flmul@a+1,w,c
 15115  003472  020F               	mulwf	___flmul@b,c
 15116  003474  CFF3 F026          	movff	prodl,___flmul@temp
 15117  003478  CFF4 F027          	movff	prodh,___flmul@temp+1
 15118  00347C  5026               	movf	___flmul@temp,w,c
 15119  00347E  261C               	addwf	___flmul@grs,f,c
 15120  003480  5027               	movf	___flmul@temp+1,w,c
 15121  003482  221D               	addwfc	___flmul@grs+1,f,c
 15122  003484  0E00               	movlw	0
 15123  003486  221E               	addwfc	___flmul@grs+2,f,c
 15124  003488  0E00               	movlw	0
 15125  00348A  221F               	addwfc	___flmul@grs+3,f,c
 15126  00348C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 15127  003490  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 15128  003494  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 15129  003498  6A1C               	clrf	___flmul@grs,c
 15130  00349A  5013               	movf	___flmul@a,w,c
 15131  00349C  020F               	mulwf	___flmul@b,c
 15132  00349E  CFF3 F026          	movff	prodl,___flmul@temp
 15133  0034A2  CFF4 F027          	movff	prodh,___flmul@temp+1
 15134  0034A6  5026               	movf	___flmul@temp,w,c
 15135  0034A8  261C               	addwf	___flmul@grs,f,c
 15136  0034AA  5027               	movf	___flmul@temp+1,w,c
 15137  0034AC  221D               	addwfc	___flmul@grs+1,f,c
 15138  0034AE  0E00               	movlw	0
 15139  0034B0  221E               	addwfc	___flmul@grs+2,f,c
 15140  0034B2  0E00               	movlw	0
 15141  0034B4  221F               	addwfc	___flmul@grs+3,f,c
 15142  0034B6  5015               	movf	___flmul@a+2,w,c
 15143  0034B8  0210               	mulwf	___flmul@b+1,c
 15144  0034BA  CFF3 F026          	movff	prodl,___flmul@temp
 15145  0034BE  CFF4 F027          	movff	prodh,___flmul@temp+1
 15146  0034C2  5026               	movf	___flmul@temp,w,c
 15147  0034C4  2622               	addwf	___flmul@prod,f,c
 15148  0034C6  5027               	movf	___flmul@temp+1,w,c
 15149  0034C8  2223               	addwfc	___flmul@prod+1,f,c
 15150  0034CA  0E00               	movlw	0
 15151  0034CC  2224               	addwfc	___flmul@prod+2,f,c
 15152  0034CE  0E00               	movlw	0
 15153  0034D0  2225               	addwfc	___flmul@prod+3,f,c
 15154  0034D2  5014               	movf	___flmul@a+1,w,c
 15155  0034D4  0211               	mulwf	___flmul@b+2,c
 15156  0034D6  CFF3 F026          	movff	prodl,___flmul@temp
 15157  0034DA  CFF4 F027          	movff	prodh,___flmul@temp+1
 15158  0034DE  5026               	movf	___flmul@temp,w,c
 15159  0034E0  2622               	addwf	___flmul@prod,f,c
 15160  0034E2  5027               	movf	___flmul@temp+1,w,c
 15161  0034E4  2223               	addwfc	___flmul@prod+1,f,c
 15162  0034E6  0E00               	movlw	0
 15163  0034E8  2224               	addwfc	___flmul@prod+2,f,c
 15164  0034EA  0E00               	movlw	0
 15165  0034EC  2225               	addwfc	___flmul@prod+3,f,c
 15166  0034EE  5015               	movf	___flmul@a+2,w,c
 15167  0034F0  0211               	mulwf	___flmul@b+2,c
 15168  0034F2  CFF3 F026          	movff	prodl,___flmul@temp
 15169  0034F6  CFF4 F027          	movff	prodh,___flmul@temp+1
 15170  0034FA  5026               	movf	___flmul@temp,w,c
 15171  0034FC  6E17               	movwf	??___flmul& (0+255),c
 15172  0034FE  5027               	movf	___flmul@temp+1,w,c
 15173  003500  6E18               	movwf	(??___flmul+1)& (0+255),c
 15174  003502  6A19               	clrf	(??___flmul+2)& (0+255),c
 15175  003504  6A1A               	clrf	(??___flmul+3)& (0+255),c
 15176  003506  C019  F01A         	movff	??___flmul+2,??___flmul+3
 15177  00350A  C018  F019         	movff	??___flmul+1,??___flmul+2
 15178  00350E  C017  F018         	movff	??___flmul,??___flmul+1
 15179  003512  6A17               	clrf	??___flmul,c
 15180  003514  5017               	movf	??___flmul,w,c
 15181  003516  2622               	addwf	___flmul@prod,f,c
 15182  003518  5018               	movf	??___flmul+1,w,c
 15183  00351A  2223               	addwfc	___flmul@prod+1,f,c
 15184  00351C  5019               	movf	??___flmul+2,w,c
 15185  00351E  2224               	addwfc	___flmul@prod+2,f,c
 15186  003520  501A               	movf	??___flmul+3,w,c
 15187  003522  2225               	addwfc	___flmul@prod+3,f,c
 15188  003524  C01C  F017         	movff	___flmul@grs,??___flmul
 15189  003528  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 15190  00352C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 15191  003530  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 15192  003534  0E19               	movlw	25
 15193  003536  D005               	goto	u9460
 15194  003538                     u9465:
 15195  003538  90D8               	bcf	status,0,c
 15196  00353A  321A               	rrcf	??___flmul+3,f,c
 15197  00353C  3219               	rrcf	??___flmul+2,f,c
 15198  00353E  3218               	rrcf	??___flmul+1,f,c
 15199  003540  3217               	rrcf	??___flmul,f,c
 15200  003542                     u9460:
 15201  003542  2EE8               	decfsz	wreg,f,c
 15202  003544  D7F9               	goto	u9465
 15203  003546  5017               	movf	??___flmul,w,c
 15204  003548  2622               	addwf	___flmul@prod,f,c
 15205  00354A  5018               	movf	??___flmul+1,w,c
 15206  00354C  2223               	addwfc	___flmul@prod+1,f,c
 15207  00354E  5019               	movf	??___flmul+2,w,c
 15208  003550  2224               	addwfc	___flmul@prod+2,f,c
 15209  003552  501A               	movf	??___flmul+3,w,c
 15210  003554  2225               	addwfc	___flmul@prod+3,f,c
 15211  003556  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 15212  00355A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 15213  00355E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 15214  003562  6A1C               	clrf	___flmul@grs,c
 15215  003564  5020               	movf	___flmul@aexp,w,c
 15216  003566  C021  F017         	movff	___flmul@bexp,??___flmul
 15217  00356A  6A18               	clrf	(??___flmul+1)& (0+255),c
 15218  00356C  2617               	addwf	??___flmul,f,c
 15219  00356E  0E00               	movlw	0
 15220  003570  2218               	addwfc	??___flmul+1,f,c
 15221  003572  0E82               	movlw	130
 15222  003574  2417               	addwf	??___flmul,w,c
 15223  003576  6E26               	movwf	___flmul@temp,c
 15224  003578  0EFF               	movlw	255
 15225  00357A  2018               	addwfc	??___flmul+1,w,c
 15226  00357C  6E27               	movwf	___flmul@temp+1,c
 15227  00357E  D00F               	goto	l6903
 15228  003580                     l6897:
 15229  003580  90D8               	bcf	status,0,c
 15230  003582  3622               	rlcf	___flmul@prod,f,c
 15231  003584  3623               	rlcf	___flmul@prod+1,f,c
 15232  003586  3624               	rlcf	___flmul@prod+2,f,c
 15233  003588  3625               	rlcf	___flmul@prod+3,f,c
 15234  00358A  BE1F               	btfsc	___flmul@grs+3,7,c
 15235  00358C  8022               	bsf	___flmul@prod,0,c
 15236  00358E  90D8               	bcf	status,0,c
 15237  003590  361C               	rlcf	___flmul@grs,f,c
 15238  003592  361D               	rlcf	___flmul@grs+1,f,c
 15239  003594  361E               	rlcf	___flmul@grs+2,f,c
 15240  003596  361F               	rlcf	___flmul@grs+3,f,c
 15241  003598  0626               	decf	___flmul@temp,f,c
 15242  00359A  A0D8               	btfss	status,0,c
 15243  00359C  0627               	decf	___flmul@temp+1,f,c
 15244  00359E                     l6903:
 15245  00359E  AE24               	btfss	___flmul@prod+2,7,c
 15246  0035A0  D7EF               	goto	l6897
 15247  0035A2  0E00               	movlw	0
 15248  0035A4  6E20               	movwf	___flmul@aexp,c
 15249  0035A6  AE1F               	btfss	___flmul@grs+3,7,c
 15250  0035A8  D017               	goto	l1525
 15251  0035AA  0EFF               	movlw	255
 15252  0035AC  141C               	andwf	___flmul@grs,w,c
 15253  0035AE  6E17               	movwf	??___flmul& (0+255),c
 15254  0035B0  0EFF               	movlw	255
 15255  0035B2  141D               	andwf	___flmul@grs+1,w,c
 15256  0035B4  6E18               	movwf	(??___flmul+1)& (0+255),c
 15257  0035B6  0EFF               	movlw	255
 15258  0035B8  141E               	andwf	___flmul@grs+2,w,c
 15259  0035BA  6E19               	movwf	(??___flmul+2)& (0+255),c
 15260  0035BC  0E7F               	movlw	127
 15261  0035BE  141F               	andwf	___flmul@grs+3,w,c
 15262  0035C0  6E1A               	movwf	(??___flmul+3)& (0+255),c
 15263  0035C2  5017               	movf	??___flmul,w,c
 15264  0035C4  1018               	iorwf	??___flmul+1,w,c
 15265  0035C6  1019               	iorwf	??___flmul+2,w,c
 15266  0035C8  101A               	iorwf	??___flmul+3,w,c
 15267  0035CA  B4D8               	btfsc	status,2,c
 15268  0035CC  D003               	goto	l1526
 15269  0035CE                     u9500:
 15270  0035CE  0E01               	movlw	1
 15271  0035D0  6E20               	movwf	___flmul@aexp,c
 15272  0035D2  D002               	goto	l1525
 15273  0035D4                     l1526:
 15274  0035D4  B022               	btfsc	___flmul@prod,0,c
 15275  0035D6  D7FB               	goto	u9500
 15276  0035D8                     l1525:
 15277  0035D8  5020               	movf	___flmul@aexp,w,c
 15278  0035DA  B4D8               	btfsc	status,2,c
 15279  0035DC  D01F               	goto	l6923
 15280  0035DE  0E01               	movlw	1
 15281  0035E0  2622               	addwf	___flmul@prod,f,c
 15282  0035E2  0E00               	movlw	0
 15283  0035E4  2223               	addwfc	___flmul@prod+1,f,c
 15284  0035E6  2224               	addwfc	___flmul@prod+2,f,c
 15285  0035E8  2225               	addwfc	___flmul@prod+3,f,c
 15286  0035EA  A025               	btfss	___flmul@prod+3,0,c
 15287  0035EC  D017               	goto	l6923
 15288  0035EE  C022  F017         	movff	___flmul@prod,??___flmul
 15289  0035F2  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 15290  0035F6  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 15291  0035FA  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 15292  0035FE  341A               	rlcf	??___flmul+3,w,c
 15293  003600  321A               	rrcf	??___flmul+3,f,c
 15294  003602  3219               	rrcf	??___flmul+2,f,c
 15295  003604  3218               	rrcf	??___flmul+1,f,c
 15296  003606  3217               	rrcf	??___flmul,f,c
 15297  003608  C017  F022         	movff	??___flmul,___flmul@prod
 15298  00360C  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 15299  003610  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 15300  003614  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 15301  003618  4A26               	infsnz	___flmul@temp,f,c
 15302  00361A  2A27               	incf	___flmul@temp+1,f,c
 15303  00361C                     l6923:
 15304  00361C  BE27               	btfsc	___flmul@temp+1,7,c
 15305  00361E  D00D               	goto	l6927
 15306  003620  5027               	movf	___flmul@temp+1,w,c
 15307  003622  E103               	bnz	u9540
 15308  003624  2826               	incf	___flmul@temp,w,c
 15309  003626  A0D8               	btfss	status,0,c
 15310  003628  D008               	goto	l6927
 15311  00362A                     u9540:
 15312  00362A  0E00               	movlw	0
 15313  00362C  6E22               	movwf	___flmul@prod,c
 15314  00362E  0E00               	movlw	0
 15315  003630  6E23               	movwf	___flmul@prod+1,c
 15316  003632  0E80               	movlw	128
 15317  003634  6E24               	movwf	___flmul@prod+2,c
 15318  003636  0E7F               	movlw	127
 15319  003638  D020               	goto	L19
 15320  00363A                     l6927:
 15321  00363A  BE27               	btfsc	___flmul@temp+1,7,c
 15322  00363C  D005               	goto	u9550
 15323  00363E  5027               	movf	___flmul@temp+1,w,c
 15324  003640  E10E               	bnz	l1533
 15325  003642  0426               	decf	___flmul@temp,w,c
 15326  003644  B0D8               	btfsc	status,0,c
 15327  003646  D00B               	goto	l1533
 15328  003648                     u9550:
 15329  003648  0E00               	movlw	0
 15330  00364A  6E22               	movwf	___flmul@prod,c
 15331  00364C  0E00               	movlw	0
 15332  00364E  6E23               	movwf	___flmul@prod+1,c
 15333  003650  0E00               	movlw	0
 15334  003652  6E24               	movwf	___flmul@prod+2,c
 15335  003654  0E00               	movlw	0
 15336  003656  6E25               	movwf	___flmul@prod+3,c
 15337  003658  0E00               	movlw	0
 15338  00365A  6E1B               	movwf	___flmul@sign,c
 15339  00365C  D00F               	goto	l6939
 15340  00365E                     l1533:
 15341  00365E  C026  F021         	movff	___flmul@temp,___flmul@bexp
 15342  003662  0EFF               	movlw	255
 15343  003664  1622               	andwf	___flmul@prod,f,c
 15344  003666  0EFF               	movlw	255
 15345  003668  1623               	andwf	___flmul@prod+1,f,c
 15346  00366A  0E7F               	movlw	127
 15347  00366C  1624               	andwf	___flmul@prod+2,f,c
 15348  00366E  0E00               	movlw	0
 15349  003670  1625               	andwf	___flmul@prod+3,f,c
 15350  003672  B021               	btfsc	___flmul@bexp,0,c
 15351  003674  8E24               	bsf	___flmul@prod+2,7,c
 15352  003676  90D8               	bcf	status,0,c
 15353  003678  3021               	rrcf	___flmul@bexp,w,c
 15354  00367A                     L19:
 15355  00367A  6E25               	movwf	___flmul@prod+3,c
 15356  00367C                     l6939:
 15357  00367C  501B               	movf	___flmul@sign,w,c
 15358  00367E  1225               	iorwf	___flmul@prod+3,f,c
 15359  003680  C022  F00F         	movff	___flmul@prod,?___flmul
 15360  003684  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 15361  003688  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 15362  00368C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 15363  003690  0012               	return		;funcret
 15364  003692                     __end_of___flmul:
 15365                           	opt callstack 0
 15366                           
 15367 ;; *************** function ___fldiv *****************
 15368 ;; Defined at:
 15369 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 15370 ;; Parameters:    Size  Location     Type
 15371 ;;  b               4   39[COMRAM] unsigned char 
 15372 ;;  a               4   43[COMRAM] unsigned char 
 15373 ;; Auto vars:     Size  Location     Type
 15374 ;;  grs             4   58[COMRAM] unsigned long 
 15375 ;;  rem             4   51[COMRAM] unsigned long 
 15376 ;;  new_exp         2   56[COMRAM] short 
 15377 ;;  aexp            1   63[COMRAM] unsigned char 
 15378 ;;  bexp            1   62[COMRAM] unsigned char 
 15379 ;;  sign            1   55[COMRAM] unsigned char 
 15380 ;; Return value:  Size  Location     Type
 15381 ;;                  4   39[COMRAM] unsigned char 
 15382 ;; Registers used:
 15383 ;;		wreg, status,2, status,0
 15384 ;; Tracked objects:
 15385 ;;		On entry : 0/0
 15386 ;;		On exit  : 0/0
 15387 ;;		Unchanged: 0/0
 15388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15389 ;;      Params:         8       0       0       0       0       0       0       0       0
 15390 ;;      Locals:        13       0       0       0       0       0       0       0       0
 15391 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15392 ;;      Totals:        25       0       0       0       0       0       0       0       0
 15393 ;;Total ram usage:       25 bytes
 15394 ;; Hardware stack levels used:    1
 15395 ;; This function calls:
 15396 ;;		Nothing
 15397 ;; This function is called by:
 15398 ;;		_main
 15399 ;; This function uses a non-reentrant model
 15400 ;;
 15401                           
 15402                           	psect	text59
 15403  003C4E                     __ptext59:
 15404                           	opt callstack 0
 15405  003C4E                     ___fldiv:
 15406                           	opt callstack 30
 15407                           
 15408                           ;incstack = 0
 15409  003C4E  502B               	movf	___fldiv@b+3,w,c
 15410  003C50  0B80               	andlw	128
 15411  003C52  6E38               	movwf	___fldiv@sign,c
 15412  003C54  502B               	movf	___fldiv@b+3,w,c
 15413  003C56  242B               	addwf	___fldiv@b+3,w,c
 15414  003C58  6E3F               	movwf	___fldiv@bexp,c
 15415  003C5A  BE2A               	btfsc	___fldiv@b+2,7,c
 15416  003C5C  803F               	bsf	___fldiv@bexp,0,c
 15417  003C5E  503F               	movf	___fldiv@bexp,w,c
 15418  003C60  B4D8               	btfsc	status,2,c
 15419  003C62  D00D               	goto	l6693
 15420  003C64  283F               	incf	___fldiv@bexp,w,c
 15421  003C66  A4D8               	btfss	status,2,c
 15422  003C68  D008               	goto	l6689
 15423  003C6A  0E00               	movlw	0
 15424  003C6C  6E28               	movwf	___fldiv@b,c
 15425  003C6E  0E00               	movlw	0
 15426  003C70  6E29               	movwf	___fldiv@b+1,c
 15427  003C72  0E00               	movlw	0
 15428  003C74  6E2A               	movwf	___fldiv@b+2,c
 15429  003C76  0E00               	movlw	0
 15430  003C78  6E2B               	movwf	___fldiv@b+3,c
 15431  003C7A                     l6689:
 15432  003C7A  8E2A               	bsf	___fldiv@b+2,7,c
 15433  003C7C  D006               	goto	L20
 15434  003C7E                     l6693:
 15435  003C7E  0E00               	movlw	0
 15436  003C80  6E28               	movwf	___fldiv@b,c
 15437  003C82  0E00               	movlw	0
 15438  003C84  6E29               	movwf	___fldiv@b+1,c
 15439  003C86  0E00               	movlw	0
 15440  003C88  6E2A               	movwf	___fldiv@b+2,c
 15441  003C8A                     L20:
 15442  003C8A  0E00               	movlw	0
 15443  003C8C  6E2B               	movwf	___fldiv@b+3,c
 15444  003C8E  502F               	movf	___fldiv@a+3,w,c
 15445  003C90  0B80               	andlw	128
 15446  003C92  1A38               	xorwf	___fldiv@sign,f,c
 15447  003C94  502F               	movf	___fldiv@a+3,w,c
 15448  003C96  242F               	addwf	___fldiv@a+3,w,c
 15449  003C98  6E40               	movwf	___fldiv@aexp,c
 15450  003C9A  BE2E               	btfsc	___fldiv@a+2,7,c
 15451  003C9C  8040               	bsf	___fldiv@aexp,0,c
 15452  003C9E  5040               	movf	___fldiv@aexp,w,c
 15453  003CA0  B4D8               	btfsc	status,2,c
 15454  003CA2  D00D               	goto	l6713
 15455  003CA4  2840               	incf	___fldiv@aexp,w,c
 15456  003CA6  A4D8               	btfss	status,2,c
 15457  003CA8  D008               	goto	l6709
 15458  003CAA  0E00               	movlw	0
 15459  003CAC  6E2C               	movwf	___fldiv@a,c
 15460  003CAE  0E00               	movlw	0
 15461  003CB0  6E2D               	movwf	___fldiv@a+1,c
 15462  003CB2  0E00               	movlw	0
 15463  003CB4  6E2E               	movwf	___fldiv@a+2,c
 15464  003CB6  0E00               	movlw	0
 15465  003CB8  6E2F               	movwf	___fldiv@a+3,c
 15466  003CBA                     l6709:
 15467  003CBA  8E2E               	bsf	___fldiv@a+2,7,c
 15468  003CBC  D006               	goto	L21
 15469  003CBE                     l6713:
 15470  003CBE  0E00               	movlw	0
 15471  003CC0  6E2C               	movwf	___fldiv@a,c
 15472  003CC2  0E00               	movlw	0
 15473  003CC4  6E2D               	movwf	___fldiv@a+1,c
 15474  003CC6  0E00               	movlw	0
 15475  003CC8  6E2E               	movwf	___fldiv@a+2,c
 15476  003CCA                     L21:
 15477  003CCA  0E00               	movlw	0
 15478  003CCC  6E2F               	movwf	___fldiv@a+3,c
 15479  003CCE  502C               	movf	___fldiv@a,w,c
 15480  003CD0  102D               	iorwf	___fldiv@a+1,w,c
 15481  003CD2  102E               	iorwf	___fldiv@a+2,w,c
 15482  003CD4  102F               	iorwf	___fldiv@a+3,w,c
 15483  003CD6  A4D8               	btfss	status,2,c
 15484  003CD8  D017               	goto	l6727
 15485  003CDA  0E00               	movlw	0
 15486  003CDC  6E28               	movwf	___fldiv@b,c
 15487  003CDE  0E00               	movlw	0
 15488  003CE0  6E29               	movwf	___fldiv@b+1,c
 15489  003CE2  0E00               	movlw	0
 15490  003CE4  6E2A               	movwf	___fldiv@b+2,c
 15491  003CE6  0E00               	movlw	0
 15492  003CE8  6E2B               	movwf	___fldiv@b+3,c
 15493  003CEA  0E80               	movlw	128
 15494  003CEC  122A               	iorwf	___fldiv@b+2,f,c
 15495  003CEE  0E7F               	movlw	127
 15496  003CF0  122B               	iorwf	___fldiv@b+3,f,c
 15497  003CF2                     l6721:
 15498  003CF2  5038               	movf	___fldiv@sign,w,c
 15499  003CF4  122B               	iorwf	___fldiv@b+3,f,c
 15500  003CF6  C028  F028         	movff	___fldiv@b,?___fldiv
 15501  003CFA  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 15502  003CFE  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 15503  003D02  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 15504  003D06  0012               	return	
 15505  003D08                     l6727:
 15506  003D08  503F               	movf	___fldiv@bexp,w,c
 15507  003D0A  A4D8               	btfss	status,2,c
 15508  003D0C  D009               	goto	l6735
 15509  003D0E  0E00               	movlw	0
 15510  003D10  6E28               	movwf	?___fldiv,c
 15511  003D12  0E00               	movlw	0
 15512  003D14  6E29               	movwf	?___fldiv+1,c
 15513  003D16  0E00               	movlw	0
 15514  003D18  6E2A               	movwf	?___fldiv+2,c
 15515  003D1A  0E00               	movlw	0
 15516  003D1C  6E2B               	movwf	?___fldiv+3,c
 15517  003D1E  0012               	return	
 15518  003D20                     l6735:
 15519  003D20  5040               	movf	___fldiv@aexp,w,c
 15520  003D22  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 15521  003D26  6A31               	clrf	(??___fldiv+1)& (0+255),c
 15522  003D28  5E30               	subwf	??___fldiv,f,c
 15523  003D2A  0E00               	movlw	0
 15524  003D2C  5A31               	subwfb	??___fldiv+1,f,c
 15525  003D2E  0E7F               	movlw	127
 15526  003D30  2430               	addwf	??___fldiv,w,c
 15527  003D32  6E39               	movwf	___fldiv@new_exp,c
 15528  003D34  0E00               	movlw	0
 15529  003D36  2031               	addwfc	??___fldiv+1,w,c
 15530  003D38  6E3A               	movwf	___fldiv@new_exp+1,c
 15531  003D3A  C028  F034         	movff	___fldiv@b,___fldiv@rem
 15532  003D3E  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 15533  003D42  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 15534  003D46  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 15535  003D4A  0E00               	movlw	0
 15536  003D4C  6E28               	movwf	___fldiv@b,c
 15537  003D4E  0E00               	movlw	0
 15538  003D50  6E29               	movwf	___fldiv@b+1,c
 15539  003D52  0E00               	movlw	0
 15540  003D54  6E2A               	movwf	___fldiv@b+2,c
 15541  003D56  0E00               	movlw	0
 15542  003D58  6E2B               	movwf	___fldiv@b+3,c
 15543  003D5A  0E00               	movlw	0
 15544  003D5C  6E3B               	movwf	___fldiv@grs,c
 15545  003D5E  0E00               	movlw	0
 15546  003D60  6E3C               	movwf	___fldiv@grs+1,c
 15547  003D62  0E00               	movlw	0
 15548  003D64  6E3D               	movwf	___fldiv@grs+2,c
 15549  003D66  0E00               	movlw	0
 15550  003D68  6E3E               	movwf	___fldiv@grs+3,c
 15551  003D6A  0E00               	movlw	0
 15552  003D6C  6E40               	movwf	___fldiv@aexp,c
 15553  003D6E  D028               	goto	l1486
 15554  003D70                     l6745:
 15555  003D70  5040               	movf	___fldiv@aexp,w,c
 15556  003D72  B4D8               	btfsc	status,2,c
 15557  003D74  D011               	goto	l6753
 15558  003D76  90D8               	bcf	status,0,c
 15559  003D78  3634               	rlcf	___fldiv@rem,f,c
 15560  003D7A  3635               	rlcf	___fldiv@rem+1,f,c
 15561  003D7C  3636               	rlcf	___fldiv@rem+2,f,c
 15562  003D7E  3637               	rlcf	___fldiv@rem+3,f,c
 15563  003D80  90D8               	bcf	status,0,c
 15564  003D82  3628               	rlcf	___fldiv@b,f,c
 15565  003D84  3629               	rlcf	___fldiv@b+1,f,c
 15566  003D86  362A               	rlcf	___fldiv@b+2,f,c
 15567  003D88  362B               	rlcf	___fldiv@b+3,f,c
 15568  003D8A  BE3E               	btfsc	___fldiv@grs+3,7,c
 15569  003D8C  8028               	bsf	___fldiv@b,0,c
 15570  003D8E  90D8               	bcf	status,0,c
 15571  003D90  363B               	rlcf	___fldiv@grs,f,c
 15572  003D92  363C               	rlcf	___fldiv@grs+1,f,c
 15573  003D94  363D               	rlcf	___fldiv@grs+2,f,c
 15574  003D96  363E               	rlcf	___fldiv@grs+3,f,c
 15575  003D98                     l6753:
 15576  003D98  502C               	movf	___fldiv@a,w,c
 15577  003D9A  5C34               	subwf	___fldiv@rem,w,c
 15578  003D9C  502D               	movf	___fldiv@a+1,w,c
 15579  003D9E  5835               	subwfb	___fldiv@rem+1,w,c
 15580  003DA0  502E               	movf	___fldiv@a+2,w,c
 15581  003DA2  5836               	subwfb	___fldiv@rem+2,w,c
 15582  003DA4  502F               	movf	___fldiv@a+3,w,c
 15583  003DA6  5837               	subwfb	___fldiv@rem+3,w,c
 15584  003DA8  A0D8               	btfss	status,0,c
 15585  003DAA  D009               	goto	l6759
 15586  003DAC  8C3E               	bsf	___fldiv@grs+3,6,c
 15587  003DAE  502C               	movf	___fldiv@a,w,c
 15588  003DB0  5E34               	subwf	___fldiv@rem,f,c
 15589  003DB2  502D               	movf	___fldiv@a+1,w,c
 15590  003DB4  5A35               	subwfb	___fldiv@rem+1,f,c
 15591  003DB6  502E               	movf	___fldiv@a+2,w,c
 15592  003DB8  5A36               	subwfb	___fldiv@rem+2,f,c
 15593  003DBA  502F               	movf	___fldiv@a+3,w,c
 15594  003DBC  5A37               	subwfb	___fldiv@rem+3,f,c
 15595  003DBE                     l6759:
 15596  003DBE  2A40               	incf	___fldiv@aexp,f,c
 15597  003DC0                     l1486:
 15598  003DC0  0E19               	movlw	25
 15599  003DC2  6440               	cpfsgt	___fldiv@aexp,c
 15600  003DC4  D7D5               	goto	l6745
 15601  003DC6  5034               	movf	___fldiv@rem,w,c
 15602  003DC8  1035               	iorwf	___fldiv@rem+1,w,c
 15603  003DCA  1036               	iorwf	___fldiv@rem+2,w,c
 15604  003DCC  1037               	iorwf	___fldiv@rem+3,w,c
 15605  003DCE  B4D8               	btfsc	status,2,c
 15606  003DD0  D011               	goto	l6771
 15607  003DD2  803B               	bsf	___fldiv@grs,0,c
 15608  003DD4  D00F               	goto	l6771
 15609  003DD6                     l6765:
 15610  003DD6  90D8               	bcf	status,0,c
 15611  003DD8  3628               	rlcf	___fldiv@b,f,c
 15612  003DDA  3629               	rlcf	___fldiv@b+1,f,c
 15613  003DDC  362A               	rlcf	___fldiv@b+2,f,c
 15614  003DDE  362B               	rlcf	___fldiv@b+3,f,c
 15615  003DE0  BE3E               	btfsc	___fldiv@grs+3,7,c
 15616  003DE2  8028               	bsf	___fldiv@b,0,c
 15617  003DE4  90D8               	bcf	status,0,c
 15618  003DE6  363B               	rlcf	___fldiv@grs,f,c
 15619  003DE8  363C               	rlcf	___fldiv@grs+1,f,c
 15620  003DEA  363D               	rlcf	___fldiv@grs+2,f,c
 15621  003DEC  363E               	rlcf	___fldiv@grs+3,f,c
 15622  003DEE  0639               	decf	___fldiv@new_exp,f,c
 15623  003DF0  A0D8               	btfss	status,0,c
 15624  003DF2  063A               	decf	___fldiv@new_exp+1,f,c
 15625  003DF4                     l6771:
 15626  003DF4  AE2A               	btfss	___fldiv@b+2,7,c
 15627  003DF6  D7EF               	goto	l6765
 15628  003DF8  0E00               	movlw	0
 15629  003DFA  6E40               	movwf	___fldiv@aexp,c
 15630  003DFC  AE3E               	btfss	___fldiv@grs+3,7,c
 15631  003DFE  D017               	goto	l1497
 15632  003E00  0EFF               	movlw	255
 15633  003E02  143B               	andwf	___fldiv@grs,w,c
 15634  003E04  6E30               	movwf	??___fldiv& (0+255),c
 15635  003E06  0EFF               	movlw	255
 15636  003E08  143C               	andwf	___fldiv@grs+1,w,c
 15637  003E0A  6E31               	movwf	(??___fldiv+1)& (0+255),c
 15638  003E0C  0EFF               	movlw	255
 15639  003E0E  143D               	andwf	___fldiv@grs+2,w,c
 15640  003E10  6E32               	movwf	(??___fldiv+2)& (0+255),c
 15641  003E12  0E7F               	movlw	127
 15642  003E14  143E               	andwf	___fldiv@grs+3,w,c
 15643  003E16  6E33               	movwf	(??___fldiv+3)& (0+255),c
 15644  003E18  5030               	movf	??___fldiv,w,c
 15645  003E1A  1031               	iorwf	??___fldiv+1,w,c
 15646  003E1C  1032               	iorwf	??___fldiv+2,w,c
 15647  003E1E  1033               	iorwf	??___fldiv+3,w,c
 15648  003E20  B4D8               	btfsc	status,2,c
 15649  003E22  D003               	goto	l1498
 15650  003E24                     u9310:
 15651  003E24  0E01               	movlw	1
 15652  003E26  6E40               	movwf	___fldiv@aexp,c
 15653  003E28  D002               	goto	l1497
 15654  003E2A                     l1498:
 15655  003E2A  B028               	btfsc	___fldiv@b,0,c
 15656  003E2C  D7FB               	goto	u9310
 15657  003E2E                     l1497:
 15658  003E2E  5040               	movf	___fldiv@aexp,w,c
 15659  003E30  B4D8               	btfsc	status,2,c
 15660  003E32  D01F               	goto	l6791
 15661  003E34  0E01               	movlw	1
 15662  003E36  2628               	addwf	___fldiv@b,f,c
 15663  003E38  0E00               	movlw	0
 15664  003E3A  2229               	addwfc	___fldiv@b+1,f,c
 15665  003E3C  222A               	addwfc	___fldiv@b+2,f,c
 15666  003E3E  222B               	addwfc	___fldiv@b+3,f,c
 15667  003E40  A02B               	btfss	___fldiv@b+3,0,c
 15668  003E42  D017               	goto	l6791
 15669  003E44  C028  F030         	movff	___fldiv@b,??___fldiv
 15670  003E48  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 15671  003E4C  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 15672  003E50  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 15673  003E54  3433               	rlcf	??___fldiv+3,w,c
 15674  003E56  3233               	rrcf	??___fldiv+3,f,c
 15675  003E58  3232               	rrcf	??___fldiv+2,f,c
 15676  003E5A  3231               	rrcf	??___fldiv+1,f,c
 15677  003E5C  3230               	rrcf	??___fldiv,f,c
 15678  003E5E  C030  F028         	movff	??___fldiv,___fldiv@b
 15679  003E62  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 15680  003E66  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 15681  003E6A  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 15682  003E6E  4A39               	infsnz	___fldiv@new_exp,f,c
 15683  003E70  2A3A               	incf	___fldiv@new_exp+1,f,c
 15684  003E72                     l6791:
 15685  003E72  BE3A               	btfsc	___fldiv@new_exp+1,7,c
 15686  003E74  D010               	goto	l6795
 15687  003E76  503A               	movf	___fldiv@new_exp+1,w,c
 15688  003E78  E103               	bnz	u9350
 15689  003E7A  2839               	incf	___fldiv@new_exp,w,c
 15690  003E7C  A0D8               	btfss	status,0,c
 15691  003E7E  D00B               	goto	l6795
 15692  003E80                     u9350:
 15693  003E80  0E00               	movlw	0
 15694  003E82  6E3A               	movwf	___fldiv@new_exp+1,c
 15695  003E84  6839               	setf	___fldiv@new_exp,c
 15696  003E86  0E00               	movlw	0
 15697  003E88  6E28               	movwf	___fldiv@b,c
 15698  003E8A  0E00               	movlw	0
 15699  003E8C  6E29               	movwf	___fldiv@b+1,c
 15700  003E8E  0E00               	movlw	0
 15701  003E90  6E2A               	movwf	___fldiv@b+2,c
 15702  003E92  0E00               	movlw	0
 15703  003E94  6E2B               	movwf	___fldiv@b+3,c
 15704  003E96                     l6795:
 15705  003E96  BE3A               	btfsc	___fldiv@new_exp+1,7,c
 15706  003E98  D005               	goto	u9360
 15707  003E9A  503A               	movf	___fldiv@new_exp+1,w,c
 15708  003E9C  E111               	bnz	l6799
 15709  003E9E  0439               	decf	___fldiv@new_exp,w,c
 15710  003EA0  B0D8               	btfsc	status,0,c
 15711  003EA2  D00E               	goto	l6799
 15712  003EA4                     u9360:
 15713  003EA4  0E00               	movlw	0
 15714  003EA6  6E3A               	movwf	___fldiv@new_exp+1,c
 15715  003EA8  0E00               	movlw	0
 15716  003EAA  6E39               	movwf	___fldiv@new_exp,c
 15717  003EAC  0E00               	movlw	0
 15718  003EAE  6E28               	movwf	___fldiv@b,c
 15719  003EB0  0E00               	movlw	0
 15720  003EB2  6E29               	movwf	___fldiv@b+1,c
 15721  003EB4  0E00               	movlw	0
 15722  003EB6  6E2A               	movwf	___fldiv@b+2,c
 15723  003EB8  0E00               	movlw	0
 15724  003EBA  6E2B               	movwf	___fldiv@b+3,c
 15725  003EBC  0E00               	movlw	0
 15726  003EBE  6E38               	movwf	___fldiv@sign,c
 15727  003EC0                     l6799:
 15728  003EC0  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 15729  003EC4  A03F               	btfss	___fldiv@bexp,0,c
 15730  003EC6  D002               	goto	l6805
 15731  003EC8  8E2A               	bsf	___fldiv@b+2,7,c
 15732  003ECA  D001               	goto	l6807
 15733  003ECC                     l6805:
 15734  003ECC  9E2A               	bcf	___fldiv@b+2,7,c
 15735  003ECE                     l6807:
 15736  003ECE  90D8               	bcf	status,0,c
 15737  003ED0  303F               	rrcf	___fldiv@bexp,w,c
 15738  003ED2  6E2B               	movwf	___fldiv@b+3,c
 15739  003ED4  D70E               	goto	l6721
 15740  003ED6                     __end_of___fldiv:
 15741                           	opt callstack 0
 15742                           
 15743 ;; *************** function _Init8LEDs *****************
 15744 ;; Defined at:
 15745 ;;		line 78 in file "Main.c"
 15746 ;; Parameters:    Size  Location     Type
 15747 ;;		None
 15748 ;; Auto vars:     Size  Location     Type
 15749 ;;		None
 15750 ;; Return value:  Size  Location     Type
 15751 ;;                  1    wreg      void 
 15752 ;; Registers used:
 15753 ;;		wreg, status,2
 15754 ;; Tracked objects:
 15755 ;;		On entry : 0/0
 15756 ;;		On exit  : 0/0
 15757 ;;		Unchanged: 0/0
 15758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15759 ;;      Params:         0       0       0       0       0       0       0       0       0
 15760 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15761 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15762 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15763 ;;Total ram usage:        0 bytes
 15764 ;; Hardware stack levels used:    1
 15765 ;; This function calls:
 15766 ;;		Nothing
 15767 ;; This function is called by:
 15768 ;;		_main
 15769 ;; This function uses a non-reentrant model
 15770 ;;
 15771                           
 15772                           	psect	text60
 15773  005DC4                     __ptext60:
 15774                           	opt callstack 0
 15775  005DC4                     _Init8LEDs:
 15776                           	opt callstack 30
 15777                           
 15778                           ;Main.c: 80:     LATA = 0x00;
 15779                           
 15780                           ;incstack = 0
 15781  005DC4  0E00               	movlw	0
 15782  005DC6  6E89               	movwf	3977,c	;volatile
 15783                           
 15784                           ;Main.c: 81:     TRISA = 0x00;
 15785  005DC8  0E00               	movlw	0
 15786  005DCA  6E92               	movwf	3986,c	;volatile
 15787                           
 15788                           ;Main.c: 82:     ANSELA = 0x00;
 15789  005DCC  0E00               	movlw	0
 15790  005DCE  010F               	movlb	15	; () banked
 15791  005DD0  6F5B               	movwf	91,b	;volatile
 15792                           
 15793                           ; BSR set to: 15
 15794  005DD2  0012               	return		;funcret
 15795  005DD4                     __end_of_Init8LEDs:
 15796                           	opt callstack 0
 15797                           
 15798                           	psect	rparam
 15799  0000                     tosu	equ	0xFFF
 15800                           tosh	equ	0xFFE
 15801                           tosl	equ	0xFFD
 15802                           stkptr	equ	0xFFC
 15803                           pclatu	equ	0xFFB
 15804                           pclath	equ	0xFFA
 15805                           pcl	equ	0xFF9
 15806                           tblptru	equ	0xFF8
 15807                           tblptrh	equ	0xFF7
 15808                           tblptrl	equ	0xFF6
 15809                           tablat	equ	0xFF5
 15810                           prodh	equ	0xFF4
 15811                           prodl	equ	0xFF3
 15812                           indf0	equ	0xFEF
 15813                           postinc0	equ	0xFEE
 15814                           postdec0	equ	0xFED
 15815                           preinc0	equ	0xFEC
 15816                           plusw0	equ	0xFEB
 15817                           fsr0h	equ	0xFEA
 15818                           fsr0l	equ	0xFE9
 15819                           wreg	equ	0xFE8
 15820                           indf1	equ	0xFE7
 15821                           postinc1	equ	0xFE6
 15822                           postdec1	equ	0xFE5
 15823                           preinc1	equ	0xFE4
 15824                           plusw1	equ	0xFE3
 15825                           fsr1h	equ	0xFE2
 15826                           fsr1l	equ	0xFE1
 15827                           bsr	equ	0xFE0
 15828                           indf2	equ	0xFDF
 15829                           postinc2	equ	0xFDE
 15830                           postdec2	equ	0xFDD
 15831                           preinc2	equ	0xFDC
 15832                           plusw2	equ	0xFDB
 15833                           fsr2h	equ	0xFDA
 15834                           fsr2l	equ	0xFD9
 15835                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        11
    BSS         599
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    122     148
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    guardar@data	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    Fil.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    Fil.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_lseek@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_lseek@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_close@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_sync@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_write@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_write@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    f_write@bw	PTR unsigned short  size(2) Largest target is 2
		 -> guardar@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_read@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[1]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_open@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dj.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[1]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[1]), 

    S221$dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    validate@fil.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    S221$fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    validate@fil.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    validate@obj	PTR void  size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    validate@fil	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    ff@FatFs	PTR struct .[1] size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_open@path(BANK0[2]), f_mount@path(COMRAM[2]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), f_mount@fs(COMRAM[2]), 

    check_fs@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[1]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[1]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_open@path(BANK0[2]), f_mount@path(COMRAM[2]), f_mount@rp(COMRAM[2]), 

    follow_path@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    follow_path@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    follow_path@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    follow_path@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    follow_path@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[1]), 

    create_name@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    create_name@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    create_name@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[1]), 

    dir_register@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_register@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_register@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    dir_find@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_find@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_find@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_find@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_alloc@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_alloc@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_alloc@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    dir_next@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_next@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_next@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    S210$fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_sdi@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    S210$dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_sdi@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    S210$fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_sdi@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    create_chain@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    put_fat@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    get_fat@p	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    get_fat@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    clust2sect@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    move_window@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    mem_set@dst	PTR void  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), f_open@sfn(BANK0[12]), NULL(NULL[0]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), f_open@sfn(BANK0[12]), NULL(NULL[0]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 2047
		 -> FatFs(BIGRAM[558]), RAM(DATA[2047]), f_open@sfn(BANK0[12]), NULL(NULL[0]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> FatFs(BIGRAM[558]), RAM(DATA[2047]), f_open@sfn(BANK0[12]), NULL(NULL[0]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_ioctl@ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 2047
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), RAM(DATA[2047]), NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    xmit_datablock@buff	PTR const unsigned char  size(2) Largest target is 2047
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), RAM(DATA[2047]), NULL(NULL[0]), 

    rcvr_datablock@buff	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), disk_ioctl@csd(COMRAM[16]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _f_write->_create_chain
    _f_open->_remove_chain
    _remove_chain->_get_fat
    _remove_chain->_put_fat
    _create_name->_mem_set
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _f_mount->_find_volume
    _find_volume->_check_fs
    _disk_initialize->_send_cmd
    _check_fs->_move_window
    _f_lseek->_create_chain
    _create_chain->_get_fat
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _clust2sect->___lmul
    _f_close->_f_sync
    _f_sync->_sync_fs
    _validate->_disk_status
    _sync_fs->_disk_ioctl
    _disk_ioctl->_send_cmd
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_send_cmd
    _xmit_datablock->_wait_ready
    _disk_read->_send_cmd
    _send_cmd->___send_cmd
    _select->_wait_ready
    _wait_ready->_SPI1_Exchange8bit
    _deselect->_SPI1_Exchange8bit
    _rcvr_datablock->_SPI1_Exchange8bit
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    _main->_guardar
    _guardar->_f_open
    _f_write->_create_chain
    _f_open->_find_volume
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_next->_create_chain
    _f_mount->_find_volume
    _f_lseek->_create_chain

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  434243
                                            116 BANK0      6     6      0
                          _Init8LEDs
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _guardar
                       _interruptadc
 ---------------------------------------------------------------------------------
 (1) _interruptadc                                         6     2      4     175
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _guardar                                              4     2      2  430198
                                            112 BANK0      4     2      2
                              _Error
                  _SYSTEM_Initialize
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _f_write
 ---------------------------------------------------------------------------------
 (2) _f_write                                             36    28      8   54898
                                             13 BANK0     36    28      8
                         _clust2sect
                       _create_chain
                         _disk_write
                            _mem_cpy
                        _move_window
                        _sync_window
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_open                                              54    49      5  266319
                                             58 BANK0     54    49      5
                       _dir_register
                        _find_volume
                        _follow_path
                           _ld_clust
                        _move_window
                       _remove_chain
                           _st_clust
 ---------------------------------------------------------------------------------
 (3) _remove_chain                                        15     9      6   27554
                                             85 COMRAM    10     4      6
                                              0 BANK0      5     5      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _follow_path                                          8     4      4   99588
                                             38 BANK0      8     4      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (3) _ld_clust                                            14    10      4     546
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             6     4      2   79471
                                             32 BANK0      6     4      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _mem_cmp                                             14     8      6     364
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (4) _create_name                                         23    19      4    2632
                                              8 COMRAM    23    19      4
                            _chk_chr
                            _mem_set
 ---------------------------------------------------------------------------------
 (5) _chk_chr                                              6     2      4     241
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _dir_register                                         3     1      2   93436
                                             42 BANK0      3     1      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _mem_cpy                                             10     4      6    1323
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) _dir_alloc                                           10     6      4   79139
                                             32 BANK0     10     6      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _dir_sdi                                             21    17      4   16225
                                             85 COMRAM     4     0      4
                                              0 BANK0     17    17      0
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_next                                            19    15      4   50796
                                             13 BANK0     19    15      4
                         _clust2sect
                       _create_chain
                            _get_fat
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (2) _f_mount                                             12     7      5   32412
                                             81 COMRAM    12     7      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (3) _find_volume                                         71    66      5   31300
                                             68 COMRAM    13     8      5
                                              0 BANK0     58    58      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        14    12      2     536
                                              0 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (4) _disk_initialize                                     13    13      0    2686
                                             16 COMRAM    13    13      0
                  _SPI1_Exchange8bit
                    _SPI1_Initialize
                          _SPI1_Open
                           _deselect
                           _send_cmd
 ---------------------------------------------------------------------------------
 (5) _SPI1_Open                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _check_fs                                            10     4      6   12132
                                             58 COMRAM    10     4      6
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_lseek                                             39    33      6   46625
                                             13 BANK0     39    33      6
                            ___lldiv
                         _clust2sect
                       _create_chain
                            _get_fat
                           _validate
 ---------------------------------------------------------------------------------
 (3) _create_chain                                        23    17      6   28695
                                             85 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (4) _put_fat                                             27    17     10   13520
                                             58 COMRAM    27    17     10
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             27    21      6   13479
                                             58 COMRAM    27    21      6
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _clust2sect                                          11     5      6    1535
                                             12 COMRAM    11     5      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     512
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     564
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _f_close                                              3     1      2   29443
                                             77 COMRAM     3     1      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (3) _f_sync                                               9     7      2   28692
                                             68 COMRAM     9     7      2
                        _move_window
                           _st_clust
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (3) _validate                                             8     6      2     557
                                              1 COMRAM     8     6      2
                        _disk_status
 ---------------------------------------------------------------------------------
 (4) _disk_status                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _sync_fs                                             11     9      2   15570
                                             57 COMRAM    11     9      2
                         _disk_ioctl
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _mem_set                                              8     2      6    1002
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_ioctl                                          41    38      3    5270
                                             16 COMRAM    41    38      3
                  _SPI1_Exchange8bit
                             ___wmul
                           _deselect
                     _rcvr_datablock
                             _select
                           _send_cmd
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     711
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _st_clust                                             6     0      6     392
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _move_window                                         11     5      6   11674
                                             47 COMRAM    11     5      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (3) _sync_window                                         21    19      2    4808
                                             26 COMRAM    21    19      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (4) _disk_write                                          10     2      8    3972
                                             16 COMRAM    10     2      8
                           _deselect
                           _send_cmd
                     _xmit_datablock
 ---------------------------------------------------------------------------------
 (5) _xmit_datablock                                       6     3      3     659
                                              3 COMRAM     6     3      3
                  _SPI1_Exchange8bit
                         _wait_ready
 ---------------------------------------------------------------------------------
 (4) _disk_read                                           12     4      8    4058
                                             16 COMRAM    12     4      8
                           _deselect
                     _rcvr_datablock
                           _send_cmd
 ---------------------------------------------------------------------------------
 (5) _send_cmd                                             6     2      4    2155
                                             10 COMRAM     6     2      4
                         ___send_cmd
 ---------------------------------------------------------------------------------
 (6) ___send_cmd                                           7     3      4     599
                                              3 COMRAM     7     3      4
                  _SPI1_Exchange8bit
                           _deselect
                             _select
 ---------------------------------------------------------------------------------
 (7) _select                                               0     0      0     112
                  _SPI1_Exchange8bit
                           _deselect
                         _wait_ready
 ---------------------------------------------------------------------------------
 (6) _wait_ready                                           2     2      0      68
                                              1 COMRAM     2     2      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (8) _deselect                                             0     0      0      22
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _rcvr_datablock                                       7     3      4    1200
                                              1 COMRAM     7     3      4
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI1_Exchange8bit                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (5) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Error                                               13    11      2     377
                                              0 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Init8LEDs                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init8LEDs
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _guardar
     _Error
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _SPI1_Initialize
     _f_close
       _f_sync
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _st_clust
         _sync_fs
           _disk_ioctl
             _SPI1_Exchange8bit
             ___wmul
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _select
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _wait_ready
                 _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _disk_write
             _deselect
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
             _xmit_datablock
               _SPI1_Exchange8bit
               _wait_ready
                 _SPI1_Exchange8bit
           _mem_set
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _validate
           _disk_status
       _validate
         _disk_status
     _f_lseek
       ___lldiv
       _clust2sect
         ___lmul
       _create_chain
         _get_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _put_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
       _get_fat
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
       _validate
         _disk_status
     _f_mount
       _find_volume
         ___lldiv
         ___lmul
         _check_fs
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _disk_initialize
           _SPI1_Exchange8bit
           _SPI1_Initialize
           _SPI1_Open
           _deselect
             _SPI1_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _select
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _disk_status
         _get_ldnumber
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
       _get_ldnumber
     _f_open
       _dir_register
         _dir_alloc
           _dir_next
             _clust2sect
               ___lmul
             _create_chain
               _get_fat
                 _move_window
                   _disk_read
                     _deselect
                       _SPI1_Exchange8bit
                     _rcvr_datablock
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                   _sync_window
                     _disk_write
                       _deselect
                         _SPI1_Exchange8bit
                       _send_cmd
                         ___send_cmd
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _select
                             _SPI1_Exchange8bit
                             _deselect
                               _SPI1_Exchange8bit
                             _wait_ready
                               _SPI1_Exchange8bit
                       _xmit_datablock
                         _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
               _put_fat
                 _move_window
                   _disk_read
                     _deselect
                       _SPI1_Exchange8bit
                     _rcvr_datablock
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                   _sync_window
                     _disk_write
                       _deselect
                         _SPI1_Exchange8bit
                       _send_cmd
                         ___send_cmd
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _select
                             _SPI1_Exchange8bit
                             _deselect
                               _SPI1_Exchange8bit
                             _wait_ready
                               _SPI1_Exchange8bit
                       _xmit_datablock
                         _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI1_Exchange8bit
                   _rcvr_datablock
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                     _xmit_datablock
                       _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
             _mem_set
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _dir_sdi
             _clust2sect
               ___lmul
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI1_Exchange8bit
                   _rcvr_datablock
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                     _xmit_datablock
                       _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _mem_cpy
         _mem_set
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
       _find_volume
         ___lldiv
         ___lmul
         _check_fs
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _disk_initialize
           _SPI1_Exchange8bit
           _SPI1_Initialize
           _SPI1_Open
           _deselect
             _SPI1_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _select
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _disk_status
         _get_ldnumber
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
       _follow_path
         _create_name
           _chk_chr
           _mem_set
         _dir_find
           _dir_next
             _clust2sect
               ___lmul
             _create_chain
               _get_fat
                 _move_window
                   _disk_read
                     _deselect
                       _SPI1_Exchange8bit
                     _rcvr_datablock
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                   _sync_window
                     _disk_write
                       _deselect
                         _SPI1_Exchange8bit
                       _send_cmd
                         ___send_cmd
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _select
                             _SPI1_Exchange8bit
                             _deselect
                               _SPI1_Exchange8bit
                             _wait_ready
                               _SPI1_Exchange8bit
                       _xmit_datablock
                         _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
               _put_fat
                 _move_window
                   _disk_read
                     _deselect
                       _SPI1_Exchange8bit
                     _rcvr_datablock
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                   _sync_window
                     _disk_write
                       _deselect
                         _SPI1_Exchange8bit
                       _send_cmd
                         ___send_cmd
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _select
                             _SPI1_Exchange8bit
                             _deselect
                               _SPI1_Exchange8bit
                             _wait_ready
                               _SPI1_Exchange8bit
                       _xmit_datablock
                         _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI1_Exchange8bit
                   _rcvr_datablock
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                     _xmit_datablock
                       _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
             _mem_set
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _dir_sdi
             _clust2sect
               ___lmul
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI1_Exchange8bit
                   _rcvr_datablock
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                     _xmit_datablock
                       _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
           _mem_cmp
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _dir_sdi
           _clust2sect
             ___lmul
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _SPI1_Exchange8bit
                 _rcvr_datablock
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
               _sync_window
                 _disk_write
                   _deselect
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                   _xmit_datablock
                     _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
         _ld_clust
       _ld_clust
       _move_window
         _disk_read
           _deselect
             _SPI1_Exchange8bit
           _rcvr_datablock
             _SPI1_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _select
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _sync_window
           _disk_write
             _deselect
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
             _xmit_datablock
               _SPI1_Exchange8bit
               _wait_ready
                 _SPI1_Exchange8bit
       _remove_chain
         _get_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _put_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
       _st_clust
     _f_write
       _clust2sect
         ___lmul
       _create_chain
         _get_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _put_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
       _disk_write
         _deselect
           _SPI1_Exchange8bit
         _send_cmd
           ___send_cmd
             _SPI1_Exchange8bit
             _deselect
               _SPI1_Exchange8bit
             _select
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _wait_ready
                 _SPI1_Exchange8bit
         _xmit_datablock
           _SPI1_Exchange8bit
           _wait_ready
             _SPI1_Exchange8bit
       _mem_cpy
       _move_window
         _disk_read
           _deselect
             _SPI1_Exchange8bit
           _rcvr_datablock
             _SPI1_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _select
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _sync_window
           _disk_write
             _deselect
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
             _xmit_datablock
               _SPI1_Exchange8bit
               _wait_ready
                 _SPI1_Exchange8bit
       _sync_window
         _disk_write
           _deselect
             _SPI1_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _select
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
           _xmit_datablock
             _SPI1_Exchange8bit
             _wait_ready
               _SPI1_Exchange8bit
       _validate
         _disk_status
   _interruptadc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     22E      21       27.3%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      20       8       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      94       5       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113       6        0.0%
DATA                 0      0     341       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 29 17:30:29 2019

              _SPI1_Exchange8bit 5DB4                      get_fat@clst 003D  
                   ___fldiv@aexp 0040                     ___fldiv@bexp 003F  
                              _i 00E5                     ___fldiv@sign 0038  
                   create_name@b 0015                     create_name@c 001F  
                   create_name@d 001A                     create_name@i 001D  
                   create_name@p 0018               ?_SPI1_Exchange8bit 0001  
               get_ldnumber@path 0001                               l17 5C5E  
                             l35 59F2                               l70 4166  
                             l81 422E                               l92 432C  
                             l95 42FC                      disk_ioctl@n 0037  
            ___wmul@multiplicand 0003                   ??_dir_register 0060  
               disk_write@sector 0013                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                    create_name@dp 0009  
                  create_name@ni 0016                     __CFG_CP2$OFF 000000  
                  create_name@si 0013                   create_chain@cs 0069  
                   __CFG_CP3$OFF 000000                   create_chain@fs 0056  
                    __CFG_LVP$ON 000000                              l113 5234  
                            l114 5248                              l130 4CA8  
                            l131 4CB0                              l132 4CC4  
                            l109 522A                              l126 4C9E  
                            l302 4782                              l136 4D24  
                            l242 4500                              l155 20EC  
                            l252 2C48                              l317 379E  
                            l334 397A                              l255 2F98  
                            l336 3972                              l520 09BA  
                            l432 3FDC                              l257 2C52  
                            l533 0B02                              l349 3B4A  
                            l278 240E                              l391 4E86  
                            l456 4132                              l547 0FFA  
                            l539 0C9C                              l469 4884  
                            l581 308C                              l590 31FE  
                            l582 3084                              l671 1C44  
                            l850 5360                              l667 19B4  
                            l748 5DBC                              l588 3216  
                            l929 583C                              _GIE 007F97  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            _Fil 0100              ??_SPI1_Exchange8bit 0001  
                   disk_read@cmd 001C                   ??_create_chain 005C  
                            wreg 000FE8                     ___flmul@aexp 0020  
                   ___flmul@bexp 0021                disk_initialize@ty 001A  
                   ___flmul@sign 001B                     ___flmul@temp 0026  
                   ___flmul@prod 0022                   create_name@sfn 001B  
                create_chain@ncl 0065                       Error@F5051 00DA  
                create_chain@scl 0061                  create_chain@res 0060  
                    ld_clust@dir 0003                     ___fltol@exp1 000A  
                           l1516 33C0                             l1533 365E  
                           l1525 35D8                             l1526 35D4  
                           l5011 2132                             l1564 4AEA  
                           l1557 4A6C                             l5021 2180  
                           l1486 3DC0                             l5015 213A  
                           l1497 3E2E                             l5033 2298  
                           l1498 3E2A                             l5043 22DE  
                           l5123 3A46                             l5053 2332  
                           l5037 22A6                             l5029 2210  
                           l5221 29EA                             l5205 2968  
                           l5133 3A98                             l5117 39F6  
                           l5071 2388                             l5063 2350  
                           l5143 3B0A                             l5135 3ABE  
                           l7001 4A9A                             l4425 5C44  
                           l4513 5AC2                             l4601 4D06  
                           l5049 2310                             l5073 238E  
                           l5305 41CA                             l6009 0B60  
                           l6201 5674                             l5233 2A08  
                           l7003 4AA0                             l4507 5AAC  
                           l5059 2348                             l5075 23D0  
                           l6123 119E                             l5155 3B8A  
                           l5091 5A50                             l7013 4B10  
                           l7005 4AAC                             l5317 41FE  
                           l5245 2AA8                             l5261 2B46  
                           l5501 4F54                             l6301 325C  
                           l6213 2FB8                             l7031 4B5C  
                           l7015 4B1C                             l7007 4AD2  
                           l4447 5D88                             l4463 586A  
                           l4543 5C22                             l4527 5B00  
                           l4615 4D86                             l5351 42BA  
                           l5343 4286                             l5335 425E  
                           l6063 0D88                             l5511 3EE8  
                           l4705 5718                             l5425 44D8  
                           l5353 42CC                             l5257 2AFE  
                           l5265 2BA4                             l5097 5BB2  
                           l5513 3EEC                             l6401 1590  
                           l4491 58BC                             l4483 58A4  
                           l4707 5734                             l5347 4294  
                           l5291 4184                             l5283 4172  
                           l6067 0D9E                             l5179 2848  
                           l5451 4E54                             l5099 5BB6  
                           l6243 305C                             l6235 3032  
                           l4565 5A06                             l4549 59D6  
                           l4653 52CE                             l4637 525C  
                           l4741 2DE6                             l4805 25E6  
                           l6181 5606                             l5189 28AC  
                           l5453 4E5C                             l5437 4DC0  
                           l5605 40B0                             l5525 3F5A  
                           l6317 333C                             l6413 16BE  
                           l4479 5898                             l6159 4A2A  
                           l4911 380C                             l6503 1B84  
                           l5703 4FE6                             l5287 417C  
                           l6087 0ED8                             l6191 5648  
                           l5199 2952                             l5383 5960  
                           l5391 5990                             l5615 40F0  
                           l5607 40C0                             l5551 3FD2  
                           l6247 3068                             l6423 1738  
                           l6407 15E4                             l6415 16DE  
                           l6343 1276                             l4497 58CC  
                           l4489 58B8                             l4737 2DBE  
                           l4809 261C                             l4833 27D2  
                           l5393 599E                             l5609 40C6  
                           l5481 4EAE                             l6433 17C2  
                           l6425 175C                             l6611 5338  
                           l4675 45F2                             l4739 2DDC  
                           l4819 26CE                             l4835 27FE  
                           l6531 1C6E                             l5715 505E  
                           l5651 5088                             l6099 0FCC  
                           l6187 5634                             l5811 5210  
                           l5547 3FB8                             l5467 593C  
                           l6283 31E4                             l6443 1882  
                           l6427 177A                             l6451 18BE  
                           l4669 4578                             l5733 57C8  
                           l4845 5B6A                             l4749 2EA2  
                           l4829 27C0                             l4941 395A  
                           l6541 1D06                             l6525 1C28  
                           l6517 1C02                             l5709 5024  
                           l5653 508C                             l5629 4120  
                           l5821 47D0                             l6357 135E  
                           l7173 4BB8                             l4679 45FE  
                           l4687 4658                             l4855 5CBA  
                           l5743 57EE                             l4759 2F6C  
                           l4935 38F2                             l4927 3880  
                           l6527 1C60                             l5903 08B2  
                           l5399 59BA                             l5495 4F14  
                           l6439 180C                             l6375 13EE  
                           l6359 139E                             _ADIE 007CEE  
                           _ADIF 007CF6                             l6721 3CF2  
                           l6713 3CBE                             l6617 534C  
                           l4961 5D9C                             l5729 57C4  
                           l5745 57FA                             l4849 5B7E  
                           l6481 1946                             l5585 4074  
                           l6457 191A                             l6369 13CA  
                           l4859 5CCA                             l5755 582E  
                           l4787 24CA                             l4891 374A  
                           l4883 36FA                             l6539 1CD2  
                           l6563 1D9A                             l5683 5136  
                           l5907 08B6                             l6395 1508  
                           l6387 14A6                             l6379 143E  
                           l6805 3ECC                             l6709 3CBA  
                           l4981 1F5C                             l4973 1F4E  
                           l4869 54C4                             l4789 24FE  
                           l6549 1D1A                             l6581 1E62  
                           l5597 409E                             l5829 4824  
                           l5781 46F8                             l5765 4692  
                           l6807 3ECE                             l6735 3D20  
                           l6727 3D08                             l6903 359E  
                           l6831 3380                             l4895 376E  
                           l6487 1968                             l5679 512C  
                           l5927 08FA                             l5919 08F0  
                           l5791 4772                             l5767 469A  
                           l6671 542C                             l6753 3D98  
                           l6745 3D70                             l4985 1F6A  
                           l5697 4FC8                             l5961 0A06  
                           l5865 48E8                             l6673 5452  
                           l6649 5D1E                             l6771 3DF4  
                           l6923 361C                             l6827 336C  
                           l4995 2048                             l4899 37AE  
                           l6587 1ED4                             l5955 09F0  
                           l5939 0938                             l6675 5460  
                           l6765 3DD6                             l6693 3C7E  
                           l6845 33AC                             l6829 3370  
                           l5981 0A98                             l5949 099E  
                           l6791 3E72                             l6759 3DBE  
                           l6927 363A                             l6855 33DE  
                           l6847 33B0                             l6951 5546  
                           l5983 0A9E                             l5967 0A4C  
                           l5887 086E                             l5879 0848  
                           l6689 3C7A                             l5969 0A72  
                           l6795 3E96                             l6939 367C  
                           l6971 55A0                             l5987 0AA2  
                           l6799 3EC0                             l6967 5590  
                           l6897 3580                             l6985 55D0  
                           l6977 55A8                             l6979 55B4  
                           l6995 4A7C                             STR_1 0801  
                           STR_2 0801                             STR_3 0818  
                           STR_4 0810                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
                           u5040 5C66                             u5210 59FA  
                           u5050 5C72                             u6010 3932  
                           u5140 5AA8                             u7000 4E7A  
                           u6105 2020                             u5410 5226  
                           u5250 4C9A                             u6130 20E6  
                           u6115 2050                             _PEIE 007F96  
                           u5500 52DE                             u5340 4D40  
                           u6060 1F66                             u6125 2076  
                           u7030 4EA8                             u6135 20DC  
                           u5360 4D68                             u5600 2C38  
                           u7200 3FE8                             u6225 21C4  
                           u6235 21E6                             u5460 5284  
                           u5380 4D96                             u6244 2204  
                           u6180 2162                             u5700 23E8  
                           u7220 3FF4                             u6340 5A60  
                           u5445 523A                             u6245 21FE  
                           u5710 2408                             u7150 3FA2  
                           u6350 5A94                             u5295 4CB6  
                           u6255 224E                             u5615 2C9C  
                           u5480 52B0                             u5560 56BC  
                           u5800 2710                             u6520 2844  
                           u7240 401E                             u6185 2158  
                           u6505 3C0C                             u9010 1E4E  
                           u7410 50AE                             u6450 3B1A  
                           u6370 5BE6                             u7170 3FB4  
                           u5635 2D3A                             u8115 0EB8  
                           u5900 375C                             u6700 416C  
                           u8140 1020                             u7260 402A  
                           u5805 2706                             u5725 2458  
                           u8045 0CD0                             u5590 2C18  
                           u9030 1EB8                             u8070 0D84  
                           u6390 39F2                             u9015 1E44  
                           u5680 2EE4                             u8080 0D9A  
                           u5665 2DCA                             u8145 1016  
                           u5930 37FA                             u9051 5306  
                           u5755 254A                             u7540 57C4  
                           u5780 2604                             u6580 294E  
                           u5685 2EDA                             u6565 28B8  
                           u9310 3E24                             u5950 3858  
                           u7470 4FE2                             u6590 2964  
                           u6495 3BC0                             u7560 57FE  
                           u5880 36E8                             u7480 5020  
                           u7640 474C                             u5785 25FA  
                           u9090 535A                             u6850 4304  
                           u8290 5670                             u7650 47A2  
                           u9500 35CE                             u6780 4236  
                           u7820 08AE                             u7740 487E  
                           u7580 466C                             u6685 2BC6  
                           u9350 3E80                             u6870 4328  
                           u7590 468C                             u8550 12D0  
                           u9360 3EA4                             u7920 0A8C  
                           u9450 33CC                             u8810 1942  
                           u7690 47CA                             u8715 1684  
                           u8555 12C6                             u9540 362A  
                           u9460 3542                             u9620 55BA  
                           u9700 4B26                             u8900 1BEE  
                           u7940 0A9E                             u6980 4E40  
                           u8725 16C8                             u9550 3648  
                           u8910 1C14                             u9465 3538  
                           u8665 1520                             u9570 5534  
                           u8770 18C6                             u9580 5564  
                           u8960 1D2A                             u9585 555A  
                           u8865 1A2C                             u8980 1DAE  
                           _WPUB 000F85                             _Fsid 00E9  
                           _Stat 00E4                             _data 00E7  
                           _main 4B6E                     find_volume@i 0095  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           _volt 00EE                    __CFG_BORV$190 000000  
                  disk_ioctl@cmd 0011                    disk_ioctl@csd 0021  
                  disk_read@buff 0011                    disk_ioctl@res 0036  
                  disk_ioctl@ptr 0038                    disk_read@pdrv 0019  
                           prodh 000FF4                             prodl 000FF3  
                 ??_get_ldnumber 0003                             start 0000  
      __end_of_SPI1_Exchange8bit 5DC4                    __CFG_IESO$OFF 000000  
                ___fldiv@new_exp 0039                       Error@v_seg 0004  
                  __CFG_MCLRE$ON 000000               disk_initialize@cmd 0019  
                   ?_follow_path 0086               disk_initialize@ocr 0013  
                   ___param_bank 000000               disk_initialize@tmr 001B  
                create_name@path 000B                 create_chain@clst 0058  
                    _sync_window 4504   __size_of_OSCILLATOR_Initialize 0012  
  __end_of_OSCILLATOR_Initialize 5DB4                    ___fltol@sign1 0009  
                          ?_main 0001                  __end_of___fldiv 3ED6  
                __end_of___flmul 3692                  __end_of___fltol 55E2  
                __end_of___lldiv 584E                            u10027 4220  
                          u10037 42EE                            u10047 5C52  
                          u10057 59E6                            u10067 536E  
                          u10077 5388                            u10087 53A2  
                 __CFG_DEBUG$OFF 000000                            _PORTA 000F80  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                  __end_of_f_close 5CB0  
                          _FatFs 0120                  __end_of_chk_chr 5BF8  
             __size_of_SPI1_Open 000E                  __end_of_f_lseek 1F3A  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000              ___lmul@multiplicand 0005  
                  __CFG_WRT3$OFF 000000                  __end_of_f_mount 5692  
                          _Error 52E2                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                     ___send_cmd@n 0009  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                __end_of_dir_sdi 3C4E                   __CFG_EBTR3$OFF 000000  
                __end_of_f_write 192C                  __end_of_get_fat 2FAA  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                            _adcin 00F2  
                 __CFG_EBTRB$OFF 000000                  __end_of_mem_cmp 5A9E  
                __end_of_mem_cpy 59CC                  __end_of_mem_set 5CDC  
                __end_of_guardar 546E                    find_volume@br 0060  
                  find_volume@fs 0098                    find_volume@pt 007A  
                 disk_ioctl@buff 0012                   disk_read@count 0017  
                          tablat 000FF5                   disk_ioctl@pdrv 0031  
                          plusw1 000FE3                            plusw2 000FDB  
                __end_of_put_fat 2802                            status 000FD8  
                 __CFG_T3CMX$RC0 000000                  __end_of_sync_fs 4504  
                 __CFG_ICPRT$OFF 000000                    get_ldnumber@i 000B  
       __size_of_SPI1_Initialize 000E                  __initialization 5B04  
            disk_initialize@pdrv 0012                     __end_of_main 4C8A  
                   clust2sect@fs 000D                   __CFG_PCLKEN$ON 000000  
                         ??_main 00D4                    __activetblptr 000002  
                 __CFG_SDOMX$RB3 000000                           ?_Error 0001  
                __CFG_CCP2MX$RC1 000000                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
             __size_of_Init8LEDs 0010                           _ACTCON 000FB5  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _ANSELA 000F5B                           _ANSELB 000F5C  
                         _ANSELC 000F5D                           _ANSELD 000F5E  
                         _ANSELE 000F5F                   __CFG_WDTEN$OFF 000000  
                         _OSCCON 000FD3             __end_of_dir_register 5216  
               __end_of___xxtofl 4B6E                 __end_of_check_fs 5062  
                    guardar@data 00D0            SPI1_Exchange8bit@data 0001  
                         Error@a 0001       __size_of_SPI1_Exchange8bit 0010  
           __size_of_create_name 0284         __size_of_disk_initialize 01EA  
               __end_of_deselect 5E14                 __end_of_dir_find 4F76  
                 __CFG_XINST$OFF 000000                __end_of_SPI1_Open 5DE2  
               __end_of_dir_next 2C08                     ?_move_window 0030  
           __end_of_create_chain 398C                 __end_of_ld_clust 594E  
                         ___lmul 5B5A             __size_of_find_volume 09AE  
           __size_of_disk_status 0012                           ___wmul 5D2C  
                      ??___fldiv 0030                   __CFG_STVREN$ON 000000  
                      ??___flmul 0017                        ??___fltol 0005  
                      ??___lldiv 0009                           _f_open 2FAA  
                         _f_sync 48EC                        ??_f_close 0050  
                 find_volume@fmt 0097                           clear_0 5B2C  
                         clear_1 5B3E                           clear_2 5B4A  
                 find_volume@rfs 0045                        ??_chk_chr 0005  
                 find_volume@vol 0080                           _select 5D72  
                      ??_f_lseek 0073                        ??_f_mount 0057  
                         main@ND 00D8                        ??_dir_sdi 0060  
                      ??_f_write 0075                        ??_get_fat 0041  
               __end_of_send_cmd 5C3A                        ??_mem_cmp 0007  
                      ??_mem_cpy 0007                        ??_mem_set 0007  
                      ??_guardar 0060                  disk_ioctl@csize 0032  
               __end_of_validate 57CC             __end_of_get_ldnumber 5140  
                  interruptadc@a 0003                     __mediumconst 0000  
                disk_read@sector 0013                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
               __end_of_st_clust 5D06                        ??_put_fat 0045  
                xmit_datablock@i 0007                        ??_sync_fs 003C  
             rcvr_datablock@buff 0002             __CFG_LS48MHZ$SYS24X4 000000  
                   ___xxtofl@arg 000B                     ___xxtofl@exp 000A  
              _SYSTEM_Initialize 5DE2                     ___xxtofl@val 0001  
                     __accesstop 0060          __end_of__initialization 5B50  
                __CFG_PBADEN$OFF 000000                   disk_write@buff 0011  
                 get_ldnumber@tp 0007                   get_ldnumber@tt 000D  
                 disk_write@pdrv 001A               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001          __size_of_rcvr_datablock 006C  
                     ___fltol@f1 0001                    __end_of_Error 53AC  
                 __pcstackCOMRAM 0001                 __CFG_nPWRTEN$OFF 000000  
                  ?_interruptadc 0001                     __pidataBANK0 5DFE  
            ??_SYSTEM_Initialize 0001                __end_of_Init8LEDs 5DD4  
                     ___send_cmd 584E             __size_of_follow_path 0146  
              ??_SPI1_Initialize 0001               __size_of_dir_alloc 00F0  
                        ??_Error 0003               __size_of_disk_read 00CC  
      __end_of_SYSTEM_Initialize 5DF0                       __pbssBANK0 00E5  
                     __pbssBANK1 0100                __CFG_PLLSEL$PLL4X 000000  
                 ??_interruptadc 0005                          ?___lmul 0001  
                        ?___wmul 0001                          ?_f_open 009A  
        __size_of_xmit_datablock 0066                          ?_f_sync 0045  
              ??_disk_initialize 0011                     ?_sync_window 001B  
                 ___lmul@product 0009                          ?_select 0001  
                      ?___xxtofl 0001                        ?_check_fs 003B  
                     _disk_ioctl 1F3A                   follow_path@dir 008A  
                        _OSCCON2 000FD2                   follow_path@res 008D  
                     _disk_write 4C8A                          _OSCTUNE 000F9B  
                    send_cmd@cmd 000F                        ?_deselect 0001  
                    send_cmd@arg 000B                          _SSP1ADD 000FC8  
                    send_cmd@res 0010                   remove_chain@fs 0056  
                        _SSP1BUF 000FC9                        ?_dir_find 0080  
                      ?_dir_next 006D            __size_of_dir_register 00D6  
                      ?_ld_clust 0001                       _clust2sect 546E  
               sync_window@wsect 002C                    ?_remove_chain 0056  
          __size_of_create_chain 02FA                __end_of_dir_alloc 4E8A  
                      ?_send_cmd 000B                          __Hparam 0000  
                 ___send_cmd@cmd 000A                   ___send_cmd@arg 0004  
                 ___send_cmd@res 0008                          __Lparam 0000  
                      ?_validate 0002                __end_of_disk_read 52E2  
                        ff@FatFs 00EB                       f_close@res 0050  
                        ___fldiv 3C4E                  __size_of___lmul 0056  
                      ?_st_clust 0001                          ___flmul 3340  
                        ___fltol 5528                      ?___send_cmd 0004  
                        ___lldiv 57CC                  __size_of___wmul 0026  
           __size_of_move_window 00A6                       check_fs@fs 003B  
                __size_of_f_open 0396                     __psmallconst 0800  
                __size_of_f_sync 0142                          _f_close 5C76  
            _disk_initialize$134 0017            __size_of_get_ldnumber 00DE  
                        __pcinit 5B04                          _chk_chr 5BB0  
                        _f_lseek 192C                          __ramtop 0800  
                        _f_mount 55E2                  __size_of_select 001E  
                        __ptext0 4B6E                          __ptext1 5D06  
                        __ptext2 53AC                          __ptext3 11C8  
                        __ptext4 2FAA                          __ptext5 465C  
                        __ptext6 47A6                          __ptext7 58D0  
                        __ptext8 4E8A                          __ptext9 5A38  
                        _dir_sdi 398C                      validate@fil 0008  
                        _f_write 11C8                      validate@obj 0002  
                        _get_fat 2C08                       chk_chr@chr 0003  
                   _dir_register 5140                       chk_chr@str 0001  
                        _mem_cmp 5A38                          _mem_cpy 594E  
          _OSCILLATOR_Initialize 5DA2                          _mem_set 5CB0  
                        _guardar 53AC                       ??___xxtofl 0005  
                     ??_check_fs 0041                  find_volume@path 0047  
                find_volume@nrsv 0082                  find_volume@stat 008C  
       ??_PIN_MANAGER_Initialize 0001                     _create_chain 3692  
                     ??_deselect 0002                       ??_dir_find 0060  
                        _put_fat 23D8                       ??_dir_next 0071  
     __size_of_SYSTEM_Initialize 000E                       f_lseek@bcs 008C  
                     ??_ld_clust 0005                          _sync_fs 4344  
                     f_lseek@ofs 006F                       f_lseek@res 0087  
           end_of_initialization 5B50                       f_open@mode 009E  
                     f_open@path 009C                   ??_remove_chain 005C  
                  __Lmediumconst 0000                  disk_status@pdrv 0001  
                 _rcvr_datablock 59CC                  ___lldiv@divisor 0005  
                     f_mount@cfs 0058                       f_mount@res 0057  
                     ??_send_cmd 000F                       f_mount@opt 0056  
                     f_mount@vol 005C                  ___lldiv@counter 000D  
                   _get_ldnumber 5062                       ??_validate 0004  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_st_clust 0007  
                 move_window@res 003A                        _SPI1_Open 5DD4  
                     _wait_ready 5C3A                       dir_alloc@n 0087  
               remove_chain@clst 0058                       dir_find@dp 0080  
                _create_name$624 0011                       dir_sdi@idx 0058  
                     dir_next@dp 006D                      ?_disk_ioctl 0011  
            rcvr_datablock@token 0008                       f_write@btw 0071  
                  ___xxtofl@sign 0009                       f_write@res 0081  
                    ?_disk_write 0011                       get_fat@val 004C  
                    ___fldiv@grs 003B                      ___fldiv@rem 0034  
           __end_of_interruptadc 5D2C                  get_ldnumber@vol 0009  
                disk_write@count 0017                      ?_clust2sect 000D  
            __size_of___send_cmd 0082           __end_of_rcvr_datablock 5A38  
                  ??_create_name 000D                 disk_initialize@n 001D  
                    ___flmul@grs 001C                       ld_clust@cl 000B  
                     ld_clust@fs 0001                  _SPI1_Initialize 5DF0  
                  ??_find_volume 004A                    ??_disk_status 0001  
                 _xmit_datablock 5A9E                       ?_SPI1_Open 0001  
                 __end_of___lmul 5BB0                      st_clust@dir 0001  
                 __end_of___wmul 5D52                   __end_of_f_open 3340  
                 __end_of_f_sync 4A2E                   clust2sect@clst 000F  
         ?_OSCILLATOR_Initialize 0001                        _Init8LEDs 5DC4  
                 __end_of_select 5D90             __size_of_sync_window 0158  
            start_initialization 5B04  __size_of_PIN_MANAGER_Initialize 0020  
                     mem_cmp@cnt 0005                       mem_cmp@dst 0001  
                     mem_cmp@src 0003                       mem_cpy@cnt 0005  
                    put_fat@clst 003D                       mem_cpy@dst 0001  
                     mem_cpy@src 0003                  ?_rcvr_datablock 0002  
                __CFG_nLPBOR$OFF 000000                  _disk_initialize 415A  
                     mem_set@cnt 0005                       mem_set@dst 0001  
                     mem_set@val 0003           __end_of_xmit_datablock 5B04  
                  ??_follow_path 0060              __size_of_disk_ioctl 049E  
            __end_of_create_name 415A              __size_of_disk_write 0110  
                       ??___lmul 0009                         ??___wmul 0005  
                       ??_f_open 009F                         ??_f_sync 0047  
                    ?_wait_ready 0001                      __pdataBANK0 00DA  
            __end_of_find_volume 11C8              __end_of_disk_status 5DA2  
            __size_of_clust2sect 00BA                         ??_select 0004  
           __end_of_remove_chain 47A6                       ?_Init8LEDs 0001  
              rcvr_datablock@btr 0004                rcvr_datablock@tmr 0006  
                      ___fldiv@a 002C                        ___fldiv@b 0028  
                    __pbssBIGRAM 0120                        ___flmul@a 0013  
                      ___flmul@b 000F                    __pcstackBANK0 0060  
              __size_of___xxtofl 0140                __size_of_check_fs 00EC  
        __end_of_SPI1_Initialize 5DFE                     check_fs@sect 003D  
              __size_of_deselect 000A                __size_of_dir_find 00EC  
              __size_of_dir_next 0406                __size_of_ld_clust 007E  
                      __pnvBANK0 00EE                  _find_volume$728 0070  
                _find_volume$729 0074           _PIN_MANAGER_Initialize 5D52  
                ?_xmit_datablock 0004                __size_of_send_cmd 0042  
                       ?___fldiv 0028                     ??___send_cmd 0008  
                       ?___flmul 000F                        _dir_alloc 4D9A  
                       ?___fltol 0001                         ?___lldiv 0001  
              __size_of_validate 0094                interruptadc@adcin 0001  
                    ??_SPI1_Open 0001                         ?_f_close 004E  
                      _disk_read 5216                         ?_chk_chr 0001  
                  follow_path@dp 0086                         ?_f_lseek 006D  
                  follow_path@ns 008C                __size_of_st_clust 002A  
            __end_of_follow_path 48EC                         ?_f_mount 0052  
                       ?_dir_sdi 0056                         ?_f_write 006D  
                       ?_get_fat 003B            __size_of_interruptadc 0026  
                    __smallconst 0800                         ?_mem_cmp 0001  
                       ?_mem_cpy 0001                         ?_mem_set 0001  
                       ?_guardar 00D0                   __size_of_Error 00CA  
                      f_close@fp 004E                         ?_put_fat 003B  
        __end_of_disk_initialize 4344                         ?_sync_fs 003A  
                    _get_fat$374 004A                find_volume@fasize 008D  
            __size_of_wait_ready 003C               __end_of___send_cmd 58D0  
                    _create_name 3ED6                   ___wmul@product 0005  
                       _LATBbits 000F8A                        f_lseek@fp 006D  
              find_volume@szbfat 0076                        f_open@dir 00B8  
                      f_open@res 00B7                        f_open@sfn 00A3  
              find_volume@sysect 007C                      _find_volume 081A  
                    _disk_status 5D90                    ??_move_window 0036  
                      f_mount@fs 0052                        f_mount@rp 005A  
                follow_path@path 0088                    move_window@fs 0030  
               __CFG_WDTPS$32768 000000                         _SSP1CON1 000FC6  
                   _interruptadc 5D06                        dir_find@c 0082  
                     ?_dir_alloc 0080                  remove_chain@res 0060  
                remove_chain@nxt 0061                         _SSP1STAT 000FC7  
                      f_sync@dir 004C                        f_sync@res 004B  
                      dir_sdi@ic 0067                        dir_sdi@dp 0056  
                      dir_next@c 0078                        dir_next@i 007A  
                     ?_disk_read 0011                        f_write@cc 0085  
                      f_write@bw 0073                        f_write@fp 006D  
                      get_fat@bc 0054                        get_fat@fs 003B  
                      get_fat@wc 0050                       _ADCON0bits 000FC2  
                    ??_Init8LEDs 0001                ___wmul@multiplier 0001  
                       _CardType 00ED                     ??_disk_ioctl 0014  
              __CFG_CFGPLLEN$OFF 000000                     ??_disk_write 0019  
                   f_lseek@ifptr 0083                     f_lseek@nsect 0088  
                     st_clust@cl 0003                 ?_SPI1_Initialize 0001  
                   ??_clust2sect 0013                ___lmul@multiplier 0001  
                    _INTCON2bits 000FF1                        copy_data0 5B18  
                     put_fat@res 0053                       put_fat@val 0041  
              move_window@sector 0032                  dir_next@stretch 006F  
                       __Hrparam 0000                        guardar@bw 00D2  
                       __Lrparam 0000                      _follow_path 47A6  
             __CFG_BOREN$SBORDIS 000000               __end_of_disk_ioctl 23D8  
          __size_of_remove_chain 014A               __end_of_disk_write 4D9A  
        ??_OSCILLATOR_Initialize 0001                 __size_of___fldiv 0288  
               __size_of___flmul 0352                 __size_of___fltol 00BA  
               __size_of___lldiv 0082              __end_of_move_window 5738  
             __end_of_clust2sect 5528                 __size_of_f_close 003A  
               __size_of_chk_chr 0048                 __size_of_f_lseek 060E  
               __size_of_f_mount 00B0                 __size_of_dir_sdi 02C2  
               __size_of_f_write 0764                 __size_of_get_fat 03A2  
                       ___xxtofl 4A2E                         _check_fs 4F76  
               __size_of_mem_cmp 0066                 __size_of_mem_cpy 007E  
               __size_of_mem_set 002C                 __size_of_guardar 00C2  
            xmit_datablock@token 0006                 ??_rcvr_datablock 0006  
                dir_register@res 008C                         _deselect 5E0A  
                       __ptext10 3ED6                         __ptext11 5BB0  
                       __ptext20 415A                         __ptext12 5140  
                       __ptext21 5DD4                         __ptext13 594E  
                       __ptext30 5C76                         __ptext22 4F76  
                       __ptext14 4D9A                         __ptext31 48EC  
                       __ptext23 192C                         __ptext15 398C  
                       __ptext40 4504                         __ptext32 5738  
                       __ptext24 3692                         __ptext16 2802  
                       __ptext41 4C8A                         __ptext33 5D90  
                       __ptext25 23D8                         __ptext17 55E2  
                       __ptext50 5DB4                         __ptext42 5A9E  
                       __ptext34 4344                         __ptext26 2C08  
                       __ptext18 081A                         __ptext51 5DE2  
                       __ptext43 5216                         __ptext35 5CB0  
                       __ptext27 546E                         __ptext19 5062  
                       __ptext60 5DC4                         __ptext52 5DF0  
                       __ptext44 5BF8                         __ptext36 1F3A  
                       __ptext28 5B5A                         __ptext53 5D52  
                       __ptext45 584E                         __ptext37 5D2C  
                       __ptext29 57CC                         __ptext54 5DA2  
                       __ptext46 5D72                         __ptext38 5CDC  
                       __ptext55 52E2                         __ptext47 5C3A  
                       __ptext39 5692                         __ptext56 4A2E  
                       __ptext48 5E0A                         __ptext57 5528  
                       __ptext49 59CC                         __ptext58 3340  
                       __ptext59 3C4E                         _dir_find 4E8A  
                   _SSP1CON1bits 000FC6                         _dir_next 2802  
                  dir_alloc@nent 0082                 ?_disk_initialize 0001  
                       _ld_clust 58D0                 __size_of_put_fat 042A  
                 sync_window@res 0029                 __size_of_sync_fs 01C0  
                  __size_of_main 011C                       sync_fs@res 0044  
                   _remove_chain 465C                 find_volume@bsect 0091  
               find_volume@nclst 0088                 find_volume@tsect 0084  
               find_volume@wmode 0049                         f_open@dj 00BA  
                       f_open@cl 00AF                         f_open@fp 009A  
                       f_open@dw 00B3                         _send_cmd 5BF8  
                       _validate 5738                         f_sync@fp 0045  
                    ??_dir_alloc 0084                         _st_clust 5CDC  
                       get_fat@p 0052                     ??_wait_ready 0002  
                  ??_sync_window 001D                     _SSP1STATbits 000FC7  
                    ??_disk_read 0019                    _disk_read$143 001A  
                    f_lseek@clst 0090                         mem_cmp@d 0009  
                       mem_cmp@r 000D                         mem_cmp@s 000B  
                      put_fat@bc 0051                         mem_cpy@d 0007  
                      put_fat@fs 003B                         mem_cpy@s 0009  
                       mem_set@d 0007                    wait_ready@tmr 0002  
             xmit_datablock@buff 0004               xmit_datablock@resp 0009  
                 dir_register@dp 008A                 ??_xmit_datablock 0007  
             __end_of_wait_ready 5C76                 ___lldiv@dividend 0001  
        ?_PIN_MANAGER_Initialize 0001                     dir_alloc@res 0089  
                  sync_window@fs 001B                    sync_window@nf 002A  
                    f_mount@path 0054                        sync_fs@fs 003A  
                    _move_window 5692             __CFG_CPUDIV$NOCLKDIV 000000  
                       put_fat@p 0054                    ?_dir_register 008A  
                    dir_alloc@dp 0080                 ___lldiv@quotient 0009  
                    dir_find@dir 0083              __end_of_sync_window 465C  
                    dir_find@res 0085                    ?_create_chain 0056  
                   dir_next@clst 007C               __CFG_FOSC$INTOSCIO 000000  
                    dir_sdi@clst 006D   __end_of_PIN_MANAGER_Initialize 5D72  
                    dir_sdi@sect 0069                     ?_create_name 0009  
                   f_write@csect 0084                     f_write@wbuff 0082  
                    f_write@buff 006F                      f_write@clst 008B  
                    f_write@sect 0087                     ?_find_volume 0045  
                    f_write@wcnt 008F                    ?_get_ldnumber 0001  
                    _put_fat$400 004D                      _put_fat$401 004F  
                   ?_disk_status 0001  
