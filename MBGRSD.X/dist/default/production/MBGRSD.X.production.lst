

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jun 02 13:34:36 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74  0000                     
    75                           ; Version 2.05
    76                           ; Generated 20/12/2018 GMT
    77                           ; 
    78                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F45K50 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataBANK0
   111  0054F0                     __pidataBANK0:
   112                           	opt callstack 0
   113                           
   114                           ;initializer for Error@F5055
   115  0054F0  7E                 	db	126
   116  0054F1  30                 	db	48
   117  0054F2  6D                 	db	109
   118  0054F3  79                 	db	121
   119  0054F4  33                 	db	51
   120  0054F5  5B                 	db	91
   121  0054F6  5F                 	db	95
   122  0054F7  70                 	db	112
   123  0054F8  7F                 	db	127
   124  0054F9  73                 	db	115
   125                           
   126                           ;initializer for _i
   127  0054FA  EC78               	dw	60536
   128                           
   129                           ;initializer for _buffor
   130  0054FC  01                 	db	low STR_3
   131  0054FD  08                 	db	high STR_3
   132                           
   133                           ;initializer for _Stat
   134  0054FE  01                 	db	1
   135  0000                     _ANSELA	set	3931
   136  0000                     _ANSELE	set	3935
   137  0000                     _ANSELD	set	3934
   138  0000                     _ANSELB	set	3932
   139  0000                     _ANSELC	set	3933
   140  0000                     _PORTA	set	3968
   141  0000                     _ADCON0bits	set	4034
   142  0000                     _ADRESL	set	4035
   143  0000                     _ADRESH	set	4036
   144  0000                     _ADCON0	set	4034
   145  0000                     _TRISA	set	3986
   146  0000                     _LATA	set	3977
   147  0000                     _ADCON1	set	4033
   148  0000                     _ADCON2	set	4032
   149  0000                     _TRISE	set	3990
   150  0000                     _LATE	set	3981
   151  0000                     _TRISD	set	3989
   152  0000                     _LATD	set	3980
   153  0000                     _TXREG1	set	4013
   154  0000                     _RCREG1	set	4014
   155  0000                     _RCSTA1bits	set	4011
   156  0000                     _PIR1bits	set	3998
   157  0000                     _SPBRGH1	set	4016
   158  0000                     _SPBRG1	set	4015
   159  0000                     _TXSTA1	set	4012
   160  0000                     _RCSTA1	set	4011
   161  0000                     _BAUDCON1	set	4024
   162  0000                     _SSP1STATbits	set	4039
   163  0000                     _SSP1BUF	set	4041
   164  0000                     _SSP1CON1bits	set	4038
   165  0000                     _SSP1ADD	set	4040
   166  0000                     _SSP1CON1	set	4038
   167  0000                     _SSP1STAT	set	4039
   168  0000                     _INTCON2bits	set	4081
   169  0000                     _WPUB	set	3973
   170  0000                     _TRISC	set	3988
   171  0000                     _TRISB	set	3987
   172  0000                     _LATC	set	3979
   173  0000                     _LATB	set	3978
   174  0000                     _ACTCON	set	4021
   175  0000                     _OSCTUNE	set	3995
   176  0000                     _OSCCON2	set	4050
   177  0000                     _OSCCON	set	4051
   178  0000                     _LATBbits	set	3978
   179  0000                     _ADIF	set	31990
   180  0000                     _ADIE	set	31982
   181  0000                     _PEIE	set	32662
   182  0000                     _GIE	set	32663
   183                           
   184                           	psect	smallconst
   185  000800                     __psmallconst:
   186                           	opt callstack 0
   187  000800  00                 	db	0
   188  000801                     STR_3:
   189  000801  21                 	db	33
   190  000802  22                 	db	34
   191  000803  23                 	db	35
   192  000804  24                 	db	36
   193  000805  25                 	db	37
   194  000806  26                 	db	38
   195  000807  27                 	db	39
   196  000808  28                 	db	40
   197  000809  29                 	db	41
   198  00080A  2A                 	db	42
   199  00080B  2B                 	db	43
   200  00080C  2C                 	db	44
   201  00080D  2D                 	db	45
   202  00080E  2E                 	db	46
   203  00080F  2F                 	db	47
   204  000810  30                 	db	48	;'0'
   205  000811  31                 	db	49	;'1'
   206  000812  32                 	db	50	;'2'
   207  000813  33                 	db	51	;'3'
   208  000814  34                 	db	52	;'4'
   209  000815  35                 	db	53	;'5'
   210  000816  36                 	db	54	;'6'
   211  000817  37                 	db	55	;'7'
   212  000818  38                 	db	56	;'8'
   213  000819  39                 	db	57	;'9'
   214  00081A  3A                 	db	58	;':'
   215  00081B  3B                 	db	59	;';'
   216  00081C  3C                 	db	60	;'<'
   217  00081D  3D                 	db	61	;'='
   218  00081E  3E                 	db	62	;'>'
   219  00081F  3F                 	db	63	;'?'
   220  000820  40                 	db	64	;'@'
   221  000821  41                 	db	65	;'A'
   222  000822  42                 	db	66	;'B'
   223  000823  43                 	db	67	;'C'
   224  000824  44                 	db	68	;'D'
   225  000825  45                 	db	69	;'E'
   226  000826  46                 	db	70	;'F'
   227  000827  47                 	db	71	;'G'
   228  000828  48                 	db	72	;'H'
   229  000829  49                 	db	73	;'I'
   230  00082A  4A                 	db	74	;'J'
   231  00082B  4B                 	db	75	;'K'
   232  00082C  4C                 	db	76	;'L'
   233  00082D  4D                 	db	77	;'M'
   234  00082E  4E                 	db	78	;'N'
   235  00082F  4F                 	db	79	;'O'
   236  000830  50                 	db	80	;'P'
   237  000831  51                 	db	81	;'Q'
   238  000832  52                 	db	82	;'R'
   239  000833  53                 	db	83	;'S'
   240  000834  54                 	db	84	;'T'
   241  000835  55                 	db	85	;'U'
   242  000836  56                 	db	86	;'V'
   243  000837  57                 	db	87	;'W'
   244  000838  58                 	db	88	;'X'
   245  000839  59                 	db	89	;'Y'
   246  00083A  5A                 	db	90	;'Z'
   247  00083B  5B                 	db	91	;'['
   248  00083C  5C                 	db	92	;'\'
   249  00083D  5D                 	db	93	;']'
   250  00083E  5E                 	db	94	;'^'
   251  00083F  5F                 	db	95	;'_'
   252  000840  60                 	db	96	;'`'
   253  000841  61                 	db	97	;'a'
   254  000842  62                 	db	98	;'b'
   255  000843  63                 	db	99	;'c'
   256  000844  64                 	db	100	;'d'
   257  000845  65                 	db	101	;'e'
   258  000846  66                 	db	102	;'f'
   259  000847  67                 	db	103	;'g'
   260  000848  68                 	db	104	;'h'
   261  000849  69                 	db	105	;'i'
   262  00084A  6A                 	db	106	;'j'
   263  00084B  6B                 	db	107	;'k'
   264  00084C  6C                 	db	108	;'l'
   265  00084D  6D                 	db	109	;'m'
   266  00084E  6E                 	db	110	;'n'
   267  00084F  6F                 	db	111	;'o'
   268  000850  70                 	db	112	;'p'
   269  000851  71                 	db	113	;'q'
   270  000852  72                 	db	114	;'r'
   271  000853  73                 	db	115	;'s'
   272  000854  74                 	db	116	;'t'
   273  000855  75                 	db	117	;'u'
   274  000856  76                 	db	118	;'v'
   275  000857  77                 	db	119	;'w'
   276  000858  78                 	db	120	;'x'
   277  000859  79                 	db	121	;'y'
   278  00085A  7A                 	db	122	;'z'
   279  00085B  7B                 	db	123
   280  00085C  7C                 	db	124
   281  00085D  7D                 	db	125
   282  00085E  7E                 	db	126
   283  00085F  B9                 	db	-71
   284  000860  B6                 	db	-74
   285  000861  F1                 	db	-15
   286  000862  D1                 	db	-47
   287  000863  E3                 	db	-29
   288  000864  10                 	db	16
   289  000865  20                 	db	32
   290  000866  0D                 	db	13
   291  000867  0A                 	db	10
   292  000868  00                 	db	0
   293  000869                     STR_1:
   294  000869  22                 	db	34
   295  00086A  2A                 	db	42
   296  00086B  2B                 	db	43
   297  00086C  2C                 	db	44
   298  00086D  3A                 	db	58	;':'
   299  00086E  3B                 	db	59	;';'
   300  00086F  3C                 	db	60	;'<'
   301  000870  3D                 	db	61	;'='
   302  000871  3E                 	db	62	;'>'
   303  000872  3F                 	db	63	;'?'
   304  000873  5B                 	db	91	;'['
   305  000874  5D                 	db	93	;']'
   306  000875  7C                 	db	124
   307  000876  7F                 	db	127
   308  000877  00                 	db	0
   309  000878                     STR_6:
   310  000878  42                 	db	66	;'B'
   311  000879  65                 	db	101	;'e'
   312  00087A  65                 	db	101	;'e'
   313  00087B  44                 	db	68	;'D'
   314  00087C  65                 	db	101	;'e'
   315  00087D  76                 	db	118	;'v'
   316  00087E  2E                 	db	46
   317  00087F  74                 	db	116	;'t'
   318  000880  78                 	db	120	;'x'
   319  000881  74                 	db	116	;'t'
   320  000882  00                 	db	0
   321  0000                     
   322                           ; #config settings
   323  000883  00                 	db	0	; dummy byte at the end
   324  0000                     
   325                           	psect	cinit
   326  0051B0                     __pcinit:
   327                           	opt callstack 0
   328  0051B0                     start_initialization:
   329                           	opt callstack 0
   330  0051B0                     __initialization:
   331                           	opt callstack 0
   332                           
   333                           ; Initialize objects allocated to BANK0 (15 bytes)
   334                           ; load TBLPTR registers with __pidataBANK0
   335  0051B0  0EF0               	movlw	low __pidataBANK0
   336  0051B2  6EF6               	movwf	tblptrl,c
   337  0051B4  0E54               	movlw	high __pidataBANK0
   338  0051B6  6EF7               	movwf	tblptrh,c
   339  0051B8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   340  0051BA  6EF8               	movwf	tblptru,c
   341  0051BC  EE00  F0E5         	lfsr	0,__pdataBANK0
   342  0051C0  EE10 F00F          	lfsr	1,15
   343  0051C4                     copy_data0:
   344  0051C4  0009               	tblrd		*+
   345  0051C6  CFF5 FFEE          	movff	tablat,postinc0
   346  0051CA  50E5               	movf	postdec1,w,c
   347  0051CC  50E1               	movf	fsr1l,w,c
   348  0051CE  E1FA               	bnz	copy_data0
   349                           
   350                           ; Clear objects allocated to BIGRAM (558 bytes)
   351  0051D0  EE01  F020         	lfsr	0,__pbssBIGRAM
   352  0051D4  EE12 F02E          	lfsr	1,558
   353  0051D8                     clear_0:
   354  0051D8  6AEE               	clrf	postinc0,c
   355  0051DA  50E5               	movf	postdec1,w,c
   356  0051DC  50E1               	movf	fsr1l,w,c
   357  0051DE  E1FC               	bnz	clear_0
   358  0051E0  50E2               	movf	fsr1h,w,c
   359  0051E2  E1FA               	bnz	clear_0
   360                           
   361                           ; Clear objects allocated to BANK1 (32 bytes)
   362  0051E4  EE01  F000         	lfsr	0,__pbssBANK1
   363  0051E8  0E20               	movlw	32
   364  0051EA                     clear_1:
   365  0051EA  6AEE               	clrf	postinc0,c
   366  0051EC  06E8               	decf	wreg,f,c
   367  0051EE  E1FD               	bnz	clear_1
   368                           
   369                           ; Clear objects allocated to BANK0 (21 bytes)
   370  0051F0  EE00  F0D0         	lfsr	0,__pbssBANK0
   371  0051F4  0E15               	movlw	21
   372  0051F6                     clear_2:
   373  0051F6  6AEE               	clrf	postinc0,c
   374  0051F8  06E8               	decf	wreg,f,c
   375  0051FA  E1FD               	bnz	clear_2
   376  0051FC                     end_of_initialization:
   377                           	opt callstack 0
   378  0051FC                     __end_of__initialization:
   379                           	opt callstack 0
   380  0051FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   381  0051FE  6EF8               	movwf	tblptru,c
   382  005200  0100               	movlb	0
   383  005202  EF52  F029         	goto	_main	;jump to C main() function
   384                           
   385                           	psect	bssBANK0
   386  0000D0                     __pbssBANK0:
   387                           	opt callstack 0
   388  0000D0                     _volt:
   389                           	opt callstack 0
   390  0000D0                     	ds	4
   391  0000D4                     _data:
   392                           	opt callstack 0
   393  0000D4                     	ds	2
   394  0000D6                     _out:
   395                           	opt callstack 0
   396  0000D6                     	ds	2
   397  0000D8                     _a:
   398                           	opt callstack 0
   399  0000D8                     	ds	2
   400  0000DA                     _adcin:
   401                           	opt callstack 0
   402  0000DA                     	ds	2
   403  0000DC                     _Fsid:
   404                           	opt callstack 0
   405  0000DC                     	ds	2
   406  0000DE                     ff@FatFs:
   407                           	opt callstack 0
   408  0000DE                     	ds	2
   409  0000E0                     _CardType:
   410                           	opt callstack 0
   411  0000E0                     	ds	1
   412  0000E1                     _ND:
   413                           	opt callstack 0
   414  0000E1                     	ds	2
   415  0000E3                     _bw:
   416                           	opt callstack 0
   417  0000E3                     	ds	2
   418                           
   419                           	psect	dataBANK0
   420  0000E5                     __pdataBANK0:
   421                           	opt callstack 0
   422  0000E5                     Error@F5055:
   423                           	opt callstack 0
   424  0000E5                     	ds	10
   425  0000EF                     _i:
   426                           	opt callstack 0
   427  0000EF                     	ds	2
   428  0000F1                     _buffor:
   429                           	opt callstack 0
   430  0000F1                     	ds	2
   431  0000F3                     _Stat:
   432                           	opt callstack 0
   433  0000F3                     	ds	1
   434                           
   435                           	psect	bssBANK1
   436  000100                     __pbssBANK1:
   437                           	opt callstack 0
   438  000100                     _Fil:
   439                           	opt callstack 0
   440  000100                     	ds	32
   441                           
   442                           	psect	bssBIGRAM
   443  000120                     __pbssBIGRAM:
   444                           	opt callstack 0
   445  000120                     _FatFs:
   446                           	opt callstack 0
   447  000120                     	ds	558
   448                           
   449                           	psect	cstackBANK0
   450  000060                     __pcstackBANK0:
   451                           	opt callstack 0
   452  000060                     ??_dir_sdi:
   453  000060                     ??_f_read:
   454  000060                     remove_chain@res:
   455                           	opt callstack 0
   456  000060                     create_chain@res:
   457                           	opt callstack 0
   458  000060                     find_volume@br:
   459                           	opt callstack 0
   460                           
   461                           ; 16 bytes @ 0x0
   462  000060                     	ds	1
   463  000061                     remove_chain@nxt:
   464                           	opt callstack 0
   465  000061                     create_chain@scl:
   466                           	opt callstack 0
   467                           
   468                           ; 4 bytes @ 0x1
   469  000061                     	ds	4
   470  000065                     create_chain@ncl:
   471                           	opt callstack 0
   472                           
   473                           ; 4 bytes @ 0x5
   474  000065                     	ds	2
   475  000067                     dir_sdi@ic:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x7
   479  000067                     	ds	2
   480  000069                     create_chain@cs:
   481                           	opt callstack 0
   482  000069                     dir_sdi@sect:
   483                           	opt callstack 0
   484                           
   485                           ; 4 bytes @ 0x9
   486  000069                     	ds	3
   487  00006C                     f_read@res:
   488                           	opt callstack 0
   489                           
   490                           ; 1 bytes @ 0xC
   491  00006C                     	ds	1
   492  00006D                     dir_next@dp:
   493                           	opt callstack 0
   494  00006D                     f_lseek@fp:
   495                           	opt callstack 0
   496  00006D                     dir_sdi@clst:
   497                           	opt callstack 0
   498  00006D                     f_read@remain:
   499                           	opt callstack 0
   500                           
   501                           ; 4 bytes @ 0xD
   502  00006D                     	ds	2
   503  00006F                     dir_next@stretch:
   504                           	opt callstack 0
   505  00006F                     f_lseek@ofs:
   506                           	opt callstack 0
   507                           
   508                           ; 4 bytes @ 0xF
   509  00006F                     	ds	1
   510  000070                     _find_volume$728:
   511                           	opt callstack 0
   512                           
   513                           ; 4 bytes @ 0x10
   514  000070                     	ds	1
   515  000071                     ??_dir_next:
   516  000071                     f_read@clst:
   517                           	opt callstack 0
   518                           
   519                           ; 4 bytes @ 0x11
   520  000071                     	ds	2
   521  000073                     ??_f_lseek:
   522                           
   523                           ; 1 bytes @ 0x13
   524  000073                     	ds	1
   525  000074                     _find_volume$729:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x14
   529  000074                     	ds	1
   530  000075                     f_read@rbuff:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x15
   534  000075                     	ds	1
   535  000076                     find_volume@szbfat:
   536                           	opt callstack 0
   537                           
   538                           ; 4 bytes @ 0x16
   539  000076                     	ds	1
   540  000077                     f_read@csect:
   541                           	opt callstack 0
   542                           
   543                           ; 1 bytes @ 0x17
   544  000077                     	ds	1
   545  000078                     dir_next@c:
   546                           	opt callstack 0
   547  000078                     f_read@sect:
   548                           	opt callstack 0
   549                           
   550                           ; 4 bytes @ 0x18
   551  000078                     	ds	2
   552  00007A                     dir_next@i:
   553                           	opt callstack 0
   554  00007A                     find_volume@pt:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0x1A
   558  00007A                     	ds	2
   559  00007C                     f_read@cc:
   560                           	opt callstack 0
   561  00007C                     dir_next@clst:
   562                           	opt callstack 0
   563  00007C                     find_volume@sysect:
   564                           	opt callstack 0
   565                           
   566                           ; 4 bytes @ 0x1C
   567  00007C                     	ds	2
   568  00007E                     f_read@rcnt:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x1E
   572  00007E                     	ds	2
   573  000080                     dir_alloc@dp:
   574                           	opt callstack 0
   575  000080                     dir_find@dp:
   576                           	opt callstack 0
   577  000080                     find_volume@vol:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x20
   581  000080                     	ds	2
   582  000082                     dir_find@c:
   583                           	opt callstack 0
   584  000082                     dir_alloc@nent:
   585                           	opt callstack 0
   586  000082                     find_volume@nrsv:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0x22
   590  000082                     	ds	1
   591  000083                     dir_find@dir:
   592                           	opt callstack 0
   593  000083                     f_lseek@ifptr:
   594                           	opt callstack 0
   595                           
   596                           ; 4 bytes @ 0x23
   597  000083                     	ds	1
   598  000084                     ??_dir_alloc:
   599  000084                     find_volume@tsect:
   600                           	opt callstack 0
   601                           
   602                           ; 4 bytes @ 0x24
   603  000084                     	ds	1
   604  000085                     dir_find@res:
   605                           	opt callstack 0
   606                           
   607                           ; 1 bytes @ 0x25
   608  000085                     	ds	1
   609  000086                     follow_path@dp:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x26
   613  000086                     	ds	1
   614  000087                     f_lseek@res:
   615                           	opt callstack 0
   616  000087                     dir_alloc@n:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x27
   620  000087                     	ds	1
   621  000088                     follow_path@path:
   622                           	opt callstack 0
   623  000088                     find_volume@nclst:
   624                           	opt callstack 0
   625  000088                     f_lseek@nsect:
   626                           	opt callstack 0
   627                           
   628                           ; 4 bytes @ 0x28
   629  000088                     	ds	1
   630  000089                     dir_alloc@res:
   631                           	opt callstack 0
   632                           
   633                           ; 1 bytes @ 0x29
   634  000089                     	ds	1
   635  00008A                     dir_register@dp:
   636                           	opt callstack 0
   637  00008A                     follow_path@dir:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x2A
   641  00008A                     	ds	2
   642  00008C                     dir_register@res:
   643                           	opt callstack 0
   644  00008C                     follow_path@ns:
   645                           	opt callstack 0
   646  00008C                     find_volume@stat:
   647                           	opt callstack 0
   648  00008C                     f_lseek@bcs:
   649                           	opt callstack 0
   650                           
   651                           ; 4 bytes @ 0x2C
   652  00008C                     	ds	1
   653  00008D                     follow_path@res:
   654                           	opt callstack 0
   655  00008D                     find_volume@fasize:
   656                           	opt callstack 0
   657                           
   658                           ; 4 bytes @ 0x2D
   659  00008D                     	ds	3
   660  000090                     f_lseek@clst:
   661                           	opt callstack 0
   662                           
   663                           ; 4 bytes @ 0x30
   664  000090                     	ds	1
   665  000091                     find_volume@bsect:
   666                           	opt callstack 0
   667                           
   668                           ; 4 bytes @ 0x31
   669  000091                     	ds	4
   670  000095                     find_volume@i:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x35
   674  000095                     	ds	2
   675  000097                     find_volume@fmt:
   676                           	opt callstack 0
   677                           
   678                           ; 1 bytes @ 0x37
   679  000097                     	ds	1
   680  000098                     find_volume@fs:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x38
   684  000098                     	ds	2
   685  00009A                     f_open@fp:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x3A
   689  00009A                     	ds	2
   690  00009C                     f_open@path:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0x3C
   694  00009C                     	ds	2
   695  00009E                     f_open@mode:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0x3E
   699  00009E                     	ds	1
   700  00009F                     ??_f_open:
   701                           
   702                           ; 1 bytes @ 0x3F
   703  00009F                     	ds	4
   704  0000A3                     f_open@sfn:
   705                           	opt callstack 0
   706                           
   707                           ; 12 bytes @ 0x43
   708  0000A3                     	ds	12
   709  0000AF                     f_open@cl:
   710                           	opt callstack 0
   711                           
   712                           ; 4 bytes @ 0x4F
   713  0000AF                     	ds	4
   714  0000B3                     f_open@dw:
   715                           	opt callstack 0
   716                           
   717                           ; 4 bytes @ 0x53
   718  0000B3                     	ds	4
   719  0000B7                     f_open@res:
   720                           	opt callstack 0
   721                           
   722                           ; 1 bytes @ 0x57
   723  0000B7                     	ds	1
   724  0000B8                     f_open@dir:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x58
   728  0000B8                     	ds	2
   729  0000BA                     f_open@dj:
   730                           	opt callstack 0
   731                           
   732                           ; 22 bytes @ 0x5A
   733  0000BA                     	ds	22
   734                           
   735                           	psect	cstackCOMRAM
   736  000001                     __pcstackCOMRAM:
   737                           	opt callstack 0
   738  000001                     ??___delay_sec:
   739  000001                     ?_mem_cmp:
   740                           	opt callstack 0
   741  000001                     ?_chk_chr:
   742                           	opt callstack 0
   743  000001                     ?_get_ldnumber:
   744                           	opt callstack 0
   745  000001                     ?___wmul:
   746                           	opt callstack 0
   747  000001                     ?_ld_clust:
   748                           	opt callstack 0
   749  000001                     ?___lmul:
   750                           	opt callstack 0
   751  000001                     ?___lldiv:
   752                           	opt callstack 0
   753  000001                     disk_status@pdrv:
   754                           	opt callstack 0
   755  000001                     SPI1_Exchange8bit@data:
   756                           	opt callstack 0
   757  000001                     mem_cpy@dst:
   758                           	opt callstack 0
   759  000001                     mem_set@dst:
   760                           	opt callstack 0
   761  000001                     mem_cmp@dst:
   762                           	opt callstack 0
   763  000001                     chk_chr@str:
   764                           	opt callstack 0
   765  000001                     ld_clust@fs:
   766                           	opt callstack 0
   767  000001                     st_clust@dir:
   768                           	opt callstack 0
   769  000001                     get_ldnumber@path:
   770                           	opt callstack 0
   771  000001                     Error@a:
   772                           	opt callstack 0
   773  000001                     ___wmul@multiplier:
   774                           	opt callstack 0
   775  000001                     ___lmul@multiplier:
   776                           	opt callstack 0
   777  000001                     ___lldiv@dividend:
   778                           	opt callstack 0
   779                           
   780                           ; 4 bytes @ 0x0
   781  000001                     	ds	1
   782  000002                     wait_ready@tmr:
   783                           	opt callstack 0
   784  000002                     rcvr_datablock@buff:
   785                           	opt callstack 0
   786  000002                     validate@obj:
   787                           	opt callstack 0
   788                           
   789                           ; 2 bytes @ 0x1
   790  000002                     	ds	1
   791  000003                     ??_get_ldnumber:
   792  000003                     ??_Error:
   793  000003                     mem_cpy@src:
   794                           	opt callstack 0
   795  000003                     mem_set@val:
   796                           	opt callstack 0
   797  000003                     mem_cmp@src:
   798                           	opt callstack 0
   799  000003                     chk_chr@chr:
   800                           	opt callstack 0
   801  000003                     ld_clust@dir:
   802                           	opt callstack 0
   803  000003                     ___wmul@multiplicand:
   804                           	opt callstack 0
   805  000003                     st_clust@cl:
   806                           	opt callstack 0
   807                           
   808                           ; 4 bytes @ 0x2
   809  000003                     	ds	1
   810  000004                     ??_validate:
   811  000004                     ___delay_sec@sec:
   812                           	opt callstack 0
   813  000004                     rcvr_datablock@btr:
   814                           	opt callstack 0
   815  000004                     xmit_datablock@buff:
   816                           	opt callstack 0
   817  000004                     ___send_cmd@arg:
   818                           	opt callstack 0
   819  000004                     Error@v_seg:
   820                           	opt callstack 0
   821                           
   822                           ; 10 bytes @ 0x3
   823  000004                     	ds	1
   824  000005                     ??_chk_chr:
   825  000005                     ??_ld_clust:
   826  000005                     ___delay_sec@i:
   827                           	opt callstack 0
   828  000005                     mem_cpy@cnt:
   829                           	opt callstack 0
   830  000005                     mem_set@cnt:
   831                           	opt callstack 0
   832  000005                     mem_cmp@cnt:
   833                           	opt callstack 0
   834  000005                     ___wmul@product:
   835                           	opt callstack 0
   836  000005                     ___lmul@multiplicand:
   837                           	opt callstack 0
   838  000005                     ___lldiv@divisor:
   839                           	opt callstack 0
   840                           
   841                           ; 4 bytes @ 0x4
   842  000005                     	ds	1
   843  000006                     xmit_datablock@token:
   844                           	opt callstack 0
   845  000006                     rcvr_datablock@tmr:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0x5
   849  000006                     	ds	1
   850  000007                     ??_mem_cmp:
   851  000007                     xmit_datablock@i:
   852                           	opt callstack 0
   853  000007                     mem_cpy@d:
   854                           	opt callstack 0
   855  000007                     mem_set@d:
   856                           	opt callstack 0
   857  000007                     get_ldnumber@tp:
   858                           	opt callstack 0
   859                           
   860                           ; 2 bytes @ 0x6
   861  000007                     	ds	1
   862  000008                     rcvr_datablock@token:
   863                           	opt callstack 0
   864  000008                     ___send_cmd@res:
   865                           	opt callstack 0
   866  000008                     validate@fil:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x7
   870  000008                     	ds	1
   871  000009                     xmit_datablock@resp:
   872                           	opt callstack 0
   873  000009                     ___send_cmd@n:
   874                           	opt callstack 0
   875  000009                     mem_cpy@s:
   876                           	opt callstack 0
   877  000009                     mem_cmp@d:
   878                           	opt callstack 0
   879  000009                     create_name@dp:
   880                           	opt callstack 0
   881  000009                     get_ldnumber@vol:
   882                           	opt callstack 0
   883  000009                     ___lmul@product:
   884                           	opt callstack 0
   885  000009                     ___lldiv@quotient:
   886                           	opt callstack 0
   887                           
   888                           ; 4 bytes @ 0x8
   889  000009                     	ds	1
   890  00000A                     ___send_cmd@cmd:
   891                           	opt callstack 0
   892                           
   893                           ; 1 bytes @ 0x9
   894  00000A                     	ds	1
   895  00000B                     mem_cmp@s:
   896                           	opt callstack 0
   897  00000B                     create_name@path:
   898                           	opt callstack 0
   899  00000B                     get_ldnumber@i:
   900                           	opt callstack 0
   901  00000B                     send_cmd@arg:
   902                           	opt callstack 0
   903  00000B                     ld_clust@cl:
   904                           	opt callstack 0
   905                           
   906                           ; 4 bytes @ 0xA
   907  00000B                     	ds	2
   908  00000D                     ??_create_name:
   909  00000D                     ?_clust2sect:
   910                           	opt callstack 0
   911  00000D                     ___lldiv@counter:
   912                           	opt callstack 0
   913  00000D                     mem_cmp@r:
   914                           	opt callstack 0
   915  00000D                     clust2sect@fs:
   916                           	opt callstack 0
   917  00000D                     get_ldnumber@tt:
   918                           	opt callstack 0
   919                           
   920                           ; 2 bytes @ 0xC
   921  00000D                     	ds	2
   922  00000F                     send_cmd@cmd:
   923                           	opt callstack 0
   924  00000F                     clust2sect@clst:
   925                           	opt callstack 0
   926                           
   927                           ; 4 bytes @ 0xE
   928  00000F                     	ds	1
   929  000010                     send_cmd@res:
   930                           	opt callstack 0
   931                           
   932                           ; 1 bytes @ 0xF
   933  000010                     	ds	1
   934  000011                     ??_disk_initialize:
   935  000011                     disk_ioctl@cmd:
   936                           	opt callstack 0
   937  000011                     disk_read@buff:
   938                           	opt callstack 0
   939  000011                     disk_write@buff:
   940                           	opt callstack 0
   941  000011                     _create_name$624:
   942                           	opt callstack 0
   943                           
   944                           ; 2 bytes @ 0x10
   945  000011                     	ds	1
   946  000012                     disk_initialize@pdrv:
   947                           	opt callstack 0
   948  000012                     disk_ioctl@buff:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x11
   952  000012                     	ds	1
   953  000013                     ??_clust2sect:
   954  000013                     create_name@si:
   955                           	opt callstack 0
   956  000013                     disk_initialize@ocr:
   957                           	opt callstack 0
   958  000013                     disk_read@sector:
   959                           	opt callstack 0
   960  000013                     disk_write@sector:
   961                           	opt callstack 0
   962                           
   963                           ; 4 bytes @ 0x12
   964  000013                     	ds	1
   965  000014                     ??_disk_ioctl:
   966                           
   967                           ; 1 bytes @ 0x13
   968  000014                     	ds	1
   969  000015                     create_name@b:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0x14
   973  000015                     	ds	1
   974  000016                     create_name@ni:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x15
   978  000016                     	ds	1
   979  000017                     _disk_initialize$134:
   980                           	opt callstack 0
   981  000017                     disk_read@count:
   982                           	opt callstack 0
   983  000017                     disk_write@count:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x16
   987  000017                     	ds	1
   988  000018                     create_name@p:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x17
   992  000018                     	ds	1
   993  000019                     ??_disk_write:
   994  000019                     disk_initialize@cmd:
   995                           	opt callstack 0
   996  000019                     disk_read@pdrv:
   997                           	opt callstack 0
   998                           
   999                           ; 1 bytes @ 0x18
  1000  000019                     	ds	1
  1001  00001A                     disk_initialize@ty:
  1002                           	opt callstack 0
  1003  00001A                     disk_write@pdrv:
  1004                           	opt callstack 0
  1005  00001A                     create_name@d:
  1006                           	opt callstack 0
  1007  00001A                     _disk_read$143:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x19
  1011  00001A                     	ds	1
  1012  00001B                     disk_initialize@tmr:
  1013                           	opt callstack 0
  1014  00001B                     sync_window@fs:
  1015                           	opt callstack 0
  1016  00001B                     create_name@sfn:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x1A
  1020  00001B                     	ds	1
  1021  00001C                     disk_read@cmd:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x1B
  1025  00001C                     	ds	1
  1026  00001D                     ??_sync_window:
  1027  00001D                     disk_initialize@n:
  1028                           	opt callstack 0
  1029  00001D                     create_name@i:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x1C
  1033  00001D                     	ds	2
  1034  00001F                     create_name@c:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x1E
  1038  00001F                     	ds	2
  1039  000021                     disk_ioctl@csd:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 16 bytes @ 0x20
  1043  000021                     	ds	8
  1044  000029                     sync_window@res:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x28
  1048  000029                     	ds	1
  1049  00002A                     sync_window@nf:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x29
  1053  00002A                     	ds	2
  1054  00002C                     sync_window@wsect:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x2B
  1058  00002C                     	ds	4
  1059  000030                     move_window@fs:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x2F
  1063  000030                     	ds	1
  1064  000031                     disk_ioctl@pdrv:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x30
  1068  000031                     	ds	1
  1069  000032                     disk_ioctl@csize:
  1070                           	opt callstack 0
  1071  000032                     move_window@sector:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x31
  1075  000032                     	ds	4
  1076  000036                     disk_ioctl@res:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x35
  1080  000036                     	ds	1
  1081  000037                     disk_ioctl@n:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x36
  1085  000037                     	ds	1
  1086  000038                     disk_ioctl@ptr:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x37
  1090  000038                     	ds	2
  1091  00003A                     move_window@res:
  1092                           	opt callstack 0
  1093  00003A                     sync_fs@fs:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x39
  1097  00003A                     	ds	1
  1098  00003B                     ?_get_fat:
  1099                           	opt callstack 0
  1100  00003B                     get_fat@fs:
  1101                           	opt callstack 0
  1102  00003B                     put_fat@fs:
  1103                           	opt callstack 0
  1104  00003B                     check_fs@fs:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x3A
  1108  00003B                     	ds	1
  1109  00003C                     ??_sync_fs:
  1110                           
  1111                           ; 1 bytes @ 0x3B
  1112  00003C                     	ds	1
  1113  00003D                     get_fat@clst:
  1114                           	opt callstack 0
  1115  00003D                     put_fat@clst:
  1116                           	opt callstack 0
  1117  00003D                     check_fs@sect:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x3C
  1121  00003D                     	ds	4
  1122  000041                     ??_get_fat:
  1123  000041                     ??_check_fs:
  1124  000041                     put_fat@val:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x40
  1128  000041                     	ds	3
  1129  000044                     sync_fs@res:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x43
  1133  000044                     	ds	1
  1134  000045                     ??_put_fat:
  1135  000045                     find_volume@rfs:
  1136                           	opt callstack 0
  1137  000045                     f_sync@fp:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x44
  1141  000045                     	ds	2
  1142  000047                     find_volume@path:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x46
  1146  000047                     	ds	2
  1147  000049                     find_volume@wmode:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x48
  1151  000049                     	ds	1
  1152  00004A                     ??_find_volume:
  1153  00004A                     _get_fat$374:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x49
  1157  00004A                     	ds	1
  1158  00004B                     f_sync@res:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x4A
  1162  00004B                     	ds	1
  1163  00004C                     f_sync@dir:
  1164                           	opt callstack 0
  1165  00004C                     get_fat@val:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x4B
  1169  00004C                     	ds	1
  1170  00004D                     _put_fat$400:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x4C
  1174  00004D                     	ds	1
  1175  00004E                     f_close@fp:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x4D
  1179  00004E                     	ds	1
  1180  00004F                     _put_fat$401:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x4E
  1184  00004F                     	ds	1
  1185  000050                     f_close@res:
  1186                           	opt callstack 0
  1187  000050                     get_fat@wc:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x4F
  1191  000050                     	ds	1
  1192  000051                     put_fat@bc:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x50
  1196  000051                     	ds	1
  1197  000052                     get_fat@p:
  1198                           	opt callstack 0
  1199  000052                     f_mount@fs:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x51
  1203  000052                     	ds	1
  1204  000053                     put_fat@res:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x52
  1208  000053                     	ds	1
  1209  000054                     get_fat@bc:
  1210                           	opt callstack 0
  1211  000054                     put_fat@p:
  1212                           	opt callstack 0
  1213  000054                     f_mount@path:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x53
  1217  000054                     	ds	2
  1218  000056                     ?_create_chain:
  1219                           	opt callstack 0
  1220  000056                     f_mount@opt:
  1221                           	opt callstack 0
  1222  000056                     remove_chain@fs:
  1223                           	opt callstack 0
  1224  000056                     create_chain@fs:
  1225                           	opt callstack 0
  1226  000056                     dir_sdi@dp:
  1227                           	opt callstack 0
  1228  000056                     f_read@fp:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x55
  1232  000056                     	ds	1
  1233  000057                     f_mount@res:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x56
  1237  000057                     	ds	1
  1238  000058                     dir_sdi@idx:
  1239                           	opt callstack 0
  1240  000058                     f_mount@cfs:
  1241                           	opt callstack 0
  1242  000058                     f_read@buff:
  1243                           	opt callstack 0
  1244  000058                     remove_chain@clst:
  1245                           	opt callstack 0
  1246  000058                     create_chain@clst:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x57
  1250  000058                     	ds	2
  1251  00005A                     f_mount@rp:
  1252                           	opt callstack 0
  1253  00005A                     f_read@btr:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x59
  1257  00005A                     	ds	2
  1258  00005C                     f_mount@vol:
  1259                           	opt callstack 0
  1260  00005C                     f_read@br:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x5B
  1264  00005C                     	ds	2
  1265  00005E                     ??_reproductor:
  1266                           
  1267                           ; 1 bytes @ 0x5D
  1268  00005E                     	ds	2
  1269  000060                     
  1270                           ; 1 bytes @ 0x5F
  1271 ;;
  1272 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1273 ;;
  1274 ;; *************** function _main *****************
  1275 ;; Defined at:
  1276 ;;		line 44 in file "Main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels required when called:   15
  1296 ;; This function calls:
  1297 ;;		_Error
  1298 ;;		_SYSTEM_Initialize
  1299 ;;		_guardar
  1300 ;; This function is called by:
  1301 ;;		Startup code after reset
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text0
  1306  0052A4                     __ptext0:
  1307                           	opt callstack 0
  1308  0052A4                     _main:
  1309                           	opt callstack 16
  1310                           
  1311                           ;Main.c: 47:     SYSTEM_Initialize();
  1312                           
  1313                           ;incstack = 0
  1314  0052A4  EC5E  F02A         	call	_SYSTEM_Initialize	;wreg free
  1315                           
  1316                           ;Main.c: 49:     OSCCON = 0x53;
  1317  0052A8  0E53               	movlw	83
  1318  0052AA  6ED3               	movwf	4051,c	;volatile
  1319                           
  1320                           ;Main.c: 50:     ADCON2 = 0x94;
  1321  0052AC  0E94               	movlw	148
  1322  0052AE  6EC0               	movwf	4032,c	;volatile
  1323                           
  1324                           ;Main.c: 51:     ADCON1 = 0x00;
  1325  0052B0  0E00               	movlw	0
  1326  0052B2  6EC1               	movwf	4033,c	;volatile
  1327                           
  1328                           ;Main.c: 52:     LATA = 0x00;
  1329  0052B4  0E00               	movlw	0
  1330  0052B6  6E89               	movwf	3977,c	;volatile
  1331                           
  1332                           ;Main.c: 53:     TRISA = 0x00;
  1333  0052B8  0E00               	movlw	0
  1334  0052BA  6E92               	movwf	3986,c	;volatile
  1335                           
  1336                           ;Main.c: 54:     ANSELA = 0x00;
  1337  0052BC  0E00               	movlw	0
  1338  0052BE  010F               	movlb	15	; () banked
  1339  0052C0  6F5B               	movwf	91,b	;volatile
  1340                           
  1341                           ; BSR set to: 15
  1342                           ;Main.c: 55:     TRISC = 0x04;
  1343  0052C2  0E04               	movlw	4
  1344  0052C4  6E94               	movwf	3988,c	;volatile
  1345                           
  1346                           ; BSR set to: 15
  1347                           ;Main.c: 56:     ANSELC = 0x04;
  1348  0052C6  0E04               	movlw	4
  1349  0052C8  6F5D               	movwf	93,b	;volatile
  1350                           
  1351                           ; BSR set to: 15
  1352                           ;Main.c: 57:     ADCON0 = 0x39;
  1353  0052CA  0E39               	movlw	57
  1354  0052CC  6EC2               	movwf	4034,c	;volatile
  1355                           
  1356                           ; BSR set to: 15
  1357                           ;Main.c: 58:     GIE = 1;
  1358  0052CE  8EF2               	bsf	4082,7,c	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;Main.c: 59:     PEIE = 1;
  1362  0052D0  8CF2               	bsf	4082,6,c	;volatile
  1363                           
  1364                           ; BSR set to: 15
  1365                           ;Main.c: 60:     ADIE = 1;
  1366  0052D2  8C9D               	bsf	3997,6,c	;volatile
  1367                           
  1368                           ; BSR set to: 15
  1369                           ;Main.c: 61:        guardar();
  1370  0052D4  EC83  F021         	call	_guardar	;wreg free
  1371  0052D8                     l6687:
  1372                           
  1373                           ;Main.c: 64:        LATA = 0x00;
  1374  0052D8  0E00               	movlw	0
  1375  0052DA  6E89               	movwf	3977,c	;volatile
  1376                           
  1377                           ;Main.c: 65:         Error(55);
  1378  0052DC  0E00               	movlw	0
  1379  0052DE  6E02               	movwf	Error@a+1,c
  1380  0052E0  0E37               	movlw	55
  1381  0052E2  6E01               	movwf	Error@a,c
  1382  0052E4  EC4D  F025         	call	_Error	;wreg free
  1383  0052E8  D7F7               	goto	l6687
  1384  0052EA                     __end_of_main:
  1385                           	opt callstack 0
  1386                           
  1387 ;; *************** function _guardar *****************
  1388 ;; Defined at:
  1389 ;;		line 117 in file "Main.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1403 ;;      Params:         0       0       0       0       0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:   14
  1410 ;; This function calls:
  1411 ;;		_Error
  1412 ;;		_SYSTEM_Initialize
  1413 ;;		___delay_sec
  1414 ;;		_f_close
  1415 ;;		_f_lseek
  1416 ;;		_f_mount
  1417 ;;		_f_open
  1418 ;;		_reproductor
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text1
  1425  004306                     __ptext1:
  1426                           	opt callstack 0
  1427  004306                     _guardar:
  1428                           	opt callstack 16
  1429                           
  1430                           ;Main.c: 118:     SYSTEM_Initialize();
  1431                           
  1432                           ;incstack = 0
  1433  004306  EC5E  F02A         	call	_SYSTEM_Initialize	;wreg free
  1434                           
  1435                           ;Main.c: 119:     if (f_mount(&FatFs, "", 1) != FR_OK) {
  1436  00430A  0E20               	movlw	low _FatFs
  1437  00430C  6E52               	movwf	f_mount@fs,c
  1438  00430E  0E01               	movlw	high _FatFs
  1439  004310  6E53               	movwf	f_mount@fs+1,c
  1440  004312  0E68               	movlw	low (STR_3+103)
  1441  004314  6E54               	movwf	f_mount@path,c
  1442  004316  0E08               	movlw	high (STR_3+103)
  1443  004318  6E55               	movwf	f_mount@path+1,c
  1444  00431A  0E01               	movlw	1
  1445  00431C  6E56               	movwf	f_mount@opt,c
  1446  00431E  EC0F  F026         	call	_f_mount	;wreg free
  1447  004322  0900               	iorlw	0
  1448  004324  B4D8               	btfsc	status,2,c
  1449  004326  D018               	goto	u8850
  1450                           
  1451                           ;Main.c: 121:         Error(33);
  1452  004328  0E00               	movlw	0
  1453  00432A  6E02               	movwf	Error@a+1,c
  1454  00432C  0E21               	movlw	33
  1455  00432E  6E01               	movwf	Error@a,c
  1456  004330  EC4D  F025         	call	_Error	;wreg free
  1457                           
  1458                           ;Main.c: 122:         __delay_sec(2);
  1459  004334  0E02               	movlw	2
  1460  004336  ECD1  F029         	call	___delay_sec
  1461  00433A                     l6577:
  1462                           
  1463                           ;Main.c: 123:         while(f_mount(&FatFs, "", 1) != FR_OK) {
  1464  00433A  0E20               	movlw	low _FatFs
  1465  00433C  6E52               	movwf	f_mount@fs,c
  1466  00433E  0E01               	movlw	high _FatFs
  1467  004340  6E53               	movwf	f_mount@fs+1,c
  1468  004342  0E68               	movlw	low (STR_3+103)
  1469  004344  6E54               	movwf	f_mount@path,c
  1470  004346  0E08               	movlw	high (STR_3+103)
  1471  004348  6E55               	movwf	f_mount@path+1,c
  1472  00434A  0E01               	movlw	1
  1473  00434C  6E56               	movwf	f_mount@opt,c
  1474  00434E  EC0F  F026         	call	_f_mount	;wreg free
  1475  004352  0900               	iorlw	0
  1476  004354  A4D8               	btfss	status,2,c
  1477  004356  D7F1               	goto	l6577
  1478  004358                     u8850:
  1479                           
  1480                           ;Main.c: 128:     Error(1);
  1481  004358  0E00               	movlw	0
  1482  00435A  6E02               	movwf	Error@a+1,c
  1483  00435C  0E01               	movlw	1
  1484  00435E  6E01               	movwf	Error@a,c
  1485  004360  EC4D  F025         	call	_Error	;wreg free
  1486                           
  1487                           ;Main.c: 129:     __delay_sec(2);
  1488  004364  0E02               	movlw	2
  1489  004366  ECD1  F029         	call	___delay_sec
  1490                           
  1491                           ;Main.c: 131:     if (f_open(&Fil, "BeeDev.txt", 0x10 | 0x01 | 0x02) == FR_OK) {
  1492  00436A  0E00               	movlw	low _Fil
  1493  00436C  0100               	movlb	0	; () banked
  1494  00436E  6F9A               	movwf	f_open@fp& (0+255),b
  1495  004370  0E01               	movlw	high _Fil
  1496  004372  6F9B               	movwf	(f_open@fp+1)& (0+255),b
  1497  004374  0E78               	movlw	low STR_6
  1498  004376  6F9C               	movwf	f_open@path& (0+255),b
  1499  004378  0E08               	movlw	high STR_6
  1500  00437A  6F9D               	movwf	(f_open@path+1)& (0+255),b
  1501  00437C  0E13               	movlw	19
  1502  00437E  6F9E               	movwf	f_open@mode& (0+255),b
  1503  004380  EC2E  F017         	call	_f_open	;wreg free
  1504  004384  0900               	iorlw	0
  1505  004386  A4D8               	btfss	status,2,c
  1506  004388  D055               	goto	l6617
  1507                           
  1508                           ;Main.c: 132:         Error(2);
  1509  00438A  0E00               	movlw	0
  1510  00438C  6E02               	movwf	Error@a+1,c
  1511  00438E  0E02               	movlw	2
  1512  004390  6E01               	movwf	Error@a,c
  1513  004392  EC4D  F025         	call	_Error	;wreg free
  1514                           
  1515                           ;Main.c: 135:         __delay_sec(2);
  1516  004396  0E02               	movlw	2
  1517  004398  ECD1  F029         	call	___delay_sec
  1518                           
  1519                           ;Main.c: 136:          Error(3);
  1520  00439C  0E00               	movlw	0
  1521  00439E  6E02               	movwf	Error@a+1,c
  1522  0043A0  0E03               	movlw	3
  1523  0043A2  6E01               	movwf	Error@a,c
  1524  0043A4  EC4D  F025         	call	_Error	;wreg free
  1525                           
  1526                           ;Main.c: 138:    if ((Fil.fsize != 0) && (f_lseek(&Fil, Fil.fsize) != FR_OK)) goto endSD
      +                          ;
  1527  0043A8  0101               	movlb	1	; () banked
  1528  0043AA  510A               	movf	(_Fil+10)& (0+255),w,b
  1529  0043AC  110B               	iorwf	(_Fil+11)& (0+255),w,b
  1530  0043AE  110C               	iorwf	(_Fil+12)& (0+255),w,b
  1531  0043B0  110D               	iorwf	(_Fil+13)& (0+255),w,b
  1532  0043B2  B4D8               	btfsc	status,2,c
  1533  0043B4  D012               	goto	l6597
  1534                           
  1535                           ; BSR set to: 1
  1536  0043B6  0E00               	movlw	low _Fil
  1537  0043B8  0100               	movlb	0	; () banked
  1538  0043BA  6F6D               	movwf	f_lseek@fp& (0+255),b
  1539  0043BC  0E01               	movlw	high _Fil
  1540  0043BE  6F6E               	movwf	(f_lseek@fp+1)& (0+255),b
  1541  0043C0  C10A  F06F         	movff	_Fil+10,f_lseek@ofs
  1542  0043C4  C10B  F070         	movff	_Fil+11,f_lseek@ofs+1
  1543  0043C8  C10C  F071         	movff	_Fil+12,f_lseek@ofs+2
  1544  0043CC  C10D  F072         	movff	_Fil+13,f_lseek@ofs+3
  1545  0043D0  EC19  F009         	call	_f_lseek	;wreg free
  1546  0043D4  0900               	iorlw	0
  1547  0043D6  A4D8               	btfss	status,2,c
  1548  0043D8  D014               	goto	l6607
  1549  0043DA                     l6597:
  1550                           
  1551                           ;Main.c: 139:                 Error(4);
  1552  0043DA  0E00               	movlw	0
  1553  0043DC  6E02               	movwf	Error@a+1,c
  1554  0043DE  0E04               	movlw	4
  1555  0043E0  6E01               	movwf	Error@a,c
  1556  0043E2  EC4D  F025         	call	_Error	;wreg free
  1557                           
  1558                           ;Main.c: 140:                 __delay_sec(2);
  1559  0043E6  0E02               	movlw	2
  1560  0043E8  ECD1  F029         	call	___delay_sec
  1561                           
  1562                           ;Main.c: 143:                 reproductor();
  1563  0043EC  EC04  F028         	call	_reproductor	;wreg free
  1564                           
  1565                           ;Main.c: 145:                 Error(5);
  1566  0043F0  0E00               	movlw	0
  1567  0043F2  6E02               	movwf	Error@a+1,c
  1568  0043F4  0E05               	movlw	5
  1569  0043F6  6E01               	movwf	Error@a,c
  1570  0043F8  EC4D  F025         	call	_Error	;wreg free
  1571                           
  1572                           ;Main.c: 146:                 __delay_sec(2);
  1573  0043FC  0E02               	movlw	2
  1574  0043FE  ECD1  F029         	call	___delay_sec
  1575  004402                     l6607:
  1576  004402  0E00               	movlw	low _Fil
  1577  004404  6E4E               	movwf	f_close@fp,c
  1578  004406  0E01               	movlw	high _Fil
  1579  004408  6E4F               	movwf	f_close@fp+1,c
  1580  00440A  ECB4  F029         	call	_f_close	;wreg free
  1581                           
  1582                           ;Main.c: 148:                 Error(6);
  1583  00440E  0E00               	movlw	0
  1584  004410  6E02               	movwf	Error@a+1,c
  1585  004412  0E06               	movlw	6
  1586  004414  6E01               	movwf	Error@a,c
  1587  004416  EC4D  F025         	call	_Error	;wreg free
  1588                           
  1589                           ;Main.c: 149:                 __delay_sec(1);
  1590  00441A  0E01               	movlw	1
  1591  00441C  ECD1  F029         	call	___delay_sec
  1592                           
  1593                           ;Main.c: 151:                 Error(7);
  1594  004420  0E00               	movlw	0
  1595  004422  6E02               	movwf	Error@a+1,c
  1596  004424  0E07               	movlw	7
  1597  004426  6E01               	movwf	Error@a,c
  1598  004428  EC4D  F025         	call	_Error	;wreg free
  1599                           
  1600                           ;Main.c: 152:                 __delay_sec(2);
  1601  00442C  0E02               	movlw	2
  1602  00442E  ECD1  F029         	call	___delay_sec
  1603                           
  1604                           ;Main.c: 154:  }
  1605  004432  0012               	return	
  1606  004434                     l6617:
  1607                           
  1608                           ;Main.c: 156:         Error(0);
  1609  004434  0E00               	movlw	0
  1610  004436  6E02               	movwf	Error@a+1,c
  1611  004438  0E00               	movlw	0
  1612  00443A  6E01               	movwf	Error@a,c
  1613  00443C  EC4D  F025         	call	_Error	;wreg free
  1614  004440  0012               	return		;funcret
  1615  004442                     __end_of_guardar:
  1616                           	opt callstack 0
  1617                           
  1618 ;; *************** function _reproductor *****************
  1619 ;; Defined at:
  1620 ;;		line 96 in file "Main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1636 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1637 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1638 ;;Total ram usage:        1 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:   10
  1641 ;; This function calls:
  1642 ;;		_f_read
  1643 ;; This function is called by:
  1644 ;;		_guardar
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text2
  1649  005008                     __ptext2:
  1650                           	opt callstack 0
  1651  005008                     _reproductor:
  1652                           	opt callstack 19
  1653                           
  1654                           ;Main.c: 97:     i = 0;
  1655                           
  1656                           ;incstack = 0
  1657  005008  0E00               	movlw	0
  1658  00500A  0100               	movlb	0	; () banked
  1659  00500C  6FF0               	movwf	(_i+1)& (0+255),b
  1660  00500E  0E00               	movlw	0
  1661  005010  6FEF               	movwf	_i& (0+255),b
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;Main.c: 98:     f_read(&Fil, data, 2 , &bw);
  1665  005012  0E00               	movlw	low _Fil
  1666  005014  6E56               	movwf	f_read@fp,c
  1667  005016  0E01               	movlw	high _Fil
  1668  005018  6E57               	movwf	f_read@fp+1,c
  1669  00501A  0E00               	movlw	0
  1670  00501C  6E58               	movwf	f_read@buff,c
  1671  00501E  0E00               	movlw	0
  1672  005020  6E59               	movwf	f_read@buff+1,c
  1673  005022  0E00               	movlw	0
  1674  005024  6E5B               	movwf	f_read@btr+1,c
  1675  005026  0E02               	movlw	2
  1676  005028  6E5A               	movwf	f_read@btr,c
  1677  00502A  0EE3               	movlw	low _bw
  1678  00502C  6E5C               	movwf	f_read@br,c
  1679  00502E  0E00               	movlw	high _bw
  1680  005030  6E5D               	movwf	f_read@br+1,c
  1681  005032  EC20  F00C         	call	_f_read	;wreg free
  1682  005036                     l6401:
  1683                           
  1684                           ;Main.c: 100:         i++;
  1685  005036  0100               	movlb	0	; () banked
  1686  005038  4BEF               	infsnz	_i& (0+255),f,b
  1687  00503A  2BF0               	incf	(_i+1)& (0+255),f,b
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;Main.c: 101:         adcin = data[i];
  1691  00503C  0E00               	movlw	0
  1692  00503E  25EF               	addwf	_i& (0+255),w,b
  1693  005040  6ED9               	movwf	fsr2l,c
  1694  005042  0E00               	movlw	0
  1695  005044  21F0               	addwfc	(_i+1)& (0+255),w,b
  1696  005046  6EDA               	movwf	fsr2h,c
  1697  005048  50DF               	movf	indf2,w,c
  1698  00504A  6E5E               	movwf	??_reproductor& (0+255),c
  1699  00504C  505E               	movf	??_reproductor,w,c
  1700  00504E  6FDA               	movwf	_adcin& (0+255),b
  1701  005050  6BDB               	clrf	(_adcin+1)& (0+255),b
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;Main.c: 102:         PORTA = adcin;
  1705  005052  C0DA  FF80         	movff	_adcin,3968	;volatile
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;Main.c: 103:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1709  005056  0E1A               	movlw	26
  1710  005058  6E5E               	movwf	??_reproductor& (0+255),c
  1711  00505A  0EF8               	movlw	248
  1712  00505C                     u9497:
  1713  00505C  2EE8               	decfsz	wreg,f,c
  1714  00505E  D7FE               	bra	u9497
  1715  005060  2E5E               	decfsz	??_reproductor& (0+255),f,c
  1716  005062  D7FC               	bra	u9497
  1717  005064  D000               	nop2	
  1718                           
  1719                           ;Main.c: 104:     }while(i!=5000);
  1720  005066  0E88               	movlw	136
  1721  005068  0100               	movlb	0	; () banked
  1722  00506A  19EF               	xorwf	_i& (0+255),w,b
  1723  00506C  E1E4               	bnz	l6401
  1724  00506E  0E13               	movlw	19
  1725  005070  19F0               	xorwf	(_i+1)& (0+255),w,b
  1726  005072  B4D8               	btfsc	status,2,c
  1727  005074  0012               	return	
  1728  005076  D7DF               	goto	l6401
  1729  005078                     __end_of_reproductor:
  1730                           	opt callstack 0
  1731                           
  1732 ;; *************** function _f_read *****************
  1733 ;; Defined at:
  1734 ;;		line 2590 in file "ff.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  fp              2   85[COMRAM] PTR struct .
  1737 ;;		 -> Fil(32), 
  1738 ;;  buff            2   87[COMRAM] PTR void 
  1739 ;;		 -> NULL(0), 
  1740 ;;  btr             2   89[COMRAM] unsigned short 
  1741 ;;  br              2   91[COMRAM] PTR unsigned short 
  1742 ;;		 -> bw(2), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  sect            4   24[BANK0 ] unsigned long 
  1745 ;;  clst            4   17[BANK0 ] unsigned long 
  1746 ;;  remain          4   13[BANK0 ] unsigned long 
  1747 ;;  rcnt            2   30[BANK0 ] unsigned short 
  1748 ;;  cc              2   28[BANK0 ] unsigned short 
  1749 ;;  rbuff           2   21[BANK0 ] PTR unsigned char 
  1750 ;;		 -> NULL(0), 
  1751 ;;  csect           1   23[BANK0 ] unsigned char 
  1752 ;;  res             1   12[BANK0 ] enum E93
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      enum E93
  1755 ;; Registers used:
  1756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1762 ;;      Params:         8       0       0       0       0       0       0       0       0
  1763 ;;      Locals:         0      20       0       0       0       0       0       0       0
  1764 ;;      Temps:          0      12       0       0       0       0       0       0       0
  1765 ;;      Totals:         8      32       0       0       0       0       0       0       0
  1766 ;;Total ram usage:       40 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    9
  1769 ;; This function calls:
  1770 ;;		_clust2sect
  1771 ;;		_disk_read
  1772 ;;		_get_fat
  1773 ;;		_mem_cpy
  1774 ;;		_move_window
  1775 ;;		_validate
  1776 ;; This function is called by:
  1777 ;;		_reproductor
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text3
  1782  001840                     __ptext3:
  1783                           	opt callstack 0
  1784  001840                     _f_read:
  1785                           	opt callstack 19
  1786                           
  1787                           ;ff.c: 2591:  FIL* fp,;ff.c: 2592:  void* buff,;ff.c: 2593:  UINT btr,;ff.c: 2594:  UINT
      +                          * br;ff.c: 2596: {;ff.c: 2597:  FRESULT res;;ff.c: 2598:  DWORD clst, sect, remain;;ff.c
      +                          : 2599:  UINT rcnt, cc;;ff.c: 2600:  BYTE csect, *rbuff = (BYTE*)buff;
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;incstack = 0
  1791  001840  C058  F075         	movff	f_read@buff,f_read@rbuff
  1792  001844  C059  F076         	movff	f_read@buff+1,f_read@rbuff+1
  1793                           
  1794                           ;ff.c: 2603:  *br = 0;
  1795  001848  C05C  FFD9         	movff	f_read@br,fsr2l
  1796  00184C  C05D  FFDA         	movff	f_read@br+1,fsr2h
  1797  001850  0E00               	movlw	0
  1798  001852  6EDE               	movwf	postinc2,c
  1799  001854  0E00               	movlw	0
  1800  001856  6EDD               	movwf	postdec2,c
  1801                           
  1802                           ;ff.c: 2605:  res = validate(fp);
  1803  001858  C056  F002         	movff	f_read@fp,validate@obj
  1804  00185C  C057  F003         	movff	f_read@fp+1,validate@obj+1
  1805  001860  ECBA  F026         	call	_validate	;wreg free
  1806  001864  0100               	movlb	0	; () banked
  1807  001866  6F6C               	movwf	f_read@res& (0+255),b
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;ff.c: 2606:  if (res != FR_OK) return res;
  1811  001868  516C               	movf	f_read@res& (0+255),w,b
  1812  00186A  A4D8               	btfss	status,2,c
  1813  00186C  0012               	return	
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;ff.c: 2607:  if (fp->err)
  1817  00186E  EE20 F005          	lfsr	2,5
  1818  001872  5056               	movf	f_read@fp,w,c
  1819  001874  26D9               	addwf	fsr2l,f,c
  1820  001876  5057               	movf	f_read@fp+1,w,c
  1821  001878  22DA               	addwfc	fsr2h,f,c
  1822  00187A  50DF               	movf	indf2,w,c
  1823  00187C  A4D8               	btfss	status,2,c
  1824  00187E  0012               	return	
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;ff.c: 2609:  if (!(fp->flag & 0x01))
  1828  001880  EE20 F004          	lfsr	2,4
  1829  001884  5056               	movf	f_read@fp,w,c
  1830  001886  26D9               	addwf	fsr2l,f,c
  1831  001888  5057               	movf	f_read@fp+1,w,c
  1832  00188A  22DA               	addwfc	fsr2h,f,c
  1833  00188C  A0DF               	btfss	indf2,0,c
  1834  00188E  0012               	return	
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;ff.c: 2611:  remain = fp->fsize - fp->fptr;
  1838  001890  EE20 F006          	lfsr	2,6
  1839  001894  5056               	movf	f_read@fp,w,c
  1840  001896  26D9               	addwf	fsr2l,f,c
  1841  001898  5057               	movf	f_read@fp+1,w,c
  1842  00189A  22DA               	addwfc	fsr2h,f,c
  1843  00189C  CFDE F060          	movff	postinc2,??_f_read
  1844  0018A0  CFDE F061          	movff	postinc2,??_f_read+1
  1845  0018A4  CFDE F062          	movff	postinc2,??_f_read+2
  1846  0018A8  CFDE F063          	movff	postinc2,??_f_read+3
  1847  0018AC  EE20 F00A          	lfsr	2,10
  1848  0018B0  5056               	movf	f_read@fp,w,c
  1849  0018B2  26D9               	addwf	fsr2l,f,c
  1850  0018B4  5057               	movf	f_read@fp+1,w,c
  1851  0018B6  22DA               	addwfc	fsr2h,f,c
  1852  0018B8  CFDE F064          	movff	postinc2,??_f_read+4
  1853  0018BC  CFDE F065          	movff	postinc2,??_f_read+5
  1854  0018C0  CFDE F066          	movff	postinc2,??_f_read+6
  1855  0018C4  CFDE F067          	movff	postinc2,??_f_read+7
  1856  0018C8  5160               	movf	??_f_read& (0+255),w,b
  1857  0018CA  5D64               	subwf	(??_f_read+4)& (0+255),w,b
  1858  0018CC  6F6D               	movwf	f_read@remain& (0+255),b
  1859  0018CE  5161               	movf	(??_f_read+1)& (0+255),w,b
  1860  0018D0  5965               	subwfb	(??_f_read+5)& (0+255),w,b
  1861  0018D2  6F6E               	movwf	(f_read@remain+1)& (0+255),b
  1862  0018D4  5162               	movf	(??_f_read+2)& (0+255),w,b
  1863  0018D6  5966               	subwfb	(??_f_read+6)& (0+255),w,b
  1864  0018D8  6F6F               	movwf	(f_read@remain+2)& (0+255),b
  1865  0018DA  5163               	movf	(??_f_read+3)& (0+255),w,b
  1866  0018DC  5967               	subwfb	(??_f_read+7)& (0+255),w,b
  1867  0018DE  6F70               	movwf	(f_read@remain+3)& (0+255),b
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;ff.c: 2612:  if (btr > remain) btr = (UINT)remain;
  1871  0018E0  505A               	movf	f_read@btr,w,c
  1872  0018E2  6F60               	movwf	??_f_read& (0+255),b
  1873  0018E4  505B               	movf	f_read@btr+1,w,c
  1874  0018E6  6F61               	movwf	(??_f_read+1)& (0+255),b
  1875  0018E8  6B62               	clrf	(??_f_read+2)& (0+255),b
  1876  0018EA  6B63               	clrf	(??_f_read+3)& (0+255),b
  1877  0018EC  5160               	movf	??_f_read& (0+255),w,b
  1878  0018EE  5D6D               	subwf	f_read@remain& (0+255),w,b
  1879  0018F0  5161               	movf	(??_f_read+1)& (0+255),w,b
  1880  0018F2  596E               	subwfb	(f_read@remain+1)& (0+255),w,b
  1881  0018F4  5162               	movf	(??_f_read+2)& (0+255),w,b
  1882  0018F6  596F               	subwfb	(f_read@remain+2)& (0+255),w,b
  1883  0018F8  5163               	movf	(??_f_read+3)& (0+255),w,b
  1884  0018FA  5970               	subwfb	(f_read@remain+3)& (0+255),w,b
  1885  0018FC  B0D8               	btfsc	status,0,c
  1886  0018FE  D271               	goto	l6021
  1887                           
  1888                           ; BSR set to: 0
  1889  001900  C06D  F05A         	movff	f_read@remain,f_read@btr
  1890  001904  C06E  F05B         	movff	f_read@remain+1,f_read@btr+1
  1891  001908  D26C               	goto	l6021
  1892  00190A                     l5945:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;ff.c: 2615:   rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {;ff.c: 2616: 
      +                            if ((fp->fptr % ((UINT)512)) == 0) {
  1896  00190A  EE20 F006          	lfsr	2,6
  1897  00190E  5056               	movf	f_read@fp,w,c
  1898  001910  26D9               	addwf	fsr2l,f,c
  1899  001912  5057               	movf	f_read@fp+1,w,c
  1900  001914  22DA               	addwfc	fsr2h,f,c
  1901  001916  0EFF               	movlw	255
  1902  001918  14DE               	andwf	postinc2,w,c
  1903  00191A  6F60               	movwf	??_f_read& (0+255),b
  1904  00191C  0E01               	movlw	1
  1905  00191E  14DE               	andwf	postinc2,w,c
  1906  001920  6F61               	movwf	(??_f_read+1)& (0+255),b
  1907  001922  0E00               	movlw	0
  1908  001924  14DE               	andwf	postinc2,w,c
  1909  001926  6F62               	movwf	(??_f_read+2)& (0+255),b
  1910  001928  0E00               	movlw	0
  1911  00192A  14DE               	andwf	postinc2,w,c
  1912  00192C  6F63               	movwf	(??_f_read+3)& (0+255),b
  1913  00192E  5160               	movf	??_f_read& (0+255),w,b
  1914  001930  1161               	iorwf	(??_f_read+1)& (0+255),w,b
  1915  001932  1162               	iorwf	(??_f_read+2)& (0+255),w,b
  1916  001934  1163               	iorwf	(??_f_read+3)& (0+255),w,b
  1917  001936  A4D8               	btfss	status,2,c
  1918  001938  D1BF               	goto	l605
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;ff.c: 2617:    csect = (BYTE)(fp->fptr / ((UINT)512) & (fp->fs->csize - 1));
  1922  00193A  EE20 F006          	lfsr	2,6
  1923  00193E  5056               	movf	f_read@fp,w,c
  1924  001940  26D9               	addwf	fsr2l,f,c
  1925  001942  5057               	movf	f_read@fp+1,w,c
  1926  001944  22DA               	addwfc	fsr2h,f,c
  1927  001946  CFDE F060          	movff	postinc2,??_f_read
  1928  00194A  CFDE F061          	movff	postinc2,??_f_read+1
  1929  00194E  CFDE F062          	movff	postinc2,??_f_read+2
  1930  001952  CFDE F063          	movff	postinc2,??_f_read+3
  1931  001956  0E0A               	movlw	10
  1932  001958  D005               	goto	u7750
  1933  00195A                     u7755:
  1934  00195A  90D8               	bcf	status,0,c
  1935  00195C  3363               	rrcf	(??_f_read+3)& (0+255),f,b
  1936  00195E  3362               	rrcf	(??_f_read+2)& (0+255),f,b
  1937  001960  3361               	rrcf	(??_f_read+1)& (0+255),f,b
  1938  001962  3360               	rrcf	??_f_read& (0+255),f,b
  1939  001964                     u7750:
  1940  001964  2EE8               	decfsz	wreg,f,c
  1941  001966  D7F9               	goto	u7755
  1942  001968  C056  FFD9         	movff	f_read@fp,fsr2l
  1943  00196C  C057  FFDA         	movff	f_read@fp+1,fsr2h
  1944  001970  EE10 F002          	lfsr	1,2
  1945  001974  50DE               	movf	postinc2,w,c
  1946  001976  26E1               	addwf	fsr1l,f,c
  1947  001978  50DD               	movf	postdec2,w,c
  1948  00197A  22E2               	addwfc	fsr1h,f,c
  1949  00197C  50E7               	movf	indf1,w,c
  1950  00197E  6F64               	movwf	(??_f_read+4)& (0+255),b
  1951  001980  0564               	decf	(??_f_read+4)& (0+255),w,b
  1952  001982  1560               	andwf	??_f_read& (0+255),w,b
  1953  001984  6F77               	movwf	f_read@csect& (0+255),b
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;ff.c: 2618:    if (!csect) {
  1957  001986  5177               	movf	f_read@csect& (0+255),w,b
  1958  001988  A4D8               	btfss	status,2,c
  1959  00198A  D06D               	goto	l5971
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;ff.c: 2619:     if (fp->fptr == 0) {
  1963  00198C  EE20 F006          	lfsr	2,6
  1964  001990  5056               	movf	f_read@fp,w,c
  1965  001992  26D9               	addwf	fsr2l,f,c
  1966  001994  5057               	movf	f_read@fp+1,w,c
  1967  001996  22DA               	addwfc	fsr2h,f,c
  1968  001998  50DE               	movf	postinc2,w,c
  1969  00199A  10DE               	iorwf	postinc2,w,c
  1970  00199C  10DE               	iorwf	postinc2,w,c
  1971  00199E  10DE               	iorwf	postinc2,w,c
  1972  0019A0  A4D8               	btfss	status,2,c
  1973  0019A2  D00F               	goto	l5955
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;ff.c: 2620:      clst = fp->sclust;
  1977  0019A4  EE20 F00E          	lfsr	2,14
  1978  0019A8  5056               	movf	f_read@fp,w,c
  1979  0019AA  26D9               	addwf	fsr2l,f,c
  1980  0019AC  5057               	movf	f_read@fp+1,w,c
  1981  0019AE  22DA               	addwfc	fsr2h,f,c
  1982  0019B0  CFDE F071          	movff	postinc2,f_read@clst
  1983  0019B4  CFDE F072          	movff	postinc2,f_read@clst+1
  1984  0019B8  CFDE F073          	movff	postinc2,f_read@clst+2
  1985  0019BC  CFDE F074          	movff	postinc2,f_read@clst+3
  1986                           
  1987                           ;ff.c: 2621:     } else {
  1988  0019C0  D020               	goto	l5957
  1989  0019C2                     l5955:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;ff.c: 2627:       clst = get_fat(fp->fs, fp->clust);
  1993  0019C2  C056  FFD9         	movff	f_read@fp,fsr2l
  1994  0019C6  C057  FFDA         	movff	f_read@fp+1,fsr2h
  1995  0019CA  CFDE F03B          	movff	postinc2,get_fat@fs
  1996  0019CE  CFDD F03C          	movff	postdec2,get_fat@fs+1
  1997  0019D2  EE20 F012          	lfsr	2,18
  1998  0019D6  5056               	movf	f_read@fp,w,c
  1999  0019D8  26D9               	addwf	fsr2l,f,c
  2000  0019DA  5057               	movf	f_read@fp+1,w,c
  2001  0019DC  22DA               	addwfc	fsr2h,f,c
  2002  0019DE  CFDE F03D          	movff	postinc2,get_fat@clst
  2003  0019E2  CFDE F03E          	movff	postinc2,get_fat@clst+1
  2004  0019E6  CFDE F03F          	movff	postinc2,get_fat@clst+2
  2005  0019EA  CFDE F040          	movff	postinc2,get_fat@clst+3
  2006  0019EE  EC5D  F015         	call	_get_fat	;wreg free
  2007  0019F2  C03B  F071         	movff	?_get_fat,f_read@clst
  2008  0019F6  C03C  F072         	movff	?_get_fat+1,f_read@clst+1
  2009  0019FA  C03D  F073         	movff	?_get_fat+2,f_read@clst+2
  2010  0019FE  C03E  F074         	movff	?_get_fat+3,f_read@clst+3
  2011  001A02                     l5957:
  2012                           
  2013                           ;ff.c: 2629:     if (clst < 2) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  2014  001A02  0100               	movlb	0	; () banked
  2015  001A04  5174               	movf	(f_read@clst+3)& (0+255),w,b
  2016  001A06  1173               	iorwf	(f_read@clst+2)& (0+255),w,b
  2017  001A08  1172               	iorwf	(f_read@clst+1)& (0+255),w,b
  2018  001A0A  E10D               	bnz	l5963
  2019  001A0C  0E02               	movlw	2
  2020  001A0E  5D71               	subwf	f_read@clst& (0+255),w,b
  2021  001A10  B0D8               	btfsc	status,0,c
  2022  001A12  D009               	goto	l5963
  2023                           
  2024                           ; BSR set to: 0
  2025  001A14  EE20 F005          	lfsr	2,5
  2026  001A18  5056               	movf	f_read@fp,w,c
  2027  001A1A  26D9               	addwf	fsr2l,f,c
  2028  001A1C  5057               	movf	f_read@fp+1,w,c
  2029  001A1E  22DA               	addwfc	fsr2h,f,c
  2030  001A20  0E02               	movlw	2
  2031  001A22  6EDF               	movwf	indf2,c
  2032  001A24  0012               	return	
  2033  001A26                     l5963:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;ff.c: 2630:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK
      +                          _ERR; };
  2037  001A26  2971               	incf	f_read@clst& (0+255),w,b
  2038  001A28  E110               	bnz	l5969
  2039  001A2A  2972               	incf	(f_read@clst+1)& (0+255),w,b
  2040  001A2C  E10E               	bnz	l5969
  2041  001A2E  2973               	incf	(f_read@clst+2)& (0+255),w,b
  2042  001A30  E10C               	bnz	l5969
  2043  001A32  2974               	incf	(f_read@clst+3)& (0+255),w,b
  2044  001A34  A4D8               	btfss	status,2,c
  2045  001A36  D009               	goto	l5969
  2046                           
  2047                           ; BSR set to: 0
  2048  001A38  EE20 F005          	lfsr	2,5
  2049  001A3C  5056               	movf	f_read@fp,w,c
  2050  001A3E  26D9               	addwf	fsr2l,f,c
  2051  001A40  5057               	movf	f_read@fp+1,w,c
  2052  001A42  22DA               	addwfc	fsr2h,f,c
  2053  001A44  0E01               	movlw	1
  2054  001A46  6EDF               	movwf	indf2,c
  2055  001A48  0012               	return	
  2056  001A4A                     l5969:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;ff.c: 2631:     fp->clust = clst;
  2060  001A4A  EE20 F012          	lfsr	2,18
  2061  001A4E  5056               	movf	f_read@fp,w,c
  2062  001A50  26D9               	addwf	fsr2l,f,c
  2063  001A52  5057               	movf	f_read@fp+1,w,c
  2064  001A54  22DA               	addwfc	fsr2h,f,c
  2065  001A56  C071  FFDE         	movff	f_read@clst,postinc2
  2066  001A5A  C072  FFDE         	movff	f_read@clst+1,postinc2
  2067  001A5E  C073  FFDE         	movff	f_read@clst+2,postinc2
  2068  001A62  C074  FFDE         	movff	f_read@clst+3,postinc2
  2069  001A66                     l5971:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;ff.c: 2633:    sect = clust2sect(fp->fs, fp->clust);
  2073  001A66  C056  FFD9         	movff	f_read@fp,fsr2l
  2074  001A6A  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2075  001A6E  CFDE F00D          	movff	postinc2,clust2sect@fs
  2076  001A72  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  2077  001A76  EE20 F012          	lfsr	2,18
  2078  001A7A  5056               	movf	f_read@fp,w,c
  2079  001A7C  26D9               	addwf	fsr2l,f,c
  2080  001A7E  5057               	movf	f_read@fp+1,w,c
  2081  001A80  22DA               	addwfc	fsr2h,f,c
  2082  001A82  CFDE F00F          	movff	postinc2,clust2sect@clst
  2083  001A86  CFDE F010          	movff	postinc2,clust2sect@clst+1
  2084  001A8A  CFDE F011          	movff	postinc2,clust2sect@clst+2
  2085  001A8E  CFDE F012          	movff	postinc2,clust2sect@clst+3
  2086  001A92  ECB2  F025         	call	_clust2sect	;wreg free
  2087  001A96  C00D  F078         	movff	?_clust2sect,f_read@sect
  2088  001A9A  C00E  F079         	movff	?_clust2sect+1,f_read@sect+1
  2089  001A9E  C00F  F07A         	movff	?_clust2sect+2,f_read@sect+2
  2090  001AA2  C010  F07B         	movff	?_clust2sect+3,f_read@sect+3
  2091                           
  2092                           ;ff.c: 2634:    if (!sect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  2093  001AA6  0100               	movlb	0	; () banked
  2094  001AA8  5178               	movf	f_read@sect& (0+255),w,b
  2095  001AAA  1179               	iorwf	(f_read@sect+1)& (0+255),w,b
  2096  001AAC  117A               	iorwf	(f_read@sect+2)& (0+255),w,b
  2097  001AAE  117B               	iorwf	(f_read@sect+3)& (0+255),w,b
  2098  001AB0  A4D8               	btfss	status,2,c
  2099  001AB2  D009               	goto	l5979
  2100                           
  2101                           ; BSR set to: 0
  2102  001AB4  EE20 F005          	lfsr	2,5
  2103  001AB8  5056               	movf	f_read@fp,w,c
  2104  001ABA  26D9               	addwf	fsr2l,f,c
  2105  001ABC  5057               	movf	f_read@fp+1,w,c
  2106  001ABE  22DA               	addwfc	fsr2h,f,c
  2107  001AC0  0E02               	movlw	2
  2108  001AC2  6EDF               	movwf	indf2,c
  2109  001AC4  0012               	return	
  2110  001AC6                     l5979:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;ff.c: 2635:    sect += csect;
  2114  001AC6  5177               	movf	f_read@csect& (0+255),w,b
  2115  001AC8  2778               	addwf	f_read@sect& (0+255),f,b
  2116  001ACA  0E00               	movlw	0
  2117  001ACC  2379               	addwfc	(f_read@sect+1)& (0+255),f,b
  2118  001ACE  237A               	addwfc	(f_read@sect+2)& (0+255),f,b
  2119  001AD0  237B               	addwfc	(f_read@sect+3)& (0+255),f,b
  2120                           
  2121                           ;ff.c: 2636:    cc = btr / ((UINT)512);
  2122  001AD2  C05A  F060         	movff	f_read@btr,??_f_read
  2123  001AD6  C05B  F061         	movff	f_read@btr+1,??_f_read+1
  2124  001ADA  0E09               	movlw	9
  2125  001ADC  6F62               	movwf	(??_f_read+2)& (0+255),b
  2126  001ADE                     u7815:
  2127  001ADE  90D8               	bcf	status,0,c
  2128  001AE0  3361               	rrcf	(??_f_read+1)& (0+255),f,b
  2129  001AE2  3360               	rrcf	??_f_read& (0+255),f,b
  2130  001AE4  2F62               	decfsz	(??_f_read+2)& (0+255),f,b
  2131  001AE6  D7FB               	goto	u7815
  2132  001AE8  C060  F07C         	movff	??_f_read,f_read@cc
  2133  001AEC  C061  F07D         	movff	??_f_read+1,f_read@cc+1
  2134                           
  2135                           ;ff.c: 2637:    if (cc) {
  2136  001AF0  517C               	movf	f_read@cc& (0+255),w,b
  2137  001AF2  117D               	iorwf	(f_read@cc+1)& (0+255),w,b
  2138  001AF4  B4D8               	btfsc	status,2,c
  2139  001AF6  D0D2               	goto	l5999
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;ff.c: 2638:     if (csect + cc > fp->fs->csize)
  2143  001AF8  5177               	movf	f_read@csect& (0+255),w,b
  2144  001AFA  257C               	addwf	f_read@cc& (0+255),w,b
  2145  001AFC  6F60               	movwf	??_f_read& (0+255),b
  2146  001AFE  0E00               	movlw	0
  2147  001B00  217D               	addwfc	(f_read@cc+1)& (0+255),w,b
  2148  001B02  6F61               	movwf	(??_f_read+1)& (0+255),b
  2149  001B04  C056  FFD9         	movff	f_read@fp,fsr2l
  2150  001B08  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2151  001B0C  EE10 F002          	lfsr	1,2
  2152  001B10  50DE               	movf	postinc2,w,c
  2153  001B12  26E1               	addwf	fsr1l,f,c
  2154  001B14  50DD               	movf	postdec2,w,c
  2155  001B16  22E2               	addwfc	fsr1h,f,c
  2156  001B18  50E7               	movf	indf1,w,c
  2157  001B1A  6F62               	movwf	(??_f_read+2)& (0+255),b
  2158  001B1C  6B63               	clrf	(??_f_read+3)& (0+255),b
  2159  001B1E  5160               	movf	??_f_read& (0+255),w,b
  2160  001B20  5D62               	subwf	(??_f_read+2)& (0+255),w,b
  2161  001B22  5161               	movf	(??_f_read+1)& (0+255),w,b
  2162  001B24  5963               	subwfb	(??_f_read+3)& (0+255),w,b
  2163  001B26  B0D8               	btfsc	status,0,c
  2164  001B28  D012               	goto	l5985
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;ff.c: 2639:      cc = fp->fs->csize - csect;
  2168  001B2A  C056  FFD9         	movff	f_read@fp,fsr2l
  2169  001B2E  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2170  001B32  EE10 F002          	lfsr	1,2
  2171  001B36  50DE               	movf	postinc2,w,c
  2172  001B38  26E1               	addwf	fsr1l,f,c
  2173  001B3A  50DD               	movf	postdec2,w,c
  2174  001B3C  22E2               	addwfc	fsr1h,f,c
  2175  001B3E  50E7               	movf	indf1,w,c
  2176  001B40  6F60               	movwf	??_f_read& (0+255),b
  2177  001B42  5177               	movf	f_read@csect& (0+255),w,b
  2178  001B44  5D60               	subwf	??_f_read& (0+255),w,b
  2179  001B46  6F7C               	movwf	f_read@cc& (0+255),b
  2180  001B48  6B7D               	clrf	(f_read@cc+1)& (0+255),b
  2181  001B4A  A0D8               	btfss	status,0,c
  2182  001B4C  077D               	decf	(f_read@cc+1)& (0+255),f,b
  2183  001B4E                     l5985:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;ff.c: 2640:     if (disk_read(fp->fs->drv, rbuff, sect, cc) != RES_OK)
  2187  001B4E  C075  F011         	movff	f_read@rbuff,disk_read@buff
  2188  001B52  C076  F012         	movff	f_read@rbuff+1,disk_read@buff+1
  2189  001B56  C078  F013         	movff	f_read@sect,disk_read@sector
  2190  001B5A  C079  F014         	movff	f_read@sect+1,disk_read@sector+1
  2191  001B5E  C07A  F015         	movff	f_read@sect+2,disk_read@sector+2
  2192  001B62  C07B  F016         	movff	f_read@sect+3,disk_read@sector+3
  2193  001B66  C07C  F017         	movff	f_read@cc,disk_read@count
  2194  001B6A  C07D  F018         	movff	f_read@cc+1,disk_read@count+1
  2195  001B6E  C056  FFD9         	movff	f_read@fp,fsr2l
  2196  001B72  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2197  001B76  EE10 F001          	lfsr	1,1
  2198  001B7A  50DE               	movf	postinc2,w,c
  2199  001B7C  26E1               	addwf	fsr1l,f,c
  2200  001B7E  50DD               	movf	postdec2,w,c
  2201  001B80  22E2               	addwfc	fsr1h,f,c
  2202  001B82  50E7               	movf	indf1,w,c
  2203  001B84  ECE7  F024         	call	_disk_read
  2204  001B88  0900               	iorlw	0
  2205  001B8A  B4D8               	btfsc	status,2,c
  2206  001B8C  D009               	goto	l5991
  2207                           
  2208                           ;ff.c: 2641:      { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  2209  001B8E  EE20 F005          	lfsr	2,5
  2210  001B92  5056               	movf	f_read@fp,w,c
  2211  001B94  26D9               	addwf	fsr2l,f,c
  2212  001B96  5057               	movf	f_read@fp+1,w,c
  2213  001B98  22DA               	addwfc	fsr2h,f,c
  2214  001B9A  0E01               	movlw	1
  2215  001B9C  6EDF               	movwf	indf2,c
  2216  001B9E  0012               	return	
  2217  001BA0                     l5991:
  2218                           
  2219                           ;ff.c: 2644:     if (fp->fs->wflag && fp->fs->winsect - sect < cc)
  2220  001BA0  C056  FFD9         	movff	f_read@fp,fsr2l
  2221  001BA4  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2222  001BA8  EE10 F004          	lfsr	1,4
  2223  001BAC  50DE               	movf	postinc2,w,c
  2224  001BAE  26E1               	addwf	fsr1l,f,c
  2225  001BB0  50DD               	movf	postdec2,w,c
  2226  001BB2  22E2               	addwfc	fsr1h,f,c
  2227  001BB4  50E7               	movf	indf1,w,c
  2228  001BB6  B4D8               	btfsc	status,2,c
  2229  001BB8  D061               	goto	l5997
  2230  001BBA  0100               	movlb	0	; () banked
  2231  001BBC  517C               	movf	f_read@cc& (0+255),w,b
  2232  001BBE  6F60               	movwf	??_f_read& (0+255),b
  2233  001BC0  517D               	movf	(f_read@cc+1)& (0+255),w,b
  2234  001BC2  6F61               	movwf	(??_f_read+1)& (0+255),b
  2235  001BC4  6B62               	clrf	(??_f_read+2)& (0+255),b
  2236  001BC6  6B63               	clrf	(??_f_read+3)& (0+255),b
  2237  001BC8  C056  FFD9         	movff	f_read@fp,fsr2l
  2238  001BCC  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2239  001BD0  EE10 F02A          	lfsr	1,42
  2240  001BD4  50DE               	movf	postinc2,w,c
  2241  001BD6  26E1               	addwf	fsr1l,f,c
  2242  001BD8  50DD               	movf	postdec2,w,c
  2243  001BDA  22E2               	addwfc	fsr1h,f,c
  2244  001BDC  CFE6 F064          	movff	postinc1,??_f_read+4
  2245  001BE0  CFE6 F065          	movff	postinc1,??_f_read+5
  2246  001BE4  CFE6 F066          	movff	postinc1,??_f_read+6
  2247  001BE8  CFE6 F067          	movff	postinc1,??_f_read+7
  2248  001BEC  5178               	movf	f_read@sect& (0+255),w,b
  2249  001BEE  5D64               	subwf	(??_f_read+4)& (0+255),w,b
  2250  001BF0  6F68               	movwf	(??_f_read+8)& (0+255),b
  2251  001BF2  5179               	movf	(f_read@sect+1)& (0+255),w,b
  2252  001BF4  5965               	subwfb	(??_f_read+5)& (0+255),w,b
  2253  001BF6  6F69               	movwf	(??_f_read+9)& (0+255),b
  2254  001BF8  517A               	movf	(f_read@sect+2)& (0+255),w,b
  2255  001BFA  5966               	subwfb	(??_f_read+6)& (0+255),w,b
  2256  001BFC  6F6A               	movwf	(??_f_read+10)& (0+255),b
  2257  001BFE  517B               	movf	(f_read@sect+3)& (0+255),w,b
  2258  001C00  5967               	subwfb	(??_f_read+7)& (0+255),w,b
  2259  001C02  6F6B               	movwf	(??_f_read+11)& (0+255),b
  2260  001C04  5160               	movf	??_f_read& (0+255),w,b
  2261  001C06  5D68               	subwf	(??_f_read+8)& (0+255),w,b
  2262  001C08  5161               	movf	(??_f_read+1)& (0+255),w,b
  2263  001C0A  5969               	subwfb	(??_f_read+9)& (0+255),w,b
  2264  001C0C  5162               	movf	(??_f_read+2)& (0+255),w,b
  2265  001C0E  596A               	subwfb	(??_f_read+10)& (0+255),w,b
  2266  001C10  5163               	movf	(??_f_read+3)& (0+255),w,b
  2267  001C12  596B               	subwfb	(??_f_read+11)& (0+255),w,b
  2268  001C14  B0D8               	btfsc	status,0,c
  2269  001C16  D032               	goto	l5997
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;ff.c: 2645:      mem_cpy(rbuff + ((fp->fs->winsect - sect) * ((UINT)512)), fp->fs->win,
      +                           ((UINT)512));
  2273  001C18  C056  FFD9         	movff	f_read@fp,fsr2l
  2274  001C1C  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2275  001C20  EE10 F02A          	lfsr	1,42
  2276  001C24  50DE               	movf	postinc2,w,c
  2277  001C26  26E1               	addwf	fsr1l,f,c
  2278  001C28  50DD               	movf	postdec2,w,c
  2279  001C2A  22E2               	addwfc	fsr1h,f,c
  2280  001C2C  CFE6 F060          	movff	postinc1,??_f_read
  2281  001C30  CFE5 F061          	movff	postdec1,??_f_read+1
  2282  001C34  5178               	movf	f_read@sect& (0+255),w,b
  2283  001C36  5F60               	subwf	??_f_read& (0+255),f,b
  2284  001C38  5179               	movf	(f_read@sect+1)& (0+255),w,b
  2285  001C3A  5B61               	subwfb	(??_f_read+1)& (0+255),f,b
  2286  001C3C  0E09               	movlw	9
  2287  001C3E                     u7875:
  2288  001C3E  90D8               	bcf	status,0,c
  2289  001C40  3760               	rlcf	??_f_read& (0+255),f,b
  2290  001C42  3761               	rlcf	(??_f_read+1)& (0+255),f,b
  2291  001C44  2EE8               	decfsz	wreg,f,c
  2292  001C46  D7FB               	goto	u7875
  2293  001C48  5160               	movf	??_f_read& (0+255),w,b
  2294  001C4A  2575               	addwf	f_read@rbuff& (0+255),w,b
  2295  001C4C  6E01               	movwf	mem_cpy@dst,c
  2296  001C4E  5161               	movf	(??_f_read+1)& (0+255),w,b
  2297  001C50  2176               	addwfc	(f_read@rbuff+1)& (0+255),w,b
  2298  001C52  6E02               	movwf	mem_cpy@dst+1,c
  2299  001C54  C056  FFD9         	movff	f_read@fp,fsr2l
  2300  001C58  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2301  001C5C  CFDE F062          	movff	postinc2,??_f_read+2
  2302  001C60  CFDD F063          	movff	postdec2,??_f_read+3
  2303  001C64  0E2E               	movlw	46
  2304  001C66  2562               	addwf	(??_f_read+2)& (0+255),w,b
  2305  001C68  6E03               	movwf	mem_cpy@src,c
  2306  001C6A  0E00               	movlw	0
  2307  001C6C  2163               	addwfc	(??_f_read+3)& (0+255),w,b
  2308  001C6E  6E04               	movwf	mem_cpy@src+1,c
  2309  001C70  0E02               	movlw	2
  2310  001C72  6E06               	movwf	mem_cpy@cnt+1,c
  2311  001C74  0E00               	movlw	0
  2312  001C76  6E05               	movwf	mem_cpy@cnt,c
  2313  001C78  ECC5  F027         	call	_mem_cpy	;wreg free
  2314  001C7C                     l5997:
  2315                           
  2316                           ;ff.c: 2651:     rcnt = ((UINT)512) * cc;
  2317  001C7C  C07C  F060         	movff	f_read@cc,??_f_read
  2318  001C80  C07D  F061         	movff	f_read@cc+1,??_f_read+1
  2319  001C84  0E09               	movlw	9
  2320  001C86                     u7885:
  2321  001C86  90D8               	bcf	status,0,c
  2322  001C88  0100               	movlb	0	; () banked
  2323  001C8A  3760               	rlcf	??_f_read& (0+255),f,b
  2324  001C8C  3761               	rlcf	(??_f_read+1)& (0+255),f,b
  2325  001C8E  2EE8               	decfsz	wreg,f,c
  2326  001C90  D7FA               	goto	u7885
  2327  001C92  C060  F07E         	movff	??_f_read,f_read@rcnt
  2328  001C96  C061  F07F         	movff	??_f_read+1,f_read@rcnt+1
  2329                           
  2330                           ;ff.c: 2652:     continue;
  2331  001C9A  D085               	goto	l6013
  2332  001C9C                     l5999:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;ff.c: 2667:    fp->dsect = sect;
  2336  001C9C  EE20 F016          	lfsr	2,22
  2337  001CA0  5056               	movf	f_read@fp,w,c
  2338  001CA2  26D9               	addwf	fsr2l,f,c
  2339  001CA4  5057               	movf	f_read@fp+1,w,c
  2340  001CA6  22DA               	addwfc	fsr2h,f,c
  2341  001CA8  C078  FFDE         	movff	f_read@sect,postinc2
  2342  001CAC  C079  FFDE         	movff	f_read@sect+1,postinc2
  2343  001CB0  C07A  FFDE         	movff	f_read@sect+2,postinc2
  2344  001CB4  C07B  FFDE         	movff	f_read@sect+3,postinc2
  2345  001CB8                     l605:
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;ff.c: 2669:   rcnt = ((UINT)512) - ((UINT)fp->fptr % ((UINT)512));
  2349  001CB8  0EFF               	movlw	255
  2350  001CBA  6F60               	movwf	??_f_read& (0+255),b
  2351  001CBC  0E01               	movlw	1
  2352  001CBE  6F61               	movwf	(??_f_read+1)& (0+255),b
  2353  001CC0  EE20 F006          	lfsr	2,6
  2354  001CC4  5056               	movf	f_read@fp,w,c
  2355  001CC6  26D9               	addwf	fsr2l,f,c
  2356  001CC8  5057               	movf	f_read@fp+1,w,c
  2357  001CCA  22DA               	addwfc	fsr2h,f,c
  2358  001CCC  CFDE F062          	movff	postinc2,??_f_read+2
  2359  001CD0  CFDD F063          	movff	postdec2,??_f_read+3
  2360  001CD4  5160               	movf	??_f_read& (0+255),w,b
  2361  001CD6  1762               	andwf	(??_f_read+2)& (0+255),f,b
  2362  001CD8  5161               	movf	(??_f_read+1)& (0+255),w,b
  2363  001CDA  1763               	andwf	(??_f_read+3)& (0+255),f,b
  2364  001CDC  5162               	movf	(??_f_read+2)& (0+255),w,b
  2365  001CDE  0800               	sublw	0
  2366  001CE0  6F7E               	movwf	f_read@rcnt& (0+255),b
  2367  001CE2  5163               	movf	(??_f_read+3)& (0+255),w,b
  2368  001CE4  A0D8               	btfss	status,0,c
  2369  001CE6  2AE8               	incf	wreg,f,c
  2370  001CE8  0802               	sublw	2
  2371  001CEA  6F7F               	movwf	(f_read@rcnt+1)& (0+255),b
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;ff.c: 2670:   if (rcnt > btr) rcnt = btr;
  2375  001CEC  517E               	movf	f_read@rcnt& (0+255),w,b
  2376  001CEE  5C5A               	subwf	f_read@btr,w,c
  2377  001CF0  517F               	movf	(f_read@rcnt+1)& (0+255),w,b
  2378  001CF2  585B               	subwfb	f_read@btr+1,w,c
  2379  001CF4  B0D8               	btfsc	status,0,c
  2380  001CF6  D004               	goto	l6005
  2381                           
  2382                           ; BSR set to: 0
  2383  001CF8  C05A  F07E         	movff	f_read@btr,f_read@rcnt
  2384  001CFC  C05B  F07F         	movff	f_read@btr+1,f_read@rcnt+1
  2385  001D00                     l6005:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;ff.c: 2672:   if (move_window(fp->fs, fp->dsect) != FR_OK)
  2389  001D00  C056  FFD9         	movff	f_read@fp,fsr2l
  2390  001D04  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2391  001D08  CFDE F030          	movff	postinc2,move_window@fs
  2392  001D0C  CFDD F031          	movff	postdec2,move_window@fs+1
  2393  001D10  EE20 F016          	lfsr	2,22
  2394  001D14  5056               	movf	f_read@fp,w,c
  2395  001D16  26D9               	addwf	fsr2l,f,c
  2396  001D18  5057               	movf	f_read@fp+1,w,c
  2397  001D1A  22DA               	addwfc	fsr2h,f,c
  2398  001D1C  CFDE F032          	movff	postinc2,move_window@sector
  2399  001D20  CFDE F033          	movff	postinc2,move_window@sector+1
  2400  001D24  CFDE F034          	movff	postinc2,move_window@sector+2
  2401  001D28  CFDE F035          	movff	postinc2,move_window@sector+3
  2402  001D2C  EC67  F026         	call	_move_window	;wreg free
  2403  001D30  0900               	iorlw	0
  2404  001D32  B4D8               	btfsc	status,2,c
  2405  001D34  D009               	goto	l6011
  2406                           
  2407                           ;ff.c: 2673:    { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  2408  001D36  EE20 F005          	lfsr	2,5
  2409  001D3A  5056               	movf	f_read@fp,w,c
  2410  001D3C  26D9               	addwf	fsr2l,f,c
  2411  001D3E  5057               	movf	f_read@fp+1,w,c
  2412  001D40  22DA               	addwfc	fsr2h,f,c
  2413  001D42  0E01               	movlw	1
  2414  001D44  6EDF               	movwf	indf2,c
  2415  001D46  0012               	return	
  2416  001D48                     l6011:
  2417                           
  2418                           ;ff.c: 2674:   mem_cpy(rbuff, &fp->fs->win[fp->fptr % ((UINT)512)], rcnt);
  2419  001D48  C075  F001         	movff	f_read@rbuff,mem_cpy@dst
  2420  001D4C  C076  F002         	movff	f_read@rbuff+1,mem_cpy@dst+1
  2421  001D50  0EFF               	movlw	255
  2422  001D52  0100               	movlb	0	; () banked
  2423  001D54  6F60               	movwf	??_f_read& (0+255),b
  2424  001D56  0E01               	movlw	1
  2425  001D58  6F61               	movwf	(??_f_read+1)& (0+255),b
  2426  001D5A  EE20 F006          	lfsr	2,6
  2427  001D5E  5056               	movf	f_read@fp,w,c
  2428  001D60  26D9               	addwf	fsr2l,f,c
  2429  001D62  5057               	movf	f_read@fp+1,w,c
  2430  001D64  22DA               	addwfc	fsr2h,f,c
  2431  001D66  CFDE F062          	movff	postinc2,??_f_read+2
  2432  001D6A  CFDD F063          	movff	postdec2,??_f_read+3
  2433  001D6E  5160               	movf	??_f_read& (0+255),w,b
  2434  001D70  1762               	andwf	(??_f_read+2)& (0+255),f,b
  2435  001D72  5161               	movf	(??_f_read+1)& (0+255),w,b
  2436  001D74  1763               	andwf	(??_f_read+3)& (0+255),f,b
  2437  001D76  C056  FFD9         	movff	f_read@fp,fsr2l
  2438  001D7A  C057  FFDA         	movff	f_read@fp+1,fsr2h
  2439  001D7E  CFDE F064          	movff	postinc2,??_f_read+4
  2440  001D82  CFDD F065          	movff	postdec2,??_f_read+5
  2441  001D86  5162               	movf	(??_f_read+2)& (0+255),w,b
  2442  001D88  2764               	addwf	(??_f_read+4)& (0+255),f,b
  2443  001D8A  5163               	movf	(??_f_read+3)& (0+255),w,b
  2444  001D8C  2365               	addwfc	(??_f_read+5)& (0+255),f,b
  2445  001D8E  0E2E               	movlw	46
  2446  001D90  2564               	addwf	(??_f_read+4)& (0+255),w,b
  2447  001D92  6E03               	movwf	mem_cpy@src,c
  2448  001D94  0E00               	movlw	0
  2449  001D96  2165               	addwfc	(??_f_read+5)& (0+255),w,b
  2450  001D98  6E04               	movwf	mem_cpy@src+1,c
  2451  001D9A  C07E  F005         	movff	f_read@rcnt,mem_cpy@cnt
  2452  001D9E  C07F  F006         	movff	f_read@rcnt+1,mem_cpy@cnt+1
  2453  001DA2  ECC5  F027         	call	_mem_cpy	;wreg free
  2454  001DA6                     l6013:
  2455  001DA6  0100               	movlb	0	; () banked
  2456  001DA8  517E               	movf	f_read@rcnt& (0+255),w,b
  2457  001DAA  2775               	addwf	f_read@rbuff& (0+255),f,b
  2458  001DAC  517F               	movf	(f_read@rcnt+1)& (0+255),w,b
  2459  001DAE  2376               	addwfc	(f_read@rbuff+1)& (0+255),f,b
  2460                           
  2461                           ; BSR set to: 0
  2462  001DB0  EE20 F006          	lfsr	2,6
  2463  001DB4  5056               	movf	f_read@fp,w,c
  2464  001DB6  26D9               	addwf	fsr2l,f,c
  2465  001DB8  5057               	movf	f_read@fp+1,w,c
  2466  001DBA  22DA               	addwfc	fsr2h,f,c
  2467  001DBC  517E               	movf	f_read@rcnt& (0+255),w,b
  2468  001DBE  26DE               	addwf	postinc2,f,c
  2469  001DC0  517F               	movf	(f_read@rcnt+1)& (0+255),w,b
  2470  001DC2  22DE               	addwfc	postinc2,f,c
  2471  001DC4  0E00               	movlw	0
  2472  001DC6  22DE               	addwfc	postinc2,f,c
  2473  001DC8  22DE               	addwfc	postinc2,f,c
  2474                           
  2475                           ; BSR set to: 0
  2476  001DCA  C05C  FFD9         	movff	f_read@br,fsr2l
  2477  001DCE  C05D  FFDA         	movff	f_read@br+1,fsr2h
  2478  001DD2  517E               	movf	f_read@rcnt& (0+255),w,b
  2479  001DD4  26DE               	addwf	postinc2,f,c
  2480  001DD6  517F               	movf	(f_read@rcnt+1)& (0+255),w,b
  2481  001DD8  22DD               	addwfc	postdec2,f,c
  2482                           
  2483                           ; BSR set to: 0
  2484  001DDA  517E               	movf	f_read@rcnt& (0+255),w,b
  2485  001DDC  5E5A               	subwf	f_read@btr,f,c
  2486  001DDE  517F               	movf	(f_read@rcnt+1)& (0+255),w,b
  2487  001DE0  5A5B               	subwfb	f_read@btr+1,f,c
  2488  001DE2                     l6021:
  2489                           
  2490                           ; BSR set to: 0
  2491  001DE2  505A               	movf	f_read@btr,w,c
  2492  001DE4  105B               	iorwf	f_read@btr+1,w,c
  2493  001DE6  B4D8               	btfsc	status,2,c
  2494  001DE8  0012               	return	
  2495  001DEA  D58F               	goto	l5945
  2496  001DEC                     __end_of_f_read:
  2497                           	opt callstack 0
  2498                           
  2499 ;; *************** function _f_open *****************
  2500 ;; Defined at:
  2501 ;;		line 2449 in file "ff.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  fp              2   58[BANK0 ] PTR struct .
  2504 ;;		 -> Fil(32), 
  2505 ;;  path            2   60[BANK0 ] PTR const unsigned char 
  2506 ;;		 -> STR_6(11), STR_5(1), STR_4(1), 
  2507 ;;  mode            1   62[BANK0 ] unsigned char 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  dj             22   90[BANK0 ] struct .
  2510 ;;  sfn            12   67[BANK0 ] unsigned char [12]
  2511 ;;  dw              4   83[BANK0 ] unsigned long 
  2512 ;;  cl              4   79[BANK0 ] unsigned long 
  2513 ;;  dir             2   88[BANK0 ] PTR unsigned char 
  2514 ;;		 -> FatFs(558), NULL(0), 
  2515 ;;  res             1   87[BANK0 ] enum E93
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      enum E93
  2518 ;; Registers used:
  2519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2525 ;;      Params:         0       5       0       0       0       0       0       0       0
  2526 ;;      Locals:         0      45       0       0       0       0       0       0       0
  2527 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2528 ;;      Totals:         0      54       0       0       0       0       0       0       0
  2529 ;;Total ram usage:       54 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:   13
  2532 ;; This function calls:
  2533 ;;		_dir_register
  2534 ;;		_find_volume
  2535 ;;		_follow_path
  2536 ;;		_ld_clust
  2537 ;;		_move_window
  2538 ;;		_remove_chain
  2539 ;;		_st_clust
  2540 ;; This function is called by:
  2541 ;;		_guardar
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text4
  2546  002E5C                     __ptext4:
  2547                           	opt callstack 0
  2548  002E5C                     _f_open:
  2549                           	opt callstack 16
  2550                           
  2551                           ;ff.c: 2450:  FIL* fp,;ff.c: 2451:  const TCHAR* path,;ff.c: 2452:  BYTE mode;ff.c: 2454
      +                          : {;ff.c: 2455:  FRESULT res;;ff.c: 2456:  DIRC dj;;ff.c: 2457:  BYTE *dir;;ff.c: 2458: 
      +                           BYTE sfn[12];;ff.c: 2460:  DWORD dw, cl;;ff.c: 2464:  if (!fp) return FR_INVALID_OBJECT
      +                          ;
  2552                           
  2553                           ;incstack = 0
  2554  002E5C  0100               	movlb	0	; () banked
  2555  002E5E  519A               	movf	f_open@fp& (0+255),w,b
  2556  002E60  119B               	iorwf	(f_open@fp+1)& (0+255),w,b
  2557  002E62  A4D8               	btfss	status,2,c
  2558  002E64  D002               	goto	l6107
  2559                           
  2560                           ; BSR set to: 0
  2561  002E66  0E09               	movlw	9
  2562  002E68  0012               	return	
  2563  002E6A                     l6107:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;ff.c: 2465:  fp->fs = 0;
  2567  002E6A  C09A  FFD9         	movff	f_open@fp,fsr2l
  2568  002E6E  C09B  FFDA         	movff	f_open@fp+1,fsr2h
  2569  002E72  0E00               	movlw	0
  2570  002E74  6EDE               	movwf	postinc2,c
  2571  002E76  0E00               	movlw	0
  2572  002E78  6EDD               	movwf	postdec2,c
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;ff.c: 2468:  dj.fs = FatFs[0];
  2576  002E7A  C0DE  F0BA         	movff	ff@FatFs,f_open@dj
  2577  002E7E  C0DF  F0BB         	movff	ff@FatFs+1,f_open@dj+1
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;ff.c: 2473:  mode &= 0x01 | 0x02 | 0x08 | 0x10 | 0x04;
  2581  002E82  0E1F               	movlw	31
  2582  002E84  179E               	andwf	f_open@mode& (0+255),f,b
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;ff.c: 2474:  res = find_volume(&dj.fs, &path, (BYTE)(mode & ~0x01));
  2586  002E86  0EBA               	movlw	low f_open@dj
  2587  002E88  6E45               	movwf	find_volume@rfs,c
  2588  002E8A  0E00               	movlw	high f_open@dj
  2589  002E8C  6E46               	movwf	find_volume@rfs+1,c
  2590  002E8E  0E9C               	movlw	low f_open@path
  2591  002E90  6E47               	movwf	find_volume@path,c
  2592  002E92  0E00               	movlw	high f_open@path
  2593  002E94  6E48               	movwf	find_volume@path+1,c
  2594  002E96  519E               	movf	f_open@mode& (0+255),w,b
  2595  002E98  0BFE               	andlw	254
  2596  002E9A  6E49               	movwf	find_volume@wmode,c
  2597  002E9C  EC42  F004         	call	_find_volume	;wreg free
  2598  002EA0  0100               	movlb	0	; () banked
  2599  002EA2  6FB7               	movwf	f_open@res& (0+255),b
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;ff.c: 2479:  if (res == FR_OK) {
  2603  002EA4  51B7               	movf	f_open@res& (0+255),w,b
  2604  002EA6  A4D8               	btfss	status,2,c
  2605  002EA8  D1A2               	goto	l6211
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;ff.c: 2480:   (dj).fn = sfn;
  2609  002EAA  0EA3               	movlw	low f_open@sfn
  2610  002EAC  6FCE               	movwf	(f_open@dj+20)& (0+255),b
  2611  002EAE  0E00               	movlw	high f_open@sfn
  2612  002EB0  6FCF               	movwf	(f_open@dj+21)& (0+255),b
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;ff.c: 2481:   res = follow_path(&dj, path);
  2616  002EB2  0EBA               	movlw	low f_open@dj
  2617  002EB4  6F86               	movwf	follow_path@dp& (0+255),b
  2618  002EB6  0E00               	movlw	high f_open@dj
  2619  002EB8  6F87               	movwf	(follow_path@dp+1)& (0+255),b
  2620  002EBA  C09C  F088         	movff	f_open@path,follow_path@path
  2621  002EBE  C09D  F089         	movff	f_open@path+1,follow_path@path+1
  2622  002EC2  EC3F  F020         	call	_follow_path	;wreg free
  2623  002EC6  0100               	movlb	0	; () banked
  2624  002EC8  6FB7               	movwf	f_open@res& (0+255),b
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;ff.c: 2482:   dir = dj.dir;
  2628  002ECA  C0CC  F0B8         	movff	f_open@dj+18,f_open@dir
  2629  002ECE  C0CD  F0B9         	movff	f_open@dj+19,f_open@dir+1
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;ff.c: 2484:   if (res == FR_OK) {
  2633  002ED2  51B7               	movf	f_open@res& (0+255),w,b
  2634  002ED4  A4D8               	btfss	status,2,c
  2635  002ED6  D006               	goto	l6129
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;ff.c: 2485:    if (!dir)
  2639  002ED8  51B8               	movf	f_open@dir& (0+255),w,b
  2640  002EDA  11B9               	iorwf	(f_open@dir+1)& (0+255),w,b
  2641  002EDC  A4D8               	btfss	status,2,c
  2642  002EDE  D002               	goto	l6129
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;ff.c: 2486:     res = FR_INVALID_NAME;
  2646  002EE0  0E06               	movlw	6
  2647  002EE2  6FB7               	movwf	f_open@res& (0+255),b
  2648  002EE4                     l6129:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;ff.c: 2493:   if (mode & (0x08 | 0x10 | 0x04)) {
  2652  002EE4  C09E  F09F         	movff	f_open@mode,??_f_open
  2653  002EE8  0E1C               	movlw	28
  2654  002EEA  179F               	andwf	??_f_open& (0+255),f,b
  2655  002EEC  B4D8               	btfsc	status,2,c
  2656  002EEE  D0D3               	goto	l6177
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;ff.c: 2494:    if (res != FR_OK) {
  2660  002EF0  51B7               	movf	f_open@res& (0+255),w,b
  2661  002EF2  B4D8               	btfsc	status,2,c
  2662  002EF4  D012               	goto	l6141
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;ff.c: 2495:     if (res == FR_NO_FILE)
  2666  002EF6  0E04               	movlw	4
  2667  002EF8  19B7               	xorwf	f_open@res& (0+255),w,b
  2668  002EFA  A4D8               	btfss	status,2,c
  2669  002EFC  D008               	goto	l6137
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;ff.c: 2499:      res = dir_register(&dj);
  2673  002EFE  0EBA               	movlw	low f_open@dj
  2674  002F00  6F8A               	movwf	dir_register@dp& (0+255),b
  2675  002F02  0E00               	movlw	high f_open@dj
  2676  002F04  6F8B               	movwf	(dir_register@dp+1)& (0+255),b
  2677  002F06  EC7C  F024         	call	_dir_register	;wreg free
  2678  002F0A  0100               	movlb	0	; () banked
  2679  002F0C  6FB7               	movwf	f_open@res& (0+255),b
  2680  002F0E                     l6137:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;ff.c: 2501:     mode |= 0x08;
  2684  002F0E  879E               	bsf	f_open@mode& (0+255),3,b
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;ff.c: 2502:     dir = dj.dir;
  2688  002F10  C0CC  F0B8         	movff	f_open@dj+18,f_open@dir
  2689  002F14  C0CD  F0B9         	movff	f_open@dj+19,f_open@dir+1
  2690                           
  2691                           ;ff.c: 2503:    }
  2692  002F18  D012               	goto	l581
  2693  002F1A                     l6141:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;ff.c: 2505:     if (dir[11] & (0x01 | 0x10)) {
  2697  002F1A  EE20 F00B          	lfsr	2,11
  2698  002F1E  51B8               	movf	f_open@dir& (0+255),w,b
  2699  002F20  26D9               	addwf	fsr2l,f,c
  2700  002F22  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2701  002F24  22DA               	addwfc	fsr2h,f,c
  2702  002F26  50DF               	movf	indf2,w,c
  2703  002F28  6F9F               	movwf	??_f_open& (0+255),b
  2704  002F2A  0E11               	movlw	17
  2705  002F2C  179F               	andwf	??_f_open& (0+255),f,b
  2706  002F2E  B4D8               	btfsc	status,2,c
  2707  002F30  D002               	goto	l582
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;ff.c: 2506:      res = FR_DENIED;
  2711  002F32  0E07               	movlw	7
  2712  002F34  D003               	goto	L1
  2713  002F36                     l582:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;ff.c: 2508:      if (mode & 0x04)
  2717  002F36  A59E               	btfss	f_open@mode& (0+255),2,b
  2718  002F38  D002               	goto	l581
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;ff.c: 2509:       res = FR_EXIST;
  2722  002F3A  0E08               	movlw	8
  2723  002F3C                     L1:
  2724  002F3C  6FB7               	movwf	f_open@res& (0+255),b
  2725  002F3E                     l581:
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;ff.c: 2512:    if (res == FR_OK && (mode & 0x08)) {
  2729  002F3E  51B7               	movf	f_open@res& (0+255),w,b
  2730  002F40  B4D8               	btfsc	status,2,c
  2731                           
  2732                           ; BSR set to: 0
  2733  002F42  A79E               	btfss	f_open@mode& (0+255),3,b
  2734  002F44  D0C1               	goto	l588
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;ff.c: 2514:     *(DWORD*)(BYTE*)(dir + 14)=(DWORD)(dw);
  2738                           
  2739                           ; BSR set to: 0
  2740  002F46  EE20 F00E          	lfsr	2,14
  2741  002F4A  51B8               	movf	f_open@dir& (0+255),w,b
  2742  002F4C  26D9               	addwf	fsr2l,f,c
  2743  002F4E  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2744  002F50  22DA               	addwfc	fsr2h,f,c
  2745  002F52  0E00               	movlw	0
  2746  002F54  6EDE               	movwf	postinc2,c
  2747  002F56  0E00               	movlw	0
  2748  002F58  6EDE               	movwf	postinc2,c
  2749  002F5A  0E21               	movlw	33
  2750  002F5C  6EDE               	movwf	postinc2,c
  2751  002F5E  0E46               	movlw	70
  2752  002F60  6EDD               	movwf	postdec2,c
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;ff.c: 2515:     *(DWORD*)(BYTE*)(dir + 22)=(DWORD)(dw);
  2756  002F62  EE20 F016          	lfsr	2,22
  2757  002F66  51B8               	movf	f_open@dir& (0+255),w,b
  2758  002F68  26D9               	addwf	fsr2l,f,c
  2759  002F6A  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2760  002F6C  22DA               	addwfc	fsr2h,f,c
  2761  002F6E  0E00               	movlw	0
  2762  002F70  6EDE               	movwf	postinc2,c
  2763  002F72  0E00               	movlw	0
  2764  002F74  6EDE               	movwf	postinc2,c
  2765  002F76  0E21               	movlw	33
  2766  002F78  6EDE               	movwf	postinc2,c
  2767  002F7A  0E46               	movlw	70
  2768  002F7C  6EDD               	movwf	postdec2,c
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;ff.c: 2516:     dir[11] = 0;
  2772  002F7E  EE20 F00B          	lfsr	2,11
  2773  002F82  51B8               	movf	f_open@dir& (0+255),w,b
  2774  002F84  26D9               	addwf	fsr2l,f,c
  2775  002F86  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2776  002F88  22DA               	addwfc	fsr2h,f,c
  2777  002F8A  0E00               	movlw	0
  2778  002F8C  6EDF               	movwf	indf2,c
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;ff.c: 2517:     *(DWORD*)(BYTE*)(dir + 28)=(DWORD)(0);
  2782  002F8E  EE20 F01C          	lfsr	2,28
  2783  002F92  51B8               	movf	f_open@dir& (0+255),w,b
  2784  002F94  26D9               	addwf	fsr2l,f,c
  2785  002F96  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2786  002F98  22DA               	addwfc	fsr2h,f,c
  2787  002F9A  6ADE               	clrf	postinc2,c
  2788  002F9C  6ADE               	clrf	postinc2,c
  2789  002F9E  6ADE               	clrf	postinc2,c
  2790  002FA0  6ADD               	clrf	postdec2,c
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;ff.c: 2518:     cl = ld_clust(dj.fs, dir);
  2794  002FA2  C0BA  F001         	movff	f_open@dj,ld_clust@fs
  2795  002FA6  C0BB  F002         	movff	f_open@dj+1,ld_clust@fs+1
  2796  002FAA  C0B8  F003         	movff	f_open@dir,ld_clust@dir
  2797  002FAE  C0B9  F004         	movff	f_open@dir+1,ld_clust@dir+1
  2798  002FB2  EC86  F027         	call	_ld_clust	;wreg free
  2799  002FB6  C001  F0AF         	movff	?_ld_clust,f_open@cl
  2800  002FBA  C002  F0B0         	movff	?_ld_clust+1,f_open@cl+1
  2801  002FBE  C003  F0B1         	movff	?_ld_clust+2,f_open@cl+2
  2802  002FC2  C004  F0B2         	movff	?_ld_clust+3,f_open@cl+3
  2803                           
  2804                           ;ff.c: 2519:     st_clust(dir, 0);
  2805  002FC6  C0B8  F001         	movff	f_open@dir,st_clust@dir
  2806  002FCA  C0B9  F002         	movff	f_open@dir+1,st_clust@dir+1
  2807  002FCE  0E00               	movlw	0
  2808  002FD0  6E03               	movwf	st_clust@cl,c
  2809  002FD2  0E00               	movlw	0
  2810  002FD4  6E04               	movwf	st_clust@cl+1,c
  2811  002FD6  0E00               	movlw	0
  2812  002FD8  6E05               	movwf	st_clust@cl+2,c
  2813  002FDA  0E00               	movlw	0
  2814  002FDC  6E06               	movwf	st_clust@cl+3,c
  2815  002FDE  EC03  F02A         	call	_st_clust	;wreg free
  2816                           
  2817                           ;ff.c: 2520:     dj.fs->wflag = 1;
  2818  002FE2  0100               	movlb	0	; () banked
  2819  002FE4  EE20 F004          	lfsr	2,4
  2820  002FE8  51BA               	movf	f_open@dj& (0+255),w,b
  2821  002FEA  26D9               	addwf	fsr2l,f,c
  2822  002FEC  51BB               	movf	(f_open@dj+1)& (0+255),w,b
  2823  002FEE  22DA               	addwfc	fsr2h,f,c
  2824  002FF0  0E01               	movlw	1
  2825  002FF2  6EDF               	movwf	indf2,c
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;ff.c: 2521:     if (cl) {
  2829  002FF4  51AF               	movf	f_open@cl& (0+255),w,b
  2830  002FF6  11B0               	iorwf	(f_open@cl+1)& (0+255),w,b
  2831  002FF8  11B1               	iorwf	(f_open@cl+2)& (0+255),w,b
  2832  002FFA  11B2               	iorwf	(f_open@cl+3)& (0+255),w,b
  2833  002FFC  B4D8               	btfsc	status,2,c
  2834  002FFE  D064               	goto	l588
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;ff.c: 2522:      dw = dj.fs->winsect;
  2838  003000  EE20 F02A          	lfsr	2,42
  2839  003004  51BA               	movf	f_open@dj& (0+255),w,b
  2840  003006  26D9               	addwf	fsr2l,f,c
  2841  003008  51BB               	movf	(f_open@dj+1)& (0+255),w,b
  2842  00300A  22DA               	addwfc	fsr2h,f,c
  2843  00300C  CFDE F0B3          	movff	postinc2,f_open@dw
  2844  003010  CFDE F0B4          	movff	postinc2,f_open@dw+1
  2845  003014  CFDE F0B5          	movff	postinc2,f_open@dw+2
  2846  003018  CFDE F0B6          	movff	postinc2,f_open@dw+3
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;ff.c: 2523:      res = remove_chain(dj.fs, cl);
  2850  00301C  C0BA  F056         	movff	f_open@dj,remove_chain@fs
  2851  003020  C0BB  F057         	movff	f_open@dj+1,remove_chain@fs+1
  2852  003024  C0AF  F058         	movff	f_open@cl,remove_chain@clst
  2853  003028  C0B0  F059         	movff	f_open@cl+1,remove_chain@clst+1
  2854  00302C  C0B1  F05A         	movff	f_open@cl+2,remove_chain@clst+2
  2855  003030  C0B2  F05B         	movff	f_open@cl+3,remove_chain@clst+3
  2856  003034  EC9A  F01F         	call	_remove_chain	;wreg free
  2857  003038  0100               	movlb	0	; () banked
  2858  00303A  6FB7               	movwf	f_open@res& (0+255),b
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;ff.c: 2524:      if (res == FR_OK) {
  2862  00303C  51B7               	movf	f_open@res& (0+255),w,b
  2863  00303E  A4D8               	btfss	status,2,c
  2864  003040  D043               	goto	l588
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;ff.c: 2525:       dj.fs->last_clust = cl - 1;
  2868  003042  0EFF               	movlw	255
  2869  003044  25AF               	addwf	f_open@cl& (0+255),w,b
  2870  003046  6F9F               	movwf	??_f_open& (0+255),b
  2871  003048  0EFF               	movlw	255
  2872  00304A  21B0               	addwfc	(f_open@cl+1)& (0+255),w,b
  2873  00304C  6FA0               	movwf	(??_f_open+1)& (0+255),b
  2874  00304E  0EFF               	movlw	255
  2875  003050  21B1               	addwfc	(f_open@cl+2)& (0+255),w,b
  2876  003052  6FA1               	movwf	(??_f_open+2)& (0+255),b
  2877  003054  0EFF               	movlw	255
  2878  003056  21B2               	addwfc	(f_open@cl+3)& (0+255),w,b
  2879  003058  6FA2               	movwf	(??_f_open+3)& (0+255),b
  2880  00305A  EE20 F00A          	lfsr	2,10
  2881  00305E  51BA               	movf	f_open@dj& (0+255),w,b
  2882  003060  26D9               	addwf	fsr2l,f,c
  2883  003062  51BB               	movf	(f_open@dj+1)& (0+255),w,b
  2884  003064  22DA               	addwfc	fsr2h,f,c
  2885  003066  C09F  FFDE         	movff	??_f_open,postinc2
  2886  00306A  C0A0  FFDE         	movff	??_f_open+1,postinc2
  2887  00306E  C0A1  FFDE         	movff	??_f_open+2,postinc2
  2888  003072  C0A2  FFDE         	movff	??_f_open+3,postinc2
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;ff.c: 2526:       res = move_window(dj.fs, dw);
  2892  003076  C0BA  F030         	movff	f_open@dj,move_window@fs
  2893  00307A  C0BB  F031         	movff	f_open@dj+1,move_window@fs+1
  2894  00307E  C0B3  F032         	movff	f_open@dw,move_window@sector
  2895  003082  C0B4  F033         	movff	f_open@dw+1,move_window@sector+1
  2896  003086  C0B5  F034         	movff	f_open@dw+2,move_window@sector+2
  2897  00308A  C0B6  F035         	movff	f_open@dw+3,move_window@sector+3
  2898  00308E  EC67  F026         	call	_move_window	;wreg free
  2899  003092  0100               	movlb	0	; () banked
  2900  003094  D018               	goto	L2
  2901  003096                     l6177:
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;ff.c: 2532:    if (res == FR_OK) {
  2905  003096  51B7               	movf	f_open@res& (0+255),w,b
  2906  003098  A4D8               	btfss	status,2,c
  2907  00309A  D016               	goto	l588
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;ff.c: 2533:     if (dir[11] & 0x10) {
  2911  00309C  EE20 F00B          	lfsr	2,11
  2912  0030A0  51B8               	movf	f_open@dir& (0+255),w,b
  2913  0030A2  26D9               	addwf	fsr2l,f,c
  2914  0030A4  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2915  0030A6  22DA               	addwfc	fsr2h,f,c
  2916  0030A8  A8DF               	btfss	indf2,4,c
  2917  0030AA  D002               	goto	l590
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;ff.c: 2534:      res = FR_NO_FILE;
  2921  0030AC  0E04               	movlw	4
  2922  0030AE  D00B               	goto	L2
  2923  0030B0                     l590:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;ff.c: 2536:      if ((mode & 0x02) && (dir[11] & 0x01))
  2927  0030B0  A39E               	btfss	f_open@mode& (0+255),1,b
  2928  0030B2  D00A               	goto	l588
  2929                           
  2930                           ; BSR set to: 0
  2931  0030B4  EE20 F00B          	lfsr	2,11
  2932  0030B8  51B8               	movf	f_open@dir& (0+255),w,b
  2933  0030BA  26D9               	addwf	fsr2l,f,c
  2934  0030BC  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  2935  0030BE  22DA               	addwfc	fsr2h,f,c
  2936  0030C0  A0DF               	btfss	indf2,0,c
  2937  0030C2  D002               	goto	l588
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;ff.c: 2537:       res = FR_DENIED;
  2941  0030C4  0E07               	movlw	7
  2942  0030C6                     L2:
  2943  0030C6  6FB7               	movwf	f_open@res& (0+255),b
  2944  0030C8                     l588:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;ff.c: 2541:   if (res == FR_OK) {
  2948  0030C8  51B7               	movf	f_open@res& (0+255),w,b
  2949  0030CA  A4D8               	btfss	status,2,c
  2950  0030CC  D020               	goto	l6195
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;ff.c: 2542:    if (mode & 0x08)
  2954  0030CE  B79E               	btfsc	f_open@mode& (0+255),3,b
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;ff.c: 2543:     mode |= 0x20;
  2958  0030D0  8B9E               	bsf	f_open@mode& (0+255),5,b
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;ff.c: 2544:    fp->dir_sect = dj.fs->winsect;
  2962  0030D2  EE20 F02A          	lfsr	2,42
  2963  0030D6  51BA               	movf	f_open@dj& (0+255),w,b
  2964  0030D8  26D9               	addwf	fsr2l,f,c
  2965  0030DA  51BB               	movf	(f_open@dj+1)& (0+255),w,b
  2966  0030DC  22DA               	addwfc	fsr2h,f,c
  2967  0030DE  EE10 F01A          	lfsr	1,26
  2968  0030E2  519A               	movf	f_open@fp& (0+255),w,b
  2969  0030E4  26E1               	addwf	fsr1l,f,c
  2970  0030E6  519B               	movf	(f_open@fp+1)& (0+255),w,b
  2971  0030E8  22E2               	addwfc	fsr1h,f,c
  2972  0030EA  CFDE FFE6          	movff	postinc2,postinc1
  2973  0030EE  CFDE FFE6          	movff	postinc2,postinc1
  2974  0030F2  CFDE FFE6          	movff	postinc2,postinc1
  2975  0030F6  CFDE FFE6          	movff	postinc2,postinc1
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;ff.c: 2545:    fp->dir_ptr = dir;
  2979  0030FA  EE20 F01E          	lfsr	2,30
  2980  0030FE  519A               	movf	f_open@fp& (0+255),w,b
  2981  003100  26D9               	addwf	fsr2l,f,c
  2982  003102  519B               	movf	(f_open@fp+1)& (0+255),w,b
  2983  003104  22DA               	addwfc	fsr2h,f,c
  2984  003106  C0B8  FFDE         	movff	f_open@dir,postinc2
  2985  00310A  C0B9  FFDD         	movff	f_open@dir+1,postdec2
  2986  00310E                     l6195:
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;ff.c: 2565:   if (res == FR_OK) {
  2990  00310E  51B7               	movf	f_open@res& (0+255),w,b
  2991  003110  A4D8               	btfss	status,2,c
  2992  003112  D06D               	goto	l6211
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;ff.c: 2566:    fp->flag = mode;
  2996  003114  EE20 F004          	lfsr	2,4
  2997  003118  519A               	movf	f_open@fp& (0+255),w,b
  2998  00311A  26D9               	addwf	fsr2l,f,c
  2999  00311C  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3000  00311E  22DA               	addwfc	fsr2h,f,c
  3001  003120  C09E  FFDF         	movff	f_open@mode,indf2
  3002                           
  3003                           ;ff.c: 2567:    fp->err = 0;
  3004  003124  EE20 F005          	lfsr	2,5
  3005  003128  519A               	movf	f_open@fp& (0+255),w,b
  3006  00312A  26D9               	addwf	fsr2l,f,c
  3007  00312C  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3008  00312E  22DA               	addwfc	fsr2h,f,c
  3009  003130  0E00               	movlw	0
  3010  003132  6EDF               	movwf	indf2,c
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;ff.c: 2568:    fp->sclust = ld_clust(dj.fs, dir);
  3014  003134  C0BA  F001         	movff	f_open@dj,ld_clust@fs
  3015  003138  C0BB  F002         	movff	f_open@dj+1,ld_clust@fs+1
  3016  00313C  C0B8  F003         	movff	f_open@dir,ld_clust@dir
  3017  003140  C0B9  F004         	movff	f_open@dir+1,ld_clust@dir+1
  3018  003144  EC86  F027         	call	_ld_clust	;wreg free
  3019  003148  0100               	movlb	0	; () banked
  3020  00314A  EE20 F00E          	lfsr	2,14
  3021  00314E  519A               	movf	f_open@fp& (0+255),w,b
  3022  003150  26D9               	addwf	fsr2l,f,c
  3023  003152  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3024  003154  22DA               	addwfc	fsr2h,f,c
  3025  003156  C001  FFDE         	movff	?_ld_clust,postinc2
  3026  00315A  C002  FFDE         	movff	?_ld_clust+1,postinc2
  3027  00315E  C003  FFDE         	movff	?_ld_clust+2,postinc2
  3028  003162  C004  FFDE         	movff	?_ld_clust+3,postinc2
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;ff.c: 2569:    fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(dir + 28));
  3032  003166  EE20 F01C          	lfsr	2,28
  3033  00316A  51B8               	movf	f_open@dir& (0+255),w,b
  3034  00316C  26D9               	addwf	fsr2l,f,c
  3035  00316E  51B9               	movf	(f_open@dir+1)& (0+255),w,b
  3036  003170  22DA               	addwfc	fsr2h,f,c
  3037  003172  EE10 F00A          	lfsr	1,10
  3038  003176  519A               	movf	f_open@fp& (0+255),w,b
  3039  003178  26E1               	addwf	fsr1l,f,c
  3040  00317A  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3041  00317C  22E2               	addwfc	fsr1h,f,c
  3042  00317E  CFDE FFE6          	movff	postinc2,postinc1
  3043  003182  CFDE FFE6          	movff	postinc2,postinc1
  3044  003186  CFDE FFE6          	movff	postinc2,postinc1
  3045  00318A  CFDE FFE6          	movff	postinc2,postinc1
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;ff.c: 2570:    fp->fptr = 0;
  3049  00318E  EE20 F006          	lfsr	2,6
  3050  003192  519A               	movf	f_open@fp& (0+255),w,b
  3051  003194  26D9               	addwf	fsr2l,f,c
  3052  003196  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3053  003198  22DA               	addwfc	fsr2h,f,c
  3054  00319A  6ADE               	clrf	postinc2,c
  3055  00319C  6ADE               	clrf	postinc2,c
  3056  00319E  6ADE               	clrf	postinc2,c
  3057  0031A0  6ADD               	clrf	postdec2,c
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;ff.c: 2571:    fp->dsect = 0;
  3061  0031A2  EE20 F016          	lfsr	2,22
  3062  0031A6  519A               	movf	f_open@fp& (0+255),w,b
  3063  0031A8  26D9               	addwf	fsr2l,f,c
  3064  0031AA  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3065  0031AC  22DA               	addwfc	fsr2h,f,c
  3066  0031AE  6ADE               	clrf	postinc2,c
  3067  0031B0  6ADE               	clrf	postinc2,c
  3068  0031B2  6ADE               	clrf	postinc2,c
  3069  0031B4  6ADD               	clrf	postdec2,c
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;ff.c: 2575:    fp->fs = dj.fs;
  3073  0031B6  C09A  FFD9         	movff	f_open@fp,fsr2l
  3074  0031BA  C09B  FFDA         	movff	f_open@fp+1,fsr2h
  3075  0031BE  C0BA  FFDE         	movff	f_open@dj,postinc2
  3076  0031C2  C0BB  FFDD         	movff	f_open@dj+1,postdec2
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;ff.c: 2576:    fp->id = fp->fs->id;
  3080  0031C6  C09A  FFD9         	movff	f_open@fp,fsr2l
  3081  0031CA  C09B  FFDA         	movff	f_open@fp+1,fsr2h
  3082  0031CE  EE10 F006          	lfsr	1,6
  3083  0031D2  50DE               	movf	postinc2,w,c
  3084  0031D4  26E1               	addwf	fsr1l,f,c
  3085  0031D6  50DD               	movf	postdec2,w,c
  3086  0031D8  22E2               	addwfc	fsr1h,f,c
  3087  0031DA  EE20 F002          	lfsr	2,2
  3088  0031DE  519A               	movf	f_open@fp& (0+255),w,b
  3089  0031E0  26D9               	addwf	fsr2l,f,c
  3090  0031E2  519B               	movf	(f_open@fp+1)& (0+255),w,b
  3091  0031E4  22DA               	addwfc	fsr2h,f,c
  3092  0031E6  CFE6 FFDE          	movff	postinc1,postinc2
  3093  0031EA  CFE5 FFDD          	movff	postdec1,postdec2
  3094  0031EE                     l6211:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;ff.c: 2580:  return res;
  3098  0031EE  51B7               	movf	f_open@res& (0+255),w,b
  3099                           
  3100                           ; BSR set to: 0
  3101  0031F0  0012               	return		;funcret
  3102  0031F2                     __end_of_f_open:
  3103                           	opt callstack 0
  3104                           
  3105 ;; *************** function _remove_chain *****************
  3106 ;; Defined at:
  3107 ;;		line 937 in file "ff.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  fs              2   85[COMRAM] PTR struct .
  3110 ;;		 -> FatFs(558), NULL(0), 
  3111 ;;  clst            4   87[COMRAM] unsigned long 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  nxt             4    1[BANK0 ] unsigned long 
  3114 ;;  res             1    0[BANK0 ] enum E93
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      enum E93
  3117 ;; Registers used:
  3118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3124 ;;      Params:         6       0       0       0       0       0       0       0       0
  3125 ;;      Locals:         0       5       0       0       0       0       0       0       0
  3126 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3127 ;;      Totals:        10       5       0       0       0       0       0       0       0
  3128 ;;Total ram usage:       15 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    9
  3131 ;; This function calls:
  3132 ;;		_get_fat
  3133 ;;		_put_fat
  3134 ;; This function is called by:
  3135 ;;		_f_open
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text5
  3140  003F34                     __ptext5:
  3141                           	opt callstack 0
  3142  003F34                     _remove_chain:
  3143                           	opt callstack 19
  3144                           
  3145                           ;ff.c: 938:  FATFS* fs,;ff.c: 939:  DWORD clst;ff.c: 941: {;ff.c: 942:  FRESULT res;;ff.
      +                          c: 943:  DWORD nxt;;ff.c: 948:  if (clst < 2 || clst >= fs->n_fatent) {
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;incstack = 0
  3149  003F34  505B               	movf	remove_chain@clst+3,w,c
  3150  003F36  105A               	iorwf	remove_chain@clst+2,w,c
  3151  003F38  1059               	iorwf	remove_chain@clst+1,w,c
  3152  003F3A  E104               	bnz	u7060
  3153  003F3C  0E02               	movlw	2
  3154  003F3E  5C58               	subwf	remove_chain@clst,w,c
  3155  003F40  A0D8               	btfss	status,0,c
  3156  003F42  D010               	goto	u7070
  3157  003F44                     u7060:
  3158  003F44  EE20 F012          	lfsr	2,18
  3159  003F48  5056               	movf	remove_chain@fs,w,c
  3160  003F4A  26D9               	addwf	fsr2l,f,c
  3161  003F4C  5057               	movf	remove_chain@fs+1,w,c
  3162  003F4E  22DA               	addwfc	fsr2h,f,c
  3163  003F50  50DE               	movf	postinc2,w,c
  3164  003F52  5C58               	subwf	remove_chain@clst,w,c
  3165  003F54  50DE               	movf	postinc2,w,c
  3166  003F56  5859               	subwfb	remove_chain@clst+1,w,c
  3167  003F58  50DE               	movf	postinc2,w,c
  3168  003F5A  585A               	subwfb	remove_chain@clst+2,w,c
  3169  003F5C  50DE               	movf	postinc2,w,c
  3170  003F5E  585B               	subwfb	remove_chain@clst+3,w,c
  3171  003F60  A0D8               	btfss	status,0,c
  3172  003F62  D003               	goto	l5555
  3173  003F64                     u7070:
  3174                           
  3175                           ;ff.c: 949:   res = FR_INT_ERR;
  3176  003F64  0E02               	movlw	2
  3177  003F66  0100               	movlb	0	; () banked
  3178  003F68  D031               	goto	L3
  3179  003F6A                     l5555:
  3180                           
  3181                           ;ff.c: 952:   res = FR_OK;
  3182  003F6A  0E00               	movlw	0
  3183  003F6C  0100               	movlb	0	; () banked
  3184  003F6E  6F60               	movwf	remove_chain@res& (0+255),b
  3185                           
  3186                           ;ff.c: 953:   while (clst < fs->n_fatent) {
  3187  003F70  D074               	goto	l302
  3188  003F72                     l5557:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;ff.c: 954:    nxt = get_fat(fs, clst);
  3192  003F72  C056  F03B         	movff	remove_chain@fs,get_fat@fs
  3193  003F76  C057  F03C         	movff	remove_chain@fs+1,get_fat@fs+1
  3194  003F7A  C058  F03D         	movff	remove_chain@clst,get_fat@clst
  3195  003F7E  C059  F03E         	movff	remove_chain@clst+1,get_fat@clst+1
  3196  003F82  C05A  F03F         	movff	remove_chain@clst+2,get_fat@clst+2
  3197  003F86  C05B  F040         	movff	remove_chain@clst+3,get_fat@clst+3
  3198  003F8A  EC5D  F015         	call	_get_fat	;wreg free
  3199  003F8E  C03B  F061         	movff	?_get_fat,remove_chain@nxt
  3200  003F92  C03C  F062         	movff	?_get_fat+1,remove_chain@nxt+1
  3201  003F96  C03D  F063         	movff	?_get_fat+2,remove_chain@nxt+2
  3202  003F9A  C03E  F064         	movff	?_get_fat+3,remove_chain@nxt+3
  3203                           
  3204                           ;ff.c: 955:    if (nxt == 0) break;
  3205  003F9E  0100               	movlb	0	; () banked
  3206  003FA0  5161               	movf	remove_chain@nxt& (0+255),w,b
  3207  003FA2  1162               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  3208  003FA4  1163               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  3209  003FA6  1164               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  3210  003FA8  B4D8               	btfsc	status,2,c
  3211  003FAA  D067               	goto	u7130
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;ff.c: 956:    if (nxt == 1) { res = FR_INT_ERR; break; }
  3215  003FAC  0561               	decf	remove_chain@nxt& (0+255),w,b
  3216  003FAE  1162               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  3217  003FB0  1163               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  3218  003FB2  1164               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  3219  003FB4  B4D8               	btfsc	status,2,c
  3220  003FB6  D7D6               	goto	u7070
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;ff.c: 957:    if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
  3224  003FB8  2961               	incf	remove_chain@nxt& (0+255),w,b
  3225  003FBA  E10A               	bnz	l5571
  3226  003FBC  2962               	incf	(remove_chain@nxt+1)& (0+255),w,b
  3227  003FBE  E108               	bnz	l5571
  3228  003FC0  2963               	incf	(remove_chain@nxt+2)& (0+255),w,b
  3229  003FC2  E106               	bnz	l5571
  3230  003FC4  2964               	incf	(remove_chain@nxt+3)& (0+255),w,b
  3231  003FC6  A4D8               	btfss	status,2,c
  3232  003FC8  D003               	goto	l5571
  3233                           
  3234                           ; BSR set to: 0
  3235  003FCA  0E01               	movlw	1
  3236  003FCC                     L3:
  3237  003FCC  6F60               	movwf	remove_chain@res& (0+255),b
  3238  003FCE  D055               	goto	u7130
  3239  003FD0                     l5571:
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;ff.c: 958:    res = put_fat(fs, clst, 0);
  3243  003FD0  C056  F03B         	movff	remove_chain@fs,put_fat@fs
  3244  003FD4  C057  F03C         	movff	remove_chain@fs+1,put_fat@fs+1
  3245  003FD8  C058  F03D         	movff	remove_chain@clst,put_fat@clst
  3246  003FDC  C059  F03E         	movff	remove_chain@clst+1,put_fat@clst+1
  3247  003FE0  C05A  F03F         	movff	remove_chain@clst+2,put_fat@clst+2
  3248  003FE4  C05B  F040         	movff	remove_chain@clst+3,put_fat@clst+3
  3249  003FE8  0E00               	movlw	0
  3250  003FEA  6E41               	movwf	put_fat@val,c
  3251  003FEC  0E00               	movlw	0
  3252  003FEE  6E42               	movwf	put_fat@val+1,c
  3253  003FF0  0E00               	movlw	0
  3254  003FF2  6E43               	movwf	put_fat@val+2,c
  3255  003FF4  0E00               	movlw	0
  3256  003FF6  6E44               	movwf	put_fat@val+3,c
  3257  003FF8  EC45  F011         	call	_put_fat	;wreg free
  3258  003FFC  0100               	movlb	0	; () banked
  3259  003FFE  6F60               	movwf	remove_chain@res& (0+255),b
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;ff.c: 959:    if (res != FR_OK) break;
  3263  004000  5160               	movf	remove_chain@res& (0+255),w,b
  3264  004002  A4D8               	btfss	status,2,c
  3265  004004  D03A               	goto	u7130
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;ff.c: 960:    if (fs->free_clust != 0xFFFFFFFF) {
  3269  004006  EE20 F00E          	lfsr	2,14
  3270  00400A  5056               	movf	remove_chain@fs,w,c
  3271  00400C  26D9               	addwf	fsr2l,f,c
  3272  00400E  5057               	movf	remove_chain@fs+1,w,c
  3273  004010  22DA               	addwfc	fsr2h,f,c
  3274  004012  28DE               	incf	postinc2,w,c
  3275  004014  E107               	bnz	u7120
  3276  004016  28DE               	incf	postinc2,w,c
  3277  004018  E105               	bnz	u7120
  3278  00401A  28DE               	incf	postinc2,w,c
  3279  00401C  E103               	bnz	u7120
  3280  00401E  28DE               	incf	postinc2,w,c
  3281  004020  B4D8               	btfsc	status,2,c
  3282  004022  D013               	goto	l5581
  3283  004024                     u7120:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;ff.c: 961:     fs->free_clust++;
  3287  004024  EE20 F00E          	lfsr	2,14
  3288  004028  5056               	movf	remove_chain@fs,w,c
  3289  00402A  26D9               	addwf	fsr2l,f,c
  3290  00402C  5057               	movf	remove_chain@fs+1,w,c
  3291  00402E  22DA               	addwfc	fsr2h,f,c
  3292  004030  2ADE               	incf	postinc2,f,c
  3293  004032  0E00               	movlw	0
  3294  004034  22DE               	addwfc	postinc2,f,c
  3295  004036  22DE               	addwfc	postinc2,f,c
  3296  004038  22DE               	addwfc	postinc2,f,c
  3297                           
  3298                           ;ff.c: 962:     fs->fsi_flag |= 1;
  3299  00403A  EE20 F005          	lfsr	2,5
  3300  00403E  5056               	movf	remove_chain@fs,w,c
  3301  004040  26D9               	addwf	fsr2l,f,c
  3302  004042  5057               	movf	remove_chain@fs+1,w,c
  3303  004044  22DA               	addwfc	fsr2h,f,c
  3304  004046  0E00               	movlw	0
  3305  004048  80DB               	bsf	plusw2,0,c
  3306  00404A                     l5581:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;ff.c: 974:    clst = nxt;
  3310  00404A  C061  F058         	movff	remove_chain@nxt,remove_chain@clst
  3311  00404E  C062  F059         	movff	remove_chain@nxt+1,remove_chain@clst+1
  3312  004052  C063  F05A         	movff	remove_chain@nxt+2,remove_chain@clst+2
  3313  004056  C064  F05B         	movff	remove_chain@nxt+3,remove_chain@clst+3
  3314  00405A                     l302:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;ff.c: 953:   while (clst < fs->n_fatent) {
  3318  00405A  EE20 F012          	lfsr	2,18
  3319  00405E  5056               	movf	remove_chain@fs,w,c
  3320  004060  26D9               	addwf	fsr2l,f,c
  3321  004062  5057               	movf	remove_chain@fs+1,w,c
  3322  004064  22DA               	addwfc	fsr2h,f,c
  3323  004066  50DE               	movf	postinc2,w,c
  3324  004068  5C58               	subwf	remove_chain@clst,w,c
  3325  00406A  50DE               	movf	postinc2,w,c
  3326  00406C  5859               	subwfb	remove_chain@clst+1,w,c
  3327  00406E  50DE               	movf	postinc2,w,c
  3328  004070  585A               	subwfb	remove_chain@clst+2,w,c
  3329  004072  50DE               	movf	postinc2,w,c
  3330  004074  585B               	subwfb	remove_chain@clst+3,w,c
  3331  004076  A0D8               	btfss	status,0,c
  3332  004078  D77C               	goto	l5557
  3333  00407A                     u7130:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;ff.c: 978:  return res;
  3337  00407A  5160               	movf	remove_chain@res& (0+255),w,b
  3338                           
  3339                           ; BSR set to: 0
  3340  00407C  0012               	return		;funcret
  3341  00407E                     __end_of_remove_chain:
  3342                           	opt callstack 0
  3343                           
  3344 ;; *************** function _follow_path *****************
  3345 ;; Defined at:
  3346 ;;		line 2052 in file "ff.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  dp              2   38[BANK0 ] PTR struct .
  3349 ;;		 -> f_open@dj(22), 
  3350 ;;  path            2   40[BANK0 ] PTR const unsigned char 
  3351 ;;		 -> STR_6(11), STR_5(1), STR_4(1), 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  dir             2   42[BANK0 ] PTR unsigned char 
  3354 ;;		 -> FatFs(558), NULL(0), 
  3355 ;;  res             1   45[BANK0 ] enum E93
  3356 ;;  ns              1   44[BANK0 ] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      enum E93
  3359 ;; Registers used:
  3360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3366 ;;      Params:         0       4       0       0       0       0       0       0       0
  3367 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3369 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3370 ;;Total ram usage:        8 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:   12
  3373 ;; This function calls:
  3374 ;;		_create_name
  3375 ;;		_dir_find
  3376 ;;		_dir_sdi
  3377 ;;		_ld_clust
  3378 ;; This function is called by:
  3379 ;;		_f_open
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text6
  3384  00407E                     __ptext6:
  3385                           	opt callstack 0
  3386  00407E                     _follow_path:
  3387                           	opt callstack 16
  3388                           
  3389                           ;ff.c: 2053:  DIRC* dp,;ff.c: 2054:  const TCHAR* path;ff.c: 2056: {;ff.c: 2057:  FRESUL
      +                          T res;;ff.c: 2058:  BYTE *dir, ns;;ff.c: 2068:  if (*path == '/' || *path == '\\')
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;incstack = 0
  3393  00407E  C088  FFF6         	movff	follow_path@path,tblptrl
  3394  004082  C089  FFF7         	movff	follow_path@path+1,tblptrh
  3395  004086                     	if	0	;tblptru may be non-zero
  3396  004086                     	endif
  3397  004086                     	if	0	;tblptru may be non-zero
  3398  004086                     	endif
  3399  004086  0008               	tblrd		*
  3400  004088  50F5               	movf	tablat,w,c
  3401  00408A  0A2F               	xorlw	47
  3402  00408C  B4D8               	btfsc	status,2,c
  3403  00408E  D009               	goto	u7170
  3404  004090  C088  FFF6         	movff	follow_path@path,tblptrl
  3405  004094  C089  FFF7         	movff	follow_path@path+1,tblptrh
  3406  004098                     	if	0	;tblptru may be non-zero
  3407  004098                     	endif
  3408  004098                     	if	0	;tblptru may be non-zero
  3409  004098                     	endif
  3410  004098  0008               	tblrd		*
  3411  00409A  50F5               	movf	tablat,w,c
  3412  00409C  0A5C               	xorlw	92
  3413  00409E  A4D8               	btfss	status,2,c
  3414  0040A0  D003               	goto	l5611
  3415  0040A2                     u7170:
  3416                           
  3417                           ;ff.c: 2069:   path++;
  3418  0040A2  0100               	movlb	0	; () banked
  3419  0040A4  4B88               	infsnz	follow_path@path& (0+255),f,b
  3420  0040A6  2B89               	incf	(follow_path@path+1)& (0+255),f,b
  3421  0040A8                     l5611:
  3422                           
  3423                           ;ff.c: 2070:  dp->sclust = 0;
  3424  0040A8  0100               	movlb	0	; () banked
  3425  0040AA  EE20 F006          	lfsr	2,6
  3426  0040AE  5186               	movf	follow_path@dp& (0+255),w,b
  3427  0040B0  26D9               	addwf	fsr2l,f,c
  3428  0040B2  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3429  0040B4  22DA               	addwfc	fsr2h,f,c
  3430  0040B6  6ADE               	clrf	postinc2,c
  3431  0040B8  6ADE               	clrf	postinc2,c
  3432  0040BA  6ADE               	clrf	postinc2,c
  3433  0040BC  6ADD               	clrf	postdec2,c
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;ff.c: 2073:  if ((UINT)*path < ' ') {
  3437  0040BE  C088  FFF6         	movff	follow_path@path,tblptrl
  3438  0040C2  C089  FFF7         	movff	follow_path@path+1,tblptrh
  3439  0040C6                     	if	0	;tblptru may be non-zero
  3440  0040C6                     	endif
  3441  0040C6                     	if	0	;tblptru may be non-zero
  3442  0040C6                     	endif
  3443  0040C6  0E20               	movlw	32
  3444  0040C8  0008               	tblrd		*
  3445  0040CA  60F5               	cpfslt	tablat,c
  3446  0040CC  D017               	goto	l5619
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;ff.c: 2074:   res = dir_sdi(dp, 0);
  3450  0040CE  C086  F056         	movff	follow_path@dp,dir_sdi@dp
  3451  0040D2  C087  F057         	movff	follow_path@dp+1,dir_sdi@dp+1
  3452  0040D6  0E00               	movlw	0
  3453  0040D8  6E59               	movwf	dir_sdi@idx+1,c
  3454  0040DA  0E00               	movlw	0
  3455  0040DC  6E58               	movwf	dir_sdi@idx,c
  3456  0040DE  EC76  F01A         	call	_dir_sdi	;wreg free
  3457  0040E2  0100               	movlb	0	; () banked
  3458  0040E4  6F8D               	movwf	follow_path@res& (0+255),b
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;ff.c: 2075:   dp->dir = 0;
  3462  0040E6  EE20 F012          	lfsr	2,18
  3463  0040EA  5186               	movf	follow_path@dp& (0+255),w,b
  3464  0040EC  26D9               	addwf	fsr2l,f,c
  3465  0040EE  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3466  0040F0  22DA               	addwfc	fsr2h,f,c
  3467  0040F2  0E00               	movlw	0
  3468  0040F4  6EDE               	movwf	postinc2,c
  3469  0040F6  0E00               	movlw	0
  3470  0040F8  6EDD               	movwf	postdec2,c
  3471                           
  3472                           ;ff.c: 2076:  } else {
  3473  0040FA  D062               	goto	l5655
  3474  0040FC                     l5619:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;ff.c: 2078:    res = create_name(dp, &path);
  3478  0040FC  C086  F009         	movff	follow_path@dp,create_name@dp
  3479  004100  C087  F00A         	movff	follow_path@dp+1,create_name@dp+1
  3480  004104  0E88               	movlw	low follow_path@path
  3481  004106  6E0B               	movwf	create_name@path,c
  3482  004108  0E00               	movlw	high follow_path@path
  3483  00410A  6E0C               	movwf	create_name@path+1,c
  3484  00410C  ECD7  F01B         	call	_create_name	;wreg free
  3485  004110  0100               	movlb	0	; () banked
  3486  004112  6F8D               	movwf	follow_path@res& (0+255),b
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;ff.c: 2079:    if (res != FR_OK) break;
  3490  004114  518D               	movf	follow_path@res& (0+255),w,b
  3491  004116  A4D8               	btfss	status,2,c
  3492  004118  D053               	goto	l5655
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;ff.c: 2080:    res = dir_find(dp);
  3496  00411A  C086  F080         	movff	follow_path@dp,dir_find@dp
  3497  00411E  C087  F081         	movff	follow_path@dp+1,dir_find@dp+1
  3498  004122  EC21  F023         	call	_dir_find	;wreg free
  3499  004126  0100               	movlb	0	; () banked
  3500  004128  6F8D               	movwf	follow_path@res& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;ff.c: 2081:    ns = dp->fn[11];
  3504  00412A  EE20 F014          	lfsr	2,20
  3505  00412E  5186               	movf	follow_path@dp& (0+255),w,b
  3506  004130  26D9               	addwf	fsr2l,f,c
  3507  004132  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3508  004134  22DA               	addwfc	fsr2h,f,c
  3509  004136  EE10 F00B          	lfsr	1,11
  3510  00413A  50DE               	movf	postinc2,w,c
  3511  00413C  26E1               	addwf	fsr1l,f,c
  3512  00413E  50DD               	movf	postdec2,w,c
  3513  004140  22E2               	addwfc	fsr1h,f,c
  3514  004142  50E7               	movf	indf1,w,c
  3515  004144  6F8C               	movwf	follow_path@ns& (0+255),b
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;ff.c: 2082:    if (res != FR_OK) {
  3519  004146  518D               	movf	follow_path@res& (0+255),w,b
  3520  004148  B4D8               	btfsc	status,2,c
  3521  00414A  D008               	goto	l469
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;ff.c: 2083:     if (res == FR_NO_FILE) {
  3525  00414C  0E04               	movlw	4
  3526  00414E  198D               	xorwf	follow_path@res& (0+255),w,b
  3527  004150  B4D8               	btfsc	status,2,c
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;ff.c: 2089:       if (!(ns & 0x04)) res = FR_NO_PATH;
  3531  004152  B58C               	btfsc	follow_path@ns& (0+255),2,b
  3532  004154  D035               	goto	l5655
  3533  004156                     u7220:
  3534                           
  3535                           ; BSR set to: 0
  3536  004156  0E05               	movlw	5
  3537  004158  6F8D               	movwf	follow_path@res& (0+255),b
  3538  00415A  D032               	goto	l5655
  3539  00415C                     l469:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;ff.c: 2094:    if (ns & 0x04) break;
  3543  00415C  B58C               	btfsc	follow_path@ns& (0+255),2,b
  3544  00415E  D030               	goto	l5655
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;ff.c: 2095:    dir = dp->dir;
  3548  004160  EE20 F012          	lfsr	2,18
  3549  004164  5186               	movf	follow_path@dp& (0+255),w,b
  3550  004166  26D9               	addwf	fsr2l,f,c
  3551  004168  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3552  00416A  22DA               	addwfc	fsr2h,f,c
  3553  00416C  CFDE F08A          	movff	postinc2,follow_path@dir
  3554  004170  CFDD F08B          	movff	postdec2,follow_path@dir+1
  3555                           
  3556                           ;ff.c: 2096:    if (!(dir[11] & 0x10)) {
  3557  004174  EE20 F00B          	lfsr	2,11
  3558  004178  518A               	movf	follow_path@dir& (0+255),w,b
  3559  00417A  26D9               	addwf	fsr2l,f,c
  3560  00417C  518B               	movf	(follow_path@dir+1)& (0+255),w,b
  3561  00417E  22DA               	addwfc	fsr2h,f,c
  3562  004180  A8DF               	btfss	indf2,4,c
  3563  004182  D7E9               	goto	u7220
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;ff.c: 2099:    dp->sclust = ld_clust(dp->fs, dir);
  3567  004184  C086  FFD9         	movff	follow_path@dp,fsr2l
  3568  004188  C087  FFDA         	movff	follow_path@dp+1,fsr2h
  3569  00418C  CFDE F001          	movff	postinc2,ld_clust@fs
  3570  004190  CFDD F002          	movff	postdec2,ld_clust@fs+1
  3571  004194  C08A  F003         	movff	follow_path@dir,ld_clust@dir
  3572  004198  C08B  F004         	movff	follow_path@dir+1,ld_clust@dir+1
  3573  00419C  EC86  F027         	call	_ld_clust	;wreg free
  3574  0041A0  0100               	movlb	0	; () banked
  3575  0041A2  EE20 F006          	lfsr	2,6
  3576  0041A6  5186               	movf	follow_path@dp& (0+255),w,b
  3577  0041A8  26D9               	addwf	fsr2l,f,c
  3578  0041AA  5187               	movf	(follow_path@dp+1)& (0+255),w,b
  3579  0041AC  22DA               	addwfc	fsr2h,f,c
  3580  0041AE  C001  FFDE         	movff	?_ld_clust,postinc2
  3581  0041B2  C002  FFDE         	movff	?_ld_clust+1,postinc2
  3582  0041B6  C003  FFDE         	movff	?_ld_clust+2,postinc2
  3583  0041BA  C004  FFDE         	movff	?_ld_clust+3,postinc2
  3584  0041BE  D79E               	goto	l5619
  3585  0041C0                     l5655:
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;ff.c: 2103:  return res;
  3589  0041C0  518D               	movf	follow_path@res& (0+255),w,b
  3590                           
  3591                           ; BSR set to: 0
  3592  0041C2  0012               	return		;funcret
  3593  0041C4                     __end_of_follow_path:
  3594                           	opt callstack 0
  3595                           
  3596 ;; *************** function _ld_clust *****************
  3597 ;; Defined at:
  3598 ;;		line 1235 in file "ff.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  fs              2    0[COMRAM] PTR struct .
  3601 ;;		 -> FatFs(558), NULL(0), 
  3602 ;;  dir             2    2[COMRAM] PTR const unsigned char 
  3603 ;;		 -> FatFs(558), NULL(0), 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  cl              4   10[COMRAM] unsigned long 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  4    0[COMRAM] unsigned long 
  3608 ;; Registers used:
  3609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3615 ;;      Params:         4       0       0       0       0       0       0       0       0
  3616 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3617 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3618 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3619 ;;Total ram usage:       14 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_follow_path
  3625 ;;		_f_open
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text7
  3630  004F0C                     __ptext7:
  3631                           	opt callstack 0
  3632  004F0C                     _ld_clust:
  3633                           	opt callstack 28
  3634                           
  3635                           ;ff.c: 1236:  FATFS* fs,;ff.c: 1237:  const BYTE* dir;ff.c: 1239: {;ff.c: 1240:  DWORD c
      +                          l;;ff.c: 1242:  cl = (WORD)(*(WORD*)(BYTE*)(dir + 26));
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;incstack = 0
  3639  004F0C  0E1A               	movlw	26
  3640  004F0E  2403               	addwf	ld_clust@dir,w,c
  3641  004F10  6ED9               	movwf	fsr2l,c
  3642  004F12  0E00               	movlw	0
  3643  004F14  2004               	addwfc	ld_clust@dir+1,w,c
  3644  004F16  6EDA               	movwf	fsr2h,c
  3645  004F18  CFDE F005          	movff	postinc2,??_ld_clust
  3646  004F1C  CFDD F006          	movff	postdec2,??_ld_clust+1
  3647  004F20  C005  F00B         	movff	??_ld_clust,ld_clust@cl
  3648  004F24  C006  F00C         	movff	??_ld_clust+1,ld_clust@cl+1
  3649  004F28  6A0D               	clrf	ld_clust@cl+2,c
  3650  004F2A  6A0E               	clrf	ld_clust@cl+3,c
  3651                           
  3652                           ;ff.c: 1243:  if (fs->fs_type == 3)
  3653  004F2C  C001  FFD9         	movff	ld_clust@fs,fsr2l
  3654  004F30  C002  FFDA         	movff	ld_clust@fs+1,fsr2h
  3655  004F34  0E03               	movlw	3
  3656  004F36  18DE               	xorwf	postinc2,w,c
  3657  004F38  A4D8               	btfss	status,2,c
  3658  004F3A  D01E               	goto	l5257
  3659                           
  3660                           ;ff.c: 1244:   cl |= (DWORD)(WORD)(*(WORD*)(BYTE*)(dir + 20)) << 16;
  3661  004F3C  0E14               	movlw	20
  3662  004F3E  2403               	addwf	ld_clust@dir,w,c
  3663  004F40  6ED9               	movwf	fsr2l,c
  3664  004F42  0E00               	movlw	0
  3665  004F44  2004               	addwfc	ld_clust@dir+1,w,c
  3666  004F46  6EDA               	movwf	fsr2h,c
  3667  004F48  CFDE F005          	movff	postinc2,??_ld_clust
  3668  004F4C  CFDD F006          	movff	postdec2,??_ld_clust+1
  3669  004F50  5005               	movf	??_ld_clust,w,c
  3670  004F52  6E07               	movwf	(??_ld_clust+2)& (0+255),c
  3671  004F54  5006               	movf	??_ld_clust+1,w,c
  3672  004F56  6E08               	movwf	(??_ld_clust+3)& (0+255),c
  3673  004F58  6A09               	clrf	(??_ld_clust+4)& (0+255),c
  3674  004F5A  6A0A               	clrf	(??_ld_clust+5)& (0+255),c
  3675  004F5C  C008  F00A         	movff	??_ld_clust+3,??_ld_clust+5
  3676  004F60  C007  F009         	movff	??_ld_clust+2,??_ld_clust+4
  3677  004F64  6A08               	clrf	??_ld_clust+3,c
  3678  004F66  6A07               	clrf	??_ld_clust+2,c
  3679  004F68  5007               	movf	??_ld_clust+2,w,c
  3680  004F6A  120B               	iorwf	ld_clust@cl,f,c
  3681  004F6C  5008               	movf	??_ld_clust+3,w,c
  3682  004F6E  120C               	iorwf	ld_clust@cl+1,f,c
  3683  004F70  5009               	movf	??_ld_clust+4,w,c
  3684  004F72  120D               	iorwf	ld_clust@cl+2,f,c
  3685  004F74  500A               	movf	??_ld_clust+5,w,c
  3686  004F76  120E               	iorwf	ld_clust@cl+3,f,c
  3687  004F78                     l5257:
  3688                           
  3689                           ;ff.c: 1246:  return cl;
  3690  004F78  C00B  F001         	movff	ld_clust@cl,?_ld_clust
  3691  004F7C  C00C  F002         	movff	ld_clust@cl+1,?_ld_clust+1
  3692  004F80  C00D  F003         	movff	ld_clust@cl+2,?_ld_clust+2
  3693  004F84  C00E  F004         	movff	ld_clust@cl+3,?_ld_clust+3
  3694  004F88  0012               	return		;funcret
  3695  004F8A                     __end_of_ld_clust:
  3696                           	opt callstack 0
  3697                           
  3698 ;; *************** function _dir_find *****************
  3699 ;; Defined at:
  3700 ;;		line 1458 in file "ff.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  dp              2   32[BANK0 ] PTR struct .
  3703 ;;		 -> f_open@dj(22), 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  dir             2   35[BANK0 ] PTR unsigned char 
  3706 ;;		 -> FatFs(558), NULL(0), 
  3707 ;;  res             1   37[BANK0 ] enum E93
  3708 ;;  c               1   34[BANK0 ] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      enum E93
  3711 ;; Registers used:
  3712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3718 ;;      Params:         0       2       0       0       0       0       0       0       0
  3719 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3721 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3722 ;;Total ram usage:        6 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:   11
  3725 ;; This function calls:
  3726 ;;		_dir_next
  3727 ;;		_dir_sdi
  3728 ;;		_mem_cmp
  3729 ;;		_move_window
  3730 ;; This function is called by:
  3731 ;;		_follow_path
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text8
  3736  004642                     __ptext8:
  3737                           	opt callstack 0
  3738  004642                     _dir_find:
  3739                           	opt callstack 16
  3740                           
  3741                           ;ff.c: 1459:  DIRC* dp;ff.c: 1461: {;ff.c: 1462:  FRESULT res;;ff.c: 1463:  BYTE c, *dir
      +                          ;;ff.c: 1468:  res = dir_sdi(dp, 0);
  3742                           
  3743                           ;incstack = 0
  3744  004642  C080  F056         	movff	dir_find@dp,dir_sdi@dp
  3745  004646  C081  F057         	movff	dir_find@dp+1,dir_sdi@dp+1
  3746  00464A  0E00               	movlw	0
  3747  00464C  6E59               	movwf	dir_sdi@idx+1,c
  3748  00464E  0E00               	movlw	0
  3749  004650  6E58               	movwf	dir_sdi@idx,c
  3750  004652  EC76  F01A         	call	_dir_sdi	;wreg free
  3751  004656  0100               	movlb	0	; () banked
  3752  004658  6F85               	movwf	dir_find@res& (0+255),b
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;ff.c: 1469:  if (res != FR_OK) return res;
  3756  00465A  5185               	movf	dir_find@res& (0+255),w,b
  3757  00465C  B4D8               	btfsc	status,2,c
  3758  00465E  D003               	goto	l5271
  3759  004660                     u6510:
  3760  004660  0100               	movlb	0	; () banked
  3761  004662  5185               	movf	dir_find@res& (0+255),w,b
  3762  004664  0012               	return	
  3763  004666                     l5271:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;ff.c: 1475:   res = move_window(dp->fs, dp->sect);
  3767  004666  C080  FFD9         	movff	dir_find@dp,fsr2l
  3768  00466A  C081  FFDA         	movff	dir_find@dp+1,fsr2h
  3769  00466E  CFDE F030          	movff	postinc2,move_window@fs
  3770  004672  CFDD F031          	movff	postdec2,move_window@fs+1
  3771  004676  EE20 F00E          	lfsr	2,14
  3772  00467A  5180               	movf	dir_find@dp& (0+255),w,b
  3773  00467C  26D9               	addwf	fsr2l,f,c
  3774  00467E  5181               	movf	(dir_find@dp+1)& (0+255),w,b
  3775  004680  22DA               	addwfc	fsr2h,f,c
  3776  004682  CFDE F032          	movff	postinc2,move_window@sector
  3777  004686  CFDE F033          	movff	postinc2,move_window@sector+1
  3778  00468A  CFDE F034          	movff	postinc2,move_window@sector+2
  3779  00468E  CFDE F035          	movff	postinc2,move_window@sector+3
  3780  004692  EC67  F026         	call	_move_window	;wreg free
  3781  004696  0100               	movlb	0	; () banked
  3782  004698  6F85               	movwf	dir_find@res& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;ff.c: 1476:   if (res != FR_OK) break;
  3786  00469A  5185               	movf	dir_find@res& (0+255),w,b
  3787  00469C  A4D8               	btfss	status,2,c
  3788  00469E  D7E0               	goto	u6510
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;ff.c: 1477:   dir = dp->dir;
  3792  0046A0  EE20 F012          	lfsr	2,18
  3793  0046A4  5180               	movf	dir_find@dp& (0+255),w,b
  3794  0046A6  26D9               	addwf	fsr2l,f,c
  3795  0046A8  5181               	movf	(dir_find@dp+1)& (0+255),w,b
  3796  0046AA  22DA               	addwfc	fsr2h,f,c
  3797  0046AC  CFDE F083          	movff	postinc2,dir_find@dir
  3798  0046B0  CFDD F084          	movff	postdec2,dir_find@dir+1
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;ff.c: 1478:   c = dir[0];
  3802  0046B4  C083  FFD9         	movff	dir_find@dir,fsr2l
  3803  0046B8  C084  FFDA         	movff	dir_find@dir+1,fsr2h
  3804  0046BC  50DF               	movf	indf2,w,c
  3805  0046BE  6F82               	movwf	dir_find@c& (0+255),b
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;ff.c: 1479:   if (c == 0) { res = FR_NO_FILE; break; }
  3809  0046C0  5182               	movf	dir_find@c& (0+255),w,b
  3810  0046C2  A4D8               	btfss	status,2,c
  3811  0046C4  D003               	goto	l5285
  3812                           
  3813                           ; BSR set to: 0
  3814  0046C6  0E04               	movlw	4
  3815  0046C8  6F85               	movwf	dir_find@res& (0+255),b
  3816  0046CA  D7CA               	goto	u6510
  3817  0046CC                     l5285:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;ff.c: 1502:   if (!(dir[11] & 0x08) && !mem_cmp(dir, dp->fn, 11))
  3821  0046CC  EE20 F00B          	lfsr	2,11
  3822  0046D0  5183               	movf	dir_find@dir& (0+255),w,b
  3823  0046D2  26D9               	addwf	fsr2l,f,c
  3824  0046D4  5184               	movf	(dir_find@dir+1)& (0+255),w,b
  3825  0046D6  22DA               	addwfc	fsr2h,f,c
  3826  0046D8  B6DF               	btfsc	indf2,3,c
  3827  0046DA  D018               	goto	l5291
  3828                           
  3829                           ; BSR set to: 0
  3830  0046DC  C083  F001         	movff	dir_find@dir,mem_cmp@dst
  3831  0046E0  C084  F002         	movff	dir_find@dir+1,mem_cmp@dst+1
  3832  0046E4  EE20 F014          	lfsr	2,20
  3833  0046E8  5180               	movf	dir_find@dp& (0+255),w,b
  3834  0046EA  26D9               	addwf	fsr2l,f,c
  3835  0046EC  5181               	movf	(dir_find@dp+1)& (0+255),w,b
  3836  0046EE  22DA               	addwfc	fsr2h,f,c
  3837  0046F0  CFDE F003          	movff	postinc2,mem_cmp@src
  3838  0046F4  CFDD F004          	movff	postdec2,mem_cmp@src+1
  3839  0046F8  0E00               	movlw	0
  3840  0046FA  6E06               	movwf	mem_cmp@cnt+1,c
  3841  0046FC  0E0B               	movlw	11
  3842  0046FE  6E05               	movwf	mem_cmp@cnt,c
  3843  004700  EC72  F028         	call	_mem_cmp	;wreg free
  3844  004704  5001               	movf	?_mem_cmp,w,c
  3845  004706  1002               	iorwf	?_mem_cmp+1,w,c
  3846  004708  B4D8               	btfsc	status,2,c
  3847  00470A  D7AA               	goto	u6510
  3848  00470C                     l5291:
  3849                           
  3850                           ;ff.c: 1505:   res = dir_next(dp, 0);
  3851  00470C  C080  F06D         	movff	dir_find@dp,dir_next@dp
  3852  004710  C081  F06E         	movff	dir_find@dp+1,dir_next@dp+1
  3853  004714  0E00               	movlw	0
  3854  004716  0100               	movlb	0	; () banked
  3855  004718  6F70               	movwf	(dir_next@stretch+1)& (0+255),b
  3856  00471A  0E00               	movlw	0
  3857  00471C  6F6F               	movwf	dir_next@stretch& (0+255),b
  3858  00471E  EC5A  F013         	call	_dir_next	;wreg free
  3859  004722  0100               	movlb	0	; () banked
  3860  004724  6F85               	movwf	dir_find@res& (0+255),b
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;ff.c: 1506:  } while (res == FR_OK);
  3864  004726  5185               	movf	dir_find@res& (0+255),w,b
  3865  004728  A4D8               	btfss	status,2,c
  3866  00472A  D79A               	goto	u6510
  3867  00472C  D79C               	goto	l5271
  3868  00472E                     __end_of_dir_find:
  3869                           	opt callstack 0
  3870                           
  3871 ;; *************** function _mem_cmp *****************
  3872 ;; Defined at:
  3873 ;;		line 533 in file "ff.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  dst             2    0[COMRAM] PTR const void 
  3876 ;;		 -> FatFs(558), NULL(0), 
  3877 ;;  src             2    2[COMRAM] PTR const void 
  3878 ;;		 -> f_open@sfn(12), 
  3879 ;;  cnt             2    4[COMRAM] unsigned short 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  r               2   12[COMRAM] int 
  3882 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3883 ;;		 -> f_open@sfn(12), 
  3884 ;;  d               2    8[COMRAM] PTR const unsigned char 
  3885 ;;		 -> FatFs(558), NULL(0), 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  2    0[COMRAM] int 
  3888 ;; Registers used:
  3889 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3895 ;;      Params:         6       0       0       0       0       0       0       0       0
  3896 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3897 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3898 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3899 ;;Total ram usage:       14 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_dir_find
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text9
  3909  0050E4                     __ptext9:
  3910                           	opt callstack 0
  3911  0050E4                     _mem_cmp:
  3912                           	opt callstack 26
  3913                           
  3914                           ;ff.c: 534:  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;incstack = 0
  3918  0050E4  C001  F009         	movff	mem_cmp@dst,mem_cmp@d
  3919  0050E8  C002  F00A         	movff	mem_cmp@dst+1,mem_cmp@d+1
  3920  0050EC  C003  F00B         	movff	mem_cmp@src,mem_cmp@s
  3921  0050F0  C004  F00C         	movff	mem_cmp@src+1,mem_cmp@s+1
  3922                           
  3923                           ;ff.c: 535:  int r = 0;
  3924  0050F4  0E00               	movlw	0
  3925  0050F6  6E0E               	movwf	mem_cmp@r+1,c
  3926  0050F8  0E00               	movlw	0
  3927  0050FA  6E0D               	movwf	mem_cmp@r,c
  3928  0050FC                     l4881:
  3929  0050FC  0605               	decf	mem_cmp@cnt,f,c
  3930  0050FE  A0D8               	btfss	status,0,c
  3931  005100  0606               	decf	mem_cmp@cnt+1,f,c
  3932  005102  2805               	incf	mem_cmp@cnt,w,c
  3933  005104  E103               	bnz	u5820
  3934  005106  2806               	incf	mem_cmp@cnt+1,w,c
  3935  005108  B4D8               	btfsc	status,2,c
  3936  00510A  D01A               	goto	u5830
  3937  00510C                     u5820:
  3938  00510C  C009  FFD9         	movff	mem_cmp@d,fsr2l
  3939  005110  C00A  FFDA         	movff	mem_cmp@d+1,fsr2h
  3940  005114  4A09               	infsnz	mem_cmp@d,f,c
  3941  005116  2A0A               	incf	mem_cmp@d+1,f,c
  3942  005118  50DF               	movf	indf2,w,c
  3943  00511A  6E07               	movwf	??_mem_cmp& (0+255),c
  3944  00511C  C00B  FFD9         	movff	mem_cmp@s,fsr2l
  3945  005120  C00C  FFDA         	movff	mem_cmp@s+1,fsr2h
  3946  005124  4A0B               	infsnz	mem_cmp@s,f,c
  3947  005126  2A0C               	incf	mem_cmp@s+1,f,c
  3948  005128  50DF               	movf	indf2,w,c
  3949  00512A  6E08               	movwf	(??_mem_cmp+1)& (0+255),c
  3950  00512C  5008               	movf	??_mem_cmp+1,w,c
  3951  00512E  5C07               	subwf	??_mem_cmp,w,c
  3952  005130  6E0D               	movwf	mem_cmp@r,c
  3953  005132  6A0E               	clrf	mem_cmp@r+1,c
  3954  005134  A0D8               	btfss	status,0,c
  3955  005136  060E               	decf	mem_cmp@r+1,f,c
  3956  005138  500D               	movf	mem_cmp@r,w,c
  3957  00513A  100E               	iorwf	mem_cmp@r+1,w,c
  3958  00513C  B4D8               	btfsc	status,2,c
  3959  00513E  D7DE               	goto	l4881
  3960  005140                     u5830:
  3961                           
  3962                           ;ff.c: 538:  return r;
  3963  005140  C00D  F001         	movff	mem_cmp@r,?_mem_cmp
  3964  005144  C00E  F002         	movff	mem_cmp@r+1,?_mem_cmp+1
  3965  005148  0012               	return		;funcret
  3966  00514A                     __end_of_mem_cmp:
  3967                           	opt callstack 0
  3968                           
  3969 ;; *************** function _create_name *****************
  3970 ;; Defined at:
  3971 ;;		line 1843 in file "ff.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  dp              2    8[COMRAM] PTR struct .
  3974 ;;		 -> f_open@dj(22), 
  3975 ;;  path            2   10[COMRAM] PTR PTR const unsigned c
  3976 ;;		 -> follow_path@path(2), 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  i               2   28[COMRAM] unsigned short 
  3979 ;;  sfn             2   26[COMRAM] PTR unsigned char 
  3980 ;;		 -> f_open@sfn(12), 
  3981 ;;  p               2   23[COMRAM] PTR const unsigned char 
  3982 ;;		 -> STR_6(11), STR_5(1), STR_4(1), 
  3983 ;;  ni              2   21[COMRAM] unsigned short 
  3984 ;;  si              2   18[COMRAM] unsigned short 
  3985 ;;  c               1   30[COMRAM] unsigned char 
  3986 ;;  d               1   25[COMRAM] unsigned char 
  3987 ;;  b               1   20[COMRAM] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      enum E93
  3990 ;; Registers used:
  3991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3997 ;;      Params:         4       0       0       0       0       0       0       0       0
  3998 ;;      Locals:        15       0       0       0       0       0       0       0       0
  3999 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4000 ;;      Totals:        23       0       0       0       0       0       0       0       0
  4001 ;;Total ram usage:       23 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    1
  4004 ;; This function calls:
  4005 ;;		_chk_chr
  4006 ;;		_mem_set
  4007 ;; This function is called by:
  4008 ;;		_follow_path
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text10
  4013  0037AE                     __ptext10:
  4014                           	opt callstack 0
  4015  0037AE                     _create_name:
  4016                           	opt callstack 26
  4017                           
  4018                           ;ff.c: 1844:  DIRC* dp,;ff.c: 1845:  const TCHAR** path;ff.c: 1847: {;ff.c: 1969:  BYTE 
      +                          b, c, d, *sfn;;ff.c: 1970:  UINT ni, si, i;;ff.c: 1971:  const char *p;;ff.c: 1974:  for
      +                           (p = *path; *p == '/' || *p == '\\'; p++) ;
  4019                           
  4020                           ;incstack = 0
  4021  0037AE  C00B  FFD9         	movff	create_name@path,fsr2l
  4022  0037B2  C00C  FFDA         	movff	create_name@path+1,fsr2h
  4023  0037B6  CFDE F018          	movff	postinc2,create_name@p
  4024  0037BA  CFDD F019          	movff	postdec2,create_name@p+1
  4025  0037BE  D002               	goto	l5303
  4026  0037C0                     l5301:
  4027  0037C0  4A18               	infsnz	create_name@p,f,c
  4028  0037C2  2A19               	incf	create_name@p+1,f,c
  4029  0037C4                     l5303:
  4030  0037C4  C018  FFF6         	movff	create_name@p,tblptrl
  4031  0037C8  C019  FFF7         	movff	create_name@p+1,tblptrh
  4032  0037CC                     	if	0	;tblptru may be non-zero
  4033  0037CC                     	endif
  4034  0037CC                     	if	0	;tblptru may be non-zero
  4035  0037CC                     	endif
  4036  0037CC  0008               	tblrd		*
  4037  0037CE  50F5               	movf	tablat,w,c
  4038  0037D0  0A2F               	xorlw	47
  4039  0037D2  B4D8               	btfsc	status,2,c
  4040  0037D4  D7F5               	goto	l5301
  4041  0037D6  C018  FFF6         	movff	create_name@p,tblptrl
  4042  0037DA  C019  FFF7         	movff	create_name@p+1,tblptrh
  4043  0037DE                     	if	0	;tblptru may be non-zero
  4044  0037DE                     	endif
  4045  0037DE                     	if	0	;tblptru may be non-zero
  4046  0037DE                     	endif
  4047  0037DE  0008               	tblrd		*
  4048  0037E0  50F5               	movf	tablat,w,c
  4049  0037E2  0A5C               	xorlw	92
  4050  0037E4  B4D8               	btfsc	status,2,c
  4051  0037E6  D7EC               	goto	l5301
  4052                           
  4053                           ;ff.c: 1975:  sfn = dp->fn;
  4054  0037E8  EE20 F014          	lfsr	2,20
  4055  0037EC  5009               	movf	create_name@dp,w,c
  4056  0037EE  26D9               	addwf	fsr2l,f,c
  4057  0037F0  500A               	movf	create_name@dp+1,w,c
  4058  0037F2  22DA               	addwfc	fsr2h,f,c
  4059  0037F4  CFDE F01B          	movff	postinc2,create_name@sfn
  4060  0037F8  CFDD F01C          	movff	postdec2,create_name@sfn+1
  4061                           
  4062                           ;ff.c: 1976:  mem_set(sfn, ' ', 11);
  4063  0037FC  C01B  F001         	movff	create_name@sfn,mem_set@dst
  4064  003800  C01C  F002         	movff	create_name@sfn+1,mem_set@dst+1
  4065  003804  0E00               	movlw	0
  4066  003806  6E04               	movwf	mem_set@val+1,c
  4067  003808  0E20               	movlw	32
  4068  00380A  6E03               	movwf	mem_set@val,c
  4069  00380C  0E00               	movlw	0
  4070  00380E  6E06               	movwf	mem_set@cnt+1,c
  4071  003810  0E0B               	movlw	11
  4072  003812  6E05               	movwf	mem_set@cnt,c
  4073  003814  ECED  F029         	call	_mem_set	;wreg free
  4074                           
  4075                           ;ff.c: 1977:  si = i = b = 0; ni = 8;
  4076  003818  0E00               	movlw	0
  4077  00381A  6E15               	movwf	create_name@b,c
  4078  00381C  C015  F01D         	movff	create_name@b,create_name@i
  4079  003820  6A1E               	clrf	create_name@i+1,c
  4080  003822  C01D  F013         	movff	create_name@i,create_name@si
  4081  003826  C01E  F014         	movff	create_name@i+1,create_name@si+1
  4082  00382A  0E00               	movlw	0
  4083  00382C  6E17               	movwf	create_name@ni+1,c
  4084  00382E  0E08               	movlw	8
  4085  003830  6E16               	movwf	create_name@ni,c
  4086  003832                     l5315:
  4087                           
  4088                           ;ff.c: 1992:   c = (BYTE)p[si++];
  4089  003832  5013               	movf	create_name@si,w,c
  4090  003834  2418               	addwf	create_name@p,w,c
  4091  003836  6E0D               	movwf	??_create_name& (0+255),c
  4092  003838  5014               	movf	create_name@si+1,w,c
  4093  00383A  2019               	addwfc	create_name@p+1,w,c
  4094  00383C  6E0E               	movwf	(??_create_name+1)& (0+255),c
  4095  00383E  C00D  FFF6         	movff	??_create_name,tblptrl
  4096  003842  C00E  FFF7         	movff	??_create_name+1,tblptrh
  4097  003846                     	if	0	;tblptru may be non-zero
  4098  003846                     	endif
  4099  003846                     	if	0	;tblptru may be non-zero
  4100  003846                     	endif
  4101  003846  0008               	tblrd		*
  4102  003848  CFF5 F01F          	movff	tablat,create_name@c
  4103  00384C  4A13               	infsnz	create_name@si,f,c
  4104  00384E  2A14               	incf	create_name@si+1,f,c
  4105                           
  4106                           ;ff.c: 1993:   if (c <= ' ' || c == '/' || c == '\\') break;
  4107  003850  0E20               	movlw	32
  4108  003852  641F               	cpfsgt	create_name@c,c
  4109  003854  D0A4               	goto	l5399
  4110  003856  0E2F               	movlw	47
  4111  003858  181F               	xorwf	create_name@c,w,c
  4112  00385A  B4D8               	btfsc	status,2,c
  4113  00385C  D0A0               	goto	l5399
  4114  00385E  0E5C               	movlw	92
  4115  003860  181F               	xorwf	create_name@c,w,c
  4116  003862  B4D8               	btfsc	status,2,c
  4117  003864  D09C               	goto	l5399
  4118                           
  4119                           ;ff.c: 1994:   if (c == '.' || i >= ni) {
  4120  003866  0E2E               	movlw	46
  4121  003868  181F               	xorwf	create_name@c,w,c
  4122  00386A  B4D8               	btfsc	status,2,c
  4123  00386C  D006               	goto	u6630
  4124  00386E  5016               	movf	create_name@ni,w,c
  4125  003870  5C1D               	subwf	create_name@i,w,c
  4126  003872  5017               	movf	create_name@ni+1,w,c
  4127  003874  581E               	subwfb	create_name@i+1,w,c
  4128  003876  A0D8               	btfss	status,0,c
  4129  003878  D018               	goto	l5341
  4130  00387A                     u6630:
  4131                           
  4132                           ;ff.c: 1995:    if (ni != 8 || c != '.') return FR_INVALID_NAME;
  4133  00387A  0E08               	movlw	8
  4134  00387C  1816               	xorwf	create_name@ni,w,c
  4135  00387E  1017               	iorwf	create_name@ni+1,w,c
  4136  003880  A4D8               	btfss	status,2,c
  4137  003882  D004               	goto	u6650
  4138  003884  0E2E               	movlw	46
  4139  003886  181F               	xorwf	create_name@c,w,c
  4140  003888  B4D8               	btfsc	status,2,c
  4141  00388A  D002               	goto	l5337
  4142  00388C                     u6650:
  4143  00388C  0E06               	movlw	6
  4144  00388E  0012               	return	
  4145  003890                     l5337:
  4146                           
  4147                           ;ff.c: 1996:    i = 8; ni = 11;
  4148  003890  0E00               	movlw	0
  4149  003892  6E1E               	movwf	create_name@i+1,c
  4150  003894  0E08               	movlw	8
  4151  003896  6E1D               	movwf	create_name@i,c
  4152  003898  0E00               	movlw	0
  4153  00389A  6E17               	movwf	create_name@ni+1,c
  4154  00389C  0E0B               	movlw	11
  4155  00389E  6E16               	movwf	create_name@ni,c
  4156                           
  4157                           ;ff.c: 1997:    b <<= 2; continue;
  4158  0038A0  90D8               	bcf	status,0,c
  4159  0038A2  3615               	rlcf	create_name@b,f,c
  4160  0038A4  90D8               	bcf	status,0,c
  4161  0038A6  3615               	rlcf	create_name@b,f,c
  4162  0038A8  D7C4               	goto	l5315
  4163  0038AA                     l5341:
  4164                           
  4165                           ;ff.c: 1999:   if (c >= 0x80) {
  4166  0038AA  0E7F               	movlw	127
  4167  0038AC  641F               	cpfsgt	create_name@c,c
  4168  0038AE  D002               	goto	l432
  4169                           
  4170                           ;ff.c: 2000:    b |= 3;
  4171  0038B0  0E03               	movlw	3
  4172  0038B2  1215               	iorwf	create_name@b,f,c
  4173  0038B4                     l432:
  4174                           
  4175                           ;ff.c: 2009:   if ((((BYTE)(c) >= 0x81 && (BYTE)(c) <= 0x9F) || ((BYTE)(c) >= 0xE0 && (B
      +                          YTE)(c) <= 0xFC))) {
  4176  0038B4  0E80               	movlw	128
  4177  0038B6  641F               	cpfsgt	create_name@c,c
  4178  0038B8  D003               	goto	u6680
  4179  0038BA  0E9F               	movlw	159
  4180  0038BC  641F               	cpfsgt	create_name@c,c
  4181  0038BE  D006               	goto	u6700
  4182  0038C0                     u6680:
  4183  0038C0  0EDF               	movlw	223
  4184  0038C2  641F               	cpfsgt	create_name@c,c
  4185  0038C4  D043               	goto	l5375
  4186  0038C6  0EFD               	movlw	253
  4187  0038C8  601F               	cpfslt	create_name@c,c
  4188  0038CA  D040               	goto	l5375
  4189  0038CC                     u6700:
  4190                           
  4191                           ;ff.c: 2010:    d = (BYTE)p[si++];
  4192  0038CC  5013               	movf	create_name@si,w,c
  4193  0038CE  2418               	addwf	create_name@p,w,c
  4194  0038D0  6E0D               	movwf	??_create_name& (0+255),c
  4195  0038D2  5014               	movf	create_name@si+1,w,c
  4196  0038D4  2019               	addwfc	create_name@p+1,w,c
  4197  0038D6  6E0E               	movwf	(??_create_name+1)& (0+255),c
  4198  0038D8  C00D  FFF6         	movff	??_create_name,tblptrl
  4199  0038DC  C00E  FFF7         	movff	??_create_name+1,tblptrh
  4200  0038E0                     	if	0	;tblptru may be non-zero
  4201  0038E0                     	endif
  4202  0038E0                     	if	0	;tblptru may be non-zero
  4203  0038E0                     	endif
  4204  0038E0  0008               	tblrd		*
  4205  0038E2  CFF5 F01A          	movff	tablat,create_name@d
  4206  0038E6  4A13               	infsnz	create_name@si,f,c
  4207  0038E8  2A14               	incf	create_name@si+1,f,c
  4208                           
  4209                           ;ff.c: 2011:    if (!(((BYTE)(d) >= 0x40 && (BYTE)(d) <= 0x7E) || ((BYTE)(d) >= 0x80 && 
      +                          (BYTE)(d) <= 0xFC)) || i >= ni - 1)
  4210  0038EA  0E3F               	movlw	63
  4211  0038EC  641A               	cpfsgt	create_name@d,c
  4212  0038EE  D003               	goto	u6720
  4213  0038F0  0E7E               	movlw	126
  4214  0038F2  641A               	cpfsgt	create_name@d,c
  4215  0038F4  D006               	goto	u6740
  4216  0038F6                     u6720:
  4217  0038F6  0E7F               	movlw	127
  4218  0038F8  641A               	cpfsgt	create_name@d,c
  4219  0038FA  D7C8               	goto	u6650
  4220  0038FC  0EFD               	movlw	253
  4221  0038FE  601A               	cpfslt	create_name@d,c
  4222  003900  D7C5               	goto	u6650
  4223  003902                     u6740:
  4224  003902  0EFF               	movlw	255
  4225  003904  6E0D               	movwf	??_create_name& (0+255),c
  4226  003906  0EFF               	movlw	255
  4227  003908  6E0E               	movwf	(??_create_name+1)& (0+255),c
  4228  00390A  C016  F00F         	movff	create_name@ni,??_create_name+2
  4229  00390E  C017  F010         	movff	create_name@ni+1,??_create_name+3
  4230  003912  500D               	movf	??_create_name,w,c
  4231  003914  260F               	addwf	??_create_name+2,f,c
  4232  003916  500E               	movf	??_create_name+1,w,c
  4233  003918  2210               	addwfc	??_create_name+3,f,c
  4234  00391A  500F               	movf	??_create_name+2,w,c
  4235  00391C  5C1D               	subwf	create_name@i,w,c
  4236  00391E  5010               	movf	??_create_name+3,w,c
  4237  003920  581E               	subwfb	create_name@i+1,w,c
  4238  003922  B0D8               	btfsc	status,0,c
  4239  003924  D7B3               	goto	u6650
  4240                           
  4241                           ;ff.c: 2013:    sfn[i++] = c;
  4242  003926  501D               	movf	create_name@i,w,c
  4243  003928  241B               	addwf	create_name@sfn,w,c
  4244  00392A  6ED9               	movwf	fsr2l,c
  4245  00392C  501E               	movf	create_name@i+1,w,c
  4246  00392E  201C               	addwfc	create_name@sfn+1,w,c
  4247  003930  6EDA               	movwf	fsr2h,c
  4248  003932  C01F  FFDF         	movff	create_name@c,indf2
  4249  003936  4A1D               	infsnz	create_name@i,f,c
  4250  003938  2A1E               	incf	create_name@i+1,f,c
  4251                           
  4252                           ;ff.c: 2014:    sfn[i++] = d;
  4253  00393A  501D               	movf	create_name@i,w,c
  4254  00393C  241B               	addwf	create_name@sfn,w,c
  4255  00393E  6ED9               	movwf	fsr2l,c
  4256  003940  501E               	movf	create_name@i+1,w,c
  4257  003942  201C               	addwfc	create_name@sfn+1,w,c
  4258  003944  6EDA               	movwf	fsr2h,c
  4259  003946  C01A  FFDF         	movff	create_name@d,indf2
  4260  00394A  D026               	goto	l5397
  4261  00394C                     l5375:
  4262                           
  4263                           ;ff.c: 2016:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))
  4264  00394C  0E69               	movlw	low STR_1
  4265  00394E  6E01               	movwf	chk_chr@str,c
  4266  003950  0E08               	movlw	high STR_1
  4267  003952  6E02               	movwf	chk_chr@str+1,c
  4268  003954  C01F  F003         	movff	create_name@c,chk_chr@chr
  4269  003958  6A04               	clrf	chk_chr@chr+1,c
  4270  00395A  EC2E  F029         	call	_chk_chr	;wreg free
  4271  00395E  5001               	movf	?_chk_chr,w,c
  4272  003960  1002               	iorwf	?_chk_chr+1,w,c
  4273  003962  A4D8               	btfss	status,2,c
  4274  003964  D793               	goto	u6650
  4275                           
  4276                           ;ff.c: 2018:    if ((((c)>='A')&&((c)<='Z'))) {
  4277  003966  0E40               	movlw	64
  4278  003968  641F               	cpfsgt	create_name@c,c
  4279  00396A  D005               	goto	l5387
  4280  00396C  0E5B               	movlw	91
  4281  00396E  601F               	cpfslt	create_name@c,c
  4282  003970  D002               	goto	l5387
  4283                           
  4284                           ;ff.c: 2019:     b |= 2;
  4285  003972  8215               	bsf	create_name@b,1,c
  4286                           
  4287                           ;ff.c: 2020:    } else {
  4288  003974  D009               	goto	l5395
  4289  003976                     l5387:
  4290                           
  4291                           ;ff.c: 2021:     if ((((c)>='a')&&((c)<='z'))) {
  4292  003976  0E60               	movlw	96
  4293  003978  641F               	cpfsgt	create_name@c,c
  4294  00397A  D006               	goto	l5395
  4295  00397C  0E7B               	movlw	123
  4296  00397E  601F               	cpfslt	create_name@c,c
  4297  003980  D003               	goto	l5395
  4298                           
  4299                           ;ff.c: 2022:      b |= 1; c -= 0x20;
  4300  003982  8015               	bsf	create_name@b,0,c
  4301  003984  0E20               	movlw	32
  4302  003986  5E1F               	subwf	create_name@c,f,c
  4303  003988                     l5395:
  4304                           
  4305                           ;ff.c: 2025:    sfn[i++] = c;
  4306  003988  501D               	movf	create_name@i,w,c
  4307  00398A  241B               	addwf	create_name@sfn,w,c
  4308  00398C  6ED9               	movwf	fsr2l,c
  4309  00398E  501E               	movf	create_name@i+1,w,c
  4310  003990  201C               	addwfc	create_name@sfn+1,w,c
  4311  003992  6EDA               	movwf	fsr2h,c
  4312  003994  C01F  FFDF         	movff	create_name@c,indf2
  4313  003998                     l5397:
  4314  003998  4A1D               	infsnz	create_name@i,f,c
  4315  00399A  2A1E               	incf	create_name@i+1,f,c
  4316  00399C  D74A               	goto	l5315
  4317  00399E                     l5399:
  4318                           
  4319                           ;ff.c: 2028:  *path = &p[si];
  4320  00399E  5013               	movf	create_name@si,w,c
  4321  0039A0  2418               	addwf	create_name@p,w,c
  4322  0039A2  6E0D               	movwf	??_create_name& (0+255),c
  4323  0039A4  5014               	movf	create_name@si+1,w,c
  4324  0039A6  2019               	addwfc	create_name@p+1,w,c
  4325  0039A8  6E0E               	movwf	(??_create_name+1)& (0+255),c
  4326  0039AA  C00B  FFD9         	movff	create_name@path,fsr2l
  4327  0039AE  C00C  FFDA         	movff	create_name@path+1,fsr2h
  4328  0039B2  C00D  FFDE         	movff	??_create_name,postinc2
  4329  0039B6  C00E  FFDD         	movff	??_create_name+1,postdec2
  4330                           
  4331                           ;ff.c: 2029:  c = (c <= ' ') ? 0x04 : 0;
  4332  0039BA  0E20               	movlw	32
  4333  0039BC  641F               	cpfsgt	create_name@c,c
  4334  0039BE  D004               	goto	l5405
  4335  0039C0  0E00               	movlw	0
  4336  0039C2  6E12               	movwf	_create_name$624+1,c
  4337  0039C4  0E00               	movlw	0
  4338  0039C6  D003               	goto	L4
  4339  0039C8                     l5405:
  4340  0039C8  0E00               	movlw	0
  4341  0039CA  6E12               	movwf	_create_name$624+1,c
  4342  0039CC  0E04               	movlw	4
  4343  0039CE                     L4:
  4344  0039CE  6E11               	movwf	_create_name$624,c
  4345  0039D0  C011  F01F         	movff	_create_name$624,create_name@c
  4346                           
  4347                           ;ff.c: 2031:  if (!i) return FR_INVALID_NAME;
  4348  0039D4  501D               	movf	create_name@i,w,c
  4349  0039D6  101E               	iorwf	create_name@i+1,w,c
  4350  0039D8  B4D8               	btfsc	status,2,c
  4351  0039DA  D758               	goto	u6650
  4352                           
  4353                           ;ff.c: 2032:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
  4354  0039DC  C01B  FFD9         	movff	create_name@sfn,fsr2l
  4355  0039E0  C01C  FFDA         	movff	create_name@sfn+1,fsr2h
  4356  0039E4  0EE5               	movlw	229
  4357  0039E6  18DE               	xorwf	postinc2,w,c
  4358  0039E8  A4D8               	btfss	status,2,c
  4359  0039EA  D006               	goto	l5419
  4360  0039EC  C01B  FFD9         	movff	create_name@sfn,fsr2l
  4361  0039F0  C01C  FFDA         	movff	create_name@sfn+1,fsr2h
  4362  0039F4  0E05               	movlw	5
  4363  0039F6  6EDF               	movwf	indf2,c
  4364  0039F8                     l5419:
  4365                           
  4366                           ;ff.c: 2034:  if (ni == 8) b <<= 2;
  4367  0039F8  0E08               	movlw	8
  4368  0039FA  1816               	xorwf	create_name@ni,w,c
  4369  0039FC  1017               	iorwf	create_name@ni+1,w,c
  4370  0039FE  A4D8               	btfss	status,2,c
  4371  003A00  D004               	goto	l456
  4372  003A02  90D8               	bcf	status,0,c
  4373  003A04  3615               	rlcf	create_name@b,f,c
  4374  003A06  90D8               	bcf	status,0,c
  4375  003A08  3615               	rlcf	create_name@b,f,c
  4376  003A0A                     l456:
  4377                           
  4378                           ;ff.c: 2035:  if ((b & 0x03) == 0x01) c |= 0x10;
  4379  003A0A  5015               	movf	create_name@b,w,c
  4380  003A0C  0B03               	andlw	3
  4381  003A0E  06E8               	decf	wreg,f,c
  4382  003A10  B4D8               	btfsc	status,2,c
  4383  003A12  881F               	bsf	create_name@c,4,c
  4384                           
  4385                           ;ff.c: 2036:  if ((b & 0x0C) == 0x04) c |= 0x08;
  4386  003A14  5015               	movf	create_name@b,w,c
  4387  003A16  0B0C               	andlw	12
  4388  003A18  0A04               	xorlw	4
  4389  003A1A  B4D8               	btfsc	status,2,c
  4390  003A1C  861F               	bsf	create_name@c,3,c
  4391                           
  4392                           ;ff.c: 2038:  sfn[11] = c;
  4393  003A1E  EE20 F00B          	lfsr	2,11
  4394  003A22  501B               	movf	create_name@sfn,w,c
  4395  003A24  26D9               	addwf	fsr2l,f,c
  4396  003A26  501C               	movf	create_name@sfn+1,w,c
  4397  003A28  22DA               	addwfc	fsr2h,f,c
  4398  003A2A  C01F  FFDF         	movff	create_name@c,indf2
  4399                           
  4400                           ;ff.c: 2040:  return FR_OK;
  4401  003A2E  0E00               	movlw	0
  4402  003A30  0012               	return		;funcret
  4403  003A32                     __end_of_create_name:
  4404                           	opt callstack 0
  4405                           
  4406 ;; *************** function _chk_chr *****************
  4407 ;; Defined at:
  4408 ;;		line 543 in file "ff.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  str             2    0[COMRAM] PTR const unsigned char 
  4411 ;;		 -> STR_2(15), 
  4412 ;;  chr             2    2[COMRAM] int 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2    0[COMRAM] int 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4424 ;;      Params:         4       0       0       0       0       0       0       0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4426 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4427 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4428 ;;Total ram usage:        6 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_create_name
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text11
  4438  00525C                     __ptext11:
  4439                           	opt callstack 0
  4440  00525C                     _chk_chr:
  4441                           	opt callstack 26
  4442                           
  4443                           ;ff.c: 544:  while (*str && *str != chr) str++;
  4444                           
  4445                           ;incstack = 0
  4446  00525C  D002               	goto	l4889
  4447  00525E                     l4887:
  4448  00525E  4A01               	infsnz	chk_chr@str,f,c
  4449  005260  2A02               	incf	chk_chr@str+1,f,c
  4450  005262                     l4889:
  4451  005262  C001  FFF6         	movff	chk_chr@str,tblptrl
  4452  005266  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  4453  00526A                     	if	0	;tblptru may be non-zero
  4454  00526A                     	endif
  4455  00526A                     	if	0	;tblptru may be non-zero
  4456  00526A                     	endif
  4457  00526A  0008               	tblrd		*
  4458  00526C  50F5               	movf	tablat,w,c
  4459  00526E  0900               	iorlw	0
  4460  005270  B4D8               	btfsc	status,2,c
  4461  005272  D00F               	goto	u5850
  4462  005274  C001  FFF6         	movff	chk_chr@str,tblptrl
  4463  005278  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  4464  00527C                     	if	0	;tblptru may be non-zero
  4465  00527C                     	endif
  4466  00527C                     	if	0	;tblptru may be non-zero
  4467  00527C                     	endif
  4468  00527C  0008               	tblrd		*
  4469  00527E  50F5               	movf	tablat,w,c
  4470  005280  6E05               	movwf	??_chk_chr& (0+255),c
  4471  005282  6A06               	clrf	(??_chk_chr+1)& (0+255),c
  4472  005284  5003               	movf	chk_chr@chr,w,c
  4473  005286  1805               	xorwf	??_chk_chr,w,c
  4474  005288  E1EA               	bnz	l4887
  4475  00528A  5004               	movf	chk_chr@chr+1,w,c
  4476  00528C  1806               	xorwf	??_chk_chr+1,w,c
  4477  00528E  A4D8               	btfss	status,2,c
  4478  005290  D7E6               	goto	l4887
  4479  005292                     u5850:
  4480                           
  4481                           ;ff.c: 545:  return *str;
  4482  005292  C001  FFF6         	movff	chk_chr@str,tblptrl
  4483  005296  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  4484  00529A                     	if	0	;tblptru may be non-zero
  4485  00529A                     	endif
  4486  00529A                     	if	0	;tblptru may be non-zero
  4487  00529A                     	endif
  4488  00529A  0008               	tblrd		*
  4489  00529C  50F5               	movf	tablat,w,c
  4490  00529E  6E01               	movwf	?_chk_chr,c
  4491  0052A0  6A02               	clrf	?_chk_chr+1,c
  4492  0052A2  0012               	return		;funcret
  4493  0052A4                     __end_of_chk_chr:
  4494                           	opt callstack 0
  4495                           
  4496 ;; *************** function _dir_register *****************
  4497 ;; Defined at:
  4498 ;;		line 1578 in file "ff.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;  dp              2   42[BANK0 ] PTR struct .
  4501 ;;		 -> f_open@dj(22), 
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;  res             1   44[BANK0 ] enum E93
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      enum E93
  4506 ;; Registers used:
  4507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4513 ;;      Params:         0       2       0       0       0       0       0       0       0
  4514 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4516 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4517 ;;Total ram usage:        3 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:   12
  4520 ;; This function calls:
  4521 ;;		_dir_alloc
  4522 ;;		_mem_cpy
  4523 ;;		_mem_set
  4524 ;;		_move_window
  4525 ;; This function is called by:
  4526 ;;		_f_open
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text12
  4531  0048F8                     __ptext12:
  4532                           	opt callstack 0
  4533  0048F8                     _dir_register:
  4534                           	opt callstack 16
  4535                           
  4536                           ;ff.c: 1579:  DIRC* dp;ff.c: 1581: {;ff.c: 1582:  FRESULT res;;ff.c: 1629:  res = dir_al
      +                          loc(dp, 1);
  4537                           
  4538                           ;incstack = 0
  4539  0048F8  C08A  F080         	movff	dir_register@dp,dir_alloc@dp
  4540  0048FC  C08B  F081         	movff	dir_register@dp+1,dir_alloc@dp+1
  4541  004900  0E00               	movlw	0
  4542  004902  0100               	movlb	0	; () banked
  4543  004904  6F83               	movwf	(dir_alloc@nent+1)& (0+255),b
  4544  004906  0E01               	movlw	1
  4545  004908  6F82               	movwf	dir_alloc@nent& (0+255),b
  4546  00490A  ECA9  F022         	call	_dir_alloc	;wreg free
  4547  00490E  0100               	movlb	0	; () banked
  4548  004910  6F8C               	movwf	dir_register@res& (0+255),b
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;ff.c: 1632:  if (res == FR_OK) {
  4552  004912  518C               	movf	dir_register@res& (0+255),w,b
  4553  004914  A4D8               	btfss	status,2,c
  4554  004916  D058               	goto	l5601
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;ff.c: 1633:   res = move_window(dp->fs, dp->sect);
  4558  004918  C08A  FFD9         	movff	dir_register@dp,fsr2l
  4559  00491C  C08B  FFDA         	movff	dir_register@dp+1,fsr2h
  4560  004920  CFDE F030          	movff	postinc2,move_window@fs
  4561  004924  CFDD F031          	movff	postdec2,move_window@fs+1
  4562  004928  EE20 F00E          	lfsr	2,14
  4563  00492C  518A               	movf	dir_register@dp& (0+255),w,b
  4564  00492E  26D9               	addwf	fsr2l,f,c
  4565  004930  518B               	movf	(dir_register@dp+1)& (0+255),w,b
  4566  004932  22DA               	addwfc	fsr2h,f,c
  4567  004934  CFDE F032          	movff	postinc2,move_window@sector
  4568  004938  CFDE F033          	movff	postinc2,move_window@sector+1
  4569  00493C  CFDE F034          	movff	postinc2,move_window@sector+2
  4570  004940  CFDE F035          	movff	postinc2,move_window@sector+3
  4571  004944  EC67  F026         	call	_move_window	;wreg free
  4572  004948  0100               	movlb	0	; () banked
  4573  00494A  6F8C               	movwf	dir_register@res& (0+255),b
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;ff.c: 1634:   if (res == FR_OK) {
  4577  00494C  518C               	movf	dir_register@res& (0+255),w,b
  4578  00494E  A4D8               	btfss	status,2,c
  4579  004950  D03B               	goto	l5601
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;ff.c: 1635:    mem_set(dp->dir, 0, 32);
  4583  004952  EE20 F012          	lfsr	2,18
  4584  004956  518A               	movf	dir_register@dp& (0+255),w,b
  4585  004958  26D9               	addwf	fsr2l,f,c
  4586  00495A  518B               	movf	(dir_register@dp+1)& (0+255),w,b
  4587  00495C  22DA               	addwfc	fsr2h,f,c
  4588  00495E  CFDE F001          	movff	postinc2,mem_set@dst
  4589  004962  CFDD F002          	movff	postdec2,mem_set@dst+1
  4590  004966  0E00               	movlw	0
  4591  004968  6E04               	movwf	mem_set@val+1,c
  4592  00496A  0E00               	movlw	0
  4593  00496C  6E03               	movwf	mem_set@val,c
  4594  00496E  0E00               	movlw	0
  4595  004970  6E06               	movwf	mem_set@cnt+1,c
  4596  004972  0E20               	movlw	32
  4597  004974  6E05               	movwf	mem_set@cnt,c
  4598  004976  ECED  F029         	call	_mem_set	;wreg free
  4599                           
  4600                           ;ff.c: 1636:    mem_cpy(dp->dir, dp->fn, 11);
  4601  00497A  0100               	movlb	0	; () banked
  4602  00497C  EE20 F012          	lfsr	2,18
  4603  004980  518A               	movf	dir_register@dp& (0+255),w,b
  4604  004982  26D9               	addwf	fsr2l,f,c
  4605  004984  518B               	movf	(dir_register@dp+1)& (0+255),w,b
  4606  004986  22DA               	addwfc	fsr2h,f,c
  4607  004988  CFDE F001          	movff	postinc2,mem_cpy@dst
  4608  00498C  CFDD F002          	movff	postdec2,mem_cpy@dst+1
  4609  004990  EE20 F014          	lfsr	2,20
  4610  004994  518A               	movf	dir_register@dp& (0+255),w,b
  4611  004996  26D9               	addwf	fsr2l,f,c
  4612  004998  518B               	movf	(dir_register@dp+1)& (0+255),w,b
  4613  00499A  22DA               	addwfc	fsr2h,f,c
  4614  00499C  CFDE F003          	movff	postinc2,mem_cpy@src
  4615  0049A0  CFDD F004          	movff	postdec2,mem_cpy@src+1
  4616  0049A4  0E00               	movlw	0
  4617  0049A6  6E06               	movwf	mem_cpy@cnt+1,c
  4618  0049A8  0E0B               	movlw	11
  4619  0049AA  6E05               	movwf	mem_cpy@cnt,c
  4620  0049AC  ECC5  F027         	call	_mem_cpy	;wreg free
  4621                           
  4622                           ;ff.c: 1640:    dp->fs->wflag = 1;
  4623  0049B0  C08A  FFD9         	movff	dir_register@dp,fsr2l
  4624  0049B4  C08B  FFDA         	movff	dir_register@dp+1,fsr2h
  4625  0049B8  EE10 F004          	lfsr	1,4
  4626  0049BC  50DE               	movf	postinc2,w,c
  4627  0049BE  26E1               	addwf	fsr1l,f,c
  4628  0049C0  50DD               	movf	postdec2,w,c
  4629  0049C2  22E2               	addwfc	fsr1h,f,c
  4630  0049C4  0E01               	movlw	1
  4631  0049C6  6EE7               	movwf	indf1,c
  4632  0049C8                     l5601:
  4633                           
  4634                           ;ff.c: 1644:  return res;
  4635  0049C8  0100               	movlb	0	; () banked
  4636  0049CA  518C               	movf	dir_register@res& (0+255),w,b
  4637                           
  4638                           ; BSR set to: 0
  4639  0049CC  0012               	return		;funcret
  4640  0049CE                     __end_of_dir_register:
  4641                           	opt callstack 0
  4642                           
  4643 ;; *************** function _mem_cpy *****************
  4644 ;; Defined at:
  4645 ;;		line 507 in file "ff.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  dst             2    0[COMRAM] PTR void 
  4648 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
  4649 ;;  src             2    2[COMRAM] PTR const void 
  4650 ;;		 -> FatFs.win(512), FatFs(558), ND(2), f_open@sfn(12), 
  4651 ;;		 -> NULL(0), 
  4652 ;;  cnt             2    4[COMRAM] unsigned short 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4655 ;;		 -> FatFs.win(512), FatFs(558), ND(2), f_open@sfn(12), 
  4656 ;;		 -> NULL(0), 
  4657 ;;  d               2    6[COMRAM] PTR unsigned char 
  4658 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      void 
  4661 ;; Registers used:
  4662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4668 ;;      Params:         6       0       0       0       0       0       0       0       0
  4669 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4671 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4672 ;;Total ram usage:       10 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_dir_register
  4678 ;;		_f_read
  4679 ;;		_f_write
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text13
  4684  004F8A                     __ptext13:
  4685                           	opt callstack 0
  4686  004F8A                     _mem_cpy:
  4687                           	opt callstack 27
  4688                           
  4689                           ;ff.c: 508:  BYTE *d = (BYTE*)dst;
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;incstack = 0
  4693  004F8A  C001  F007         	movff	mem_cpy@dst,mem_cpy@d
  4694  004F8E  C002  F008         	movff	mem_cpy@dst+1,mem_cpy@d+1
  4695                           
  4696                           ;ff.c: 509:  const BYTE *s = (const BYTE*)src;
  4697  004F92  C003  F009         	movff	mem_cpy@src,mem_cpy@s
  4698  004F96  C004  F00A         	movff	mem_cpy@src+1,mem_cpy@s+1
  4699                           
  4700                           ;ff.c: 512:  while (cnt >= sizeof (int)) {
  4701  004F9A  D018               	goto	l5181
  4702  004F9C                     l5173:
  4703                           
  4704                           ;ff.c: 513:   *(int*)d = *(int*)s;
  4705  004F9C  C009  FFD9         	movff	mem_cpy@s,fsr2l
  4706  004FA0  C00A  FFDA         	movff	mem_cpy@s+1,fsr2h
  4707  004FA4  C007  FFE1         	movff	mem_cpy@d,fsr1l
  4708  004FA8  C008  FFE2         	movff	mem_cpy@d+1,fsr1h
  4709  004FAC  CFDE FFE6          	movff	postinc2,postinc1
  4710  004FB0  CFDD FFE5          	movff	postdec2,postdec1
  4711                           
  4712                           ;ff.c: 514:   d += sizeof (int); s += sizeof (int);
  4713  004FB4  0E02               	movlw	2
  4714  004FB6  2607               	addwf	mem_cpy@d,f,c
  4715  004FB8  0E00               	movlw	0
  4716  004FBA  2208               	addwfc	mem_cpy@d+1,f,c
  4717  004FBC  0E02               	movlw	2
  4718  004FBE  2609               	addwf	mem_cpy@s,f,c
  4719  004FC0  0E00               	movlw	0
  4720  004FC2  220A               	addwfc	mem_cpy@s+1,f,c
  4721                           
  4722                           ;ff.c: 515:   cnt -= sizeof (int);
  4723  004FC4  0E02               	movlw	2
  4724  004FC6  5E05               	subwf	mem_cpy@cnt,f,c
  4725  004FC8  0E00               	movlw	0
  4726  004FCA  5A06               	subwfb	mem_cpy@cnt+1,f,c
  4727  004FCC                     l5181:
  4728                           
  4729                           ;ff.c: 512:  while (cnt >= sizeof (int)) {
  4730  004FCC  5006               	movf	mem_cpy@cnt+1,w,c
  4731  004FCE  E1E6               	bnz	l5173
  4732  004FD0  0E02               	movlw	2
  4733  004FD2  5C05               	subwf	mem_cpy@cnt,w,c
  4734  004FD4  A0D8               	btfss	status,0,c
  4735  004FD6  D00F               	goto	l5189
  4736  004FD8  D7E1               	goto	l5173
  4737  004FDA                     l5183:
  4738                           
  4739                           ;ff.c: 519:   *d++ = *s++;
  4740  004FDA  C009  FFD9         	movff	mem_cpy@s,fsr2l
  4741  004FDE  C00A  FFDA         	movff	mem_cpy@s+1,fsr2h
  4742  004FE2  C007  FFE1         	movff	mem_cpy@d,fsr1l
  4743  004FE6  C008  FFE2         	movff	mem_cpy@d+1,fsr1h
  4744  004FEA  CFDF FFE7          	movff	indf2,indf1
  4745  004FEE  4A09               	infsnz	mem_cpy@s,f,c
  4746  004FF0  2A0A               	incf	mem_cpy@s+1,f,c
  4747  004FF2  4A07               	infsnz	mem_cpy@d,f,c
  4748  004FF4  2A08               	incf	mem_cpy@d+1,f,c
  4749  004FF6                     l5189:
  4750                           
  4751                           ;ff.c: 518:  while (cnt--)
  4752  004FF6  0605               	decf	mem_cpy@cnt,f,c
  4753  004FF8  A0D8               	btfss	status,0,c
  4754  004FFA  0606               	decf	mem_cpy@cnt+1,f,c
  4755  004FFC  2805               	incf	mem_cpy@cnt,w,c
  4756  004FFE  E1ED               	bnz	l5183
  4757  005000  2806               	incf	mem_cpy@cnt+1,w,c
  4758  005002  B4D8               	btfsc	status,2,c
  4759  005004  0012               	return	
  4760  005006  D7E9               	goto	l5183
  4761  005008                     __end_of_mem_cpy:
  4762                           	opt callstack 0
  4763                           
  4764 ;; *************** function _dir_alloc *****************
  4765 ;; Defined at:
  4766 ;;		line 1199 in file "ff.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  dp              2   32[BANK0 ] PTR struct .
  4769 ;;		 -> f_open@dj(22), 
  4770 ;;  nent            2   34[BANK0 ] unsigned short 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  n               2   39[BANK0 ] unsigned short 
  4773 ;;  res             1   41[BANK0 ] enum E93
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      enum E93
  4776 ;; Registers used:
  4777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4783 ;;      Params:         0       4       0       0       0       0       0       0       0
  4784 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4785 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4786 ;;      Totals:         0      10       0       0       0       0       0       0       0
  4787 ;;Total ram usage:       10 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:   11
  4790 ;; This function calls:
  4791 ;;		_dir_next
  4792 ;;		_dir_sdi
  4793 ;;		_move_window
  4794 ;; This function is called by:
  4795 ;;		_dir_register
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text14
  4800  004552                     __ptext14:
  4801                           	opt callstack 0
  4802  004552                     _dir_alloc:
  4803                           	opt callstack 16
  4804                           
  4805                           ;ff.c: 1200:  DIRC* dp,;ff.c: 1201:  UINT nent;ff.c: 1203: {;ff.c: 1204:  FRESULT res;;f
      +                          f.c: 1205:  UINT n;;ff.c: 1208:  res = dir_sdi(dp, 0);
  4806                           
  4807                           ;incstack = 0
  4808  004552  C080  F056         	movff	dir_alloc@dp,dir_sdi@dp
  4809  004556  C081  F057         	movff	dir_alloc@dp+1,dir_sdi@dp+1
  4810  00455A  0E00               	movlw	0
  4811  00455C  6E59               	movwf	dir_sdi@idx+1,c
  4812  00455E  0E00               	movlw	0
  4813  004560  6E58               	movwf	dir_sdi@idx,c
  4814  004562  EC76  F01A         	call	_dir_sdi	;wreg free
  4815  004566  0100               	movlb	0	; () banked
  4816  004568  6F89               	movwf	dir_alloc@res& (0+255),b
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;ff.c: 1209:  if (res == FR_OK) {
  4820  00456A  5189               	movf	dir_alloc@res& (0+255),w,b
  4821  00456C  A4D8               	btfss	status,2,c
  4822  00456E  D061               	goto	u6480
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;ff.c: 1210:   n = 0;
  4826  004570  0E00               	movlw	0
  4827  004572  6F88               	movwf	(dir_alloc@n+1)& (0+255),b
  4828  004574  0E00               	movlw	0
  4829  004576  6F87               	movwf	dir_alloc@n& (0+255),b
  4830  004578                     l5227:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;ff.c: 1212:    res = move_window(dp->fs, dp->sect);
  4834  004578  C080  FFD9         	movff	dir_alloc@dp,fsr2l
  4835  00457C  C081  FFDA         	movff	dir_alloc@dp+1,fsr2h
  4836  004580  CFDE F030          	movff	postinc2,move_window@fs
  4837  004584  CFDD F031          	movff	postdec2,move_window@fs+1
  4838  004588  EE20 F00E          	lfsr	2,14
  4839  00458C  5180               	movf	dir_alloc@dp& (0+255),w,b
  4840  00458E  26D9               	addwf	fsr2l,f,c
  4841  004590  5181               	movf	(dir_alloc@dp+1)& (0+255),w,b
  4842  004592  22DA               	addwfc	fsr2h,f,c
  4843  004594  CFDE F032          	movff	postinc2,move_window@sector
  4844  004598  CFDE F033          	movff	postinc2,move_window@sector+1
  4845  00459C  CFDE F034          	movff	postinc2,move_window@sector+2
  4846  0045A0  CFDE F035          	movff	postinc2,move_window@sector+3
  4847  0045A4  EC67  F026         	call	_move_window	;wreg free
  4848  0045A8  0100               	movlb	0	; () banked
  4849  0045AA  6F89               	movwf	dir_alloc@res& (0+255),b
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;ff.c: 1213:    if (res != FR_OK) break;
  4853  0045AC  5189               	movf	dir_alloc@res& (0+255),w,b
  4854  0045AE  A4D8               	btfss	status,2,c
  4855  0045B0  D040               	goto	u6480
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;ff.c: 1214:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  4859  0045B2  EE20 F012          	lfsr	2,18
  4860  0045B6  5180               	movf	dir_alloc@dp& (0+255),w,b
  4861  0045B8  26D9               	addwf	fsr2l,f,c
  4862  0045BA  5181               	movf	(dir_alloc@dp+1)& (0+255),w,b
  4863  0045BC  22DA               	addwfc	fsr2h,f,c
  4864  0045BE  CFDE F084          	movff	postinc2,??_dir_alloc
  4865  0045C2  CFDD F085          	movff	postdec2,??_dir_alloc+1
  4866  0045C6  C084  FFD9         	movff	??_dir_alloc,fsr2l
  4867  0045CA  C085  FFDA         	movff	??_dir_alloc+1,fsr2h
  4868  0045CE  0EE5               	movlw	229
  4869  0045D0  18DE               	xorwf	postinc2,w,c
  4870  0045D2  B4D8               	btfsc	status,2,c
  4871  0045D4  D011               	goto	u6460
  4872                           
  4873                           ; BSR set to: 0
  4874  0045D6  EE20 F012          	lfsr	2,18
  4875  0045DA  5180               	movf	dir_alloc@dp& (0+255),w,b
  4876  0045DC  26D9               	addwf	fsr2l,f,c
  4877  0045DE  5181               	movf	(dir_alloc@dp+1)& (0+255),w,b
  4878  0045E0  22DA               	addwfc	fsr2h,f,c
  4879  0045E2  CFDE F084          	movff	postinc2,??_dir_alloc
  4880  0045E6  CFDD F085          	movff	postdec2,??_dir_alloc+1
  4881  0045EA  C084  FFD9         	movff	??_dir_alloc,fsr2l
  4882  0045EE  C085  FFDA         	movff	??_dir_alloc+1,fsr2h
  4883  0045F2  50DF               	movf	indf2,w,c
  4884  0045F4  A4D8               	btfss	status,2,c
  4885  0045F6  D00A               	goto	l5241
  4886  0045F8                     u6460:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;ff.c: 1215:     if (++n == nent) break;
  4890  0045F8  4B87               	infsnz	dir_alloc@n& (0+255),f,b
  4891  0045FA  2B88               	incf	(dir_alloc@n+1)& (0+255),f,b
  4892  0045FC  5182               	movf	dir_alloc@nent& (0+255),w,b
  4893  0045FE  1987               	xorwf	dir_alloc@n& (0+255),w,b
  4894  004600  E109               	bnz	l5243
  4895  004602  5183               	movf	(dir_alloc@nent+1)& (0+255),w,b
  4896  004604  1988               	xorwf	(dir_alloc@n+1)& (0+255),w,b
  4897  004606  B4D8               	btfsc	status,2,c
  4898  004608  D014               	goto	u6480
  4899  00460A  D004               	goto	l5243
  4900  00460C                     l5241:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;ff.c: 1217:     n = 0;
  4904  00460C  0E00               	movlw	0
  4905  00460E  6F88               	movwf	(dir_alloc@n+1)& (0+255),b
  4906  004610  0E00               	movlw	0
  4907  004612  6F87               	movwf	dir_alloc@n& (0+255),b
  4908  004614                     l5243:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;ff.c: 1219:    res = dir_next(dp, 1);
  4912  004614  C080  F06D         	movff	dir_alloc@dp,dir_next@dp
  4913  004618  C081  F06E         	movff	dir_alloc@dp+1,dir_next@dp+1
  4914  00461C  0E00               	movlw	0
  4915  00461E  6F70               	movwf	(dir_next@stretch+1)& (0+255),b
  4916  004620  0E01               	movlw	1
  4917  004622  6F6F               	movwf	dir_next@stretch& (0+255),b
  4918  004624  EC5A  F013         	call	_dir_next	;wreg free
  4919  004628  0100               	movlb	0	; () banked
  4920  00462A  6F89               	movwf	dir_alloc@res& (0+255),b
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;ff.c: 1220:   } while (res == FR_OK);
  4924  00462C  5189               	movf	dir_alloc@res& (0+255),w,b
  4925  00462E  B4D8               	btfsc	status,2,c
  4926  004630  D7A3               	goto	l5227
  4927  004632                     u6480:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;ff.c: 1222:  if (res == FR_NO_FILE) res = FR_DENIED;
  4931  004632  0E04               	movlw	4
  4932  004634  1989               	xorwf	dir_alloc@res& (0+255),w,b
  4933  004636  A4D8               	btfss	status,2,c
  4934  004638  D002               	goto	l391
  4935                           
  4936                           ; BSR set to: 0
  4937  00463A  0E07               	movlw	7
  4938  00463C  6F89               	movwf	dir_alloc@res& (0+255),b
  4939  00463E                     l391:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;ff.c: 1223:  return res;
  4943  00463E  5189               	movf	dir_alloc@res& (0+255),w,b
  4944                           
  4945                           ; BSR set to: 0
  4946  004640  0012               	return		;funcret
  4947  004642                     __end_of_dir_alloc:
  4948                           	opt callstack 0
  4949                           
  4950 ;; *************** function _dir_sdi *****************
  4951 ;; Defined at:
  4952 ;;		line 1080 in file "ff.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  dp              2   85[COMRAM] PTR struct .
  4955 ;;		 -> f_open@dj(22), 
  4956 ;;  idx             2   87[COMRAM] unsigned short 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  clst            4   13[BANK0 ] unsigned long 
  4959 ;;  sect            4    9[BANK0 ] unsigned long 
  4960 ;;  ic              2    7[BANK0 ] unsigned short 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      enum E93
  4963 ;; Registers used:
  4964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4970 ;;      Params:         4       0       0       0       0       0       0       0       0
  4971 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4972 ;;      Temps:          0       7       0       0       0       0       0       0       0
  4973 ;;      Totals:         4      17       0       0       0       0       0       0       0
  4974 ;;Total ram usage:       21 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    9
  4977 ;; This function calls:
  4978 ;;		_clust2sect
  4979 ;;		_get_fat
  4980 ;; This function is called by:
  4981 ;;		_dir_alloc
  4982 ;;		_dir_find
  4983 ;;		_follow_path
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text15
  4988  0034EC                     __ptext15:
  4989                           	opt callstack 0
  4990  0034EC                     _dir_sdi:
  4991                           	opt callstack 18
  4992                           
  4993                           ;ff.c: 1081:  DIRC* dp,;ff.c: 1082:  UINT idx;ff.c: 1084: {;ff.c: 1085:  DWORD clst, sec
      +                          t;;ff.c: 1086:  UINT ic;;ff.c: 1089:  dp->index = (WORD)idx;
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;incstack = 0
  4997  0034EC  EE20 F004          	lfsr	2,4
  4998  0034F0  5056               	movf	dir_sdi@dp,w,c
  4999  0034F2  26D9               	addwf	fsr2l,f,c
  5000  0034F4  5057               	movf	dir_sdi@dp+1,w,c
  5001  0034F6  22DA               	addwfc	fsr2h,f,c
  5002  0034F8  C058  FFDE         	movff	dir_sdi@idx,postinc2
  5003  0034FC  C059  FFDD         	movff	dir_sdi@idx+1,postdec2
  5004                           
  5005                           ;ff.c: 1090:  clst = dp->sclust;
  5006  003500  EE20 F006          	lfsr	2,6
  5007  003504  5056               	movf	dir_sdi@dp,w,c
  5008  003506  26D9               	addwf	fsr2l,f,c
  5009  003508  5057               	movf	dir_sdi@dp+1,w,c
  5010  00350A  22DA               	addwfc	fsr2h,f,c
  5011  00350C  CFDE F06D          	movff	postinc2,dir_sdi@clst
  5012  003510  CFDE F06E          	movff	postinc2,dir_sdi@clst+1
  5013  003514  CFDE F06F          	movff	postinc2,dir_sdi@clst+2
  5014  003518  CFDE F070          	movff	postinc2,dir_sdi@clst+3
  5015                           
  5016                           ;ff.c: 1091:  if (clst == 1 || clst >= dp->fs->n_fatent)
  5017  00351C  0100               	movlb	0	; () banked
  5018  00351E  056D               	decf	dir_sdi@clst& (0+255),w,b
  5019  003520  116E               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  5020  003522  116F               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  5021  003524  1170               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  5022  003526  B4D8               	btfsc	status,2,c
  5023  003528  D014               	goto	u5870
  5024                           
  5025                           ; BSR set to: 0
  5026  00352A  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5027  00352E  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5028  003532  EE10 F012          	lfsr	1,18
  5029  003536  50DE               	movf	postinc2,w,c
  5030  003538  26E1               	addwf	fsr1l,f,c
  5031  00353A  50DD               	movf	postdec2,w,c
  5032  00353C  22E2               	addwfc	fsr1h,f,c
  5033  00353E  50E6               	movf	postinc1,w,c
  5034  003540  5D6D               	subwf	dir_sdi@clst& (0+255),w,b
  5035  003542  50E6               	movf	postinc1,w,c
  5036  003544  596E               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  5037  003546  50E6               	movf	postinc1,w,c
  5038  003548  596F               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  5039  00354A  50E6               	movf	postinc1,w,c
  5040  00354C  5970               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  5041  00354E  A0D8               	btfss	status,0,c
  5042  003550  D002               	goto	l4907
  5043  003552                     u5870:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;ff.c: 1092:   return FR_INT_ERR;
  5047  003552  0E02               	movlw	2
  5048  003554  0012               	return	
  5049  003556                     l4907:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;ff.c: 1093:  if (!clst && dp->fs->fs_type == 3)
  5053  003556  516D               	movf	dir_sdi@clst& (0+255),w,b
  5054  003558  116E               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  5055  00355A  116F               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  5056  00355C  1170               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  5057  00355E  A4D8               	btfss	status,2,c
  5058  003560  D022               	goto	l4913
  5059                           
  5060                           ; BSR set to: 0
  5061  003562  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5062  003566  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5063  00356A  CFDE F060          	movff	postinc2,??_dir_sdi
  5064  00356E  CFDD F061          	movff	postdec2,??_dir_sdi+1
  5065  003572  C060  FFD9         	movff	??_dir_sdi,fsr2l
  5066  003576  C061  FFDA         	movff	??_dir_sdi+1,fsr2h
  5067  00357A  0E03               	movlw	3
  5068  00357C  18DE               	xorwf	postinc2,w,c
  5069  00357E  A4D8               	btfss	status,2,c
  5070  003580  D012               	goto	l4913
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;ff.c: 1094:   clst = dp->fs->dirbase;
  5074  003582  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5075  003586  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5076  00358A  EE10 F022          	lfsr	1,34
  5077  00358E  50DE               	movf	postinc2,w,c
  5078  003590  26E1               	addwf	fsr1l,f,c
  5079  003592  50DD               	movf	postdec2,w,c
  5080  003594  22E2               	addwfc	fsr1h,f,c
  5081  003596  CFE6 F06D          	movff	postinc1,dir_sdi@clst
  5082  00359A  CFE6 F06E          	movff	postinc1,dir_sdi@clst+1
  5083  00359E  CFE6 F06F          	movff	postinc1,dir_sdi@clst+2
  5084  0035A2  CFE6 F070          	movff	postinc1,dir_sdi@clst+3
  5085  0035A6                     l4913:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;ff.c: 1096:  if (clst == 0) {
  5089  0035A6  516D               	movf	dir_sdi@clst& (0+255),w,b
  5090  0035A8  116E               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  5091  0035AA  116F               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  5092  0035AC  1170               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  5093  0035AE  A4D8               	btfss	status,2,c
  5094  0035B0  D023               	goto	l4923
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;ff.c: 1097:   if (idx >= dp->fs->n_rootdir)
  5098  0035B2  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5099  0035B6  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5100  0035BA  EE10 F008          	lfsr	1,8
  5101  0035BE  50DE               	movf	postinc2,w,c
  5102  0035C0  26E1               	addwf	fsr1l,f,c
  5103  0035C2  50DD               	movf	postdec2,w,c
  5104  0035C4  22E2               	addwfc	fsr1h,f,c
  5105  0035C6  50E6               	movf	postinc1,w,c
  5106  0035C8  5C58               	subwf	dir_sdi@idx,w,c
  5107  0035CA  50E6               	movf	postinc1,w,c
  5108  0035CC  5859               	subwfb	dir_sdi@idx+1,w,c
  5109  0035CE  B0D8               	btfsc	status,0,c
  5110  0035D0  D7C0               	goto	u5870
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;ff.c: 1099:   sect = dp->fs->dirbase;
  5114  0035D2  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5115  0035D6  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5116  0035DA  EE10 F022          	lfsr	1,34
  5117  0035DE  50DE               	movf	postinc2,w,c
  5118  0035E0  26E1               	addwf	fsr1l,f,c
  5119  0035E2  50DD               	movf	postdec2,w,c
  5120  0035E4  22E2               	addwfc	fsr1h,f,c
  5121  0035E6  CFE6 F069          	movff	postinc1,dir_sdi@sect
  5122  0035EA  CFE6 F06A          	movff	postinc1,dir_sdi@sect+1
  5123  0035EE  CFE6 F06B          	movff	postinc1,dir_sdi@sect+2
  5124  0035F2  CFE6 F06C          	movff	postinc1,dir_sdi@sect+3
  5125                           
  5126                           ;ff.c: 1100:  }
  5127  0035F6  D079               	goto	l4945
  5128  0035F8                     l4923:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;ff.c: 1102:   ic = ((UINT)512) / 32 * dp->fs->csize;
  5132  0035F8  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5133  0035FC  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5134  003600  EE10 F002          	lfsr	1,2
  5135  003604  50DE               	movf	postinc2,w,c
  5136  003606  26E1               	addwf	fsr1l,f,c
  5137  003608  50DD               	movf	postdec2,w,c
  5138  00360A  22E2               	addwfc	fsr1h,f,c
  5139  00360C  50E7               	movf	indf1,w,c
  5140  00360E  6F60               	movwf	??_dir_sdi& (0+255),b
  5141  003610  5160               	movf	??_dir_sdi& (0+255),w,b
  5142  003612  0D10               	mullw	16
  5143  003614  CFF3 F067          	movff	prodl,dir_sdi@ic
  5144  003618  CFF4 F068          	movff	prodh,dir_sdi@ic+1
  5145                           
  5146                           ;ff.c: 1103:   while (idx >= ic) {
  5147  00361C  D046               	goto	l349
  5148  00361E                     l4925:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;ff.c: 1104:    clst = get_fat(dp->fs, clst);
  5152  00361E  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5153  003622  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5154  003626  CFDE F03B          	movff	postinc2,get_fat@fs
  5155  00362A  CFDD F03C          	movff	postdec2,get_fat@fs+1
  5156  00362E  C06D  F03D         	movff	dir_sdi@clst,get_fat@clst
  5157  003632  C06E  F03E         	movff	dir_sdi@clst+1,get_fat@clst+1
  5158  003636  C06F  F03F         	movff	dir_sdi@clst+2,get_fat@clst+2
  5159  00363A  C070  F040         	movff	dir_sdi@clst+3,get_fat@clst+3
  5160  00363E  EC5D  F015         	call	_get_fat	;wreg free
  5161  003642  C03B  F06D         	movff	?_get_fat,dir_sdi@clst
  5162  003646  C03C  F06E         	movff	?_get_fat+1,dir_sdi@clst+1
  5163  00364A  C03D  F06F         	movff	?_get_fat+2,dir_sdi@clst+2
  5164  00364E  C03E  F070         	movff	?_get_fat+3,dir_sdi@clst+3
  5165                           
  5166                           ;ff.c: 1105:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  5167  003652  0100               	movlb	0	; () banked
  5168  003654  296D               	incf	dir_sdi@clst& (0+255),w,b
  5169  003656  E109               	bnz	l4933
  5170  003658  296E               	incf	(dir_sdi@clst+1)& (0+255),w,b
  5171  00365A  E107               	bnz	l4933
  5172  00365C  296F               	incf	(dir_sdi@clst+2)& (0+255),w,b
  5173  00365E  E105               	bnz	l4933
  5174  003660  2970               	incf	(dir_sdi@clst+3)& (0+255),w,b
  5175  003662  A4D8               	btfss	status,2,c
  5176  003664  D002               	goto	l4933
  5177                           
  5178                           ; BSR set to: 0
  5179  003666  0E01               	movlw	1
  5180  003668  0012               	return	
  5181  00366A                     l4933:
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;ff.c: 1106:    if (clst < 2 || clst >= dp->fs->n_fatent)
  5185  00366A  5170               	movf	(dir_sdi@clst+3)& (0+255),w,b
  5186  00366C  116F               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  5187  00366E  116E               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  5188  003670  E104               	bnz	u5930
  5189  003672  0E02               	movlw	2
  5190  003674  5D6D               	subwf	dir_sdi@clst& (0+255),w,b
  5191  003676  A0D8               	btfss	status,0,c
  5192  003678  D76C               	goto	u5870
  5193  00367A                     u5930:
  5194                           
  5195                           ; BSR set to: 0
  5196  00367A  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5197  00367E  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5198  003682  EE10 F012          	lfsr	1,18
  5199  003686  50DE               	movf	postinc2,w,c
  5200  003688  26E1               	addwf	fsr1l,f,c
  5201  00368A  50DD               	movf	postdec2,w,c
  5202  00368C  22E2               	addwfc	fsr1h,f,c
  5203  00368E  50E6               	movf	postinc1,w,c
  5204  003690  5D6D               	subwf	dir_sdi@clst& (0+255),w,b
  5205  003692  50E6               	movf	postinc1,w,c
  5206  003694  596E               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  5207  003696  50E6               	movf	postinc1,w,c
  5208  003698  596F               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  5209  00369A  50E6               	movf	postinc1,w,c
  5210  00369C  5970               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  5211  00369E  B0D8               	btfsc	status,0,c
  5212  0036A0  D758               	goto	u5870
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;ff.c: 1108:    idx -= ic;
  5216  0036A2  5167               	movf	dir_sdi@ic& (0+255),w,b
  5217  0036A4  5E58               	subwf	dir_sdi@idx,f,c
  5218  0036A6  5168               	movf	(dir_sdi@ic+1)& (0+255),w,b
  5219  0036A8  5A59               	subwfb	dir_sdi@idx+1,f,c
  5220  0036AA                     l349:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;ff.c: 1103:   while (idx >= ic) {
  5224  0036AA  5167               	movf	dir_sdi@ic& (0+255),w,b
  5225  0036AC  5C58               	subwf	dir_sdi@idx,w,c
  5226  0036AE  5168               	movf	(dir_sdi@ic+1)& (0+255),w,b
  5227  0036B0  5859               	subwfb	dir_sdi@idx+1,w,c
  5228  0036B2  B0D8               	btfsc	status,0,c
  5229  0036B4  D7B4               	goto	l4925
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;ff.c: 1110:   sect = clust2sect(dp->fs, clst);
  5233  0036B6  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5234  0036BA  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5235  0036BE  CFDE F00D          	movff	postinc2,clust2sect@fs
  5236  0036C2  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  5237  0036C6  C06D  F00F         	movff	dir_sdi@clst,clust2sect@clst
  5238  0036CA  C06E  F010         	movff	dir_sdi@clst+1,clust2sect@clst+1
  5239  0036CE  C06F  F011         	movff	dir_sdi@clst+2,clust2sect@clst+2
  5240  0036D2  C070  F012         	movff	dir_sdi@clst+3,clust2sect@clst+3
  5241  0036D6  ECB2  F025         	call	_clust2sect	;wreg free
  5242  0036DA  C00D  F069         	movff	?_clust2sect,dir_sdi@sect
  5243  0036DE  C00E  F06A         	movff	?_clust2sect+1,dir_sdi@sect+1
  5244  0036E2  C00F  F06B         	movff	?_clust2sect+2,dir_sdi@sect+2
  5245  0036E6  C010  F06C         	movff	?_clust2sect+3,dir_sdi@sect+3
  5246  0036EA                     l4945:
  5247                           
  5248                           ;ff.c: 1112:  dp->clust = clst;
  5249  0036EA  EE20 F00A          	lfsr	2,10
  5250  0036EE  5056               	movf	dir_sdi@dp,w,c
  5251  0036F0  26D9               	addwf	fsr2l,f,c
  5252  0036F2  5057               	movf	dir_sdi@dp+1,w,c
  5253  0036F4  22DA               	addwfc	fsr2h,f,c
  5254  0036F6  C06D  FFDE         	movff	dir_sdi@clst,postinc2
  5255  0036FA  C06E  FFDE         	movff	dir_sdi@clst+1,postinc2
  5256  0036FE  C06F  FFDE         	movff	dir_sdi@clst+2,postinc2
  5257  003702  C070  FFDE         	movff	dir_sdi@clst+3,postinc2
  5258                           
  5259                           ;ff.c: 1113:  if (!sect) return FR_INT_ERR;
  5260  003706  0100               	movlb	0	; () banked
  5261  003708  5169               	movf	dir_sdi@sect& (0+255),w,b
  5262  00370A  116A               	iorwf	(dir_sdi@sect+1)& (0+255),w,b
  5263  00370C  116B               	iorwf	(dir_sdi@sect+2)& (0+255),w,b
  5264  00370E  116C               	iorwf	(dir_sdi@sect+3)& (0+255),w,b
  5265  003710  B4D8               	btfsc	status,2,c
  5266  003712  D71F               	goto	u5870
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;ff.c: 1114:  dp->sect = sect + idx / (((UINT)512) / 32);
  5270  003714  C058  F060         	movff	dir_sdi@idx,??_dir_sdi
  5271  003718  C059  F061         	movff	dir_sdi@idx+1,??_dir_sdi+1
  5272  00371C  0E04               	movlw	4
  5273  00371E  6F62               	movwf	(??_dir_sdi+2)& (0+255),b
  5274  003720                     u5975:
  5275  003720  90D8               	bcf	status,0,c
  5276  003722  3361               	rrcf	(??_dir_sdi+1)& (0+255),f,b
  5277  003724  3360               	rrcf	??_dir_sdi& (0+255),f,b
  5278  003726  2F62               	decfsz	(??_dir_sdi+2)& (0+255),f,b
  5279  003728  D7FB               	goto	u5975
  5280  00372A  5160               	movf	??_dir_sdi& (0+255),w,b
  5281  00372C  2569               	addwf	dir_sdi@sect& (0+255),w,b
  5282  00372E  6F63               	movwf	(??_dir_sdi+3)& (0+255),b
  5283  003730  5161               	movf	(??_dir_sdi+1)& (0+255),w,b
  5284  003732  216A               	addwfc	(dir_sdi@sect+1)& (0+255),w,b
  5285  003734  6F64               	movwf	(??_dir_sdi+4)& (0+255),b
  5286  003736  0E00               	movlw	0
  5287  003738  216B               	addwfc	(dir_sdi@sect+2)& (0+255),w,b
  5288  00373A  6F65               	movwf	(??_dir_sdi+5)& (0+255),b
  5289  00373C  0E00               	movlw	0
  5290  00373E  216C               	addwfc	(dir_sdi@sect+3)& (0+255),w,b
  5291  003740  6F66               	movwf	(??_dir_sdi+6)& (0+255),b
  5292  003742  EE20 F00E          	lfsr	2,14
  5293  003746  5056               	movf	dir_sdi@dp,w,c
  5294  003748  26D9               	addwf	fsr2l,f,c
  5295  00374A  5057               	movf	dir_sdi@dp+1,w,c
  5296  00374C  22DA               	addwfc	fsr2h,f,c
  5297  00374E  C063  FFDE         	movff	??_dir_sdi+3,postinc2
  5298  003752  C064  FFDE         	movff	??_dir_sdi+4,postinc2
  5299  003756  C065  FFDE         	movff	??_dir_sdi+5,postinc2
  5300  00375A  C066  FFDE         	movff	??_dir_sdi+6,postinc2
  5301                           
  5302                           ;ff.c: 1115:  dp->dir = dp->fs->win + (idx % (((UINT)512) / 32)) * 32;
  5303  00375E  0E0F               	movlw	15
  5304  003760  1458               	andwf	dir_sdi@idx,w,c
  5305  003762  6F60               	movwf	??_dir_sdi& (0+255),b
  5306  003764  0E00               	movlw	0
  5307  003766  1459               	andwf	dir_sdi@idx+1,w,c
  5308  003768  6F61               	movwf	(??_dir_sdi+1)& (0+255),b
  5309  00376A  0E05               	movlw	5
  5310  00376C                     u5985:
  5311  00376C  90D8               	bcf	status,0,c
  5312  00376E  3760               	rlcf	??_dir_sdi& (0+255),f,b
  5313  003770  3761               	rlcf	(??_dir_sdi+1)& (0+255),f,b
  5314  003772  2EE8               	decfsz	wreg,f,c
  5315  003774  D7FB               	goto	u5985
  5316  003776  C056  FFD9         	movff	dir_sdi@dp,fsr2l
  5317  00377A  C057  FFDA         	movff	dir_sdi@dp+1,fsr2h
  5318  00377E  CFDE F062          	movff	postinc2,??_dir_sdi+2
  5319  003782  CFDD F063          	movff	postdec2,??_dir_sdi+3
  5320  003786  5160               	movf	??_dir_sdi& (0+255),w,b
  5321  003788  2762               	addwf	(??_dir_sdi+2)& (0+255),f,b
  5322  00378A  5161               	movf	(??_dir_sdi+1)& (0+255),w,b
  5323  00378C  2363               	addwfc	(??_dir_sdi+3)& (0+255),f,b
  5324  00378E  0E2E               	movlw	46
  5325  003790  2762               	addwf	(??_dir_sdi+2)& (0+255),f,b
  5326  003792  0E00               	movlw	0
  5327  003794  2363               	addwfc	(??_dir_sdi+3)& (0+255),f,b
  5328  003796  EE20 F012          	lfsr	2,18
  5329  00379A  5056               	movf	dir_sdi@dp,w,c
  5330  00379C  26D9               	addwf	fsr2l,f,c
  5331  00379E  5057               	movf	dir_sdi@dp+1,w,c
  5332  0037A0  22DA               	addwfc	fsr2h,f,c
  5333  0037A2  C062  FFDE         	movff	??_dir_sdi+2,postinc2
  5334  0037A6  C063  FFDD         	movff	??_dir_sdi+3,postdec2
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;ff.c: 1117:  return FR_OK;
  5338  0037AA  0E00               	movlw	0
  5339                           
  5340                           ; BSR set to: 0
  5341  0037AC  0012               	return		;funcret
  5342  0037AE                     __end_of_dir_sdi:
  5343                           	opt callstack 0
  5344                           
  5345 ;; *************** function _dir_next *****************
  5346 ;; Defined at:
  5347 ;;		line 1128 in file "ff.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  dp              2   13[BANK0 ] PTR struct .
  5350 ;;		 -> f_open@dj(22), 
  5351 ;;  stretch         2   15[BANK0 ] int 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  clst            4   28[BANK0 ] unsigned long 
  5354 ;;  i               2   26[BANK0 ] unsigned short 
  5355 ;;  c               2   24[BANK0 ] unsigned short 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      enum E93
  5358 ;; Registers used:
  5359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5365 ;;      Params:         0       4       0       0       0       0       0       0       0
  5366 ;;      Locals:         0       8       0       0       0       0       0       0       0
  5367 ;;      Temps:          0       7       0       0       0       0       0       0       0
  5368 ;;      Totals:         0      19       0       0       0       0       0       0       0
  5369 ;;Total ram usage:       19 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:   10
  5372 ;; This function calls:
  5373 ;;		_clust2sect
  5374 ;;		_create_chain
  5375 ;;		_get_fat
  5376 ;;		_mem_set
  5377 ;;		_sync_window
  5378 ;; This function is called by:
  5379 ;;		_dir_alloc
  5380 ;;		_dir_find
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text16
  5385  0026B4                     __ptext16:
  5386                           	opt callstack 0
  5387  0026B4                     _dir_next:
  5388                           	opt callstack 16
  5389                           
  5390                           ;ff.c: 1129:  DIRC* dp,;ff.c: 1130:  int stretch;ff.c: 1132: {;ff.c: 1133:  DWORD clst;;
      +                          ff.c: 1134:  UINT i;;ff.c: 1136:  UINT c;;ff.c: 1140:  i = dp->index + 1;
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;incstack = 0
  5394  0026B4  0100               	movlb	0	; () banked
  5395  0026B6  EE20 F004          	lfsr	2,4
  5396  0026BA  516D               	movf	dir_next@dp& (0+255),w,b
  5397  0026BC  26D9               	addwf	fsr2l,f,c
  5398  0026BE  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5399  0026C0  22DA               	addwfc	fsr2h,f,c
  5400  0026C2  CFDE F071          	movff	postinc2,??_dir_next
  5401  0026C6  CFDD F072          	movff	postdec2,??_dir_next+1
  5402  0026CA  0E01               	movlw	1
  5403  0026CC  2571               	addwf	??_dir_next& (0+255),w,b
  5404  0026CE  6F7A               	movwf	dir_next@i& (0+255),b
  5405  0026D0  0E00               	movlw	0
  5406  0026D2  2172               	addwfc	(??_dir_next+1)& (0+255),w,b
  5407  0026D4  6F7B               	movwf	(dir_next@i+1)& (0+255),b
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;ff.c: 1141:  if (!(i & 0xFFFF) || !dp->sect)
  5411  0026D6  517A               	movf	dir_next@i& (0+255),w,b
  5412  0026D8  117B               	iorwf	(dir_next@i+1)& (0+255),w,b
  5413  0026DA  B4D8               	btfsc	status,2,c
  5414  0026DC  D00C               	goto	u6000
  5415                           
  5416                           ; BSR set to: 0
  5417  0026DE  EE20 F00E          	lfsr	2,14
  5418  0026E2  516D               	movf	dir_next@dp& (0+255),w,b
  5419  0026E4  26D9               	addwf	fsr2l,f,c
  5420  0026E6  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5421  0026E8  22DA               	addwfc	fsr2h,f,c
  5422  0026EA  50DE               	movf	postinc2,w,c
  5423  0026EC  10DE               	iorwf	postinc2,w,c
  5424  0026EE  10DE               	iorwf	postinc2,w,c
  5425  0026F0  10DE               	iorwf	postinc2,w,c
  5426  0026F2  A4D8               	btfss	status,2,c
  5427  0026F4  D002               	goto	l4969
  5428  0026F6                     u6000:
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;ff.c: 1142:   return FR_NO_FILE;
  5432  0026F6  0E04               	movlw	4
  5433  0026F8  0012               	return	
  5434  0026FA                     l4969:
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;ff.c: 1144:  if (!(i % (((UINT)512) / 32))) {
  5438  0026FA  0E0F               	movlw	15
  5439  0026FC  157A               	andwf	dir_next@i& (0+255),w,b
  5440  0026FE  6F71               	movwf	??_dir_next& (0+255),b
  5441  002700  0E00               	movlw	0
  5442  002702  157B               	andwf	(dir_next@i+1)& (0+255),w,b
  5443  002704  6F72               	movwf	(??_dir_next+1)& (0+255),b
  5444  002706  5171               	movf	??_dir_next& (0+255),w,b
  5445  002708  1172               	iorwf	(??_dir_next+1)& (0+255),w,b
  5446  00270A  A4D8               	btfss	status,2,c
  5447  00270C  D1A4               	goto	l5055
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;ff.c: 1145:   dp->sect++;
  5451  00270E  EE20 F00E          	lfsr	2,14
  5452  002712  516D               	movf	dir_next@dp& (0+255),w,b
  5453  002714  26D9               	addwf	fsr2l,f,c
  5454  002716  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5455  002718  22DA               	addwfc	fsr2h,f,c
  5456  00271A  2ADE               	incf	postinc2,f,c
  5457  00271C  0E00               	movlw	0
  5458  00271E  22DE               	addwfc	postinc2,f,c
  5459  002720  22DE               	addwfc	postinc2,f,c
  5460  002722  22DE               	addwfc	postinc2,f,c
  5461                           
  5462                           ;ff.c: 1147:   if (!dp->clust) {
  5463  002724  EE20 F00A          	lfsr	2,10
  5464  002728  516D               	movf	dir_next@dp& (0+255),w,b
  5465  00272A  26D9               	addwf	fsr2l,f,c
  5466  00272C  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5467  00272E  22DA               	addwfc	fsr2h,f,c
  5468  002730  50DE               	movf	postinc2,w,c
  5469  002732  10DE               	iorwf	postinc2,w,c
  5470  002734  10DE               	iorwf	postinc2,w,c
  5471  002736  10DE               	iorwf	postinc2,w,c
  5472  002738  A4D8               	btfss	status,2,c
  5473  00273A  D011               	goto	l4979
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;ff.c: 1148:    if (i >= dp->fs->n_rootdir)
  5477  00273C  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5478  002740  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5479  002744  EE10 F008          	lfsr	1,8
  5480  002748  50DE               	movf	postinc2,w,c
  5481  00274A  26E1               	addwf	fsr1l,f,c
  5482  00274C  50DD               	movf	postdec2,w,c
  5483  00274E  22E2               	addwfc	fsr1h,f,c
  5484  002750  50E6               	movf	postinc1,w,c
  5485  002752  5D7A               	subwf	dir_next@i& (0+255),w,b
  5486  002754  50E6               	movf	postinc1,w,c
  5487  002756  597B               	subwfb	(dir_next@i+1)& (0+255),w,b
  5488  002758  B0D8               	btfsc	status,0,c
  5489  00275A  D7CD               	goto	u6000
  5490  00275C  D17C               	goto	l5055
  5491  00275E                     l4979:
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;ff.c: 1152:    if (((i / (((UINT)512) / 32)) & (dp->fs->csize - 1)) == 0) {
  5495  00275E  C07A  F071         	movff	dir_next@i,??_dir_next
  5496  002762  C07B  F072         	movff	dir_next@i+1,??_dir_next+1
  5497  002766  0E04               	movlw	4
  5498  002768  6F73               	movwf	(??_dir_next+2)& (0+255),b
  5499  00276A                     u6045:
  5500  00276A  90D8               	bcf	status,0,c
  5501  00276C  3372               	rrcf	(??_dir_next+1)& (0+255),f,b
  5502  00276E  3371               	rrcf	??_dir_next& (0+255),f,b
  5503  002770  2F73               	decfsz	(??_dir_next+2)& (0+255),f,b
  5504  002772  D7FB               	goto	u6045
  5505  002774  0EFF               	movlw	255
  5506  002776  6F74               	movwf	(??_dir_next+3)& (0+255),b
  5507  002778  0EFF               	movlw	255
  5508  00277A  6F75               	movwf	(??_dir_next+4)& (0+255),b
  5509  00277C  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5510  002780  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5511  002784  EE10 F002          	lfsr	1,2
  5512  002788  50DE               	movf	postinc2,w,c
  5513  00278A  26E1               	addwf	fsr1l,f,c
  5514  00278C  50DD               	movf	postdec2,w,c
  5515  00278E  22E2               	addwfc	fsr1h,f,c
  5516  002790  50E7               	movf	indf1,w,c
  5517  002792  6F76               	movwf	(??_dir_next+5)& (0+255),b
  5518  002794  6B77               	clrf	(??_dir_next+6)& (0+255),b
  5519  002796  5174               	movf	(??_dir_next+3)& (0+255),w,b
  5520  002798  2776               	addwf	(??_dir_next+5)& (0+255),f,b
  5521  00279A  5175               	movf	(??_dir_next+4)& (0+255),w,b
  5522  00279C  2377               	addwfc	(??_dir_next+6)& (0+255),f,b
  5523  00279E  5171               	movf	??_dir_next& (0+255),w,b
  5524  0027A0  1776               	andwf	(??_dir_next+5)& (0+255),f,b
  5525  0027A2  5172               	movf	(??_dir_next+1)& (0+255),w,b
  5526  0027A4  1777               	andwf	(??_dir_next+6)& (0+255),f,b
  5527  0027A6  5176               	movf	(??_dir_next+5)& (0+255),w,b
  5528  0027A8  1177               	iorwf	(??_dir_next+6)& (0+255),w,b
  5529  0027AA  A4D8               	btfss	status,2,c
  5530  0027AC  D154               	goto	l5055
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;ff.c: 1153:     clst = get_fat(dp->fs, dp->clust);
  5534  0027AE  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5535  0027B2  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5536  0027B6  CFDE F03B          	movff	postinc2,get_fat@fs
  5537  0027BA  CFDD F03C          	movff	postdec2,get_fat@fs+1
  5538  0027BE  EE20 F00A          	lfsr	2,10
  5539  0027C2  516D               	movf	dir_next@dp& (0+255),w,b
  5540  0027C4  26D9               	addwf	fsr2l,f,c
  5541  0027C6  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5542  0027C8  22DA               	addwfc	fsr2h,f,c
  5543  0027CA  CFDE F03D          	movff	postinc2,get_fat@clst
  5544  0027CE  CFDE F03E          	movff	postinc2,get_fat@clst+1
  5545  0027D2  CFDE F03F          	movff	postinc2,get_fat@clst+2
  5546  0027D6  CFDE F040          	movff	postinc2,get_fat@clst+3
  5547  0027DA  EC5D  F015         	call	_get_fat	;wreg free
  5548  0027DE  C03B  F07C         	movff	?_get_fat,dir_next@clst
  5549  0027E2  C03C  F07D         	movff	?_get_fat+1,dir_next@clst+1
  5550  0027E6  C03D  F07E         	movff	?_get_fat+2,dir_next@clst+2
  5551  0027EA  C03E  F07F         	movff	?_get_fat+3,dir_next@clst+3
  5552                           
  5553                           ;ff.c: 1154:     if (clst <= 1) return FR_INT_ERR;
  5554  0027EE  0100               	movlb	0	; () banked
  5555  0027F0  517F               	movf	(dir_next@clst+3)& (0+255),w,b
  5556  0027F2  117E               	iorwf	(dir_next@clst+2)& (0+255),w,b
  5557  0027F4  117D               	iorwf	(dir_next@clst+1)& (0+255),w,b
  5558  0027F6  E106               	bnz	l4989
  5559  0027F8  0E02               	movlw	2
  5560  0027FA  5D7C               	subwf	dir_next@clst& (0+255),w,b
  5561  0027FC  B0D8               	btfsc	status,0,c
  5562  0027FE  D002               	goto	l4989
  5563  002800                     u6060:
  5564                           
  5565                           ; BSR set to: 0
  5566  002800  0E02               	movlw	2
  5567  002802  0012               	return	
  5568  002804                     l4989:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;ff.c: 1155:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  5572  002804  297C               	incf	dir_next@clst& (0+255),w,b
  5573  002806  E109               	bnz	l4995
  5574  002808  297D               	incf	(dir_next@clst+1)& (0+255),w,b
  5575  00280A  E107               	bnz	l4995
  5576  00280C  297E               	incf	(dir_next@clst+2)& (0+255),w,b
  5577  00280E  E105               	bnz	l4995
  5578  002810  297F               	incf	(dir_next@clst+3)& (0+255),w,b
  5579  002812  A4D8               	btfss	status,2,c
  5580  002814  D002               	goto	l4995
  5581  002816                     u6070:
  5582  002816  0E01               	movlw	1
  5583  002818  0012               	return	
  5584  00281A                     l4995:
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;ff.c: 1156:     if (clst >= dp->fs->n_fatent) {
  5588  00281A  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5589  00281E  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5590  002822  EE10 F012          	lfsr	1,18
  5591  002826  50DE               	movf	postinc2,w,c
  5592  002828  26E1               	addwf	fsr1l,f,c
  5593  00282A  50DD               	movf	postdec2,w,c
  5594  00282C  22E2               	addwfc	fsr1h,f,c
  5595  00282E  50E6               	movf	postinc1,w,c
  5596  002830  5D7C               	subwf	dir_next@clst& (0+255),w,b
  5597  002832  50E6               	movf	postinc1,w,c
  5598  002834  597D               	subwfb	(dir_next@clst+1)& (0+255),w,b
  5599  002836  50E6               	movf	postinc1,w,c
  5600  002838  597E               	subwfb	(dir_next@clst+2)& (0+255),w,b
  5601  00283A  50E6               	movf	postinc1,w,c
  5602  00283C  597F               	subwfb	(dir_next@clst+3)& (0+255),w,b
  5603  00283E  A0D8               	btfss	status,0,c
  5604  002840  D0DB               	goto	l5051
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;ff.c: 1158:      if (!stretch) return FR_NO_FILE;
  5608  002842  516F               	movf	dir_next@stretch& (0+255),w,b
  5609  002844  1170               	iorwf	(dir_next@stretch+1)& (0+255),w,b
  5610  002846  B4D8               	btfsc	status,2,c
  5611  002848  D756               	goto	u6000
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;ff.c: 1159:      clst = create_chain(dp->fs, dp->clust);
  5615  00284A  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5616  00284E  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5617  002852  CFDE F056          	movff	postinc2,create_chain@fs
  5618  002856  CFDD F057          	movff	postdec2,create_chain@fs+1
  5619  00285A  EE20 F00A          	lfsr	2,10
  5620  00285E  516D               	movf	dir_next@dp& (0+255),w,b
  5621  002860  26D9               	addwf	fsr2l,f,c
  5622  002862  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5623  002864  22DA               	addwfc	fsr2h,f,c
  5624  002866  CFDE F058          	movff	postinc2,create_chain@clst
  5625  00286A  CFDE F059          	movff	postinc2,create_chain@clst+1
  5626  00286E  CFDE F05A          	movff	postinc2,create_chain@clst+2
  5627  002872  CFDE F05B          	movff	postinc2,create_chain@clst+3
  5628  002876  ECF9  F018         	call	_create_chain	;wreg free
  5629  00287A  C056  F07C         	movff	?_create_chain,dir_next@clst
  5630  00287E  C057  F07D         	movff	?_create_chain+1,dir_next@clst+1
  5631  002882  C058  F07E         	movff	?_create_chain+2,dir_next@clst+2
  5632  002886  C059  F07F         	movff	?_create_chain+3,dir_next@clst+3
  5633                           
  5634                           ;ff.c: 1160:      if (clst == 0) return FR_DENIED;
  5635  00288A  0100               	movlb	0	; () banked
  5636  00288C  517C               	movf	dir_next@clst& (0+255),w,b
  5637  00288E  117D               	iorwf	(dir_next@clst+1)& (0+255),w,b
  5638  002890  117E               	iorwf	(dir_next@clst+2)& (0+255),w,b
  5639  002892  117F               	iorwf	(dir_next@clst+3)& (0+255),w,b
  5640  002894  A4D8               	btfss	status,2,c
  5641  002896  D002               	goto	l5011
  5642                           
  5643                           ; BSR set to: 0
  5644  002898  0E07               	movlw	7
  5645  00289A  0012               	return	
  5646  00289C                     l5011:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;ff.c: 1161:      if (clst == 1) return FR_INT_ERR;
  5650  00289C  057C               	decf	dir_next@clst& (0+255),w,b
  5651  00289E  117D               	iorwf	(dir_next@clst+1)& (0+255),w,b
  5652  0028A0  117E               	iorwf	(dir_next@clst+2)& (0+255),w,b
  5653  0028A2  117F               	iorwf	(dir_next@clst+3)& (0+255),w,b
  5654  0028A4  B4D8               	btfsc	status,2,c
  5655  0028A6  D7AC               	goto	u6060
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;ff.c: 1162:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  5659  0028A8  297C               	incf	dir_next@clst& (0+255),w,b
  5660  0028AA  E107               	bnz	l5023
  5661  0028AC  297D               	incf	(dir_next@clst+1)& (0+255),w,b
  5662  0028AE  E105               	bnz	l5023
  5663  0028B0  297E               	incf	(dir_next@clst+2)& (0+255),w,b
  5664  0028B2  E103               	bnz	l5023
  5665  0028B4  297F               	incf	(dir_next@clst+3)& (0+255),w,b
  5666  0028B6  B4D8               	btfsc	status,2,c
  5667  0028B8  D7AE               	goto	u6070
  5668  0028BA                     l5023:
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;ff.c: 1164:      if (sync_window(dp->fs)) return FR_DISK_ERR;
  5672  0028BA  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5673  0028BE  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5674  0028C2  CFDE F01B          	movff	postinc2,sync_window@fs
  5675  0028C6  CFDD F01C          	movff	postdec2,sync_window@fs+1
  5676  0028CA  ECEE  F01E         	call	_sync_window	;wreg free
  5677  0028CE  0900               	iorlw	0
  5678  0028D0  A4D8               	btfss	status,2,c
  5679  0028D2  D7A1               	goto	u6070
  5680                           
  5681                           ;ff.c: 1165:      mem_set(dp->fs->win, 0, ((UINT)512));
  5682  0028D4  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5683  0028D8  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5684  0028DC  CFDE F071          	movff	postinc2,??_dir_next
  5685  0028E0  CFDD F072          	movff	postdec2,??_dir_next+1
  5686  0028E4  0E2E               	movlw	46
  5687  0028E6  0100               	movlb	0	; () banked
  5688  0028E8  2571               	addwf	??_dir_next& (0+255),w,b
  5689  0028EA  6E01               	movwf	mem_set@dst,c
  5690  0028EC  0E00               	movlw	0
  5691  0028EE  2172               	addwfc	(??_dir_next+1)& (0+255),w,b
  5692  0028F0  6E02               	movwf	mem_set@dst+1,c
  5693  0028F2  0E00               	movlw	0
  5694  0028F4  6E04               	movwf	mem_set@val+1,c
  5695  0028F6  0E00               	movlw	0
  5696  0028F8  6E03               	movwf	mem_set@val,c
  5697  0028FA  0E02               	movlw	2
  5698  0028FC  6E06               	movwf	mem_set@cnt+1,c
  5699  0028FE  0E00               	movlw	0
  5700  002900  6E05               	movwf	mem_set@cnt,c
  5701  002902  ECED  F029         	call	_mem_set	;wreg free
  5702                           
  5703                           ;ff.c: 1166:      dp->fs->winsect = clust2sect(dp->fs, clst);
  5704  002906  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5705  00290A  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5706  00290E  CFDE F00D          	movff	postinc2,clust2sect@fs
  5707  002912  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  5708  002916  C07C  F00F         	movff	dir_next@clst,clust2sect@clst
  5709  00291A  C07D  F010         	movff	dir_next@clst+1,clust2sect@clst+1
  5710  00291E  C07E  F011         	movff	dir_next@clst+2,clust2sect@clst+2
  5711  002922  C07F  F012         	movff	dir_next@clst+3,clust2sect@clst+3
  5712  002926  ECB2  F025         	call	_clust2sect	;wreg free
  5713  00292A  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5714  00292E  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5715  002932  EE10 F02A          	lfsr	1,42
  5716  002936  50DE               	movf	postinc2,w,c
  5717  002938  26E1               	addwf	fsr1l,f,c
  5718  00293A  50DD               	movf	postdec2,w,c
  5719  00293C  22E2               	addwfc	fsr1h,f,c
  5720  00293E  C00D  FFE6         	movff	?_clust2sect,postinc1
  5721  002942  C00E  FFE6         	movff	?_clust2sect+1,postinc1
  5722  002946  C00F  FFE6         	movff	?_clust2sect+2,postinc1
  5723  00294A  C010  FFE6         	movff	?_clust2sect+3,postinc1
  5724                           
  5725                           ;ff.c: 1167:      for (c = 0; c < dp->fs->csize; c++) {
  5726  00294E  0E00               	movlw	0
  5727  002950  0100               	movlb	0	; () banked
  5728  002952  6F79               	movwf	(dir_next@c+1)& (0+255),b
  5729  002954  0E00               	movlw	0
  5730  002956  6F78               	movwf	dir_next@c& (0+255),b
  5731  002958  D02B               	goto	l5047
  5732  00295A                     l5035:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;ff.c: 1168:       dp->fs->wflag = 1;
  5736  00295A  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5737  00295E  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5738  002962  EE10 F004          	lfsr	1,4
  5739  002966  50DE               	movf	postinc2,w,c
  5740  002968  26E1               	addwf	fsr1l,f,c
  5741  00296A  50DD               	movf	postdec2,w,c
  5742  00296C  22E2               	addwfc	fsr1h,f,c
  5743  00296E  0E01               	movlw	1
  5744  002970  6EE7               	movwf	indf1,c
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;ff.c: 1169:       if (sync_window(dp->fs)) return FR_DISK_ERR;
  5748  002972  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5749  002976  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5750  00297A  CFDE F01B          	movff	postinc2,sync_window@fs
  5751  00297E  CFDD F01C          	movff	postdec2,sync_window@fs+1
  5752  002982  ECEE  F01E         	call	_sync_window	;wreg free
  5753  002986  0900               	iorlw	0
  5754  002988  A4D8               	btfss	status,2,c
  5755  00298A  D745               	goto	u6070
  5756                           
  5757                           ;ff.c: 1170:       dp->fs->winsect++;
  5758  00298C  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5759  002990  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5760  002994  EE10 F02A          	lfsr	1,42
  5761  002998  50DE               	movf	postinc2,w,c
  5762  00299A  26E1               	addwf	fsr1l,f,c
  5763  00299C  50DD               	movf	postdec2,w,c
  5764  00299E  22E2               	addwfc	fsr1h,f,c
  5765  0029A0  2AE6               	incf	postinc1,f,c
  5766  0029A2  0E00               	movlw	0
  5767  0029A4  22E6               	addwfc	postinc1,f,c
  5768  0029A6  22E6               	addwfc	postinc1,f,c
  5769  0029A8  22E6               	addwfc	postinc1,f,c
  5770                           
  5771                           ;ff.c: 1171:      }
  5772  0029AA  0100               	movlb	0	; () banked
  5773  0029AC  4B78               	infsnz	dir_next@c& (0+255),f,b
  5774  0029AE  2B79               	incf	(dir_next@c+1)& (0+255),f,b
  5775  0029B0                     l5047:
  5776                           
  5777                           ; BSR set to: 0
  5778  0029B0  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5779  0029B4  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5780  0029B8  EE10 F002          	lfsr	1,2
  5781  0029BC  50DE               	movf	postinc2,w,c
  5782  0029BE  26E1               	addwf	fsr1l,f,c
  5783  0029C0  50DD               	movf	postdec2,w,c
  5784  0029C2  22E2               	addwfc	fsr1h,f,c
  5785  0029C4  50E7               	movf	indf1,w,c
  5786  0029C6  6F71               	movwf	??_dir_next& (0+255),b
  5787  0029C8  6B72               	clrf	(??_dir_next+1)& (0+255),b
  5788  0029CA  5171               	movf	??_dir_next& (0+255),w,b
  5789  0029CC  5D78               	subwf	dir_next@c& (0+255),w,b
  5790  0029CE  5172               	movf	(??_dir_next+1)& (0+255),w,b
  5791  0029D0  5979               	subwfb	(dir_next@c+1)& (0+255),w,b
  5792  0029D2  A0D8               	btfss	status,0,c
  5793  0029D4  D7C2               	goto	l5035
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;ff.c: 1172:      dp->fs->winsect -= c;
  5797  0029D6  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5798  0029DA  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5799  0029DE  EE10 F02A          	lfsr	1,42
  5800  0029E2  50DE               	movf	postinc2,w,c
  5801  0029E4  26E1               	addwf	fsr1l,f,c
  5802  0029E6  50DD               	movf	postdec2,w,c
  5803  0029E8  22E2               	addwfc	fsr1h,f,c
  5804  0029EA  5178               	movf	dir_next@c& (0+255),w,b
  5805  0029EC  5EE6               	subwf	postinc1,f,c
  5806  0029EE  5179               	movf	(dir_next@c+1)& (0+255),w,b
  5807  0029F0  5AE6               	subwfb	postinc1,f,c
  5808  0029F2  0E00               	movlw	0
  5809  0029F4  5AE6               	subwfb	postinc1,f,c
  5810  0029F6  5AE6               	subwfb	postinc1,f,c
  5811  0029F8                     l5051:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;ff.c: 1178:     dp->clust = clst;
  5815  0029F8  EE20 F00A          	lfsr	2,10
  5816  0029FC  516D               	movf	dir_next@dp& (0+255),w,b
  5817  0029FE  26D9               	addwf	fsr2l,f,c
  5818  002A00  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5819  002A02  22DA               	addwfc	fsr2h,f,c
  5820  002A04  C07C  FFDE         	movff	dir_next@clst,postinc2
  5821  002A08  C07D  FFDE         	movff	dir_next@clst+1,postinc2
  5822  002A0C  C07E  FFDE         	movff	dir_next@clst+2,postinc2
  5823  002A10  C07F  FFDE         	movff	dir_next@clst+3,postinc2
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;ff.c: 1179:     dp->sect = clust2sect(dp->fs, clst);
  5827  002A14  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5828  002A18  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5829  002A1C  CFDE F00D          	movff	postinc2,clust2sect@fs
  5830  002A20  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  5831  002A24  C07C  F00F         	movff	dir_next@clst,clust2sect@clst
  5832  002A28  C07D  F010         	movff	dir_next@clst+1,clust2sect@clst+1
  5833  002A2C  C07E  F011         	movff	dir_next@clst+2,clust2sect@clst+2
  5834  002A30  C07F  F012         	movff	dir_next@clst+3,clust2sect@clst+3
  5835  002A34  ECB2  F025         	call	_clust2sect	;wreg free
  5836  002A38  0100               	movlb	0	; () banked
  5837  002A3A  EE20 F00E          	lfsr	2,14
  5838  002A3E  516D               	movf	dir_next@dp& (0+255),w,b
  5839  002A40  26D9               	addwf	fsr2l,f,c
  5840  002A42  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5841  002A44  22DA               	addwfc	fsr2h,f,c
  5842  002A46  C00D  FFDE         	movff	?_clust2sect,postinc2
  5843  002A4A  C00E  FFDE         	movff	?_clust2sect+1,postinc2
  5844  002A4E  C00F  FFDE         	movff	?_clust2sect+2,postinc2
  5845  002A52  C010  FFDE         	movff	?_clust2sect+3,postinc2
  5846  002A56                     l5055:
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;ff.c: 1184:  dp->index = (WORD)i;
  5850  002A56  EE20 F004          	lfsr	2,4
  5851  002A5A  516D               	movf	dir_next@dp& (0+255),w,b
  5852  002A5C  26D9               	addwf	fsr2l,f,c
  5853  002A5E  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5854  002A60  22DA               	addwfc	fsr2h,f,c
  5855  002A62  C07A  FFDE         	movff	dir_next@i,postinc2
  5856  002A66  C07B  FFDD         	movff	dir_next@i+1,postdec2
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;ff.c: 1185:  dp->dir = dp->fs->win + (i % (((UINT)512) / 32)) * 32;
  5860  002A6A  0E0F               	movlw	15
  5861  002A6C  157A               	andwf	dir_next@i& (0+255),w,b
  5862  002A6E  6F71               	movwf	??_dir_next& (0+255),b
  5863  002A70  0E00               	movlw	0
  5864  002A72  157B               	andwf	(dir_next@i+1)& (0+255),w,b
  5865  002A74  6F72               	movwf	(??_dir_next+1)& (0+255),b
  5866  002A76  0E05               	movlw	5
  5867  002A78                     u6165:
  5868  002A78  90D8               	bcf	status,0,c
  5869  002A7A  3771               	rlcf	??_dir_next& (0+255),f,b
  5870  002A7C  3772               	rlcf	(??_dir_next+1)& (0+255),f,b
  5871  002A7E  2EE8               	decfsz	wreg,f,c
  5872  002A80  D7FB               	goto	u6165
  5873  002A82  C06D  FFD9         	movff	dir_next@dp,fsr2l
  5874  002A86  C06E  FFDA         	movff	dir_next@dp+1,fsr2h
  5875  002A8A  CFDE F073          	movff	postinc2,??_dir_next+2
  5876  002A8E  CFDD F074          	movff	postdec2,??_dir_next+3
  5877  002A92  5171               	movf	??_dir_next& (0+255),w,b
  5878  002A94  2773               	addwf	(??_dir_next+2)& (0+255),f,b
  5879  002A96  5172               	movf	(??_dir_next+1)& (0+255),w,b
  5880  002A98  2374               	addwfc	(??_dir_next+3)& (0+255),f,b
  5881  002A9A  0E2E               	movlw	46
  5882  002A9C  2773               	addwf	(??_dir_next+2)& (0+255),f,b
  5883  002A9E  0E00               	movlw	0
  5884  002AA0  2374               	addwfc	(??_dir_next+3)& (0+255),f,b
  5885  002AA2  EE20 F012          	lfsr	2,18
  5886  002AA6  516D               	movf	dir_next@dp& (0+255),w,b
  5887  002AA8  26D9               	addwf	fsr2l,f,c
  5888  002AAA  516E               	movf	(dir_next@dp+1)& (0+255),w,b
  5889  002AAC  22DA               	addwfc	fsr2h,f,c
  5890  002AAE  C073  FFDE         	movff	??_dir_next+2,postinc2
  5891  002AB2  C074  FFDD         	movff	??_dir_next+3,postdec2
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;ff.c: 1187:  return FR_OK;
  5895  002AB6  0E00               	movlw	0
  5896  002AB8  0012               	return		;funcret
  5897  002ABA                     __end_of_dir_next:
  5898                           	opt callstack 0
  5899                           
  5900 ;; *************** function _f_mount *****************
  5901 ;; Defined at:
  5902 ;;		line 2402 in file "ff.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  fs              2   81[COMRAM] PTR struct .
  5905 ;;		 -> FatFs(558), NULL(0), 
  5906 ;;  path            2   83[COMRAM] PTR const unsigned char 
  5907 ;;		 -> STR_6(11), STR_5(1), STR_4(1), 
  5908 ;;  opt             1   85[COMRAM] unsigned char 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  vol             2   91[COMRAM] int 
  5911 ;;  rp              2   89[COMRAM] PTR const unsigned char 
  5912 ;;		 -> STR_6(11), STR_5(1), STR_4(1), 
  5913 ;;  cfs             2   87[COMRAM] PTR struct .
  5914 ;;		 -> FatFs(558), NULL(0), 
  5915 ;;  res             1   86[COMRAM] enum E93
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      enum E93
  5918 ;; Registers used:
  5919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5925 ;;      Params:         5       0       0       0       0       0       0       0       0
  5926 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5928 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5929 ;;Total ram usage:       12 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:   10
  5932 ;; This function calls:
  5933 ;;		_find_volume
  5934 ;;		_get_ldnumber
  5935 ;; This function is called by:
  5936 ;;		_guardar
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text17
  5941  004C1E                     __ptext17:
  5942                           	opt callstack 0
  5943  004C1E                     _f_mount:
  5944                           	opt callstack 19
  5945                           
  5946                           ;ff.c: 2403:  FATFS* fs,;ff.c: 2404:  const TCHAR* path,;ff.c: 2405:  BYTE opt;ff.c: 240
      +                          7: {;ff.c: 2408:  FATFS *cfs;;ff.c: 2409:  int vol;;ff.c: 2410:  FRESULT res;;ff.c: 2411
      +                          :  const TCHAR *rp = path;
  5947                           
  5948                           ;incstack = 0
  5949  004C1E  C054  F05A         	movff	f_mount@path,f_mount@rp
  5950  004C22  C055  F05B         	movff	f_mount@path+1,f_mount@rp+1
  5951                           
  5952                           ;ff.c: 2414:  vol = get_ldnumber(&rp);
  5953  004C26  0E5A               	movlw	low f_mount@rp
  5954  004C28  6E01               	movwf	get_ldnumber@path,c
  5955  004C2A  0E00               	movlw	high f_mount@rp
  5956  004C2C  6E02               	movwf	get_ldnumber@path+1,c
  5957  004C2E  EC0D  F024         	call	_get_ldnumber	;wreg free
  5958  004C32  C001  F05C         	movff	?_get_ldnumber,f_mount@vol
  5959  004C36  C002  F05D         	movff	?_get_ldnumber+1,f_mount@vol+1
  5960                           
  5961                           ;ff.c: 2415:  if (vol < 0) return FR_INVALID_DRIVE;
  5962  004C3A  AE5D               	btfss	f_mount@vol+1,7,c
  5963  004C3C  D002               	goto	l6075
  5964  004C3E  0E0B               	movlw	11
  5965  004C40  0012               	return	
  5966  004C42                     l6075:
  5967                           
  5968                           ;ff.c: 2416:  cfs = FatFs[vol];
  5969  004C42  90D8               	bcf	status,0,c
  5970  004C44  345C               	rlcf	f_mount@vol,w,c
  5971  004C46  6ED9               	movwf	fsr2l,c
  5972  004C48  345D               	rlcf	f_mount@vol+1,w,c
  5973  004C4A  6EDA               	movwf	fsr2h,c
  5974  004C4C  0EDE               	movlw	low ff@FatFs
  5975  004C4E  26D9               	addwf	fsr2l,f,c
  5976  004C50  0E00               	movlw	high ff@FatFs
  5977  004C52  22DA               	addwfc	fsr2h,f,c
  5978  004C54  CFDE F058          	movff	postinc2,f_mount@cfs
  5979  004C58  CFDD F059          	movff	postdec2,f_mount@cfs+1
  5980                           
  5981                           ;ff.c: 2418:  if (cfs) {
  5982  004C5C  5058               	movf	f_mount@cfs,w,c
  5983  004C5E  1059               	iorwf	f_mount@cfs+1,w,c
  5984  004C60  B4D8               	btfsc	status,2,c
  5985  004C62  D006               	goto	l6081
  5986                           
  5987                           ;ff.c: 2425:   cfs->fs_type = 0;
  5988  004C64  C058  FFD9         	movff	f_mount@cfs,fsr2l
  5989  004C68  C059  FFDA         	movff	f_mount@cfs+1,fsr2h
  5990  004C6C  0E00               	movlw	0
  5991  004C6E  6EDF               	movwf	indf2,c
  5992  004C70                     l6081:
  5993                           
  5994                           ;ff.c: 2428:  if (fs) {
  5995  004C70  5052               	movf	f_mount@fs,w,c
  5996  004C72  1053               	iorwf	f_mount@fs+1,w,c
  5997  004C74  B4D8               	btfsc	status,2,c
  5998  004C76  D006               	goto	l6085
  5999                           
  6000                           ;ff.c: 2429:   fs->fs_type = 0;
  6001  004C78  C052  FFD9         	movff	f_mount@fs,fsr2l
  6002  004C7C  C053  FFDA         	movff	f_mount@fs+1,fsr2h
  6003  004C80  0E00               	movlw	0
  6004  004C82  6EDF               	movwf	indf2,c
  6005  004C84                     l6085:
  6006                           
  6007                           ;ff.c: 2434:  FatFs[vol] = fs;
  6008  004C84  90D8               	bcf	status,0,c
  6009  004C86  345C               	rlcf	f_mount@vol,w,c
  6010  004C88  6ED9               	movwf	fsr2l,c
  6011  004C8A  345D               	rlcf	f_mount@vol+1,w,c
  6012  004C8C  6EDA               	movwf	fsr2h,c
  6013  004C8E  0EDE               	movlw	low ff@FatFs
  6014  004C90  26D9               	addwf	fsr2l,f,c
  6015  004C92  0E00               	movlw	high ff@FatFs
  6016  004C94  22DA               	addwfc	fsr2h,f,c
  6017  004C96  C052  FFDE         	movff	f_mount@fs,postinc2
  6018  004C9A  C053  FFDD         	movff	f_mount@fs+1,postdec2
  6019                           
  6020                           ;ff.c: 2436:  if (!fs || opt != 1) return FR_OK;
  6021  004C9E  5052               	movf	f_mount@fs,w,c
  6022  004CA0  1053               	iorwf	f_mount@fs+1,w,c
  6023  004CA2  B4D8               	btfsc	status,2,c
  6024  004CA4  D003               	goto	u7990
  6025  004CA6  0456               	decf	f_mount@opt,w,c
  6026  004CA8  B4D8               	btfsc	status,2,c
  6027  004CAA  D002               	goto	l6095
  6028  004CAC                     u7990:
  6029  004CAC  0E00               	movlw	0
  6030  004CAE  0012               	return	
  6031  004CB0                     l6095:
  6032                           
  6033                           ;ff.c: 2438:  res = find_volume(&fs, &path, 0);
  6034  004CB0  0E52               	movlw	low f_mount@fs
  6035  004CB2  6E45               	movwf	find_volume@rfs,c
  6036  004CB4  0E00               	movlw	high f_mount@fs
  6037  004CB6  6E46               	movwf	find_volume@rfs+1,c
  6038  004CB8  0E54               	movlw	low f_mount@path
  6039  004CBA  6E47               	movwf	find_volume@path,c
  6040  004CBC  0E00               	movlw	high f_mount@path
  6041  004CBE  6E48               	movwf	find_volume@path+1,c
  6042  004CC0  0E00               	movlw	0
  6043  004CC2  6E49               	movwf	find_volume@wmode,c
  6044  004CC4  EC42  F004         	call	_find_volume	;wreg free
  6045  004CC8  6E57               	movwf	f_mount@res,c
  6046                           
  6047                           ;ff.c: 2439:  return res;
  6048  004CCA  5057               	movf	f_mount@res,w,c
  6049  004CCC  0012               	return		;funcret
  6050  004CCE                     __end_of_f_mount:
  6051                           	opt callstack 0
  6052                           
  6053 ;; *************** function _find_volume *****************
  6054 ;; Defined at:
  6055 ;;		line 2203 in file "ff.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  rfs             2   68[COMRAM] PTR PTR struct .
  6058 ;;		 -> f_open@dj(22), f_mount@fs(2), 
  6059 ;;  path            2   70[COMRAM] PTR PTR const unsigned c
  6060 ;;		 -> f_open@path(2), f_mount@path(2), 
  6061 ;;  wmode           1   72[COMRAM] unsigned char 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  br             16    0[BANK0 ] unsigned long [4]
  6064 ;;  bsect           4   49[BANK0 ] unsigned long 
  6065 ;;  fasize          4   45[BANK0 ] unsigned long 
  6066 ;;  nclst           4   40[BANK0 ] unsigned long 
  6067 ;;  tsect           4   36[BANK0 ] unsigned long 
  6068 ;;  sysect          4   28[BANK0 ] unsigned long 
  6069 ;;  szbfat          4   22[BANK0 ] unsigned long 
  6070 ;;  fs              2   56[BANK0 ] PTR struct .
  6071 ;;		 -> FatFs(558), NULL(0), 
  6072 ;;  i               2   53[BANK0 ] unsigned short 
  6073 ;;  nrsv            2   34[BANK0 ] unsigned short 
  6074 ;;  vol             2   32[BANK0 ] int 
  6075 ;;  pt              2   26[BANK0 ] PTR unsigned char 
  6076 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
  6077 ;;  fmt             1   55[BANK0 ] unsigned char 
  6078 ;;  stat            1   44[BANK0 ] unsigned char 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1    wreg      enum E93
  6081 ;; Registers used:
  6082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6088 ;;      Params:         5       0       0       0       0       0       0       0       0
  6089 ;;      Locals:         0      58       0       0       0       0       0       0       0
  6090 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6091 ;;      Totals:        13      58       0       0       0       0       0       0       0
  6092 ;;Total ram usage:       71 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:    9
  6095 ;; This function calls:
  6096 ;;		___lldiv
  6097 ;;		___lmul
  6098 ;;		_check_fs
  6099 ;;		_disk_initialize
  6100 ;;		_disk_status
  6101 ;;		_get_ldnumber
  6102 ;;		_move_window
  6103 ;; This function is called by:
  6104 ;;		_f_mount
  6105 ;;		_f_open
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           
  6109                           	psect	text18
  6110  000884                     __ptext18:
  6111                           	opt callstack 0
  6112  000884                     _find_volume:
  6113                           	opt callstack 19
  6114                           
  6115                           ;ff.c: 2204:  FATFS** rfs,;ff.c: 2205:  const TCHAR** path,;ff.c: 2206:  BYTE wmode;ff.c
      +                          : 2208: {;ff.c: 2209:  BYTE fmt, *pt;;ff.c: 2210:  int vol;;ff.c: 2211:  DSTATUS stat;;f
      +                          f.c: 2212:  DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];;ff.c: 2213:  WORD 
      +                          nrsv;;ff.c: 2214:  FATFS *fs;;ff.c: 2215:  UINT i;;ff.c: 2219:  *rfs = 0;
  6116                           
  6117                           ;incstack = 0
  6118  000884  C045  FFD9         	movff	find_volume@rfs,fsr2l
  6119  000888  C046  FFDA         	movff	find_volume@rfs+1,fsr2h
  6120  00088C  0E00               	movlw	0
  6121  00088E  6EDE               	movwf	postinc2,c
  6122  000890  0E00               	movlw	0
  6123  000892  6EDD               	movwf	postdec2,c
  6124                           
  6125                           ;ff.c: 2220:  vol = get_ldnumber(path);
  6126  000894  C047  F001         	movff	find_volume@path,get_ldnumber@path
  6127  000898  C048  F002         	movff	find_volume@path+1,get_ldnumber@path+1
  6128  00089C  EC0D  F024         	call	_get_ldnumber	;wreg free
  6129  0008A0  C001  F080         	movff	?_get_ldnumber,find_volume@vol
  6130  0008A4  C002  F081         	movff	?_get_ldnumber+1,find_volume@vol+1
  6131                           
  6132                           ;ff.c: 2221:  if (vol < 0) return FR_INVALID_DRIVE;
  6133  0008A8  0100               	movlb	0	; () banked
  6134  0008AA  AF81               	btfss	(find_volume@vol+1)& (0+255),7,b
  6135  0008AC  D002               	goto	l5669
  6136                           
  6137                           ; BSR set to: 0
  6138  0008AE  0E0B               	movlw	11
  6139  0008B0  0012               	return	
  6140  0008B2                     l5669:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;ff.c: 2224:  fs = FatFs[vol];
  6144  0008B2  90D8               	bcf	status,0,c
  6145  0008B4  3580               	rlcf	find_volume@vol& (0+255),w,b
  6146  0008B6  6ED9               	movwf	fsr2l,c
  6147  0008B8  3581               	rlcf	(find_volume@vol+1)& (0+255),w,b
  6148  0008BA  6EDA               	movwf	fsr2h,c
  6149  0008BC  0EDE               	movlw	low ff@FatFs
  6150  0008BE  26D9               	addwf	fsr2l,f,c
  6151  0008C0  0E00               	movlw	high ff@FatFs
  6152  0008C2  22DA               	addwfc	fsr2h,f,c
  6153  0008C4  CFDE F098          	movff	postinc2,find_volume@fs
  6154  0008C8  CFDD F099          	movff	postdec2,find_volume@fs+1
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;ff.c: 2225:  if (!fs) return FR_NOT_ENABLED;
  6158  0008CC  5198               	movf	find_volume@fs& (0+255),w,b
  6159  0008CE  1199               	iorwf	(find_volume@fs+1)& (0+255),w,b
  6160  0008D0  A4D8               	btfss	status,2,c
  6161  0008D2  D002               	goto	l5677
  6162                           
  6163                           ; BSR set to: 0
  6164  0008D4  0E0C               	movlw	12
  6165  0008D6  0012               	return	
  6166  0008D8                     l5677:
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;ff.c: 2228:  *rfs = fs;
  6170  0008D8  C045  FFD9         	movff	find_volume@rfs,fsr2l
  6171  0008DC  C046  FFDA         	movff	find_volume@rfs+1,fsr2h
  6172  0008E0  C098  FFDE         	movff	find_volume@fs,postinc2
  6173  0008E4  C099  FFDD         	movff	find_volume@fs+1,postdec2
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;ff.c: 2230:  if (fs->fs_type) {
  6177  0008E8  C098  FFD9         	movff	find_volume@fs,fsr2l
  6178  0008EC  C099  FFDA         	movff	find_volume@fs+1,fsr2h
  6179  0008F0  50DF               	movf	indf2,w,c
  6180  0008F2  B4D8               	btfsc	status,2,c
  6181  0008F4  D015               	goto	l5697
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;ff.c: 2231:   stat = disk_status(fs->drv);
  6185  0008F6  EE20 F001          	lfsr	2,1
  6186  0008FA  5198               	movf	find_volume@fs& (0+255),w,b
  6187  0008FC  26D9               	addwf	fsr2l,f,c
  6188  0008FE  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6189  000900  22DA               	addwfc	fsr2h,f,c
  6190  000902  50DF               	movf	indf2,w,c
  6191  000904  EC55  F02A         	call	_disk_status
  6192  000908  0100               	movlb	0	; () banked
  6193  00090A  6F8C               	movwf	find_volume@stat& (0+255),b
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;ff.c: 2233:    if (!0 && wmode && (stat & 0x04))
  6197  00090C  B18C               	btfsc	find_volume@stat& (0+255),0,b
  6198  00090E  D008               	goto	l5697
  6199                           
  6200                           ; BSR set to: 0
  6201  000910  5049               	movf	find_volume@wmode,w,c
  6202  000912  A4D8               	btfss	status,2,c
  6203                           
  6204                           ; BSR set to: 0
  6205  000914  A58C               	btfss	find_volume@stat& (0+255),2,b
  6206  000916  D002               	goto	l5693
  6207  000918                     u7300:
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;ff.c: 2234:     return FR_WRITE_PROTECTED;
  6211  000918  0E0A               	movlw	10
  6212  00091A  0012               	return	
  6213  00091C                     l5693:
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;ff.c: 2235:    return FR_OK;
  6217  00091C  0E00               	movlw	0
  6218  00091E  0012               	return	
  6219  000920                     l5697:
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;ff.c: 2242:  fs->fs_type = 0;
  6223  000920  C098  FFD9         	movff	find_volume@fs,fsr2l
  6224  000924  C099  FFDA         	movff	find_volume@fs+1,fsr2h
  6225  000928  0E00               	movlw	0
  6226  00092A  6EDF               	movwf	indf2,c
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;ff.c: 2243:  fs->drv = (BYTE)(vol);
  6230  00092C  EE20 F001          	lfsr	2,1
  6231  000930  5198               	movf	find_volume@fs& (0+255),w,b
  6232  000932  26D9               	addwf	fsr2l,f,c
  6233  000934  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6234  000936  22DA               	addwfc	fsr2h,f,c
  6235  000938  C080  FFDF         	movff	find_volume@vol,indf2
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;ff.c: 2244:  stat = disk_initialize(fs->drv);
  6239  00093C  EE20 F001          	lfsr	2,1
  6240  000940  5198               	movf	find_volume@fs& (0+255),w,b
  6241  000942  26D9               	addwf	fsr2l,f,c
  6242  000944  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6243  000946  22DA               	addwfc	fsr2h,f,c
  6244  000948  50DF               	movf	indf2,w,c
  6245  00094A  EC19  F01D         	call	_disk_initialize
  6246  00094E  0100               	movlb	0	; () banked
  6247  000950  6F8C               	movwf	find_volume@stat& (0+255),b
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;ff.c: 2245:  if (stat & 0x01)
  6251  000952  A18C               	btfss	find_volume@stat& (0+255),0,b
  6252  000954  D002               	goto	l5709
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;ff.c: 2246:   return FR_NOT_READY;
  6256  000956  0E03               	movlw	3
  6257  000958  0012               	return	
  6258  00095A                     l5709:
  6259                           
  6260                           ; BSR set to: 0
  6261  00095A  5049               	movf	find_volume@wmode,w,c
  6262  00095C  B4D8               	btfsc	status,2,c
  6263  00095E  D002               	goto	l5717
  6264                           
  6265                           ; BSR set to: 0
  6266  000960  B58C               	btfsc	find_volume@stat& (0+255),2,b
  6267  000962  D7DA               	goto	u7300
  6268  000964                     l5717:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;ff.c: 2254:  bsect = 0;
  6272  000964  0E00               	movlw	0
  6273  000966  6F91               	movwf	find_volume@bsect& (0+255),b
  6274  000968  0E00               	movlw	0
  6275  00096A  6F92               	movwf	(find_volume@bsect+1)& (0+255),b
  6276  00096C  0E00               	movlw	0
  6277  00096E  6F93               	movwf	(find_volume@bsect+2)& (0+255),b
  6278  000970  0E00               	movlw	0
  6279  000972  6F94               	movwf	(find_volume@bsect+3)& (0+255),b
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;ff.c: 2255:  fmt = check_fs(fs, bsect);
  6283  000974  C098  F03B         	movff	find_volume@fs,check_fs@fs
  6284  000978  C099  F03C         	movff	find_volume@fs+1,check_fs@fs+1
  6285  00097C  0E00               	movlw	0
  6286  00097E  6E3D               	movwf	check_fs@sect,c
  6287  000980  0E00               	movlw	0
  6288  000982  6E3E               	movwf	check_fs@sect+1,c
  6289  000984  0E00               	movlw	0
  6290  000986  6E3F               	movwf	check_fs@sect+2,c
  6291  000988  0E00               	movlw	0
  6292  00098A  6E40               	movwf	check_fs@sect+3,c
  6293  00098C  EC97  F023         	call	_check_fs	;wreg free
  6294  000990  0100               	movlb	0	; () banked
  6295  000992  6F97               	movwf	find_volume@fmt& (0+255),b
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;ff.c: 2256:  if (fmt == 1 || (!fmt && (0))) {
  6299  000994  0597               	decf	find_volume@fmt& (0+255),w,b
  6300  000996  A4D8               	btfss	status,2,c
  6301  000998  D0AE               	goto	u7400
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;ff.c: 2257:   for (i = 0; i < 4; i++) {
  6305  00099A  0E00               	movlw	0
  6306  00099C  6F96               	movwf	(find_volume@i+1)& (0+255),b
  6307  00099E  0E00               	movlw	0
  6308  0009A0  6F95               	movwf	find_volume@i& (0+255),b
  6309  0009A2                     l5729:
  6310                           
  6311                           ; BSR set to: 0
  6312  0009A2  5196               	movf	(find_volume@i+1)& (0+255),w,b
  6313  0009A4  E15A               	bnz	l5745
  6314  0009A6  0E04               	movlw	4
  6315  0009A8  5D95               	subwf	find_volume@i& (0+255),w,b
  6316  0009AA  B0D8               	btfsc	status,0,c
  6317  0009AC  D056               	goto	l5745
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;ff.c: 2258:    pt = fs->win + 446 + i * 16;
  6321  0009AE  C095  F04A         	movff	find_volume@i,??_find_volume
  6322  0009B2  C096  F04B         	movff	find_volume@i+1,??_find_volume+1
  6323  0009B6  3A4A               	swapf	??_find_volume,f,c
  6324  0009B8  3A4B               	swapf	??_find_volume+1,f,c
  6325  0009BA  0EF0               	movlw	240
  6326  0009BC  164B               	andwf	??_find_volume+1,f,c
  6327  0009BE  504A               	movf	??_find_volume,w,c
  6328  0009C0  0B0F               	andlw	15
  6329  0009C2  124B               	iorwf	??_find_volume+1,f,c
  6330  0009C4  0EF0               	movlw	240
  6331  0009C6  164A               	andwf	??_find_volume,f,c
  6332  0009C8  C098  F04C         	movff	find_volume@fs,??_find_volume+2
  6333  0009CC  C099  F04D         	movff	find_volume@fs+1,??_find_volume+3
  6334  0009D0  504A               	movf	??_find_volume,w,c
  6335  0009D2  264C               	addwf	??_find_volume+2,f,c
  6336  0009D4  504B               	movf	??_find_volume+1,w,c
  6337  0009D6  224D               	addwfc	??_find_volume+3,f,c
  6338  0009D8  0EEC               	movlw	236
  6339  0009DA  244C               	addwf	??_find_volume+2,w,c
  6340  0009DC  6F7A               	movwf	find_volume@pt& (0+255),b
  6341  0009DE  0E01               	movlw	1
  6342  0009E0  204D               	addwfc	??_find_volume+3,w,c
  6343  0009E2  6F7B               	movwf	(find_volume@pt+1)& (0+255),b
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;ff.c: 2259:    br[i] = pt[4] ? (DWORD)(*(DWORD*)(BYTE*)(&pt[8])) : 0;
  6347  0009E4  EE20 F004          	lfsr	2,4
  6348  0009E8  517A               	movf	find_volume@pt& (0+255),w,b
  6349  0009EA  26D9               	addwf	fsr2l,f,c
  6350  0009EC  517B               	movf	(find_volume@pt+1)& (0+255),w,b
  6351  0009EE  22DA               	addwfc	fsr2h,f,c
  6352  0009F0  50DF               	movf	indf2,w,c
  6353  0009F2  A4D8               	btfss	status,2,c
  6354  0009F4  D009               	goto	l5739
  6355                           
  6356                           ; BSR set to: 0
  6357  0009F6  0E00               	movlw	0
  6358  0009F8  6F70               	movwf	_find_volume$728& (0+255),b
  6359  0009FA  0E00               	movlw	0
  6360  0009FC  6F71               	movwf	(_find_volume$728+1)& (0+255),b
  6361  0009FE  0E00               	movlw	0
  6362  000A00  6F72               	movwf	(_find_volume$728+2)& (0+255),b
  6363  000A02  0E00               	movlw	0
  6364  000A04  6F73               	movwf	(_find_volume$728+3)& (0+255),b
  6365  000A06  D00E               	goto	l520
  6366  000A08                     l5739:
  6367                           
  6368                           ; BSR set to: 0
  6369  000A08  EE20 F008          	lfsr	2,8
  6370  000A0C  517A               	movf	find_volume@pt& (0+255),w,b
  6371  000A0E  26D9               	addwf	fsr2l,f,c
  6372  000A10  517B               	movf	(find_volume@pt+1)& (0+255),w,b
  6373  000A12  22DA               	addwfc	fsr2h,f,c
  6374  000A14  CFDE F070          	movff	postinc2,_find_volume$728
  6375  000A18  CFDE F071          	movff	postinc2,_find_volume$728+1
  6376  000A1C  CFDE F072          	movff	postinc2,_find_volume$728+2
  6377  000A20  CFDE F073          	movff	postinc2,_find_volume$728+3
  6378  000A24                     l520:
  6379                           
  6380                           ; BSR set to: 0
  6381  000A24  0E60               	movlw	low find_volume@br
  6382  000A26  6E4A               	movwf	??_find_volume& (0+255),c
  6383  000A28  0E00               	movlw	high find_volume@br
  6384  000A2A  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  6385  000A2C  90D8               	bcf	status,0,c
  6386  000A2E  3595               	rlcf	find_volume@i& (0+255),w,b
  6387  000A30  6ED9               	movwf	fsr2l,c
  6388  000A32  3596               	rlcf	(find_volume@i+1)& (0+255),w,b
  6389  000A34  6EDA               	movwf	fsr2h,c
  6390  000A36  90D8               	bcf	status,0,c
  6391  000A38  36D9               	rlcf	fsr2l,f,c
  6392  000A3A  36DA               	rlcf	fsr2h,f,c
  6393  000A3C  504A               	movf	??_find_volume,w,c
  6394  000A3E  26D9               	addwf	fsr2l,f,c
  6395  000A40  504B               	movf	??_find_volume+1,w,c
  6396  000A42  22DA               	addwfc	fsr2h,f,c
  6397  000A44  C070  FFDE         	movff	_find_volume$728,postinc2
  6398  000A48  C071  FFDE         	movff	_find_volume$728+1,postinc2
  6399  000A4C  C072  FFDE         	movff	_find_volume$728+2,postinc2
  6400  000A50  C073  FFDE         	movff	_find_volume$728+3,postinc2
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;ff.c: 2260:   }
  6404  000A54  4B95               	infsnz	find_volume@i& (0+255),f,b
  6405  000A56  2B96               	incf	(find_volume@i+1)& (0+255),f,b
  6406  000A58  D7A4               	goto	l5729
  6407  000A5A                     l5745:
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;ff.c: 2261:   i = 0;
  6411  000A5A  0E00               	movlw	0
  6412  000A5C  6F96               	movwf	(find_volume@i+1)& (0+255),b
  6413  000A5E  0E00               	movlw	0
  6414  000A60  6F95               	movwf	find_volume@i& (0+255),b
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;ff.c: 2262:   if (i) i--;
  6418  000A62  5195               	movf	find_volume@i& (0+255),w,b
  6419  000A64  1196               	iorwf	(find_volume@i+1)& (0+255),w,b
  6420  000A66  B4D8               	btfsc	status,2,c
  6421  000A68  D003               	goto	l5751
  6422                           
  6423                           ; BSR set to: 0
  6424  000A6A  0795               	decf	find_volume@i& (0+255),f,b
  6425  000A6C  A0D8               	btfss	status,0,c
  6426  000A6E  0796               	decf	(find_volume@i+1)& (0+255),f,b
  6427  000A70                     l5751:
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;ff.c: 2264:    bsect = br[i];
  6431  000A70  0E60               	movlw	low find_volume@br
  6432  000A72  6E4A               	movwf	??_find_volume& (0+255),c
  6433  000A74  0E00               	movlw	high find_volume@br
  6434  000A76  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  6435  000A78  90D8               	bcf	status,0,c
  6436  000A7A  3595               	rlcf	find_volume@i& (0+255),w,b
  6437  000A7C  6ED9               	movwf	fsr2l,c
  6438  000A7E  3596               	rlcf	(find_volume@i+1)& (0+255),w,b
  6439  000A80  6EDA               	movwf	fsr2h,c
  6440  000A82  90D8               	bcf	status,0,c
  6441  000A84  36D9               	rlcf	fsr2l,f,c
  6442  000A86  36DA               	rlcf	fsr2h,f,c
  6443  000A88  504A               	movf	??_find_volume,w,c
  6444  000A8A  26D9               	addwf	fsr2l,f,c
  6445  000A8C  504B               	movf	??_find_volume+1,w,c
  6446  000A8E  22DA               	addwfc	fsr2h,f,c
  6447  000A90  CFDE F091          	movff	postinc2,find_volume@bsect
  6448  000A94  CFDE F092          	movff	postinc2,find_volume@bsect+1
  6449  000A98  CFDE F093          	movff	postinc2,find_volume@bsect+2
  6450  000A9C  CFDE F094          	movff	postinc2,find_volume@bsect+3
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;ff.c: 2265:    fmt = bsect ? check_fs(fs, bsect) : 2;
  6454  000AA0  5191               	movf	find_volume@bsect& (0+255),w,b
  6455  000AA2  1192               	iorwf	(find_volume@bsect+1)& (0+255),w,b
  6456  000AA4  1193               	iorwf	(find_volume@bsect+2)& (0+255),w,b
  6457  000AA6  1194               	iorwf	(find_volume@bsect+3)& (0+255),w,b
  6458  000AA8  A4D8               	btfss	status,2,c
  6459  000AAA  D005               	goto	l5757
  6460                           
  6461                           ; BSR set to: 0
  6462  000AAC  0E00               	movlw	0
  6463  000AAE  6F75               	movwf	(_find_volume$729+1)& (0+255),b
  6464  000AB0  0E02               	movlw	2
  6465  000AB2  6F74               	movwf	_find_volume$729& (0+255),b
  6466  000AB4  D013               	goto	l5759
  6467  000AB6                     l5757:
  6468                           
  6469                           ; BSR set to: 0
  6470  000AB6  C098  F03B         	movff	find_volume@fs,check_fs@fs
  6471  000ABA  C099  F03C         	movff	find_volume@fs+1,check_fs@fs+1
  6472  000ABE  C091  F03D         	movff	find_volume@bsect,check_fs@sect
  6473  000AC2  C092  F03E         	movff	find_volume@bsect+1,check_fs@sect+1
  6474  000AC6  C093  F03F         	movff	find_volume@bsect+2,check_fs@sect+2
  6475  000ACA  C094  F040         	movff	find_volume@bsect+3,check_fs@sect+3
  6476  000ACE  EC97  F023         	call	_check_fs	;wreg free
  6477  000AD2  6E4A               	movwf	??_find_volume& (0+255),c
  6478  000AD4  504A               	movf	??_find_volume,w,c
  6479  000AD6  0100               	movlb	0	; () banked
  6480  000AD8  6F74               	movwf	_find_volume$729& (0+255),b
  6481  000ADA  6B75               	clrf	(_find_volume$729+1)& (0+255),b
  6482  000ADC                     l5759:
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;ff.c: 2266:   } while (!0 && fmt && ++i < 4);
  6486  000ADC  C074  F097         	movff	_find_volume$729,find_volume@fmt
  6487                           
  6488                           ; BSR set to: 0
  6489  000AE0  5197               	movf	find_volume@fmt& (0+255),w,b
  6490  000AE2  B4D8               	btfsc	status,2,c
  6491  000AE4  D008               	goto	u7400
  6492                           
  6493                           ; BSR set to: 0
  6494  000AE6  4B95               	infsnz	find_volume@i& (0+255),f,b
  6495  000AE8  2B96               	incf	(find_volume@i+1)& (0+255),f,b
  6496  000AEA  5196               	movf	(find_volume@i+1)& (0+255),w,b
  6497  000AEC  E104               	bnz	u7400
  6498  000AEE  0E04               	movlw	4
  6499  000AF0  5D95               	subwf	find_volume@i& (0+255),w,b
  6500  000AF2  A0D8               	btfss	status,0,c
  6501  000AF4  D7BD               	goto	l5751
  6502  000AF6                     u7400:
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;ff.c: 2268:  if (fmt == 3) return FR_DISK_ERR;
  6506  000AF6  0E03               	movlw	3
  6507  000AF8  1997               	xorwf	find_volume@fmt& (0+255),w,b
  6508  000AFA  A4D8               	btfss	status,2,c
  6509  000AFC  D002               	goto	l5771
  6510                           
  6511                           ; BSR set to: 0
  6512  000AFE  0E01               	movlw	1
  6513  000B00  0012               	return	
  6514  000B02                     l5771:
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;ff.c: 2269:  if (fmt) return FR_NO_FILESYSTEM;
  6518  000B02  5197               	movf	find_volume@fmt& (0+255),w,b
  6519  000B04  B4D8               	btfsc	status,2,c
  6520  000B06  D002               	goto	l5777
  6521  000B08                     u7420:
  6522  000B08                     l5773:
  6523                           
  6524                           ; BSR set to: 0
  6525  000B08  0E0D               	movlw	13
  6526  000B0A  0012               	return	
  6527  000B0C                     l5777:
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;ff.c: 2273:  if ((WORD)(*(WORD*)(BYTE*)(fs->win + 11)) != ((UINT)512))
  6531  000B0C  EE20 F039          	lfsr	2,57
  6532  000B10  5198               	movf	find_volume@fs& (0+255),w,b
  6533  000B12  26D9               	addwf	fsr2l,f,c
  6534  000B14  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6535  000B16  22DA               	addwfc	fsr2h,f,c
  6536  000B18  50DE               	movf	postinc2,w,c
  6537  000B1A  E1F6               	bnz	l5773
  6538  000B1C  0E02               	movlw	2
  6539  000B1E  18DE               	xorwf	postinc2,w,c
  6540  000B20  A4D8               	btfss	status,2,c
  6541  000B22  D7F2               	goto	u7420
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;ff.c: 2276:  fasize = (WORD)(*(WORD*)(BYTE*)(fs->win + 22));
  6545  000B24  EE20 F044          	lfsr	2,68
  6546  000B28  5198               	movf	find_volume@fs& (0+255),w,b
  6547  000B2A  26D9               	addwf	fsr2l,f,c
  6548  000B2C  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6549  000B2E  22DA               	addwfc	fsr2h,f,c
  6550  000B30  CFDE F04A          	movff	postinc2,??_find_volume
  6551  000B34  CFDD F04B          	movff	postdec2,??_find_volume+1
  6552  000B38  C04A  F08D         	movff	??_find_volume,find_volume@fasize
  6553  000B3C  C04B  F08E         	movff	??_find_volume+1,find_volume@fasize+1
  6554  000B40  6B8F               	clrf	(find_volume@fasize+2)& (0+255),b
  6555  000B42  6B90               	clrf	(find_volume@fasize+3)& (0+255),b
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;ff.c: 2277:  if (!fasize) fasize = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 36));
  6559  000B44  518D               	movf	find_volume@fasize& (0+255),w,b
  6560  000B46  118E               	iorwf	(find_volume@fasize+1)& (0+255),w,b
  6561  000B48  118F               	iorwf	(find_volume@fasize+2)& (0+255),w,b
  6562  000B4A  1190               	iorwf	(find_volume@fasize+3)& (0+255),w,b
  6563  000B4C  A4D8               	btfss	status,2,c
  6564  000B4E  D00E               	goto	l533
  6565                           
  6566                           ; BSR set to: 0
  6567  000B50  EE20 F052          	lfsr	2,82
  6568  000B54  5198               	movf	find_volume@fs& (0+255),w,b
  6569  000B56  26D9               	addwf	fsr2l,f,c
  6570  000B58  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6571  000B5A  22DA               	addwfc	fsr2h,f,c
  6572  000B5C  CFDE F08D          	movff	postinc2,find_volume@fasize
  6573  000B60  CFDE F08E          	movff	postinc2,find_volume@fasize+1
  6574  000B64  CFDE F08F          	movff	postinc2,find_volume@fasize+2
  6575  000B68  CFDE F090          	movff	postinc2,find_volume@fasize+3
  6576  000B6C                     l533:
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;ff.c: 2278:  fs->fsize = fasize;
  6580  000B6C  EE20 F016          	lfsr	2,22
  6581  000B70  5198               	movf	find_volume@fs& (0+255),w,b
  6582  000B72  26D9               	addwf	fsr2l,f,c
  6583  000B74  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6584  000B76  22DA               	addwfc	fsr2h,f,c
  6585  000B78  C08D  FFDE         	movff	find_volume@fasize,postinc2
  6586  000B7C  C08E  FFDE         	movff	find_volume@fasize+1,postinc2
  6587  000B80  C08F  FFDE         	movff	find_volume@fasize+2,postinc2
  6588  000B84  C090  FFDE         	movff	find_volume@fasize+3,postinc2
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;ff.c: 2280:  fs->n_fats = fs->win[16];
  6592  000B88  EE20 F03E          	lfsr	2,62
  6593  000B8C  5198               	movf	find_volume@fs& (0+255),w,b
  6594  000B8E  26D9               	addwf	fsr2l,f,c
  6595  000B90  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6596  000B92  22DA               	addwfc	fsr2h,f,c
  6597  000B94  EE10 F003          	lfsr	1,3
  6598  000B98  5198               	movf	find_volume@fs& (0+255),w,b
  6599  000B9A  26E1               	addwf	fsr1l,f,c
  6600  000B9C  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6601  000B9E  22E2               	addwfc	fsr1h,f,c
  6602  000BA0  CFDF FFE7          	movff	indf2,indf1
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;ff.c: 2281:  if (fs->n_fats != 1 && fs->n_fats != 2)
  6606  000BA4  EE20 F003          	lfsr	2,3
  6607  000BA8  5198               	movf	find_volume@fs& (0+255),w,b
  6608  000BAA  26D9               	addwf	fsr2l,f,c
  6609  000BAC  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6610  000BAE  22DA               	addwfc	fsr2h,f,c
  6611  000BB0  04DE               	decf	postinc2,w,c
  6612  000BB2  B4D8               	btfsc	status,2,c
  6613  000BB4  D00A               	goto	l5799
  6614                           
  6615                           ; BSR set to: 0
  6616  000BB6  EE20 F003          	lfsr	2,3
  6617  000BBA  5198               	movf	find_volume@fs& (0+255),w,b
  6618  000BBC  26D9               	addwf	fsr2l,f,c
  6619  000BBE  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6620  000BC0  22DA               	addwfc	fsr2h,f,c
  6621  000BC2  0E02               	movlw	2
  6622  000BC4  18DE               	xorwf	postinc2,w,c
  6623  000BC6  A4D8               	btfss	status,2,c
  6624  000BC8  D79F               	goto	u7420
  6625  000BCA                     l5799:
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;ff.c: 2283:  fasize *= fs->n_fats;
  6629  000BCA  C08D  F001         	movff	find_volume@fasize,___lmul@multiplier
  6630  000BCE  C08E  F002         	movff	find_volume@fasize+1,___lmul@multiplier+1
  6631  000BD2  C08F  F003         	movff	find_volume@fasize+2,___lmul@multiplier+2
  6632  000BD6  C090  F004         	movff	find_volume@fasize+3,___lmul@multiplier+3
  6633  000BDA  EE20 F003          	lfsr	2,3
  6634  000BDE  5198               	movf	find_volume@fs& (0+255),w,b
  6635  000BE0  26D9               	addwf	fsr2l,f,c
  6636  000BE2  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6637  000BE4  22DA               	addwfc	fsr2h,f,c
  6638  000BE6  50DF               	movf	indf2,w,c
  6639  000BE8  6E4A               	movwf	??_find_volume& (0+255),c
  6640  000BEA  504A               	movf	??_find_volume,w,c
  6641  000BEC  6E05               	movwf	___lmul@multiplicand,c
  6642  000BEE  6A06               	clrf	___lmul@multiplicand+1,c
  6643  000BF0  6A07               	clrf	___lmul@multiplicand+2,c
  6644  000BF2  6A08               	clrf	___lmul@multiplicand+3,c
  6645  000BF4  EC03  F029         	call	___lmul	;wreg free
  6646  000BF8  C001  F08D         	movff	?___lmul,find_volume@fasize
  6647  000BFC  C002  F08E         	movff	?___lmul+1,find_volume@fasize+1
  6648  000C00  C003  F08F         	movff	?___lmul+2,find_volume@fasize+2
  6649  000C04  C004  F090         	movff	?___lmul+3,find_volume@fasize+3
  6650                           
  6651                           ;ff.c: 2285:  fs->csize = fs->win[13];
  6652  000C08  0100               	movlb	0	; () banked
  6653  000C0A  EE20 F03B          	lfsr	2,59
  6654  000C0E  5198               	movf	find_volume@fs& (0+255),w,b
  6655  000C10  26D9               	addwf	fsr2l,f,c
  6656  000C12  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6657  000C14  22DA               	addwfc	fsr2h,f,c
  6658  000C16  EE10 F002          	lfsr	1,2
  6659  000C1A  5198               	movf	find_volume@fs& (0+255),w,b
  6660  000C1C  26E1               	addwf	fsr1l,f,c
  6661  000C1E  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6662  000C20  22E2               	addwfc	fsr1h,f,c
  6663  000C22  CFDF FFE7          	movff	indf2,indf1
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;ff.c: 2286:  if (!fs->csize || (fs->csize & (fs->csize - 1)))
  6667  000C26  EE20 F002          	lfsr	2,2
  6668  000C2A  5198               	movf	find_volume@fs& (0+255),w,b
  6669  000C2C  26D9               	addwf	fsr2l,f,c
  6670  000C2E  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6671  000C30  22DA               	addwfc	fsr2h,f,c
  6672  000C32  50DF               	movf	indf2,w,c
  6673  000C34  B4D8               	btfsc	status,2,c
  6674  000C36  D768               	goto	u7420
  6675                           
  6676                           ; BSR set to: 0
  6677  000C38  0EFF               	movlw	255
  6678  000C3A  6E4A               	movwf	??_find_volume& (0+255),c
  6679  000C3C  0EFF               	movlw	255
  6680  000C3E  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  6681  000C40  EE20 F002          	lfsr	2,2
  6682  000C44  5198               	movf	find_volume@fs& (0+255),w,b
  6683  000C46  26D9               	addwf	fsr2l,f,c
  6684  000C48  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6685  000C4A  22DA               	addwfc	fsr2h,f,c
  6686  000C4C  50DF               	movf	indf2,w,c
  6687  000C4E  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  6688  000C50  6A4D               	clrf	(??_find_volume+3)& (0+255),c
  6689  000C52  504A               	movf	??_find_volume,w,c
  6690  000C54  264C               	addwf	??_find_volume+2,f,c
  6691  000C56  504B               	movf	??_find_volume+1,w,c
  6692  000C58  224D               	addwfc	??_find_volume+3,f,c
  6693  000C5A  EE20 F002          	lfsr	2,2
  6694  000C5E  5198               	movf	find_volume@fs& (0+255),w,b
  6695  000C60  26D9               	addwf	fsr2l,f,c
  6696  000C62  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6697  000C64  22DA               	addwfc	fsr2h,f,c
  6698  000C66  50DF               	movf	indf2,w,c
  6699  000C68  6E4E               	movwf	(??_find_volume+4)& (0+255),c
  6700  000C6A  504E               	movf	??_find_volume+4,w,c
  6701  000C6C  164C               	andwf	??_find_volume+2,f,c
  6702  000C6E  0E00               	movlw	0
  6703  000C70  164D               	andwf	??_find_volume+3,f,c
  6704  000C72  504C               	movf	??_find_volume+2,w,c
  6705  000C74  104D               	iorwf	??_find_volume+3,w,c
  6706  000C76  A4D8               	btfss	status,2,c
  6707  000C78  D747               	goto	u7420
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;ff.c: 2289:  fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(fs->win + 17));
  6711  000C7A  EE20 F03F          	lfsr	2,63
  6712  000C7E  5198               	movf	find_volume@fs& (0+255),w,b
  6713  000C80  26D9               	addwf	fsr2l,f,c
  6714  000C82  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6715  000C84  22DA               	addwfc	fsr2h,f,c
  6716  000C86  EE10 F008          	lfsr	1,8
  6717  000C8A  5198               	movf	find_volume@fs& (0+255),w,b
  6718  000C8C  26E1               	addwf	fsr1l,f,c
  6719  000C8E  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6720  000C90  22E2               	addwfc	fsr1h,f,c
  6721  000C92  CFDE FFE6          	movff	postinc2,postinc1
  6722  000C96  CFDD FFE5          	movff	postdec2,postdec1
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;ff.c: 2290:  if (fs->n_rootdir % (((UINT)512) / 32))
  6726  000C9A  EE20 F008          	lfsr	2,8
  6727  000C9E  5198               	movf	find_volume@fs& (0+255),w,b
  6728  000CA0  26D9               	addwf	fsr2l,f,c
  6729  000CA2  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6730  000CA4  22DA               	addwfc	fsr2h,f,c
  6731  000CA6  CFDE F04A          	movff	postinc2,??_find_volume
  6732  000CAA  CFDD F04B          	movff	postdec2,??_find_volume+1
  6733  000CAE  0E0F               	movlw	15
  6734  000CB0  164A               	andwf	??_find_volume,f,c
  6735  000CB2  0E00               	movlw	0
  6736  000CB4  164B               	andwf	??_find_volume+1,f,c
  6737  000CB6  504A               	movf	??_find_volume,w,c
  6738  000CB8  104B               	iorwf	??_find_volume+1,w,c
  6739  000CBA  A4D8               	btfss	status,2,c
  6740  000CBC  D725               	goto	u7420
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;ff.c: 2293:  tsect = (WORD)(*(WORD*)(BYTE*)(fs->win + 19));
  6744  000CBE  EE20 F041          	lfsr	2,65
  6745  000CC2  5198               	movf	find_volume@fs& (0+255),w,b
  6746  000CC4  26D9               	addwf	fsr2l,f,c
  6747  000CC6  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6748  000CC8  22DA               	addwfc	fsr2h,f,c
  6749  000CCA  CFDE F04A          	movff	postinc2,??_find_volume
  6750  000CCE  CFDD F04B          	movff	postdec2,??_find_volume+1
  6751  000CD2  C04A  F084         	movff	??_find_volume,find_volume@tsect
  6752  000CD6  C04B  F085         	movff	??_find_volume+1,find_volume@tsect+1
  6753  000CDA  6B86               	clrf	(find_volume@tsect+2)& (0+255),b
  6754  000CDC  6B87               	clrf	(find_volume@tsect+3)& (0+255),b
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;ff.c: 2294:  if (!tsect) tsect = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 32));
  6758  000CDE  5184               	movf	find_volume@tsect& (0+255),w,b
  6759  000CE0  1185               	iorwf	(find_volume@tsect+1)& (0+255),w,b
  6760  000CE2  1186               	iorwf	(find_volume@tsect+2)& (0+255),w,b
  6761  000CE4  1187               	iorwf	(find_volume@tsect+3)& (0+255),w,b
  6762  000CE6  A4D8               	btfss	status,2,c
  6763  000CE8  D00E               	goto	l539
  6764                           
  6765                           ; BSR set to: 0
  6766  000CEA  EE20 F04E          	lfsr	2,78
  6767  000CEE  5198               	movf	find_volume@fs& (0+255),w,b
  6768  000CF0  26D9               	addwf	fsr2l,f,c
  6769  000CF2  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6770  000CF4  22DA               	addwfc	fsr2h,f,c
  6771  000CF6  CFDE F084          	movff	postinc2,find_volume@tsect
  6772  000CFA  CFDE F085          	movff	postinc2,find_volume@tsect+1
  6773  000CFE  CFDE F086          	movff	postinc2,find_volume@tsect+2
  6774  000D02  CFDE F087          	movff	postinc2,find_volume@tsect+3
  6775  000D06                     l539:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;ff.c: 2296:  nrsv = (WORD)(*(WORD*)(BYTE*)(fs->win + 14));
  6779  000D06  EE20 F03C          	lfsr	2,60
  6780  000D0A  5198               	movf	find_volume@fs& (0+255),w,b
  6781  000D0C  26D9               	addwf	fsr2l,f,c
  6782  000D0E  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6783  000D10  22DA               	addwfc	fsr2h,f,c
  6784  000D12  CFDE F082          	movff	postinc2,find_volume@nrsv
  6785  000D16  CFDD F083          	movff	postdec2,find_volume@nrsv+1
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;ff.c: 2297:  if (!nrsv) return FR_NO_FILESYSTEM;
  6789  000D1A  5182               	movf	find_volume@nrsv& (0+255),w,b
  6790  000D1C  1183               	iorwf	(find_volume@nrsv+1)& (0+255),w,b
  6791  000D1E  B4D8               	btfsc	status,2,c
  6792  000D20  D6F3               	goto	u7420
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;ff.c: 2300:  sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
  6796  000D22  EE20 F008          	lfsr	2,8
  6797  000D26  5198               	movf	find_volume@fs& (0+255),w,b
  6798  000D28  26D9               	addwf	fsr2l,f,c
  6799  000D2A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6800  000D2C  22DA               	addwfc	fsr2h,f,c
  6801  000D2E  CFDE F04A          	movff	postinc2,??_find_volume
  6802  000D32  CFDD F04B          	movff	postdec2,??_find_volume+1
  6803  000D36  0E04               	movlw	4
  6804  000D38  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  6805  000D3A                     u7525:
  6806  000D3A  90D8               	bcf	status,0,c
  6807  000D3C  324B               	rrcf	??_find_volume+1,f,c
  6808  000D3E  324A               	rrcf	??_find_volume,f,c
  6809  000D40  2E4C               	decfsz	(??_find_volume+2)& (0+255),f,c
  6810  000D42  D7FB               	goto	u7525
  6811  000D44  5182               	movf	find_volume@nrsv& (0+255),w,b
  6812  000D46  244A               	addwf	??_find_volume,w,c
  6813  000D48  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  6814  000D4A  5183               	movf	(find_volume@nrsv+1)& (0+255),w,b
  6815  000D4C  204B               	addwfc	??_find_volume+1,w,c
  6816  000D4E  6E4E               	movwf	(??_find_volume+4)& (0+255),c
  6817  000D50  6A4F               	clrf	(??_find_volume+5)& (0+255),c
  6818  000D52  B0D8               	btfsc	status,0,c
  6819  000D54  2A4F               	incf	(??_find_volume+5)& (0+255),f,c
  6820  000D56  6A50               	clrf	(??_find_volume+6)& (0+255),c
  6821  000D58  518D               	movf	find_volume@fasize& (0+255),w,b
  6822  000D5A  244D               	addwf	??_find_volume+3,w,c
  6823  000D5C  6F7C               	movwf	find_volume@sysect& (0+255),b
  6824  000D5E  518E               	movf	(find_volume@fasize+1)& (0+255),w,b
  6825  000D60  204E               	addwfc	??_find_volume+4,w,c
  6826  000D62  6F7D               	movwf	(find_volume@sysect+1)& (0+255),b
  6827  000D64  518F               	movf	(find_volume@fasize+2)& (0+255),w,b
  6828  000D66  204F               	addwfc	??_find_volume+5,w,c
  6829  000D68  6F7E               	movwf	(find_volume@sysect+2)& (0+255),b
  6830  000D6A  5190               	movf	(find_volume@fasize+3)& (0+255),w,b
  6831  000D6C  2050               	addwfc	??_find_volume+6,w,c
  6832  000D6E  6F7F               	movwf	(find_volume@sysect+3)& (0+255),b
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;ff.c: 2301:  if (tsect < sysect) return FR_NO_FILESYSTEM;
  6836  000D70  517C               	movf	find_volume@sysect& (0+255),w,b
  6837  000D72  5D84               	subwf	find_volume@tsect& (0+255),w,b
  6838  000D74  517D               	movf	(find_volume@sysect+1)& (0+255),w,b
  6839  000D76  5985               	subwfb	(find_volume@tsect+1)& (0+255),w,b
  6840  000D78  517E               	movf	(find_volume@sysect+2)& (0+255),w,b
  6841  000D7A  5986               	subwfb	(find_volume@tsect+2)& (0+255),w,b
  6842  000D7C  517F               	movf	(find_volume@sysect+3)& (0+255),w,b
  6843  000D7E  5987               	subwfb	(find_volume@tsect+3)& (0+255),w,b
  6844  000D80  A0D8               	btfss	status,0,c
  6845  000D82  D6C2               	goto	u7420
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;ff.c: 2302:  nclst = (tsect - sysect) / fs->csize;
  6849  000D84  517C               	movf	find_volume@sysect& (0+255),w,b
  6850  000D86  5D84               	subwf	find_volume@tsect& (0+255),w,b
  6851  000D88  6E01               	movwf	___lldiv@dividend,c
  6852  000D8A  517D               	movf	(find_volume@sysect+1)& (0+255),w,b
  6853  000D8C  5985               	subwfb	(find_volume@tsect+1)& (0+255),w,b
  6854  000D8E  6E02               	movwf	___lldiv@dividend+1,c
  6855  000D90  517E               	movf	(find_volume@sysect+2)& (0+255),w,b
  6856  000D92  5986               	subwfb	(find_volume@tsect+2)& (0+255),w,b
  6857  000D94  6E03               	movwf	___lldiv@dividend+2,c
  6858  000D96  517F               	movf	(find_volume@sysect+3)& (0+255),w,b
  6859  000D98  5987               	subwfb	(find_volume@tsect+3)& (0+255),w,b
  6860  000D9A  6E04               	movwf	___lldiv@dividend+3,c
  6861  000D9C  EE20 F002          	lfsr	2,2
  6862  000DA0  5198               	movf	find_volume@fs& (0+255),w,b
  6863  000DA2  26D9               	addwf	fsr2l,f,c
  6864  000DA4  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6865  000DA6  22DA               	addwfc	fsr2h,f,c
  6866  000DA8  50DF               	movf	indf2,w,c
  6867  000DAA  6E4A               	movwf	??_find_volume& (0+255),c
  6868  000DAC  504A               	movf	??_find_volume,w,c
  6869  000DAE  6E05               	movwf	___lldiv@divisor,c
  6870  000DB0  6A06               	clrf	___lldiv@divisor+1,c
  6871  000DB2  6A07               	clrf	___lldiv@divisor+2,c
  6872  000DB4  6A08               	clrf	___lldiv@divisor+3,c
  6873  000DB6  EC04  F027         	call	___lldiv	;wreg free
  6874  000DBA  C001  F088         	movff	?___lldiv,find_volume@nclst
  6875  000DBE  C002  F089         	movff	?___lldiv+1,find_volume@nclst+1
  6876  000DC2  C003  F08A         	movff	?___lldiv+2,find_volume@nclst+2
  6877  000DC6  C004  F08B         	movff	?___lldiv+3,find_volume@nclst+3
  6878                           
  6879                           ;ff.c: 2303:  if (!nclst) return FR_NO_FILESYSTEM;
  6880  000DCA  0100               	movlb	0	; () banked
  6881  000DCC  5188               	movf	find_volume@nclst& (0+255),w,b
  6882  000DCE  1189               	iorwf	(find_volume@nclst+1)& (0+255),w,b
  6883  000DD0  118A               	iorwf	(find_volume@nclst+2)& (0+255),w,b
  6884  000DD2  118B               	iorwf	(find_volume@nclst+3)& (0+255),w,b
  6885  000DD4  B4D8               	btfsc	status,2,c
  6886  000DD6  D698               	goto	u7420
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;ff.c: 2304:  fmt = 1;
  6890  000DD8  0E01               	movlw	1
  6891  000DDA  6F97               	movwf	find_volume@fmt& (0+255),b
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;ff.c: 2305:  if (nclst >= 4086U) fmt = 2;
  6895  000DDC  518B               	movf	(find_volume@nclst+3)& (0+255),w,b
  6896  000DDE  118A               	iorwf	(find_volume@nclst+2)& (0+255),w,b
  6897  000DE0  E106               	bnz	u7550
  6898  000DE2  0EF6               	movlw	246
  6899  000DE4  5D88               	subwf	find_volume@nclst& (0+255),w,b
  6900  000DE6  0E0F               	movlw	15
  6901  000DE8  5989               	subwfb	(find_volume@nclst+1)& (0+255),w,b
  6902  000DEA  A0D8               	btfss	status,0,c
  6903  000DEC  D002               	goto	l5853
  6904  000DEE                     u7550:
  6905                           
  6906                           ; BSR set to: 0
  6907  000DEE  0E02               	movlw	2
  6908  000DF0  6F97               	movwf	find_volume@fmt& (0+255),b
  6909  000DF2                     l5853:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;ff.c: 2306:  if (nclst >= 65526U) fmt = 3;
  6913  000DF2  518B               	movf	(find_volume@nclst+3)& (0+255),w,b
  6914  000DF4  118A               	iorwf	(find_volume@nclst+2)& (0+255),w,b
  6915  000DF6  E106               	bnz	u7560
  6916  000DF8  0EF6               	movlw	246
  6917  000DFA  5D88               	subwf	find_volume@nclst& (0+255),w,b
  6918  000DFC  0EFF               	movlw	255
  6919  000DFE  5989               	subwfb	(find_volume@nclst+1)& (0+255),w,b
  6920  000E00  A0D8               	btfss	status,0,c
  6921  000E02  D002               	goto	l5857
  6922  000E04                     u7560:
  6923                           
  6924                           ; BSR set to: 0
  6925  000E04  0E03               	movlw	3
  6926  000E06  6F97               	movwf	find_volume@fmt& (0+255),b
  6927  000E08                     l5857:
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;ff.c: 2309:  fs->n_fatent = nclst + 2;
  6931  000E08  0E02               	movlw	2
  6932  000E0A  2588               	addwf	find_volume@nclst& (0+255),w,b
  6933  000E0C  6E4A               	movwf	??_find_volume& (0+255),c
  6934  000E0E  0E00               	movlw	0
  6935  000E10  2189               	addwfc	(find_volume@nclst+1)& (0+255),w,b
  6936  000E12  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  6937  000E14  0E00               	movlw	0
  6938  000E16  218A               	addwfc	(find_volume@nclst+2)& (0+255),w,b
  6939  000E18  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  6940  000E1A  0E00               	movlw	0
  6941  000E1C  218B               	addwfc	(find_volume@nclst+3)& (0+255),w,b
  6942  000E1E  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  6943  000E20  EE20 F012          	lfsr	2,18
  6944  000E24  5198               	movf	find_volume@fs& (0+255),w,b
  6945  000E26  26D9               	addwf	fsr2l,f,c
  6946  000E28  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6947  000E2A  22DA               	addwfc	fsr2h,f,c
  6948  000E2C  C04A  FFDE         	movff	??_find_volume,postinc2
  6949  000E30  C04B  FFDE         	movff	??_find_volume+1,postinc2
  6950  000E34  C04C  FFDE         	movff	??_find_volume+2,postinc2
  6951  000E38  C04D  FFDE         	movff	??_find_volume+3,postinc2
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;ff.c: 2310:  fs->volbase = bsect;
  6955  000E3C  EE20 F01A          	lfsr	2,26
  6956  000E40  5198               	movf	find_volume@fs& (0+255),w,b
  6957  000E42  26D9               	addwf	fsr2l,f,c
  6958  000E44  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6959  000E46  22DA               	addwfc	fsr2h,f,c
  6960  000E48  C091  FFDE         	movff	find_volume@bsect,postinc2
  6961  000E4C  C092  FFDE         	movff	find_volume@bsect+1,postinc2
  6962  000E50  C093  FFDE         	movff	find_volume@bsect+2,postinc2
  6963  000E54  C094  FFDE         	movff	find_volume@bsect+3,postinc2
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;ff.c: 2311:  fs->fatbase = bsect + nrsv;
  6967  000E58  5182               	movf	find_volume@nrsv& (0+255),w,b
  6968  000E5A  2591               	addwf	find_volume@bsect& (0+255),w,b
  6969  000E5C  6E4A               	movwf	??_find_volume& (0+255),c
  6970  000E5E  5183               	movf	(find_volume@nrsv+1)& (0+255),w,b
  6971  000E60  2192               	addwfc	(find_volume@bsect+1)& (0+255),w,b
  6972  000E62  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  6973  000E64  0E00               	movlw	0
  6974  000E66  2193               	addwfc	(find_volume@bsect+2)& (0+255),w,b
  6975  000E68  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  6976  000E6A  0E00               	movlw	0
  6977  000E6C  2194               	addwfc	(find_volume@bsect+3)& (0+255),w,b
  6978  000E6E  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  6979  000E70  EE20 F01E          	lfsr	2,30
  6980  000E74  5198               	movf	find_volume@fs& (0+255),w,b
  6981  000E76  26D9               	addwf	fsr2l,f,c
  6982  000E78  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  6983  000E7A  22DA               	addwfc	fsr2h,f,c
  6984  000E7C  C04A  FFDE         	movff	??_find_volume,postinc2
  6985  000E80  C04B  FFDE         	movff	??_find_volume+1,postinc2
  6986  000E84  C04C  FFDE         	movff	??_find_volume+2,postinc2
  6987  000E88  C04D  FFDE         	movff	??_find_volume+3,postinc2
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;ff.c: 2312:  fs->database = bsect + sysect;
  6991  000E8C  517C               	movf	find_volume@sysect& (0+255),w,b
  6992  000E8E  2591               	addwf	find_volume@bsect& (0+255),w,b
  6993  000E90  6E4A               	movwf	??_find_volume& (0+255),c
  6994  000E92  517D               	movf	(find_volume@sysect+1)& (0+255),w,b
  6995  000E94  2192               	addwfc	(find_volume@bsect+1)& (0+255),w,b
  6996  000E96  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  6997  000E98  517E               	movf	(find_volume@sysect+2)& (0+255),w,b
  6998  000E9A  2193               	addwfc	(find_volume@bsect+2)& (0+255),w,b
  6999  000E9C  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  7000  000E9E  517F               	movf	(find_volume@sysect+3)& (0+255),w,b
  7001  000EA0  2194               	addwfc	(find_volume@bsect+3)& (0+255),w,b
  7002  000EA2  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  7003  000EA4  EE20 F026          	lfsr	2,38
  7004  000EA8  5198               	movf	find_volume@fs& (0+255),w,b
  7005  000EAA  26D9               	addwf	fsr2l,f,c
  7006  000EAC  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7007  000EAE  22DA               	addwfc	fsr2h,f,c
  7008  000EB0  C04A  FFDE         	movff	??_find_volume,postinc2
  7009  000EB4  C04B  FFDE         	movff	??_find_volume+1,postinc2
  7010  000EB8  C04C  FFDE         	movff	??_find_volume+2,postinc2
  7011  000EBC  C04D  FFDE         	movff	??_find_volume+3,postinc2
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;ff.c: 2313:  if (fmt == 3) {
  7015  000EC0  0E03               	movlw	3
  7016  000EC2  1997               	xorwf	find_volume@fmt& (0+255),w,b
  7017  000EC4  A4D8               	btfss	status,2,c
  7018  000EC6  D03D               	goto	l5877
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;ff.c: 2314:   if (fs->n_rootdir) return FR_NO_FILESYSTEM;
  7022  000EC8  EE20 F008          	lfsr	2,8
  7023  000ECC  5198               	movf	find_volume@fs& (0+255),w,b
  7024  000ECE  26D9               	addwf	fsr2l,f,c
  7025  000ED0  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7026  000ED2  22DA               	addwfc	fsr2h,f,c
  7027  000ED4  50DE               	movf	postinc2,w,c
  7028  000ED6  10DE               	iorwf	postinc2,w,c
  7029  000ED8  A4D8               	btfss	status,2,c
  7030  000EDA  D616               	goto	u7420
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;ff.c: 2315:   fs->dirbase = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 44));
  7034  000EDC  EE20 F05A          	lfsr	2,90
  7035  000EE0  5198               	movf	find_volume@fs& (0+255),w,b
  7036  000EE2  26D9               	addwf	fsr2l,f,c
  7037  000EE4  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7038  000EE6  22DA               	addwfc	fsr2h,f,c
  7039  000EE8  EE10 F022          	lfsr	1,34
  7040  000EEC  5198               	movf	find_volume@fs& (0+255),w,b
  7041  000EEE  26E1               	addwf	fsr1l,f,c
  7042  000EF0  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7043  000EF2  22E2               	addwfc	fsr1h,f,c
  7044  000EF4  CFDE FFE6          	movff	postinc2,postinc1
  7045  000EF8  CFDE FFE6          	movff	postinc2,postinc1
  7046  000EFC  CFDE FFE6          	movff	postinc2,postinc1
  7047  000F00  CFDE FFE6          	movff	postinc2,postinc1
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;ff.c: 2316:   szbfat = fs->n_fatent * 4;
  7051  000F04  EE20 F012          	lfsr	2,18
  7052  000F08  5198               	movf	find_volume@fs& (0+255),w,b
  7053  000F0A  26D9               	addwf	fsr2l,f,c
  7054  000F0C  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7055  000F0E  22DA               	addwfc	fsr2h,f,c
  7056  000F10  CFDE F04A          	movff	postinc2,??_find_volume
  7057  000F14  CFDE F04B          	movff	postinc2,??_find_volume+1
  7058  000F18  CFDE F04C          	movff	postinc2,??_find_volume+2
  7059  000F1C  CFDE F04D          	movff	postinc2,??_find_volume+3
  7060  000F20  0E02               	movlw	2
  7061  000F22                     u7595:
  7062  000F22  90D8               	bcf	status,0,c
  7063  000F24  364A               	rlcf	??_find_volume,f,c
  7064  000F26  364B               	rlcf	??_find_volume+1,f,c
  7065  000F28  364C               	rlcf	??_find_volume+2,f,c
  7066  000F2A  364D               	rlcf	??_find_volume+3,f,c
  7067  000F2C  2EE8               	decfsz	wreg,f,c
  7068  000F2E  D7F9               	goto	u7595
  7069  000F30  C04A  F076         	movff	??_find_volume,find_volume@szbfat
  7070  000F34  C04B  F077         	movff	??_find_volume+1,find_volume@szbfat+1
  7071  000F38  C04C  F078         	movff	??_find_volume+2,find_volume@szbfat+2
  7072  000F3C  C04D  F079         	movff	??_find_volume+3,find_volume@szbfat+3
  7073                           
  7074                           ;ff.c: 2317:  } else {
  7075  000F40  D091               	goto	l547
  7076  000F42                     l5877:
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;ff.c: 2318:   if (!fs->n_rootdir) return FR_NO_FILESYSTEM;
  7080  000F42  EE20 F008          	lfsr	2,8
  7081  000F46  5198               	movf	find_volume@fs& (0+255),w,b
  7082  000F48  26D9               	addwf	fsr2l,f,c
  7083  000F4A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7084  000F4C  22DA               	addwfc	fsr2h,f,c
  7085  000F4E  50DE               	movf	postinc2,w,c
  7086  000F50  10DE               	iorwf	postinc2,w,c
  7087  000F52  B4D8               	btfsc	status,2,c
  7088  000F54  D5D9               	goto	u7420
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;ff.c: 2319:   fs->dirbase = fs->fatbase + fasize;
  7092  000F56  EE20 F01E          	lfsr	2,30
  7093  000F5A  5198               	movf	find_volume@fs& (0+255),w,b
  7094  000F5C  26D9               	addwf	fsr2l,f,c
  7095  000F5E  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7096  000F60  22DA               	addwfc	fsr2h,f,c
  7097  000F62  CFDE F04A          	movff	postinc2,??_find_volume
  7098  000F66  CFDE F04B          	movff	postinc2,??_find_volume+1
  7099  000F6A  CFDE F04C          	movff	postinc2,??_find_volume+2
  7100  000F6E  CFDE F04D          	movff	postinc2,??_find_volume+3
  7101  000F72  518D               	movf	find_volume@fasize& (0+255),w,b
  7102  000F74  244A               	addwf	??_find_volume,w,c
  7103  000F76  6E4E               	movwf	(??_find_volume+4)& (0+255),c
  7104  000F78  518E               	movf	(find_volume@fasize+1)& (0+255),w,b
  7105  000F7A  204B               	addwfc	??_find_volume+1,w,c
  7106  000F7C  6E4F               	movwf	(??_find_volume+5)& (0+255),c
  7107  000F7E  518F               	movf	(find_volume@fasize+2)& (0+255),w,b
  7108  000F80  204C               	addwfc	??_find_volume+2,w,c
  7109  000F82  6E50               	movwf	(??_find_volume+6)& (0+255),c
  7110  000F84  5190               	movf	(find_volume@fasize+3)& (0+255),w,b
  7111  000F86  204D               	addwfc	??_find_volume+3,w,c
  7112  000F88  6E51               	movwf	(??_find_volume+7)& (0+255),c
  7113  000F8A  EE20 F022          	lfsr	2,34
  7114  000F8E  5198               	movf	find_volume@fs& (0+255),w,b
  7115  000F90  26D9               	addwf	fsr2l,f,c
  7116  000F92  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7117  000F94  22DA               	addwfc	fsr2h,f,c
  7118  000F96  C04E  FFDE         	movff	??_find_volume+4,postinc2
  7119  000F9A  C04F  FFDE         	movff	??_find_volume+5,postinc2
  7120  000F9E  C050  FFDE         	movff	??_find_volume+6,postinc2
  7121  000FA2  C051  FFDE         	movff	??_find_volume+7,postinc2
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;ff.c: 2320:   szbfat = (fmt == 2) ?
  7125  000FA6  0E02               	movlw	2
  7126  000FA8  1997               	xorwf	find_volume@fmt& (0+255),w,b
  7127  000FAA  B4D8               	btfsc	status,2,c
  7128  000FAC  D044               	goto	l5889
  7129                           
  7130                           ; BSR set to: 0
  7131  000FAE  EE20 F012          	lfsr	2,18
  7132  000FB2  5198               	movf	find_volume@fs& (0+255),w,b
  7133  000FB4  26D9               	addwf	fsr2l,f,c
  7134  000FB6  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7135  000FB8  22DA               	addwfc	fsr2h,f,c
  7136  000FBA  CFDE F04A          	movff	postinc2,??_find_volume
  7137  000FBE  CFDE F04B          	movff	postinc2,??_find_volume+1
  7138  000FC2  CFDE F04C          	movff	postinc2,??_find_volume+2
  7139  000FC6  CFDE F04D          	movff	postinc2,??_find_volume+3
  7140  000FCA  0E01               	movlw	1
  7141  000FCC  144A               	andwf	??_find_volume,w,c
  7142  000FCE  6E4E               	movwf	(??_find_volume+4)& (0+255),c
  7143  000FD0  0E00               	movlw	0
  7144  000FD2  144B               	andwf	??_find_volume+1,w,c
  7145  000FD4  6E4F               	movwf	(??_find_volume+5)& (0+255),c
  7146  000FD6  0E00               	movlw	0
  7147  000FD8  144C               	andwf	??_find_volume+2,w,c
  7148  000FDA  6E50               	movwf	(??_find_volume+6)& (0+255),c
  7149  000FDC  0E00               	movlw	0
  7150  000FDE  144D               	andwf	??_find_volume+3,w,c
  7151  000FE0  6E51               	movwf	(??_find_volume+7)& (0+255),c
  7152  000FE2  EE20 F012          	lfsr	2,18
  7153  000FE6  5198               	movf	find_volume@fs& (0+255),w,b
  7154  000FE8  26D9               	addwf	fsr2l,f,c
  7155  000FEA  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7156  000FEC  22DA               	addwfc	fsr2h,f,c
  7157  000FEE  CFDE F001          	movff	postinc2,___lmul@multiplier
  7158  000FF2  CFDE F002          	movff	postinc2,___lmul@multiplier+1
  7159  000FF6  CFDE F003          	movff	postinc2,___lmul@multiplier+2
  7160  000FFA  CFDE F004          	movff	postinc2,___lmul@multiplier+3
  7161  000FFE  0E03               	movlw	3
  7162  001000  6E05               	movwf	___lmul@multiplicand,c
  7163  001002  0E00               	movlw	0
  7164  001004  6E06               	movwf	___lmul@multiplicand+1,c
  7165  001006  0E00               	movlw	0
  7166  001008  6E07               	movwf	___lmul@multiplicand+2,c
  7167  00100A  0E00               	movlw	0
  7168  00100C  6E08               	movwf	___lmul@multiplicand+3,c
  7169  00100E  EC03  F029         	call	___lmul	;wreg free
  7170  001012  90D8               	bcf	status,0,c
  7171  001014  3204               	rrcf	?___lmul+3,f,c
  7172  001016  3203               	rrcf	?___lmul+2,f,c
  7173  001018  3202               	rrcf	?___lmul+1,f,c
  7174  00101A  3201               	rrcf	?___lmul,f,c
  7175  00101C  504E               	movf	??_find_volume+4,w,c
  7176  00101E  2401               	addwf	?___lmul,w,c
  7177  001020  0100               	movlb	0	; () banked
  7178  001022  6F76               	movwf	find_volume@szbfat& (0+255),b
  7179  001024  504F               	movf	??_find_volume+5,w,c
  7180  001026  2002               	addwfc	?___lmul+1,w,c
  7181  001028  6F77               	movwf	(find_volume@szbfat+1)& (0+255),b
  7182  00102A  5050               	movf	??_find_volume+6,w,c
  7183  00102C  2003               	addwfc	?___lmul+2,w,c
  7184  00102E  6F78               	movwf	(find_volume@szbfat+2)& (0+255),b
  7185  001030  5051               	movf	??_find_volume+7,w,c
  7186  001032  2004               	addwfc	?___lmul+3,w,c
  7187  001034  D016               	goto	L5
  7188  001036                     l5889:
  7189                           
  7190                           ; BSR set to: 0
  7191  001036  EE20 F012          	lfsr	2,18
  7192  00103A  5198               	movf	find_volume@fs& (0+255),w,b
  7193  00103C  26D9               	addwf	fsr2l,f,c
  7194  00103E  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7195  001040  22DA               	addwfc	fsr2h,f,c
  7196  001042  CFDE F04A          	movff	postinc2,??_find_volume
  7197  001046  CFDE F04B          	movff	postinc2,??_find_volume+1
  7198  00104A  CFDE F04C          	movff	postinc2,??_find_volume+2
  7199  00104E  CFDE F04D          	movff	postinc2,??_find_volume+3
  7200  001052  90D8               	bcf	status,0,c
  7201  001054  344A               	rlcf	??_find_volume,w,c
  7202  001056  6F76               	movwf	find_volume@szbfat& (0+255),b
  7203  001058  344B               	rlcf	??_find_volume+1,w,c
  7204  00105A  6F77               	movwf	(find_volume@szbfat+1)& (0+255),b
  7205  00105C  344C               	rlcf	??_find_volume+2,w,c
  7206  00105E  6F78               	movwf	(find_volume@szbfat+2)& (0+255),b
  7207  001060  344D               	rlcf	??_find_volume+3,w,c
  7208  001062                     L5:
  7209  001062  6F79               	movwf	(find_volume@szbfat+3)& (0+255),b
  7210  001064                     l547:
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;ff.c: 2323:  if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512))
  7214  001064  0EFF               	movlw	255
  7215  001066  2576               	addwf	find_volume@szbfat& (0+255),w,b
  7216  001068  6E4A               	movwf	??_find_volume& (0+255),c
  7217  00106A  0E01               	movlw	1
  7218  00106C  2177               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
  7219  00106E  6E4B               	movwf	(??_find_volume+1)& (0+255),c
  7220  001070  0E00               	movlw	0
  7221  001072  2178               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
  7222  001074  6E4C               	movwf	(??_find_volume+2)& (0+255),c
  7223  001076  0E00               	movlw	0
  7224  001078  2179               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
  7225  00107A  6E4D               	movwf	(??_find_volume+3)& (0+255),c
  7226  00107C  0E0A               	movlw	10
  7227  00107E  D005               	goto	u7620
  7228  001080                     u7625:
  7229  001080  90D8               	bcf	status,0,c
  7230  001082  324D               	rrcf	??_find_volume+3,f,c
  7231  001084  324C               	rrcf	??_find_volume+2,f,c
  7232  001086  324B               	rrcf	??_find_volume+1,f,c
  7233  001088  324A               	rrcf	??_find_volume,f,c
  7234  00108A                     u7620:
  7235  00108A  2EE8               	decfsz	wreg,f,c
  7236  00108C  D7F9               	goto	u7625
  7237  00108E  EE20 F016          	lfsr	2,22
  7238  001092  5198               	movf	find_volume@fs& (0+255),w,b
  7239  001094  26D9               	addwf	fsr2l,f,c
  7240  001096  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7241  001098  22DA               	addwfc	fsr2h,f,c
  7242  00109A  504A               	movf	??_find_volume,w,c
  7243  00109C  5CDE               	subwf	postinc2,w,c
  7244  00109E  504B               	movf	??_find_volume+1,w,c
  7245  0010A0  58DE               	subwfb	postinc2,w,c
  7246  0010A2  504C               	movf	??_find_volume+2,w,c
  7247  0010A4  58DE               	subwfb	postinc2,w,c
  7248  0010A6  504D               	movf	??_find_volume+3,w,c
  7249  0010A8  58DE               	subwfb	postinc2,w,c
  7250  0010AA  A0D8               	btfss	status,0,c
  7251  0010AC  D52D               	goto	u7420
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;ff.c: 2328:  fs->last_clust = fs->free_clust = 0xFFFFFFFF;
  7255  0010AE  EE20 F00E          	lfsr	2,14
  7256  0010B2  5198               	movf	find_volume@fs& (0+255),w,b
  7257  0010B4  26D9               	addwf	fsr2l,f,c
  7258  0010B6  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7259  0010B8  22DA               	addwfc	fsr2h,f,c
  7260  0010BA  0EFF               	movlw	255
  7261  0010BC  6EDE               	movwf	postinc2,c
  7262  0010BE  0EFF               	movlw	255
  7263  0010C0  6EDE               	movwf	postinc2,c
  7264  0010C2  0EFF               	movlw	255
  7265  0010C4  6EDE               	movwf	postinc2,c
  7266  0010C6  0EFF               	movlw	255
  7267  0010C8  6EDD               	movwf	postdec2,c
  7268  0010CA  52DD               	movf	postdec2,f,c
  7269  0010CC  52DD               	movf	postdec2,f,c
  7270  0010CE  EE10 F00A          	lfsr	1,10
  7271  0010D2  5198               	movf	find_volume@fs& (0+255),w,b
  7272  0010D4  26E1               	addwf	fsr1l,f,c
  7273  0010D6  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7274  0010D8  22E2               	addwfc	fsr1h,f,c
  7275  0010DA  CFDE FFE6          	movff	postinc2,postinc1
  7276  0010DE  CFDE FFE6          	movff	postinc2,postinc1
  7277  0010E2  CFDE FFE6          	movff	postinc2,postinc1
  7278  0010E6  CFDE FFE6          	movff	postinc2,postinc1
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;ff.c: 2331:  fs->fsi_flag = 0x80;
  7282  0010EA  EE20 F005          	lfsr	2,5
  7283  0010EE  5198               	movf	find_volume@fs& (0+255),w,b
  7284  0010F0  26D9               	addwf	fsr2l,f,c
  7285  0010F2  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7286  0010F4  22DA               	addwfc	fsr2h,f,c
  7287  0010F6  0E80               	movlw	128
  7288  0010F8  6EDF               	movwf	indf2,c
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;ff.c: 2333:  if (fmt == 3
  7292  0010FA  0E03               	movlw	3
  7293  0010FC  1997               	xorwf	find_volume@fmt& (0+255),w,b
  7294  0010FE  A4D8               	btfss	status,2,c
  7295  001100  D083               	goto	l5913
  7296                           
  7297                           ; BSR set to: 0
  7298  001102  EE20 F05E          	lfsr	2,94
  7299  001106  5198               	movf	find_volume@fs& (0+255),w,b
  7300  001108  26D9               	addwf	fsr2l,f,c
  7301  00110A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7302  00110C  22DA               	addwfc	fsr2h,f,c
  7303  00110E  04DE               	decf	postinc2,w,c
  7304  001110  10DE               	iorwf	postinc2,w,c
  7305  001112  A4D8               	btfss	status,2,c
  7306  001114  D079               	goto	l5913
  7307                           
  7308                           ; BSR set to: 0
  7309  001116  C098  F030         	movff	find_volume@fs,move_window@fs
  7310  00111A  C099  F031         	movff	find_volume@fs+1,move_window@fs+1
  7311  00111E  0E01               	movlw	1
  7312  001120  2591               	addwf	find_volume@bsect& (0+255),w,b
  7313  001122  6E32               	movwf	move_window@sector,c
  7314  001124  0E00               	movlw	0
  7315  001126  2192               	addwfc	(find_volume@bsect+1)& (0+255),w,b
  7316  001128  6E33               	movwf	move_window@sector+1,c
  7317  00112A  0E00               	movlw	0
  7318  00112C  2193               	addwfc	(find_volume@bsect+2)& (0+255),w,b
  7319  00112E  6E34               	movwf	move_window@sector+2,c
  7320  001130  0E00               	movlw	0
  7321  001132  2194               	addwfc	(find_volume@bsect+3)& (0+255),w,b
  7322  001134  6E35               	movwf	move_window@sector+3,c
  7323  001136  EC67  F026         	call	_move_window	;wreg free
  7324  00113A  0900               	iorlw	0
  7325  00113C  A4D8               	btfss	status,2,c
  7326  00113E  D064               	goto	l5913
  7327                           
  7328                           ;ff.c: 2336:  {;ff.c: 2337:   fs->fsi_flag = 0;
  7329  001140  0100               	movlb	0	; () banked
  7330  001142  EE20 F005          	lfsr	2,5
  7331  001146  5198               	movf	find_volume@fs& (0+255),w,b
  7332  001148  26D9               	addwf	fsr2l,f,c
  7333  00114A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7334  00114C  22DA               	addwfc	fsr2h,f,c
  7335  00114E  0E00               	movlw	0
  7336  001150  6EDF               	movwf	indf2,c
  7337                           
  7338                           ;ff.c: 2338:   if ((WORD)(*(WORD*)(BYTE*)(fs->win + 510)) == 0xAA55
  7339  001152  EE22 F02C          	lfsr	2,556
  7340  001156  5198               	movf	find_volume@fs& (0+255),w,b
  7341  001158  26D9               	addwf	fsr2l,f,c
  7342  00115A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7343  00115C  22DA               	addwfc	fsr2h,f,c
  7344  00115E  0E55               	movlw	85
  7345  001160  18DE               	xorwf	postinc2,w,c
  7346  001162  E152               	bnz	l5913
  7347  001164  0EAA               	movlw	170
  7348  001166  18DE               	xorwf	postinc2,w,c
  7349  001168  A4D8               	btfss	status,2,c
  7350  00116A  D04E               	goto	l5913
  7351                           
  7352                           ; BSR set to: 0
  7353  00116C  EE20 F02E          	lfsr	2,46
  7354  001170  5198               	movf	find_volume@fs& (0+255),w,b
  7355  001172  26D9               	addwf	fsr2l,f,c
  7356  001174  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7357  001176  22DA               	addwfc	fsr2h,f,c
  7358  001178  0E52               	movlw	82
  7359  00117A  18DE               	xorwf	postinc2,w,c
  7360  00117C  E145               	bnz	l5913
  7361  00117E  0E52               	movlw	82
  7362  001180  18DE               	xorwf	postinc2,w,c
  7363  001182  E142               	bnz	l5913
  7364  001184  0E61               	movlw	97
  7365  001186  18DE               	xorwf	postinc2,w,c
  7366  001188  E13F               	bnz	l5913
  7367  00118A  0E41               	movlw	65
  7368  00118C  18DE               	xorwf	postinc2,w,c
  7369  00118E  A4D8               	btfss	status,2,c
  7370  001190  D03B               	goto	l5913
  7371                           
  7372                           ; BSR set to: 0
  7373  001192  EE22 F012          	lfsr	2,530
  7374  001196  5198               	movf	find_volume@fs& (0+255),w,b
  7375  001198  26D9               	addwf	fsr2l,f,c
  7376  00119A  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7377  00119C  22DA               	addwfc	fsr2h,f,c
  7378  00119E  0E72               	movlw	114
  7379  0011A0  18DE               	xorwf	postinc2,w,c
  7380  0011A2  E132               	bnz	l5913
  7381  0011A4  0E72               	movlw	114
  7382  0011A6  18DE               	xorwf	postinc2,w,c
  7383  0011A8  E12F               	bnz	l5913
  7384  0011AA  0E41               	movlw	65
  7385  0011AC  18DE               	xorwf	postinc2,w,c
  7386  0011AE  E12C               	bnz	l5913
  7387  0011B0  0E61               	movlw	97
  7388  0011B2  18DE               	xorwf	postinc2,w,c
  7389  0011B4  A4D8               	btfss	status,2,c
  7390  0011B6  D028               	goto	l5913
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;ff.c: 2341:   {;ff.c: 2343:    fs->free_clust = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 488)
      +                          );
  7394  0011B8  EE22 F016          	lfsr	2,534
  7395  0011BC  5198               	movf	find_volume@fs& (0+255),w,b
  7396  0011BE  26D9               	addwf	fsr2l,f,c
  7397  0011C0  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7398  0011C2  22DA               	addwfc	fsr2h,f,c
  7399  0011C4  EE10 F00E          	lfsr	1,14
  7400  0011C8  5198               	movf	find_volume@fs& (0+255),w,b
  7401  0011CA  26E1               	addwf	fsr1l,f,c
  7402  0011CC  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7403  0011CE  22E2               	addwfc	fsr1h,f,c
  7404  0011D0  CFDE FFE6          	movff	postinc2,postinc1
  7405  0011D4  CFDE FFE6          	movff	postinc2,postinc1
  7406  0011D8  CFDE FFE6          	movff	postinc2,postinc1
  7407  0011DC  CFDE FFE6          	movff	postinc2,postinc1
  7408                           
  7409                           ;ff.c: 2346:    fs->last_clust = (DWORD)(*(DWORD*)(BYTE*)(fs->win + 492));
  7410  0011E0  EE22 F01A          	lfsr	2,538
  7411  0011E4  5198               	movf	find_volume@fs& (0+255),w,b
  7412  0011E6  26D9               	addwf	fsr2l,f,c
  7413  0011E8  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7414  0011EA  22DA               	addwfc	fsr2h,f,c
  7415  0011EC  EE10 F00A          	lfsr	1,10
  7416  0011F0  5198               	movf	find_volume@fs& (0+255),w,b
  7417  0011F2  26E1               	addwf	fsr1l,f,c
  7418  0011F4  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7419  0011F6  22E2               	addwfc	fsr1h,f,c
  7420  0011F8  CFDE FFE6          	movff	postinc2,postinc1
  7421  0011FC  CFDE FFE6          	movff	postinc2,postinc1
  7422  001200  CFDE FFE6          	movff	postinc2,postinc1
  7423  001204  CFDE FFE6          	movff	postinc2,postinc1
  7424  001208                     l5913:
  7425                           
  7426                           ;ff.c: 2352:  fs->fs_type = fmt;
  7427  001208  C098  FFD9         	movff	find_volume@fs,fsr2l
  7428  00120C  C099  FFDA         	movff	find_volume@fs+1,fsr2h
  7429  001210  C097  FFDF         	movff	find_volume@fmt,indf2
  7430                           
  7431                           ;ff.c: 2353:  fs->id = ++Fsid;
  7432  001214  0100               	movlb	0	; () banked
  7433  001216  4BDC               	infsnz	_Fsid& (0+255),f,b
  7434  001218  2BDD               	incf	(_Fsid+1)& (0+255),f,b
  7435  00121A  EE20 F006          	lfsr	2,6
  7436  00121E  5198               	movf	find_volume@fs& (0+255),w,b
  7437  001220  26D9               	addwf	fsr2l,f,c
  7438  001222  5199               	movf	(find_volume@fs+1)& (0+255),w,b
  7439  001224  22DA               	addwfc	fsr2h,f,c
  7440  001226  C0DC  FFDE         	movff	_Fsid,postinc2
  7441  00122A  C0DD  FFDD         	movff	_Fsid+1,postdec2
  7442  00122E  EF8E  F004         	goto	l5693
  7443  001232                     __end_of_find_volume:
  7444                           	opt callstack 0
  7445                           
  7446 ;; *************** function _get_ldnumber *****************
  7447 ;; Defined at:
  7448 ;;		line 2114 in file "ff.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;  path            2    0[COMRAM] PTR PTR const unsigned c
  7451 ;;		 -> f_open@path(2), f_mount@path(2), f_mount@rp(2), 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  tt              2   12[COMRAM] PTR const unsigned char 
  7454 ;;		 -> STR_6(11), STR_5(1), STR_4(1), 
  7455 ;;  i               2   10[COMRAM] unsigned short 
  7456 ;;  vol             2    8[COMRAM] int 
  7457 ;;  tp              2    6[COMRAM] PTR const unsigned char 
  7458 ;;		 -> STR_6(11), STR_5(1), STR_4(1), 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  2    0[COMRAM] int 
  7461 ;; Registers used:
  7462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7468 ;;      Params:         2       0       0       0       0       0       0       0       0
  7469 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7470 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7471 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7472 ;;Total ram usage:       14 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_find_volume
  7478 ;;		_f_mount
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text19
  7483  00481A                     __ptext19:
  7484                           	opt callstack 0
  7485  00481A                     _get_ldnumber:
  7486                           	opt callstack 27
  7487                           
  7488                           ;ff.c: 2115:  const TCHAR** path;ff.c: 2117: {;ff.c: 2118:  const TCHAR *tp, *tt;;ff.c: 
      +                          2119:  UINT i;;ff.c: 2120:  int vol = -1;
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;incstack = 0
  7492  00481A  6809               	setf	get_ldnumber@vol,c
  7493  00481C  680A               	setf	get_ldnumber@vol+1,c
  7494                           
  7495                           ;ff.c: 2129:  if (*path) {
  7496  00481E  C001  FFD9         	movff	get_ldnumber@path,fsr2l
  7497  004822  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
  7498  004826  50DE               	movf	postinc2,w,c
  7499  004828  10DE               	iorwf	postinc2,w,c
  7500  00482A  B4D8               	btfsc	status,2,c
  7501  00482C  D05B               	goto	l5469
  7502                           
  7503                           ;ff.c: 2130:   for (tt = *path; (UINT)*tt >= (0 ? ' ' : '!') && *tt != ':'; tt++) ;
  7504  00482E  C001  FFD9         	movff	get_ldnumber@path,fsr2l
  7505  004832  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
  7506  004836  CFDE F00D          	movff	postinc2,get_ldnumber@tt
  7507  00483A  CFDD F00E          	movff	postdec2,get_ldnumber@tt+1
  7508  00483E  D002               	goto	l5443
  7509  004840                     l5441:
  7510  004840  4A0D               	infsnz	get_ldnumber@tt,f,c
  7511  004842  2A0E               	incf	get_ldnumber@tt+1,f,c
  7512  004844                     l5443:
  7513  004844  C00D  FFF6         	movff	get_ldnumber@tt,tblptrl
  7514  004848  C00E  FFF7         	movff	get_ldnumber@tt+1,tblptrh
  7515  00484C                     	if	0	;tblptru may be non-zero
  7516  00484C                     	endif
  7517  00484C                     	if	0	;tblptru may be non-zero
  7518  00484C                     	endif
  7519  00484C  0E20               	movlw	32
  7520  00484E  0008               	tblrd		*
  7521  004850  64F5               	cpfsgt	tablat,c
  7522  004852  D009               	goto	u6890
  7523  004854  C00D  FFF6         	movff	get_ldnumber@tt,tblptrl
  7524  004858  C00E  FFF7         	movff	get_ldnumber@tt+1,tblptrh
  7525  00485C                     	if	0	;tblptru may be non-zero
  7526  00485C                     	endif
  7527  00485C                     	if	0	;tblptru may be non-zero
  7528  00485C                     	endif
  7529  00485C  0008               	tblrd		*
  7530  00485E  50F5               	movf	tablat,w,c
  7531  004860  0A3A               	xorlw	58
  7532  004862  A4D8               	btfss	status,2,c
  7533  004864  D7ED               	goto	l5441
  7534  004866                     u6890:
  7535                           
  7536                           ;ff.c: 2131:   if (*tt == ':') {
  7537  004866  C00D  FFF6         	movff	get_ldnumber@tt,tblptrl
  7538  00486A  C00E  FFF7         	movff	get_ldnumber@tt+1,tblptrh
  7539  00486E                     	if	0	;tblptru may be non-zero
  7540  00486E                     	endif
  7541  00486E                     	if	0	;tblptru may be non-zero
  7542  00486E                     	endif
  7543  00486E  0008               	tblrd		*
  7544  004870  50F5               	movf	tablat,w,c
  7545  004872  0A3A               	xorlw	58
  7546  004874  A4D8               	btfss	status,2,c
  7547  004876  D03B               	goto	l5473
  7548                           
  7549                           ;ff.c: 2132:    tp = *path;
  7550  004878  C001  FFD9         	movff	get_ldnumber@path,fsr2l
  7551  00487C  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
  7552  004880  CFDE F007          	movff	postinc2,get_ldnumber@tp
  7553  004884  CFDD F008          	movff	postdec2,get_ldnumber@tp+1
  7554                           
  7555                           ;ff.c: 2133:    i = *tp++ - '0';
  7556  004888  C007  FFF6         	movff	get_ldnumber@tp,tblptrl
  7557  00488C  C008  FFF7         	movff	get_ldnumber@tp+1,tblptrh
  7558  004890                     	if	0	;tblptru may be non-zero
  7559  004890                     	endif
  7560  004890                     	if	0	;tblptru may be non-zero
  7561  004890                     	endif
  7562  004890  0008               	tblrd		*
  7563  004892  CFF5 F003          	movff	tablat,??_get_ldnumber
  7564  004896  0ED0               	movlw	208
  7565  004898  2403               	addwf	??_get_ldnumber,w,c
  7566  00489A  6E0B               	movwf	get_ldnumber@i,c
  7567  00489C  6A0C               	clrf	get_ldnumber@i+1,c
  7568  00489E  0EFF               	movlw	255
  7569  0048A0  220C               	addwfc	get_ldnumber@i+1,f,c
  7570  0048A2  4A07               	infsnz	get_ldnumber@tp,f,c
  7571  0048A4  2A08               	incf	get_ldnumber@tp+1,f,c
  7572                           
  7573                           ;ff.c: 2134:    if (i < 10 && tp == tt) {
  7574  0048A6  500C               	movf	get_ldnumber@i+1,w,c
  7575  0048A8  E11D               	bnz	l5469
  7576  0048AA  0E0A               	movlw	10
  7577  0048AC  5C0B               	subwf	get_ldnumber@i,w,c
  7578  0048AE  B0D8               	btfsc	status,0,c
  7579  0048B0  D019               	goto	l5469
  7580  0048B2  500D               	movf	get_ldnumber@tt,w,c
  7581  0048B4  1807               	xorwf	get_ldnumber@tp,w,c
  7582  0048B6  E116               	bnz	l5469
  7583  0048B8  500E               	movf	get_ldnumber@tt+1,w,c
  7584  0048BA  1808               	xorwf	get_ldnumber@tp+1,w,c
  7585  0048BC  A4D8               	btfss	status,2,c
  7586  0048BE  D012               	goto	l5469
  7587                           
  7588                           ;ff.c: 2135:     if (i < 1) {
  7589  0048C0  500B               	movf	get_ldnumber@i,w,c
  7590  0048C2  100C               	iorwf	get_ldnumber@i+1,w,c
  7591  0048C4  A4D8               	btfss	status,2,c
  7592  0048C6  D00E               	goto	l5469
  7593                           
  7594                           ;ff.c: 2136:      vol = (int)i;
  7595  0048C8  C00B  F009         	movff	get_ldnumber@i,get_ldnumber@vol
  7596  0048CC  C00C  F00A         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
  7597                           
  7598                           ;ff.c: 2137:      *path = ++tt;
  7599  0048D0  4A0D               	infsnz	get_ldnumber@tt,f,c
  7600  0048D2  2A0E               	incf	get_ldnumber@tt+1,f,c
  7601  0048D4  C001  FFD9         	movff	get_ldnumber@path,fsr2l
  7602  0048D8  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
  7603  0048DC  C00D  FFDE         	movff	get_ldnumber@tt,postinc2
  7604  0048E0  C00E  FFDD         	movff	get_ldnumber@tt+1,postdec2
  7605  0048E4                     l5469:
  7606                           
  7607                           ;ff.c: 2156:    return vol;
  7608  0048E4  C009  F001         	movff	get_ldnumber@vol,?_get_ldnumber
  7609  0048E8  C00A  F002         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
  7610  0048EC  0012               	return	
  7611  0048EE                     l5473:
  7612                           
  7613                           ;ff.c: 2161:   vol = 0;
  7614  0048EE  0E00               	movlw	0
  7615  0048F0  6E0A               	movwf	get_ldnumber@vol+1,c
  7616  0048F2  0E00               	movlw	0
  7617  0048F4  6E09               	movwf	get_ldnumber@vol,c
  7618  0048F6  D7F6               	goto	l5469
  7619  0048F8                     __end_of_get_ldnumber:
  7620                           	opt callstack 0
  7621                           
  7622 ;; *************** function _disk_initialize *****************
  7623 ;; Defined at:
  7624 ;;		line 296 in file "diskio.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  pdrv            1    wreg     unsigned char 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  pdrv            1   17[COMRAM] unsigned char 
  7629 ;;  ocr             4   18[COMRAM] unsigned char [4]
  7630 ;;  tmr             2   26[COMRAM] unsigned short 
  7631 ;;  n               1   28[COMRAM] unsigned char 
  7632 ;;  ty              1   25[COMRAM] unsigned char 
  7633 ;;  cmd             1   24[COMRAM] unsigned char 
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      unsigned char 
  7636 ;; Registers used:
  7637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0
  7644 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7645 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7646 ;;      Totals:        13       0       0       0       0       0       0       0       0
  7647 ;;Total ram usage:       13 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:    5
  7650 ;; This function calls:
  7651 ;;		_SPI1_Exchange8bit
  7652 ;;		_SPI1_Initialize
  7653 ;;		_SPI1_Open
  7654 ;;		_deselect
  7655 ;;		_send_cmd
  7656 ;; This function is called by:
  7657 ;;		_find_volume
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text20
  7662  003A32                     __ptext20:
  7663                           	opt callstack 0
  7664  003A32                     _disk_initialize:
  7665                           	opt callstack 22
  7666                           
  7667                           ;incstack = 0
  7668                           ;disk_initialize@pdrv stored from wreg
  7669  003A32  6E12               	movwf	disk_initialize@pdrv,c
  7670                           
  7671                           ;diskio.c: 297:  BYTE pdrv;diskio.c: 299: {;diskio.c: 300:  BYTE n, cmd, ty, ocr[4];;dis
      +                          kio.c: 301:  UINT tmr;;diskio.c: 304:  if (pdrv) return 0x01;
  7672  003A34  5012               	movf	disk_initialize@pdrv,w,c
  7673  003A36  B4D8               	btfsc	status,2,c
  7674  003A38  D002               	goto	l70
  7675  003A3A  0E01               	movlw	1
  7676  003A3C  0012               	return	
  7677  003A3E                     l70:
  7678                           
  7679                           ;diskio.c: 306:  if (Stat & 0x02) return Stat;
  7680  003A3E  0100               	movlb	0	; () banked
  7681  003A40  A3F3               	btfss	_Stat& (0+255),1,b
  7682  003A42  D003               	goto	l5073
  7683  003A44                     u6180:
  7684  003A44  0100               	movlb	0	; () banked
  7685  003A46  51F3               	movf	_Stat& (0+255),w,b
  7686  003A48  0012               	return	
  7687  003A4A                     l5073:
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;diskio.c: 308:  SPI1_Initialize();
  7691  003A4A  EC87  F02A         	call	_SPI1_Initialize	;wreg free
  7692                           
  7693                           ;diskio.c: 309:  for (n = 10; n; n--) SPI1_Exchange8bit(0xFF);
  7694  003A4E  0E0A               	movlw	10
  7695  003A50  6E1D               	movwf	disk_initialize@n,c
  7696  003A52  D004               	goto	l5081
  7697  003A54                     l5077:
  7698  003A54  0EFF               	movlw	255
  7699  003A56  EC70  F02A         	call	_SPI1_Exchange8bit
  7700  003A5A  061D               	decf	disk_initialize@n,f,c
  7701  003A5C                     l5081:
  7702  003A5C  501D               	movf	disk_initialize@n,w,c
  7703  003A5E  A4D8               	btfss	status,2,c
  7704  003A60  D7F9               	goto	l5077
  7705                           
  7706                           ;diskio.c: 311:  ty = 0;
  7707  003A62  0E00               	movlw	0
  7708  003A64  6E1A               	movwf	disk_initialize@ty,c
  7709                           
  7710                           ;diskio.c: 312:  if (send_cmd((0), 0) == 1) {
  7711  003A66  0E00               	movlw	0
  7712  003A68  6E0B               	movwf	send_cmd@arg,c
  7713  003A6A  0E00               	movlw	0
  7714  003A6C  6E0C               	movwf	send_cmd@arg+1,c
  7715  003A6E  0E00               	movlw	0
  7716  003A70  6E0D               	movwf	send_cmd@arg+2,c
  7717  003A72  0E00               	movlw	0
  7718  003A74  6E0E               	movwf	send_cmd@arg+3,c
  7719  003A76  0E00               	movlw	0
  7720  003A78  EC75  F029         	call	_send_cmd
  7721  003A7C  06E8               	decf	wreg,f,c
  7722  003A7E  A4D8               	btfss	status,2,c
  7723  003A80  D0C1               	goto	l92
  7724                           
  7725                           ;diskio.c: 313:   if (send_cmd((8), 0x1AA) == 1) {
  7726  003A82  0EAA               	movlw	170
  7727  003A84  6E0B               	movwf	send_cmd@arg,c
  7728  003A86  0E01               	movlw	1
  7729  003A88  6E0C               	movwf	send_cmd@arg+1,c
  7730  003A8A  0E00               	movlw	0
  7731  003A8C  6E0D               	movwf	send_cmd@arg+2,c
  7732  003A8E  0E00               	movlw	0
  7733  003A90  6E0E               	movwf	send_cmd@arg+3,c
  7734  003A92  0E08               	movlw	8
  7735  003A94  EC75  F029         	call	_send_cmd
  7736  003A98  06E8               	decf	wreg,f,c
  7737  003A9A  A4D8               	btfss	status,2,c
  7738  003A9C  D067               	goto	l5137
  7739                           
  7740                           ;diskio.c: 314:    for (n = 0; n < 4; n++) ocr[n] = SPI1_Exchange8bit(0xFF);
  7741  003A9E  0E00               	movlw	0
  7742  003AA0  6E1D               	movwf	disk_initialize@n,c
  7743  003AA2                     l5095:
  7744  003AA2  0E13               	movlw	low disk_initialize@ocr
  7745  003AA4  241D               	addwf	disk_initialize@n,w,c
  7746  003AA6  6ED9               	movwf	fsr2l,c
  7747  003AA8  6ADA               	clrf	fsr2h,c
  7748  003AAA  0E00               	movlw	high disk_initialize@ocr
  7749  003AAC  22DA               	addwfc	fsr2h,f,c
  7750  003AAE  0EFF               	movlw	255
  7751  003AB0  EC70  F02A         	call	_SPI1_Exchange8bit
  7752  003AB4  6EDF               	movwf	indf2,c
  7753  003AB6  2A1D               	incf	disk_initialize@n,f,c
  7754  003AB8  0E03               	movlw	3
  7755  003ABA  641D               	cpfsgt	disk_initialize@n,c
  7756  003ABC  D7F2               	goto	l5095
  7757                           
  7758                           ;diskio.c: 315:    if (ocr[2] == 0x01 && ocr[3] == 0xAA) {
  7759  003ABE  0415               	decf	disk_initialize@ocr+2,w,c
  7760  003AC0  A4D8               	btfss	status,2,c
  7761  003AC2  D0A0               	goto	l92
  7762  003AC4  0EAA               	movlw	170
  7763  003AC6  1816               	xorwf	disk_initialize@ocr+3,w,c
  7764  003AC8  A4D8               	btfss	status,2,c
  7765  003ACA  D09C               	goto	l92
  7766                           
  7767                           ;diskio.c: 316:     for (tmr = 1000; tmr; tmr--) {
  7768  003ACC  0E03               	movlw	3
  7769  003ACE  6E1C               	movwf	disk_initialize@tmr+1,c
  7770  003AD0  0EE8               	movlw	232
  7771  003AD2  6E1B               	movwf	disk_initialize@tmr,c
  7772  003AD4  D018               	goto	l81
  7773  003AD6                     l5107:
  7774                           
  7775                           ;diskio.c: 317:      if (send_cmd((0x80+41), 1UL << 30) == 0) break;
  7776  003AD6  0E00               	movlw	0
  7777  003AD8  6E0B               	movwf	send_cmd@arg,c
  7778  003ADA  0E00               	movlw	0
  7779  003ADC  6E0C               	movwf	send_cmd@arg+1,c
  7780  003ADE  0E00               	movlw	0
  7781  003AE0  6E0D               	movwf	send_cmd@arg+2,c
  7782  003AE2  0E40               	movlw	64
  7783  003AE4  6E0E               	movwf	send_cmd@arg+3,c
  7784  003AE6  0EA9               	movlw	169
  7785  003AE8  EC75  F029         	call	_send_cmd
  7786  003AEC  0900               	iorlw	0
  7787  003AEE  B4D8               	btfsc	status,2,c
  7788  003AF0  D00E               	goto	u6260
  7789                           
  7790                           ;diskio.c: 318:      _delay((unsigned long)((1)*(8000000/4000.0)));
  7791  003AF2  0E03               	movlw	3
  7792  003AF4  6E11               	movwf	??_disk_initialize& (0+255),c
  7793  003AF6  0E98               	movlw	152
  7794  003AF8                     u9507:
  7795  003AF8  2EE8               	decfsz	wreg,f,c
  7796  003AFA  D7FE               	bra	u9507
  7797  003AFC  2E11               	decfsz	??_disk_initialize& (0+255),f,c
  7798  003AFE  D7FC               	bra	u9507
  7799                           
  7800                           ;diskio.c: 319:     }
  7801  003B00  061B               	decf	disk_initialize@tmr,f,c
  7802  003B02  A0D8               	btfss	status,0,c
  7803  003B04  061C               	decf	disk_initialize@tmr+1,f,c
  7804  003B06                     l81:
  7805  003B06  501B               	movf	disk_initialize@tmr,w,c
  7806  003B08  101C               	iorwf	disk_initialize@tmr+1,w,c
  7807  003B0A  A4D8               	btfss	status,2,c
  7808  003B0C  D7E4               	goto	l5107
  7809  003B0E                     u6260:
  7810                           
  7811                           ;diskio.c: 320:     if (tmr && send_cmd((58), 0) == 0) {
  7812  003B0E  501B               	movf	disk_initialize@tmr,w,c
  7813  003B10  101C               	iorwf	disk_initialize@tmr+1,w,c
  7814  003B12  B4D8               	btfsc	status,2,c
  7815  003B14  D077               	goto	l92
  7816  003B16  0E00               	movlw	0
  7817  003B18  6E0B               	movwf	send_cmd@arg,c
  7818  003B1A  0E00               	movlw	0
  7819  003B1C  6E0C               	movwf	send_cmd@arg+1,c
  7820  003B1E  0E00               	movlw	0
  7821  003B20  6E0D               	movwf	send_cmd@arg+2,c
  7822  003B22  0E00               	movlw	0
  7823  003B24  6E0E               	movwf	send_cmd@arg+3,c
  7824  003B26  0E3A               	movlw	58
  7825  003B28  EC75  F029         	call	_send_cmd
  7826  003B2C  0900               	iorlw	0
  7827  003B2E  A4D8               	btfss	status,2,c
  7828  003B30  D069               	goto	l92
  7829                           
  7830                           ;diskio.c: 321:      for (n = 0; n < 4; n++) ocr[n] = SPI1_Exchange8bit(0xFF);
  7831  003B32  0E00               	movlw	0
  7832  003B34  6E1D               	movwf	disk_initialize@n,c
  7833  003B36                     l5125:
  7834  003B36  0E13               	movlw	low disk_initialize@ocr
  7835  003B38  241D               	addwf	disk_initialize@n,w,c
  7836  003B3A  6ED9               	movwf	fsr2l,c
  7837  003B3C  6ADA               	clrf	fsr2h,c
  7838  003B3E  0E00               	movlw	high disk_initialize@ocr
  7839  003B40  22DA               	addwfc	fsr2h,f,c
  7840  003B42  0EFF               	movlw	255
  7841  003B44  EC70  F02A         	call	_SPI1_Exchange8bit
  7842  003B48  6EDF               	movwf	indf2,c
  7843  003B4A  2A1D               	incf	disk_initialize@n,f,c
  7844  003B4C  0E03               	movlw	3
  7845  003B4E  641D               	cpfsgt	disk_initialize@n,c
  7846  003B50  D7F2               	goto	l5125
  7847                           
  7848                           ;diskio.c: 322:      ty = (ocr[0] & 0x40) ? 0x04 | 0x08 : 0x04;
  7849  003B52  BC13               	btfsc	disk_initialize@ocr,6,c
  7850  003B54  D004               	goto	l5133
  7851  003B56  0E00               	movlw	0
  7852  003B58  6E18               	movwf	_disk_initialize$134+1,c
  7853  003B5A  0E04               	movlw	4
  7854  003B5C  D003               	goto	L6
  7855  003B5E                     l5133:
  7856  003B5E  0E00               	movlw	0
  7857  003B60  6E18               	movwf	_disk_initialize$134+1,c
  7858  003B62  0E0C               	movlw	12
  7859  003B64                     L6:
  7860  003B64  6E17               	movwf	_disk_initialize$134,c
  7861  003B66  C017  F01A         	movff	_disk_initialize$134,disk_initialize@ty
  7862  003B6A  D04C               	goto	l92
  7863  003B6C                     l5137:
  7864                           
  7865                           ;diskio.c: 326:    if (send_cmd((0x80+41), 0) <= 1) {
  7866  003B6C  0E00               	movlw	0
  7867  003B6E  6E0B               	movwf	send_cmd@arg,c
  7868  003B70  0E00               	movlw	0
  7869  003B72  6E0C               	movwf	send_cmd@arg+1,c
  7870  003B74  0E00               	movlw	0
  7871  003B76  6E0D               	movwf	send_cmd@arg+2,c
  7872  003B78  0E00               	movlw	0
  7873  003B7A  6E0E               	movwf	send_cmd@arg+3,c
  7874  003B7C  0EA9               	movlw	169
  7875  003B7E  EC75  F029         	call	_send_cmd
  7876  003B82  6E11               	movwf	??_disk_initialize& (0+255),c
  7877  003B84  0E02               	movlw	2
  7878  003B86  6011               	cpfslt	??_disk_initialize,c
  7879  003B88  D004               	goto	l5141
  7880                           
  7881                           ;diskio.c: 327:     ty = 0x02; cmd = (0x80+41);
  7882  003B8A  0E02               	movlw	2
  7883  003B8C  6E1A               	movwf	disk_initialize@ty,c
  7884  003B8E  0EA9               	movlw	169
  7885  003B90  D003               	goto	L7
  7886  003B92                     l5141:
  7887                           
  7888                           ;diskio.c: 329:     ty = 0x01; cmd = (1);
  7889  003B92  0E01               	movlw	1
  7890  003B94  6E1A               	movwf	disk_initialize@ty,c
  7891  003B96  0E01               	movlw	1
  7892  003B98                     L7:
  7893  003B98  6E19               	movwf	disk_initialize@cmd,c
  7894                           
  7895                           ;diskio.c: 331:    for (tmr = 1000; tmr; tmr--) {
  7896                           
  7897                           ;diskio.c: 330:    }
  7898  003B9A  0E03               	movlw	3
  7899  003B9C  6E1C               	movwf	disk_initialize@tmr+1,c
  7900  003B9E  0EE8               	movlw	232
  7901  003BA0  6E1B               	movwf	disk_initialize@tmr,c
  7902  003BA2  D018               	goto	l95
  7903  003BA4                     l5143:
  7904                           
  7905                           ;diskio.c: 332:     if (send_cmd(cmd, 0) == 0) break;
  7906  003BA4  0E00               	movlw	0
  7907  003BA6  6E0B               	movwf	send_cmd@arg,c
  7908  003BA8  0E00               	movlw	0
  7909  003BAA  6E0C               	movwf	send_cmd@arg+1,c
  7910  003BAC  0E00               	movlw	0
  7911  003BAE  6E0D               	movwf	send_cmd@arg+2,c
  7912  003BB0  0E00               	movlw	0
  7913  003BB2  6E0E               	movwf	send_cmd@arg+3,c
  7914  003BB4  5019               	movf	disk_initialize@cmd,w,c
  7915  003BB6  EC75  F029         	call	_send_cmd
  7916  003BBA  0900               	iorlw	0
  7917  003BBC  B4D8               	btfsc	status,2,c
  7918  003BBE  D00E               	goto	u6330
  7919                           
  7920                           ;diskio.c: 333:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7921  003BC0  0E03               	movlw	3
  7922  003BC2  6E11               	movwf	??_disk_initialize& (0+255),c
  7923  003BC4  0E98               	movlw	152
  7924  003BC6                     u9517:
  7925  003BC6  2EE8               	decfsz	wreg,f,c
  7926  003BC8  D7FE               	bra	u9517
  7927  003BCA  2E11               	decfsz	??_disk_initialize& (0+255),f,c
  7928  003BCC  D7FC               	bra	u9517
  7929                           
  7930                           ;diskio.c: 334:    }
  7931  003BCE  061B               	decf	disk_initialize@tmr,f,c
  7932  003BD0  A0D8               	btfss	status,0,c
  7933  003BD2  061C               	decf	disk_initialize@tmr+1,f,c
  7934  003BD4                     l95:
  7935  003BD4  501B               	movf	disk_initialize@tmr,w,c
  7936  003BD6  101C               	iorwf	disk_initialize@tmr+1,w,c
  7937  003BD8  A4D8               	btfss	status,2,c
  7938  003BDA  D7E4               	goto	l5143
  7939  003BDC                     u6330:
  7940                           
  7941                           ;diskio.c: 335:    if (!tmr || send_cmd((16), 512) != 0)
  7942  003BDC  501B               	movf	disk_initialize@tmr,w,c
  7943  003BDE  101C               	iorwf	disk_initialize@tmr+1,w,c
  7944  003BE0  B4D8               	btfsc	status,2,c
  7945  003BE2  D00E               	goto	u6350
  7946  003BE4  0E00               	movlw	0
  7947  003BE6  6E0B               	movwf	send_cmd@arg,c
  7948  003BE8  0E02               	movlw	2
  7949  003BEA  6E0C               	movwf	send_cmd@arg+1,c
  7950  003BEC  0E00               	movlw	0
  7951  003BEE  6E0D               	movwf	send_cmd@arg+2,c
  7952  003BF0  0E00               	movlw	0
  7953  003BF2  6E0E               	movwf	send_cmd@arg+3,c
  7954  003BF4  0E10               	movlw	16
  7955  003BF6  EC75  F029         	call	_send_cmd
  7956  003BFA  0900               	iorlw	0
  7957  003BFC  B4D8               	btfsc	status,2,c
  7958  003BFE  D002               	goto	l92
  7959  003C00                     u6350:
  7960                           
  7961                           ;diskio.c: 336:     ty = 0;
  7962  003C00  0E00               	movlw	0
  7963  003C02  6E1A               	movwf	disk_initialize@ty,c
  7964  003C04                     l92:
  7965                           
  7966                           ;diskio.c: 339:  CardType = ty;
  7967  003C04  C01A  F0E0         	movff	disk_initialize@ty,_CardType
  7968                           
  7969                           ;diskio.c: 340:  deselect();
  7970  003C08  EC8E  F02A         	call	_deselect	;wreg free
  7971                           
  7972                           ;diskio.c: 342:  if (ty) {
  7973  003C0C  501A               	movf	disk_initialize@ty,w,c
  7974  003C0E  B4D8               	btfsc	status,2,c
  7975  003C10  D719               	goto	u6180
  7976                           
  7977                           ;diskio.c: 343:   Stat &= ~0x01;
  7978  003C12  0100               	movlb	0	; () banked
  7979  003C14  91F3               	bcf	_Stat& (0+255),0,b
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;diskio.c: 344:   SPI1_Open();
  7983  003C16  EC80  F02A         	call	_SPI1_Open	;wreg free
  7984  003C1A  D714               	goto	u6180
  7985  003C1C                     __end_of_disk_initialize:
  7986                           	opt callstack 0
  7987                           
  7988 ;; *************** function _SPI1_Open *****************
  7989 ;; Defined at:
  7990 ;;		line 77 in file "mcc_generated_files/spi1.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;		None
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;		None
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      void 
  7997 ;; Registers used:
  7998 ;;		wreg, status,2
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8004 ;;      Params:         0       0       0       0       0       0       0       0       0
  8005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8008 ;;Total ram usage:        0 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; This function calls:
  8011 ;;		Nothing
  8012 ;; This function is called by:
  8013 ;;		_disk_initialize
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text21
  8018  005500                     __ptext21:
  8019                           	opt callstack 0
  8020  005500                     _SPI1_Open:
  8021                           	opt callstack 26
  8022                           
  8023                           ;mcc_generated_files/spi1.c: 81:  SSP1STAT = 0x40;
  8024                           
  8025                           ;incstack = 0
  8026  005500  0E40               	movlw	64
  8027  005502  6EC7               	movwf	4039,c	;volatile
  8028                           
  8029                           ;mcc_generated_files/spi1.c: 84:  SSP1CON1 = 0x20;
  8030  005504  0E20               	movlw	32
  8031  005506  6EC6               	movwf	4038,c	;volatile
  8032                           
  8033                           ;mcc_generated_files/spi1.c: 87:  SSP1ADD = 0x00;
  8034  005508  0E00               	movlw	0
  8035  00550A  6EC8               	movwf	4040,c	;volatile
  8036  00550C  0012               	return		;funcret
  8037  00550E                     __end_of_SPI1_Open:
  8038                           	opt callstack 0
  8039                           
  8040 ;; *************** function _check_fs *****************
  8041 ;; Defined at:
  8042 ;;		line 2175 in file "ff.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  fs              2   58[COMRAM] PTR struct .
  8045 ;;		 -> FatFs(558), NULL(0), 
  8046 ;;  sect            4   60[COMRAM] unsigned long 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;		None
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      unsigned char 
  8051 ;; Registers used:
  8052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8058 ;;      Params:         6       0       0       0       0       0       0       0       0
  8059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8060 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8061 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8062 ;;Total ram usage:       10 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:    8
  8065 ;; This function calls:
  8066 ;;		_move_window
  8067 ;; This function is called by:
  8068 ;;		_find_volume
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           	psect	text22
  8073  00472E                     __ptext22:
  8074                           	opt callstack 0
  8075  00472E                     _check_fs:
  8076                           	opt callstack 19
  8077                           
  8078                           ;ff.c: 2176:  FATFS* fs,;ff.c: 2177:  DWORD sect;ff.c: 2179: {;ff.c: 2180:  fs->wflag = 
      +                          0; fs->winsect = 0xFFFFFFFF;
  8079                           
  8080                           ;incstack = 0
  8081  00472E  EE20 F004          	lfsr	2,4
  8082  004732  503B               	movf	check_fs@fs,w,c
  8083  004734  26D9               	addwf	fsr2l,f,c
  8084  004736  503C               	movf	check_fs@fs+1,w,c
  8085  004738  22DA               	addwfc	fsr2h,f,c
  8086  00473A  0E00               	movlw	0
  8087  00473C  6EDF               	movwf	indf2,c
  8088  00473E  EE20 F02A          	lfsr	2,42
  8089  004742  503B               	movf	check_fs@fs,w,c
  8090  004744  26D9               	addwf	fsr2l,f,c
  8091  004746  503C               	movf	check_fs@fs+1,w,c
  8092  004748  22DA               	addwfc	fsr2h,f,c
  8093  00474A  0EFF               	movlw	255
  8094  00474C  6EDE               	movwf	postinc2,c
  8095  00474E  0EFF               	movlw	255
  8096  004750  6EDE               	movwf	postinc2,c
  8097  004752  0EFF               	movlw	255
  8098  004754  6EDE               	movwf	postinc2,c
  8099  004756  0EFF               	movlw	255
  8100  004758  6EDD               	movwf	postdec2,c
  8101                           
  8102                           ;ff.c: 2181:  if (move_window(fs, sect) != FR_OK)
  8103  00475A  C03B  F030         	movff	check_fs@fs,move_window@fs
  8104  00475E  C03C  F031         	movff	check_fs@fs+1,move_window@fs+1
  8105  004762  C03D  F032         	movff	check_fs@sect,move_window@sector
  8106  004766  C03E  F033         	movff	check_fs@sect+1,move_window@sector+1
  8107  00476A  C03F  F034         	movff	check_fs@sect+2,move_window@sector+2
  8108  00476E  C040  F035         	movff	check_fs@sect+3,move_window@sector+3
  8109  004772  EC67  F026         	call	_move_window	;wreg free
  8110  004776  0900               	iorlw	0
  8111  004778  B4D8               	btfsc	status,2,c
  8112  00477A  D002               	goto	l5487
  8113                           
  8114                           ;ff.c: 2182:   return 3;
  8115  00477C  0E03               	movlw	3
  8116  00477E  0012               	return	
  8117  004780                     l5487:
  8118                           
  8119                           ;ff.c: 2184:  if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
  8120  004780  EE22 F02C          	lfsr	2,556
  8121  004784  503B               	movf	check_fs@fs,w,c
  8122  004786  26D9               	addwf	fsr2l,f,c
  8123  004788  503C               	movf	check_fs@fs+1,w,c
  8124  00478A  22DA               	addwfc	fsr2h,f,c
  8125  00478C  0E55               	movlw	85
  8126  00478E  18DE               	xorwf	postinc2,w,c
  8127  004790  E104               	bnz	u6950
  8128  004792  0EAA               	movlw	170
  8129  004794  18DE               	xorwf	postinc2,w,c
  8130  004796  B4D8               	btfsc	status,2,c
  8131  004798  D002               	goto	l5493
  8132  00479A                     u6950:
  8133                           
  8134                           ;ff.c: 2185:   return 2;
  8135  00479A  0E02               	movlw	2
  8136  00479C  0012               	return	
  8137  00479E                     l5493:
  8138                           
  8139                           ;ff.c: 2187:  if (((DWORD)(*(DWORD*)(BYTE*)(&fs->win[54])) & 0xFFFFFF) == 0x544146)
  8140  00479E  EE20 F064          	lfsr	2,100
  8141  0047A2  503B               	movf	check_fs@fs,w,c
  8142  0047A4  26D9               	addwf	fsr2l,f,c
  8143  0047A6  503C               	movf	check_fs@fs+1,w,c
  8144  0047A8  22DA               	addwfc	fsr2h,f,c
  8145  0047AA  0EFF               	movlw	255
  8146  0047AC  14DE               	andwf	postinc2,w,c
  8147  0047AE  6E41               	movwf	??_check_fs& (0+255),c
  8148  0047B0  0EFF               	movlw	255
  8149  0047B2  14DE               	andwf	postinc2,w,c
  8150  0047B4  6E42               	movwf	(??_check_fs+1)& (0+255),c
  8151  0047B6  0EFF               	movlw	255
  8152  0047B8  14DE               	andwf	postinc2,w,c
  8153  0047BA  6E43               	movwf	(??_check_fs+2)& (0+255),c
  8154  0047BC  0E00               	movlw	0
  8155  0047BE  14DE               	andwf	postinc2,w,c
  8156  0047C0  6E44               	movwf	(??_check_fs+3)& (0+255),c
  8157  0047C2  0E46               	movlw	70
  8158  0047C4  1841               	xorwf	??_check_fs,w,c
  8159  0047C6  E10A               	bnz	l5499
  8160  0047C8  0E41               	movlw	65
  8161  0047CA  1842               	xorwf	??_check_fs+1,w,c
  8162  0047CC  E107               	bnz	l5499
  8163  0047CE  0E54               	movlw	84
  8164  0047D0  1843               	xorwf	??_check_fs+2,w,c
  8165  0047D2  1044               	iorwf	??_check_fs+3,w,c
  8166  0047D4  A4D8               	btfss	status,2,c
  8167  0047D6  D002               	goto	l5499
  8168  0047D8                     u6960:
  8169                           
  8170                           ;ff.c: 2188:   return 0;
  8171  0047D8  0E00               	movlw	0
  8172  0047DA  0012               	return	
  8173  0047DC                     l5499:
  8174                           
  8175                           ;ff.c: 2189:  if (((DWORD)(*(DWORD*)(BYTE*)(&fs->win[82])) & 0xFFFFFF) == 0x544146)
  8176  0047DC  EE20 F080          	lfsr	2,128
  8177  0047E0  503B               	movf	check_fs@fs,w,c
  8178  0047E2  26D9               	addwf	fsr2l,f,c
  8179  0047E4  503C               	movf	check_fs@fs+1,w,c
  8180  0047E6  22DA               	addwfc	fsr2h,f,c
  8181  0047E8  0EFF               	movlw	255
  8182  0047EA  14DE               	andwf	postinc2,w,c
  8183  0047EC  6E41               	movwf	??_check_fs& (0+255),c
  8184  0047EE  0EFF               	movlw	255
  8185  0047F0  14DE               	andwf	postinc2,w,c
  8186  0047F2  6E42               	movwf	(??_check_fs+1)& (0+255),c
  8187  0047F4  0EFF               	movlw	255
  8188  0047F6  14DE               	andwf	postinc2,w,c
  8189  0047F8  6E43               	movwf	(??_check_fs+2)& (0+255),c
  8190  0047FA  0E00               	movlw	0
  8191  0047FC  14DE               	andwf	postinc2,w,c
  8192  0047FE  6E44               	movwf	(??_check_fs+3)& (0+255),c
  8193  004800  0E46               	movlw	70
  8194  004802  1841               	xorwf	??_check_fs,w,c
  8195  004804  E108               	bnz	l5505
  8196  004806  0E41               	movlw	65
  8197  004808  1842               	xorwf	??_check_fs+1,w,c
  8198  00480A  E105               	bnz	l5505
  8199  00480C  0E54               	movlw	84
  8200  00480E  1843               	xorwf	??_check_fs+2,w,c
  8201  004810  1044               	iorwf	??_check_fs+3,w,c
  8202  004812  B4D8               	btfsc	status,2,c
  8203  004814  D7E1               	goto	u6960
  8204  004816                     l5505:
  8205                           
  8206                           ;ff.c: 2192:  return 1;
  8207  004816  0E01               	movlw	1
  8208  004818  0012               	return		;funcret
  8209  00481A                     __end_of_check_fs:
  8210                           	opt callstack 0
  8211                           
  8212 ;; *************** function _f_lseek *****************
  8213 ;; Defined at:
  8214 ;;		line 3033 in file "ff.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  fp              2   13[BANK0 ] PTR struct .
  8217 ;;		 -> Fil(32), 
  8218 ;;  ofs             4   15[BANK0 ] unsigned long 
  8219 ;; Auto vars:     Size  Location     Type
  8220 ;;  clst            4   48[BANK0 ] unsigned long 
  8221 ;;  bcs             4   44[BANK0 ] unsigned long 
  8222 ;;  nsect           4   40[BANK0 ] unsigned long 
  8223 ;;  ifptr           4   35[BANK0 ] unsigned long 
  8224 ;;  res             1   39[BANK0 ] enum E93
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      enum E93
  8227 ;; Registers used:
  8228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8234 ;;      Params:         0       6       0       0       0       0       0       0       0
  8235 ;;      Locals:         0      17       0       0       0       0       0       0       0
  8236 ;;      Temps:          0      16       0       0       0       0       0       0       0
  8237 ;;      Totals:         0      39       0       0       0       0       0       0       0
  8238 ;;Total ram usage:       39 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:   10
  8241 ;; This function calls:
  8242 ;;		___lldiv
  8243 ;;		_clust2sect
  8244 ;;		_create_chain
  8245 ;;		_get_fat
  8246 ;;		_validate
  8247 ;; This function is called by:
  8248 ;;		_guardar
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text23
  8253  001232                     __ptext23:
  8254                           	opt callstack 0
  8255  001232                     _f_lseek:
  8256                           	opt callstack 19
  8257                           
  8258                           ;ff.c: 3034:  FIL* fp,;ff.c: 3035:  DWORD ofs;ff.c: 3037: {;ff.c: 3038:  FRESULT res;;ff
      +                          .c: 3039:  DWORD clst, bcs, nsect, ifptr;;ff.c: 3045:  res = validate(fp);
  8259                           
  8260                           ;incstack = 0
  8261  001232  C06D  F002         	movff	f_lseek@fp,validate@obj
  8262  001236  C06E  F003         	movff	f_lseek@fp+1,validate@obj+1
  8263  00123A  ECBA  F026         	call	_validate	;wreg free
  8264  00123E  0100               	movlb	0	; () banked
  8265  001240  6F87               	movwf	f_lseek@res& (0+255),b
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;ff.c: 3046:  if (res != FR_OK) return res;
  8269  001242  5187               	movf	f_lseek@res& (0+255),w,b
  8270  001244  B4D8               	btfsc	status,2,c
  8271  001246  D002               	goto	l6235
  8272  001248                     u8220:
  8273                           
  8274                           ; BSR set to: 0
  8275  001248  5187               	movf	f_lseek@res& (0+255),w,b
  8276  00124A  0012               	return	
  8277  00124C                     l6235:
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;ff.c: 3047:  if (fp->err)
  8281  00124C  EE20 F005          	lfsr	2,5
  8282  001250  516D               	movf	f_lseek@fp& (0+255),w,b
  8283  001252  26D9               	addwf	fsr2l,f,c
  8284  001254  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8285  001256  22DA               	addwfc	fsr2h,f,c
  8286  001258  50DF               	movf	indf2,w,c
  8287  00125A  B4D8               	btfsc	status,2,c
  8288  00125C  D008               	goto	l6241
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;ff.c: 3048:   return (FRESULT)fp->err;
  8292  00125E  EE20 F005          	lfsr	2,5
  8293  001262  516D               	movf	f_lseek@fp& (0+255),w,b
  8294  001264  26D9               	addwf	fsr2l,f,c
  8295  001266  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8296  001268  22DA               	addwfc	fsr2h,f,c
  8297  00126A  50DF               	movf	indf2,w,c
  8298  00126C  0012               	return	
  8299  00126E                     l6241:
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;ff.c: 3106:  {;ff.c: 3107:   if (ofs > fp->fsize
  8303  00126E  EE20 F00A          	lfsr	2,10
  8304  001272  516D               	movf	f_lseek@fp& (0+255),w,b
  8305  001274  26D9               	addwf	fsr2l,f,c
  8306  001276  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8307  001278  22DA               	addwfc	fsr2h,f,c
  8308  00127A  516F               	movf	f_lseek@ofs& (0+255),w,b
  8309  00127C  5CDE               	subwf	postinc2,w,c
  8310  00127E  5170               	movf	(f_lseek@ofs+1)& (0+255),w,b
  8311  001280  58DE               	subwfb	postinc2,w,c
  8312  001282  5171               	movf	(f_lseek@ofs+2)& (0+255),w,b
  8313  001284  58DE               	subwfb	postinc2,w,c
  8314  001286  5172               	movf	(f_lseek@ofs+3)& (0+255),w,b
  8315  001288  58DE               	subwfb	postinc2,w,c
  8316  00128A  B0D8               	btfsc	status,0,c
  8317  00128C  D016               	goto	l667
  8318                           
  8319                           ; BSR set to: 0
  8320  00128E  EE20 F004          	lfsr	2,4
  8321  001292  516D               	movf	f_lseek@fp& (0+255),w,b
  8322  001294  26D9               	addwf	fsr2l,f,c
  8323  001296  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8324  001298  22DA               	addwfc	fsr2h,f,c
  8325  00129A  B2DF               	btfsc	indf2,1,c
  8326  00129C  D00E               	goto	l667
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;ff.c: 3111:    ) ofs = fp->fsize;
  8330  00129E  EE20 F00A          	lfsr	2,10
  8331  0012A2  516D               	movf	f_lseek@fp& (0+255),w,b
  8332  0012A4  26D9               	addwf	fsr2l,f,c
  8333  0012A6  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8334  0012A8  22DA               	addwfc	fsr2h,f,c
  8335  0012AA  CFDE F06F          	movff	postinc2,f_lseek@ofs
  8336  0012AE  CFDE F070          	movff	postinc2,f_lseek@ofs+1
  8337  0012B2  CFDE F071          	movff	postinc2,f_lseek@ofs+2
  8338  0012B6  CFDE F072          	movff	postinc2,f_lseek@ofs+3
  8339  0012BA                     l667:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;ff.c: 3113:   ifptr = fp->fptr;
  8343  0012BA  EE20 F006          	lfsr	2,6
  8344  0012BE  516D               	movf	f_lseek@fp& (0+255),w,b
  8345  0012C0  26D9               	addwf	fsr2l,f,c
  8346  0012C2  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8347  0012C4  22DA               	addwfc	fsr2h,f,c
  8348  0012C6  CFDE F083          	movff	postinc2,f_lseek@ifptr
  8349  0012CA  CFDE F084          	movff	postinc2,f_lseek@ifptr+1
  8350  0012CE  CFDE F085          	movff	postinc2,f_lseek@ifptr+2
  8351  0012D2  CFDE F086          	movff	postinc2,f_lseek@ifptr+3
  8352                           
  8353                           ;ff.c: 3114:   fp->fptr = nsect = 0;
  8354  0012D6  0E00               	movlw	0
  8355  0012D8  6F88               	movwf	f_lseek@nsect& (0+255),b
  8356  0012DA  0E00               	movlw	0
  8357  0012DC  6F89               	movwf	(f_lseek@nsect+1)& (0+255),b
  8358  0012DE  0E00               	movlw	0
  8359  0012E0  6F8A               	movwf	(f_lseek@nsect+2)& (0+255),b
  8360  0012E2  0E00               	movlw	0
  8361  0012E4  6F8B               	movwf	(f_lseek@nsect+3)& (0+255),b
  8362  0012E6  EE20 F006          	lfsr	2,6
  8363  0012EA  516D               	movf	f_lseek@fp& (0+255),w,b
  8364  0012EC  26D9               	addwf	fsr2l,f,c
  8365  0012EE  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8366  0012F0  22DA               	addwfc	fsr2h,f,c
  8367  0012F2  C088  FFDE         	movff	f_lseek@nsect,postinc2
  8368  0012F6  C089  FFDE         	movff	f_lseek@nsect+1,postinc2
  8369  0012FA  C08A  FFDE         	movff	f_lseek@nsect+2,postinc2
  8370  0012FE  C08B  FFDE         	movff	f_lseek@nsect+3,postinc2
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;ff.c: 3115:   if (ofs) {
  8374  001302  516F               	movf	f_lseek@ofs& (0+255),w,b
  8375  001304  1170               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
  8376  001306  1171               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
  8377  001308  1172               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
  8378  00130A  B4D8               	btfsc	status,2,c
  8379  00130C  D22D               	goto	l6335
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;ff.c: 3116:    bcs = (DWORD)fp->fs->csize * ((UINT)512);
  8383  00130E  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8384  001312  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8385  001316  EE10 F002          	lfsr	1,2
  8386  00131A  50DE               	movf	postinc2,w,c
  8387  00131C  26E1               	addwf	fsr1l,f,c
  8388  00131E  50DD               	movf	postdec2,w,c
  8389  001320  22E2               	addwfc	fsr1h,f,c
  8390  001322  50E7               	movf	indf1,w,c
  8391  001324  6F73               	movwf	??_f_lseek& (0+255),b
  8392  001326  C073  F074         	movff	??_f_lseek,??_f_lseek+1
  8393  00132A  6B75               	clrf	(??_f_lseek+2)& (0+255),b
  8394  00132C  6B76               	clrf	(??_f_lseek+3)& (0+255),b
  8395  00132E  6B77               	clrf	(??_f_lseek+4)& (0+255),b
  8396  001330  0E09               	movlw	9
  8397  001332                     u8275:
  8398  001332  90D8               	bcf	status,0,c
  8399  001334  3774               	rlcf	(??_f_lseek+1)& (0+255),f,b
  8400  001336  3775               	rlcf	(??_f_lseek+2)& (0+255),f,b
  8401  001338  3776               	rlcf	(??_f_lseek+3)& (0+255),f,b
  8402  00133A  3777               	rlcf	(??_f_lseek+4)& (0+255),f,b
  8403  00133C  2EE8               	decfsz	wreg,f,c
  8404  00133E  D7F9               	goto	u8275
  8405  001340  C074  F08C         	movff	??_f_lseek+1,f_lseek@bcs
  8406  001344  C075  F08D         	movff	??_f_lseek+2,f_lseek@bcs+1
  8407  001348  C076  F08E         	movff	??_f_lseek+3,f_lseek@bcs+2
  8408  00134C  C077  F08F         	movff	??_f_lseek+4,f_lseek@bcs+3
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;ff.c: 3117:    if (ifptr > 0 &&
  8412  001350  5183               	movf	f_lseek@ifptr& (0+255),w,b
  8413  001352  1184               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
  8414  001354  1185               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
  8415  001356  1186               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
  8416  001358  B4D8               	btfsc	status,2,c
  8417  00135A  D097               	goto	l6257
  8418                           
  8419                           ; BSR set to: 0
  8420  00135C  0EFF               	movlw	255
  8421  00135E  256F               	addwf	f_lseek@ofs& (0+255),w,b
  8422  001360  6E01               	movwf	___lldiv@dividend,c
  8423  001362  0EFF               	movlw	255
  8424  001364  2170               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
  8425  001366  6E02               	movwf	___lldiv@dividend+1,c
  8426  001368  0EFF               	movlw	255
  8427  00136A  2171               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
  8428  00136C  6E03               	movwf	___lldiv@dividend+2,c
  8429  00136E  0EFF               	movlw	255
  8430  001370  2172               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
  8431  001372  6E04               	movwf	___lldiv@dividend+3,c
  8432  001374  C08C  F005         	movff	f_lseek@bcs,___lldiv@divisor
  8433  001378  C08D  F006         	movff	f_lseek@bcs+1,___lldiv@divisor+1
  8434  00137C  C08E  F007         	movff	f_lseek@bcs+2,___lldiv@divisor+2
  8435  001380  C08F  F008         	movff	f_lseek@bcs+3,___lldiv@divisor+3
  8436  001384  EC04  F027         	call	___lldiv	;wreg free
  8437  001388  C001  F073         	movff	?___lldiv,??_f_lseek
  8438  00138C  C002  F074         	movff	?___lldiv+1,??_f_lseek+1
  8439  001390  C003  F075         	movff	?___lldiv+2,??_f_lseek+2
  8440  001394  C004  F076         	movff	?___lldiv+3,??_f_lseek+3
  8441  001398  0EFF               	movlw	255
  8442  00139A  0100               	movlb	0	; () banked
  8443  00139C  2583               	addwf	f_lseek@ifptr& (0+255),w,b
  8444  00139E  6E01               	movwf	___lldiv@dividend,c
  8445  0013A0  0EFF               	movlw	255
  8446  0013A2  2184               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
  8447  0013A4  6E02               	movwf	___lldiv@dividend+1,c
  8448  0013A6  0EFF               	movlw	255
  8449  0013A8  2185               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
  8450  0013AA  6E03               	movwf	___lldiv@dividend+2,c
  8451  0013AC  0EFF               	movlw	255
  8452  0013AE  2186               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
  8453  0013B0  6E04               	movwf	___lldiv@dividend+3,c
  8454  0013B2  C08C  F005         	movff	f_lseek@bcs,___lldiv@divisor
  8455  0013B6  C08D  F006         	movff	f_lseek@bcs+1,___lldiv@divisor+1
  8456  0013BA  C08E  F007         	movff	f_lseek@bcs+2,___lldiv@divisor+2
  8457  0013BE  C08F  F008         	movff	f_lseek@bcs+3,___lldiv@divisor+3
  8458  0013C2  EC04  F027         	call	___lldiv	;wreg free
  8459  0013C6  5001               	movf	?___lldiv,w,c
  8460  0013C8  0100               	movlb	0	; () banked
  8461  0013CA  5D73               	subwf	??_f_lseek& (0+255),w,b
  8462  0013CC  5002               	movf	?___lldiv+1,w,c
  8463  0013CE  5974               	subwfb	(??_f_lseek+1)& (0+255),w,b
  8464  0013D0  5003               	movf	?___lldiv+2,w,c
  8465  0013D2  5975               	subwfb	(??_f_lseek+2)& (0+255),w,b
  8466  0013D4  5004               	movf	?___lldiv+3,w,c
  8467  0013D6  5976               	subwfb	(??_f_lseek+3)& (0+255),w,b
  8468  0013D8  A0D8               	btfss	status,0,c
  8469  0013DA  D057               	goto	l6257
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;ff.c: 3118:     (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;ff.c: 3119:     fp->fptr = (ifp
      +                          tr - 1) & ~(bcs - 1);
  8473  0013DC  0EFF               	movlw	255
  8474  0013DE  258C               	addwf	f_lseek@bcs& (0+255),w,b
  8475  0013E0  6F73               	movwf	??_f_lseek& (0+255),b
  8476  0013E2  0EFF               	movlw	255
  8477  0013E4  218D               	addwfc	(f_lseek@bcs+1)& (0+255),w,b
  8478  0013E6  6F74               	movwf	(??_f_lseek+1)& (0+255),b
  8479  0013E8  0EFF               	movlw	255
  8480  0013EA  218E               	addwfc	(f_lseek@bcs+2)& (0+255),w,b
  8481  0013EC  6F75               	movwf	(??_f_lseek+2)& (0+255),b
  8482  0013EE  0EFF               	movlw	255
  8483  0013F0  218F               	addwfc	(f_lseek@bcs+3)& (0+255),w,b
  8484  0013F2  6F76               	movwf	(??_f_lseek+3)& (0+255),b
  8485  0013F4  1D73               	comf	??_f_lseek& (0+255),w,b
  8486  0013F6  6F77               	movwf	(??_f_lseek+4)& (0+255),b
  8487  0013F8  1D74               	comf	(??_f_lseek+1)& (0+255),w,b
  8488  0013FA  6F78               	movwf	(??_f_lseek+5)& (0+255),b
  8489  0013FC  1D75               	comf	(??_f_lseek+2)& (0+255),w,b
  8490  0013FE  6F79               	movwf	(??_f_lseek+6)& (0+255),b
  8491  001400  1D76               	comf	(??_f_lseek+3)& (0+255),w,b
  8492  001402  6F7A               	movwf	(??_f_lseek+7)& (0+255),b
  8493  001404  0EFF               	movlw	255
  8494  001406  2583               	addwf	f_lseek@ifptr& (0+255),w,b
  8495  001408  6F7B               	movwf	(??_f_lseek+8)& (0+255),b
  8496  00140A  0EFF               	movlw	255
  8497  00140C  2184               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
  8498  00140E  6F7C               	movwf	(??_f_lseek+9)& (0+255),b
  8499  001410  0EFF               	movlw	255
  8500  001412  2185               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
  8501  001414  6F7D               	movwf	(??_f_lseek+10)& (0+255),b
  8502  001416  0EFF               	movlw	255
  8503  001418  2186               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
  8504  00141A  6F7E               	movwf	(??_f_lseek+11)& (0+255),b
  8505  00141C  5177               	movf	(??_f_lseek+4)& (0+255),w,b
  8506  00141E  157B               	andwf	(??_f_lseek+8)& (0+255),w,b
  8507  001420  6F7F               	movwf	(??_f_lseek+12)& (0+255),b
  8508  001422  5178               	movf	(??_f_lseek+5)& (0+255),w,b
  8509  001424  157C               	andwf	(??_f_lseek+9)& (0+255),w,b
  8510  001426  6F80               	movwf	(??_f_lseek+13)& (0+255),b
  8511  001428  5179               	movf	(??_f_lseek+6)& (0+255),w,b
  8512  00142A  157D               	andwf	(??_f_lseek+10)& (0+255),w,b
  8513  00142C  6F81               	movwf	(??_f_lseek+14)& (0+255),b
  8514  00142E  517A               	movf	(??_f_lseek+7)& (0+255),w,b
  8515  001430  157E               	andwf	(??_f_lseek+11)& (0+255),w,b
  8516  001432  6F82               	movwf	(??_f_lseek+15)& (0+255),b
  8517  001434  EE20 F006          	lfsr	2,6
  8518  001438  516D               	movf	f_lseek@fp& (0+255),w,b
  8519  00143A  26D9               	addwf	fsr2l,f,c
  8520  00143C  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8521  00143E  22DA               	addwfc	fsr2h,f,c
  8522  001440  C07F  FFDE         	movff	??_f_lseek+12,postinc2
  8523  001444  C080  FFDE         	movff	??_f_lseek+13,postinc2
  8524  001448  C081  FFDE         	movff	??_f_lseek+14,postinc2
  8525  00144C  C082  FFDE         	movff	??_f_lseek+15,postinc2
  8526                           
  8527                           ;ff.c: 3120:     ofs -= fp->fptr;
  8528  001450  EE20 F006          	lfsr	2,6
  8529  001454  516D               	movf	f_lseek@fp& (0+255),w,b
  8530  001456  26D9               	addwf	fsr2l,f,c
  8531  001458  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8532  00145A  22DA               	addwfc	fsr2h,f,c
  8533  00145C  50DE               	movf	postinc2,w,c
  8534  00145E  5F6F               	subwf	f_lseek@ofs& (0+255),f,b
  8535  001460  50DE               	movf	postinc2,w,c
  8536  001462  5B70               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
  8537  001464  50DE               	movf	postinc2,w,c
  8538  001466  5B71               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
  8539  001468  50DD               	movf	postdec2,w,c
  8540  00146A  5B72               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
  8541                           
  8542                           ;ff.c: 3121:     clst = fp->clust;
  8543  00146C  EE20 F012          	lfsr	2,18
  8544  001470  516D               	movf	f_lseek@fp& (0+255),w,b
  8545  001472  26D9               	addwf	fsr2l,f,c
  8546  001474  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8547  001476  22DA               	addwfc	fsr2h,f,c
  8548  001478  CFDE F090          	movff	postinc2,f_lseek@clst
  8549  00147C  CFDE F091          	movff	postinc2,f_lseek@clst+1
  8550  001480  CFDE F092          	movff	postinc2,f_lseek@clst+2
  8551  001484  CFDE F093          	movff	postinc2,f_lseek@clst+3
  8552                           
  8553                           ;ff.c: 3122:    } else {
  8554  001488  D06E               	goto	l6281
  8555  00148A                     l6257:
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;ff.c: 3123:     clst = fp->sclust;
  8559  00148A  EE20 F00E          	lfsr	2,14
  8560  00148E  516D               	movf	f_lseek@fp& (0+255),w,b
  8561  001490  26D9               	addwf	fsr2l,f,c
  8562  001492  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8563  001494  22DA               	addwfc	fsr2h,f,c
  8564  001496  CFDE F090          	movff	postinc2,f_lseek@clst
  8565  00149A  CFDE F091          	movff	postinc2,f_lseek@clst+1
  8566  00149E  CFDE F092          	movff	postinc2,f_lseek@clst+2
  8567  0014A2  CFDE F093          	movff	postinc2,f_lseek@clst+3
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;ff.c: 3125:     if (clst == 0) {
  8571  0014A6  5190               	movf	f_lseek@clst& (0+255),w,b
  8572  0014A8  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8573  0014AA  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8574  0014AC  1193               	iorwf	(f_lseek@clst+3)& (0+255),w,b
  8575  0014AE  A4D8               	btfss	status,2,c
  8576  0014B0  D04C               	goto	l671
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;ff.c: 3126:      clst = create_chain(fp->fs, 0);
  8580  0014B2  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8581  0014B6  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8582  0014BA  CFDE F056          	movff	postinc2,create_chain@fs
  8583  0014BE  CFDD F057          	movff	postdec2,create_chain@fs+1
  8584  0014C2  0E00               	movlw	0
  8585  0014C4  6E58               	movwf	create_chain@clst,c
  8586  0014C6  0E00               	movlw	0
  8587  0014C8  6E59               	movwf	create_chain@clst+1,c
  8588  0014CA  0E00               	movlw	0
  8589  0014CC  6E5A               	movwf	create_chain@clst+2,c
  8590  0014CE  0E00               	movlw	0
  8591  0014D0  6E5B               	movwf	create_chain@clst+3,c
  8592  0014D2  ECF9  F018         	call	_create_chain	;wreg free
  8593  0014D6  C056  F090         	movff	?_create_chain,f_lseek@clst
  8594  0014DA  C057  F091         	movff	?_create_chain+1,f_lseek@clst+1
  8595  0014DE  C058  F092         	movff	?_create_chain+2,f_lseek@clst+2
  8596  0014E2  C059  F093         	movff	?_create_chain+3,f_lseek@clst+3
  8597                           
  8598                           ;ff.c: 3127:      if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  8599  0014E6  0100               	movlb	0	; () banked
  8600  0014E8  0590               	decf	f_lseek@clst& (0+255),w,b
  8601  0014EA  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8602  0014EC  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8603  0014EE  1193               	iorwf	(f_lseek@clst+3)& (0+255),w,b
  8604  0014F0  A4D8               	btfss	status,2,c
  8605  0014F2  D00A               	goto	l6271
  8606  0014F4                     u8310:
  8607                           
  8608                           ; BSR set to: 0
  8609  0014F4  EE20 F005          	lfsr	2,5
  8610  0014F8  516D               	movf	f_lseek@fp& (0+255),w,b
  8611  0014FA  26D9               	addwf	fsr2l,f,c
  8612  0014FC  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8613  0014FE  22DA               	addwfc	fsr2h,f,c
  8614  001500  0E02               	movlw	2
  8615  001502  6EDF               	movwf	indf2,c
  8616                           
  8617                           ; BSR set to: 0
  8618  001504  0E02               	movlw	2
  8619  001506  0012               	return	
  8620  001508                     l6271:
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;ff.c: 3128:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DIS
      +                          K_ERR; };
  8624  001508  2990               	incf	f_lseek@clst& (0+255),w,b
  8625  00150A  E111               	bnz	l6279
  8626  00150C  2991               	incf	(f_lseek@clst+1)& (0+255),w,b
  8627  00150E  E10F               	bnz	l6279
  8628  001510  2992               	incf	(f_lseek@clst+2)& (0+255),w,b
  8629  001512  E10D               	bnz	l6279
  8630  001514  2993               	incf	(f_lseek@clst+3)& (0+255),w,b
  8631  001516  A4D8               	btfss	status,2,c
  8632  001518  D00A               	goto	l6279
  8633  00151A                     u8320:
  8634                           
  8635                           ; BSR set to: 0
  8636  00151A  EE20 F005          	lfsr	2,5
  8637  00151E  516D               	movf	f_lseek@fp& (0+255),w,b
  8638  001520  26D9               	addwf	fsr2l,f,c
  8639  001522  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8640  001524  22DA               	addwfc	fsr2h,f,c
  8641  001526  0E01               	movlw	1
  8642  001528  6EDF               	movwf	indf2,c
  8643                           
  8644                           ; BSR set to: 0
  8645  00152A  0E01               	movlw	1
  8646  00152C  0012               	return	
  8647  00152E                     l6279:
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;ff.c: 3129:      fp->sclust = clst;
  8651  00152E  EE20 F00E          	lfsr	2,14
  8652  001532  516D               	movf	f_lseek@fp& (0+255),w,b
  8653  001534  26D9               	addwf	fsr2l,f,c
  8654  001536  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8655  001538  22DA               	addwfc	fsr2h,f,c
  8656  00153A  C090  FFDE         	movff	f_lseek@clst,postinc2
  8657  00153E  C091  FFDE         	movff	f_lseek@clst+1,postinc2
  8658  001542  C092  FFDE         	movff	f_lseek@clst+2,postinc2
  8659  001546  C093  FFDE         	movff	f_lseek@clst+3,postinc2
  8660  00154A                     l671:
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;ff.c: 3132:     fp->clust = clst;
  8664  00154A  EE20 F012          	lfsr	2,18
  8665  00154E  516D               	movf	f_lseek@fp& (0+255),w,b
  8666  001550  26D9               	addwf	fsr2l,f,c
  8667  001552  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8668  001554  22DA               	addwfc	fsr2h,f,c
  8669  001556  C090  FFDE         	movff	f_lseek@clst,postinc2
  8670  00155A  C091  FFDE         	movff	f_lseek@clst+1,postinc2
  8671  00155E  C092  FFDE         	movff	f_lseek@clst+2,postinc2
  8672  001562  C093  FFDE         	movff	f_lseek@clst+3,postinc2
  8673  001566                     l6281:
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;ff.c: 3134:    if (clst != 0) {
  8677  001566  5190               	movf	f_lseek@clst& (0+255),w,b
  8678  001568  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8679  00156A  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8680  00156C  1193               	iorwf	(f_lseek@clst+3)& (0+255),w,b
  8681  00156E  A4D8               	btfss	status,2,c
  8682  001570  D097               	goto	l6317
  8683  001572  D0FA               	goto	l6335
  8684  001574                     l6285:
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;ff.c: 3137:      if (fp->flag & 0x02) {
  8688  001574  EE20 F004          	lfsr	2,4
  8689  001578  516D               	movf	f_lseek@fp& (0+255),w,b
  8690  00157A  26D9               	addwf	fsr2l,f,c
  8691  00157C  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8692  00157E  22DA               	addwfc	fsr2h,f,c
  8693  001580  A2DF               	btfss	indf2,1,c
  8694  001582  D02A               	goto	l6293
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;ff.c: 3138:       clst = create_chain(fp->fs, clst);
  8698  001584  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8699  001588  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8700  00158C  CFDE F056          	movff	postinc2,create_chain@fs
  8701  001590  CFDD F057          	movff	postdec2,create_chain@fs+1
  8702  001594  C090  F058         	movff	f_lseek@clst,create_chain@clst
  8703  001598  C091  F059         	movff	f_lseek@clst+1,create_chain@clst+1
  8704  00159C  C092  F05A         	movff	f_lseek@clst+2,create_chain@clst+2
  8705  0015A0  C093  F05B         	movff	f_lseek@clst+3,create_chain@clst+3
  8706  0015A4  ECF9  F018         	call	_create_chain	;wreg free
  8707  0015A8  C056  F090         	movff	?_create_chain,f_lseek@clst
  8708  0015AC  C057  F091         	movff	?_create_chain+1,f_lseek@clst+1
  8709  0015B0  C058  F092         	movff	?_create_chain+2,f_lseek@clst+2
  8710  0015B4  C059  F093         	movff	?_create_chain+3,f_lseek@clst+3
  8711                           
  8712                           ;ff.c: 3139:       if (clst == 0) {
  8713  0015B8  0100               	movlb	0	; () banked
  8714  0015BA  5190               	movf	f_lseek@clst& (0+255),w,b
  8715  0015BC  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8716  0015BE  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8717  0015C0  1193               	iorwf	(f_lseek@clst+3)& (0+255),w,b
  8718  0015C2  A4D8               	btfss	status,2,c
  8719  0015C4  D023               	goto	l6295
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;ff.c: 3140:        ofs = bcs; break;
  8723  0015C6  C08C  F06F         	movff	f_lseek@bcs,f_lseek@ofs
  8724  0015CA  C08D  F070         	movff	f_lseek@bcs+1,f_lseek@ofs+1
  8725  0015CE  C08E  F071         	movff	f_lseek@bcs+2,f_lseek@ofs+2
  8726  0015D2  C08F  F072         	movff	f_lseek@bcs+3,f_lseek@ofs+3
  8727  0015D6  D06E               	goto	u8390
  8728  0015D8                     l6293:
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;ff.c: 3144:       clst = get_fat(fp->fs, clst);
  8732  0015D8  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8733  0015DC  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8734  0015E0  CFDE F03B          	movff	postinc2,get_fat@fs
  8735  0015E4  CFDD F03C          	movff	postdec2,get_fat@fs+1
  8736  0015E8  C090  F03D         	movff	f_lseek@clst,get_fat@clst
  8737  0015EC  C091  F03E         	movff	f_lseek@clst+1,get_fat@clst+1
  8738  0015F0  C092  F03F         	movff	f_lseek@clst+2,get_fat@clst+2
  8739  0015F4  C093  F040         	movff	f_lseek@clst+3,get_fat@clst+3
  8740  0015F8  EC5D  F015         	call	_get_fat	;wreg free
  8741  0015FC  C03B  F090         	movff	?_get_fat,f_lseek@clst
  8742  001600  C03C  F091         	movff	?_get_fat+1,f_lseek@clst+1
  8743  001604  C03D  F092         	movff	?_get_fat+2,f_lseek@clst+2
  8744  001608  C03E  F093         	movff	?_get_fat+3,f_lseek@clst+3
  8745  00160C                     l6295:
  8746                           
  8747                           ;ff.c: 3145:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DIS
      +                          K_ERR; };
  8748  00160C  0100               	movlb	0	; () banked
  8749  00160E  2990               	incf	f_lseek@clst& (0+255),w,b
  8750  001610  E107               	bnz	l6303
  8751  001612  2991               	incf	(f_lseek@clst+1)& (0+255),w,b
  8752  001614  E105               	bnz	l6303
  8753  001616  2992               	incf	(f_lseek@clst+2)& (0+255),w,b
  8754  001618  E103               	bnz	l6303
  8755  00161A  2993               	incf	(f_lseek@clst+3)& (0+255),w,b
  8756  00161C  B4D8               	btfsc	status,2,c
  8757  00161E  D77D               	goto	u8320
  8758  001620                     l6303:
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;ff.c: 3146:      if (clst <= 1 || clst >= fp->fs->n_fatent) { fp->err = (BYTE)(FR_INT_E
      +                          RR); return FR_INT_ERR; };
  8762  001620  5193               	movf	(f_lseek@clst+3)& (0+255),w,b
  8763  001622  1192               	iorwf	(f_lseek@clst+2)& (0+255),w,b
  8764  001624  1191               	iorwf	(f_lseek@clst+1)& (0+255),w,b
  8765  001626  E104               	bnz	u8370
  8766  001628  0E02               	movlw	2
  8767  00162A  5D90               	subwf	f_lseek@clst& (0+255),w,b
  8768  00162C  A0D8               	btfss	status,0,c
  8769  00162E  D762               	goto	u8310
  8770  001630                     u8370:
  8771                           
  8772                           ; BSR set to: 0
  8773  001630  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8774  001634  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8775  001638  EE10 F012          	lfsr	1,18
  8776  00163C  50DE               	movf	postinc2,w,c
  8777  00163E  26E1               	addwf	fsr1l,f,c
  8778  001640  50DD               	movf	postdec2,w,c
  8779  001642  22E2               	addwfc	fsr1h,f,c
  8780  001644  50E6               	movf	postinc1,w,c
  8781  001646  5D90               	subwf	f_lseek@clst& (0+255),w,b
  8782  001648  50E6               	movf	postinc1,w,c
  8783  00164A  5991               	subwfb	(f_lseek@clst+1)& (0+255),w,b
  8784  00164C  50E6               	movf	postinc1,w,c
  8785  00164E  5992               	subwfb	(f_lseek@clst+2)& (0+255),w,b
  8786  001650  50E6               	movf	postinc1,w,c
  8787  001652  5993               	subwfb	(f_lseek@clst+3)& (0+255),w,b
  8788  001654  B0D8               	btfsc	status,0,c
  8789  001656  D74E               	goto	u8310
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;ff.c: 3147:      fp->clust = clst;
  8793                           
  8794                           ; BSR set to: 0
  8795  001658  EE20 F012          	lfsr	2,18
  8796  00165C  516D               	movf	f_lseek@fp& (0+255),w,b
  8797  00165E  26D9               	addwf	fsr2l,f,c
  8798  001660  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8799  001662  22DA               	addwfc	fsr2h,f,c
  8800  001664  C090  FFDE         	movff	f_lseek@clst,postinc2
  8801  001668  C091  FFDE         	movff	f_lseek@clst+1,postinc2
  8802  00166C  C092  FFDE         	movff	f_lseek@clst+2,postinc2
  8803  001670  C093  FFDE         	movff	f_lseek@clst+3,postinc2
  8804                           
  8805                           ;ff.c: 3148:      fp->fptr += bcs;
  8806  001674  EE20 F006          	lfsr	2,6
  8807  001678  516D               	movf	f_lseek@fp& (0+255),w,b
  8808  00167A  26D9               	addwf	fsr2l,f,c
  8809  00167C  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8810  00167E  22DA               	addwfc	fsr2h,f,c
  8811  001680  518C               	movf	f_lseek@bcs& (0+255),w,b
  8812  001682  26DE               	addwf	postinc2,f,c
  8813  001684  518D               	movf	(f_lseek@bcs+1)& (0+255),w,b
  8814  001686  22DE               	addwfc	postinc2,f,c
  8815  001688  518E               	movf	(f_lseek@bcs+2)& (0+255),w,b
  8816  00168A  22DE               	addwfc	postinc2,f,c
  8817  00168C  518F               	movf	(f_lseek@bcs+3)& (0+255),w,b
  8818  00168E  22DE               	addwfc	postinc2,f,c
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;ff.c: 3149:      ofs -= bcs;
  8822  001690  518C               	movf	f_lseek@bcs& (0+255),w,b
  8823  001692  5F6F               	subwf	f_lseek@ofs& (0+255),f,b
  8824  001694  518D               	movf	(f_lseek@bcs+1)& (0+255),w,b
  8825  001696  5B70               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
  8826  001698  518E               	movf	(f_lseek@bcs+2)& (0+255),w,b
  8827  00169A  5B71               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
  8828  00169C  518F               	movf	(f_lseek@bcs+3)& (0+255),w,b
  8829  00169E  5B72               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
  8830  0016A0                     l6317:
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;ff.c: 3135:     while (ofs > bcs) {
  8834  0016A0  516F               	movf	f_lseek@ofs& (0+255),w,b
  8835  0016A2  5D8C               	subwf	f_lseek@bcs& (0+255),w,b
  8836  0016A4  5170               	movf	(f_lseek@ofs+1)& (0+255),w,b
  8837  0016A6  598D               	subwfb	(f_lseek@bcs+1)& (0+255),w,b
  8838  0016A8  5171               	movf	(f_lseek@ofs+2)& (0+255),w,b
  8839  0016AA  598E               	subwfb	(f_lseek@bcs+2)& (0+255),w,b
  8840  0016AC  5172               	movf	(f_lseek@ofs+3)& (0+255),w,b
  8841  0016AE  598F               	subwfb	(f_lseek@bcs+3)& (0+255),w,b
  8842  0016B0  A0D8               	btfss	status,0,c
  8843  0016B2  D760               	goto	l6285
  8844  0016B4                     u8390:
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;ff.c: 3151:     fp->fptr += ofs;
  8848  0016B4  EE20 F006          	lfsr	2,6
  8849  0016B8  516D               	movf	f_lseek@fp& (0+255),w,b
  8850  0016BA  26D9               	addwf	fsr2l,f,c
  8851  0016BC  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8852  0016BE  22DA               	addwfc	fsr2h,f,c
  8853  0016C0  516F               	movf	f_lseek@ofs& (0+255),w,b
  8854  0016C2  26DE               	addwf	postinc2,f,c
  8855  0016C4  5170               	movf	(f_lseek@ofs+1)& (0+255),w,b
  8856  0016C6  22DE               	addwfc	postinc2,f,c
  8857  0016C8  5171               	movf	(f_lseek@ofs+2)& (0+255),w,b
  8858  0016CA  22DE               	addwfc	postinc2,f,c
  8859  0016CC  5172               	movf	(f_lseek@ofs+3)& (0+255),w,b
  8860  0016CE  22DE               	addwfc	postinc2,f,c
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;ff.c: 3152:     if (ofs % ((UINT)512)) {
  8864  0016D0  0EFF               	movlw	255
  8865  0016D2  156F               	andwf	f_lseek@ofs& (0+255),w,b
  8866  0016D4  6F73               	movwf	??_f_lseek& (0+255),b
  8867  0016D6  0E01               	movlw	1
  8868  0016D8  1570               	andwf	(f_lseek@ofs+1)& (0+255),w,b
  8869  0016DA  6F74               	movwf	(??_f_lseek+1)& (0+255),b
  8870  0016DC  0E00               	movlw	0
  8871  0016DE  1571               	andwf	(f_lseek@ofs+2)& (0+255),w,b
  8872  0016E0  6F75               	movwf	(??_f_lseek+2)& (0+255),b
  8873  0016E2  0E00               	movlw	0
  8874  0016E4  1572               	andwf	(f_lseek@ofs+3)& (0+255),w,b
  8875  0016E6  6F76               	movwf	(??_f_lseek+3)& (0+255),b
  8876  0016E8  5173               	movf	??_f_lseek& (0+255),w,b
  8877  0016EA  1174               	iorwf	(??_f_lseek+1)& (0+255),w,b
  8878  0016EC  1175               	iorwf	(??_f_lseek+2)& (0+255),w,b
  8879  0016EE  1176               	iorwf	(??_f_lseek+3)& (0+255),w,b
  8880  0016F0  B4D8               	btfsc	status,2,c
  8881  0016F2  D03A               	goto	l6335
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;ff.c: 3153:      nsect = clust2sect(fp->fs, clst);
  8885  0016F4  C06D  FFD9         	movff	f_lseek@fp,fsr2l
  8886  0016F8  C06E  FFDA         	movff	f_lseek@fp+1,fsr2h
  8887  0016FC  CFDE F00D          	movff	postinc2,clust2sect@fs
  8888  001700  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  8889  001704  C090  F00F         	movff	f_lseek@clst,clust2sect@clst
  8890  001708  C091  F010         	movff	f_lseek@clst+1,clust2sect@clst+1
  8891  00170C  C092  F011         	movff	f_lseek@clst+2,clust2sect@clst+2
  8892  001710  C093  F012         	movff	f_lseek@clst+3,clust2sect@clst+3
  8893  001714  ECB2  F025         	call	_clust2sect	;wreg free
  8894  001718  C00D  F088         	movff	?_clust2sect,f_lseek@nsect
  8895  00171C  C00E  F089         	movff	?_clust2sect+1,f_lseek@nsect+1
  8896  001720  C00F  F08A         	movff	?_clust2sect+2,f_lseek@nsect+2
  8897  001724  C010  F08B         	movff	?_clust2sect+3,f_lseek@nsect+3
  8898                           
  8899                           ;ff.c: 3154:      if (!nsect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  8900  001728  0100               	movlb	0	; () banked
  8901  00172A  5188               	movf	f_lseek@nsect& (0+255),w,b
  8902  00172C  1189               	iorwf	(f_lseek@nsect+1)& (0+255),w,b
  8903  00172E  118A               	iorwf	(f_lseek@nsect+2)& (0+255),w,b
  8904  001730  118B               	iorwf	(f_lseek@nsect+3)& (0+255),w,b
  8905  001732  B4D8               	btfsc	status,2,c
  8906  001734  D6DF               	goto	u8310
  8907                           
  8908                           ; BSR set to: 0
  8909                           ;ff.c: 3155:      nsect += ofs / ((UINT)512);
  8910                           
  8911                           ; BSR set to: 0
  8912  001736  C06F  F073         	movff	f_lseek@ofs,??_f_lseek
  8913  00173A  C070  F074         	movff	f_lseek@ofs+1,??_f_lseek+1
  8914  00173E  C071  F075         	movff	f_lseek@ofs+2,??_f_lseek+2
  8915  001742  C072  F076         	movff	f_lseek@ofs+3,??_f_lseek+3
  8916  001746  0E0A               	movlw	10
  8917  001748  D005               	goto	u8420
  8918  00174A                     u8425:
  8919  00174A  90D8               	bcf	status,0,c
  8920  00174C  3376               	rrcf	(??_f_lseek+3)& (0+255),f,b
  8921  00174E  3375               	rrcf	(??_f_lseek+2)& (0+255),f,b
  8922  001750  3374               	rrcf	(??_f_lseek+1)& (0+255),f,b
  8923  001752  3373               	rrcf	??_f_lseek& (0+255),f,b
  8924  001754                     u8420:
  8925  001754  2EE8               	decfsz	wreg,f,c
  8926  001756  D7F9               	goto	u8425
  8927  001758  5173               	movf	??_f_lseek& (0+255),w,b
  8928  00175A  2788               	addwf	f_lseek@nsect& (0+255),f,b
  8929  00175C  5174               	movf	(??_f_lseek+1)& (0+255),w,b
  8930  00175E  2389               	addwfc	(f_lseek@nsect+1)& (0+255),f,b
  8931  001760  5175               	movf	(??_f_lseek+2)& (0+255),w,b
  8932  001762  238A               	addwfc	(f_lseek@nsect+2)& (0+255),f,b
  8933  001764  5176               	movf	(??_f_lseek+3)& (0+255),w,b
  8934  001766  238B               	addwfc	(f_lseek@nsect+3)& (0+255),f,b
  8935  001768                     l6335:
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;ff.c: 3159:   if (fp->fptr % ((UINT)512) && nsect != fp->dsect) {
  8939  001768  EE20 F006          	lfsr	2,6
  8940  00176C  516D               	movf	f_lseek@fp& (0+255),w,b
  8941  00176E  26D9               	addwf	fsr2l,f,c
  8942  001770  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8943  001772  22DA               	addwfc	fsr2h,f,c
  8944  001774  0EFF               	movlw	255
  8945  001776  14DE               	andwf	postinc2,w,c
  8946  001778  6F73               	movwf	??_f_lseek& (0+255),b
  8947  00177A  0E01               	movlw	1
  8948  00177C  14DE               	andwf	postinc2,w,c
  8949  00177E  6F74               	movwf	(??_f_lseek+1)& (0+255),b
  8950  001780  0E00               	movlw	0
  8951  001782  14DE               	andwf	postinc2,w,c
  8952  001784  6F75               	movwf	(??_f_lseek+2)& (0+255),b
  8953  001786  0E00               	movlw	0
  8954  001788  14DE               	andwf	postinc2,w,c
  8955  00178A  6F76               	movwf	(??_f_lseek+3)& (0+255),b
  8956  00178C  5173               	movf	??_f_lseek& (0+255),w,b
  8957  00178E  1174               	iorwf	(??_f_lseek+1)& (0+255),w,b
  8958  001790  1175               	iorwf	(??_f_lseek+2)& (0+255),w,b
  8959  001792  1176               	iorwf	(??_f_lseek+3)& (0+255),w,b
  8960  001794  B4D8               	btfsc	status,2,c
  8961  001796  D021               	goto	l6341
  8962                           
  8963                           ; BSR set to: 0
  8964  001798  EE20 F016          	lfsr	2,22
  8965  00179C  516D               	movf	f_lseek@fp& (0+255),w,b
  8966  00179E  26D9               	addwf	fsr2l,f,c
  8967  0017A0  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8968  0017A2  22DA               	addwfc	fsr2h,f,c
  8969  0017A4  5188               	movf	f_lseek@nsect& (0+255),w,b
  8970  0017A6  18DE               	xorwf	postinc2,w,c
  8971  0017A8  E10A               	bnz	u8440
  8972  0017AA  5189               	movf	(f_lseek@nsect+1)& (0+255),w,b
  8973  0017AC  18DE               	xorwf	postinc2,w,c
  8974  0017AE  E107               	bnz	u8440
  8975  0017B0  518A               	movf	(f_lseek@nsect+2)& (0+255),w,b
  8976  0017B2  18DE               	xorwf	postinc2,w,c
  8977  0017B4  E104               	bnz	u8440
  8978  0017B6  518B               	movf	(f_lseek@nsect+3)& (0+255),w,b
  8979  0017B8  18DE               	xorwf	postinc2,w,c
  8980  0017BA  B4D8               	btfsc	status,2,c
  8981  0017BC  D00E               	goto	l6341
  8982  0017BE                     u8440:
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;ff.c: 3171:    fp->dsect = nsect;
  8986  0017BE  EE20 F016          	lfsr	2,22
  8987  0017C2  516D               	movf	f_lseek@fp& (0+255),w,b
  8988  0017C4  26D9               	addwf	fsr2l,f,c
  8989  0017C6  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  8990  0017C8  22DA               	addwfc	fsr2h,f,c
  8991  0017CA  C088  FFDE         	movff	f_lseek@nsect,postinc2
  8992  0017CE  C089  FFDE         	movff	f_lseek@nsect+1,postinc2
  8993  0017D2  C08A  FFDE         	movff	f_lseek@nsect+2,postinc2
  8994  0017D6  C08B  FFDE         	movff	f_lseek@nsect+3,postinc2
  8995  0017DA                     l6341:
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;ff.c: 3174:   if (fp->fptr > fp->fsize) {
  8999  0017DA  EE20 F006          	lfsr	2,6
  9000  0017DE  516D               	movf	f_lseek@fp& (0+255),w,b
  9001  0017E0  26D9               	addwf	fsr2l,f,c
  9002  0017E2  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9003  0017E4  22DA               	addwfc	fsr2h,f,c
  9004  0017E6  EE10 F00A          	lfsr	1,10
  9005  0017EA  516D               	movf	f_lseek@fp& (0+255),w,b
  9006  0017EC  26E1               	addwf	fsr1l,f,c
  9007  0017EE  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9008  0017F0  22E2               	addwfc	fsr1h,f,c
  9009  0017F2  50DE               	movf	postinc2,w,c
  9010  0017F4  5CE6               	subwf	postinc1,w,c
  9011  0017F6  50DE               	movf	postinc2,w,c
  9012  0017F8  58E6               	subwfb	postinc1,w,c
  9013  0017FA  50DE               	movf	postinc2,w,c
  9014  0017FC  58E6               	subwfb	postinc1,w,c
  9015  0017FE  50DE               	movf	postinc2,w,c
  9016  001800  58E6               	subwfb	postinc1,w,c
  9017  001802  B0D8               	btfsc	status,0,c
  9018  001804  D521               	goto	u8220
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;ff.c: 3175:    fp->fsize = fp->fptr;
  9022  001806  EE20 F006          	lfsr	2,6
  9023  00180A  516D               	movf	f_lseek@fp& (0+255),w,b
  9024  00180C  26D9               	addwf	fsr2l,f,c
  9025  00180E  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9026  001810  22DA               	addwfc	fsr2h,f,c
  9027  001812  EE10 F00A          	lfsr	1,10
  9028  001816  516D               	movf	f_lseek@fp& (0+255),w,b
  9029  001818  26E1               	addwf	fsr1l,f,c
  9030  00181A  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9031  00181C  22E2               	addwfc	fsr1h,f,c
  9032  00181E  CFDE FFE6          	movff	postinc2,postinc1
  9033  001822  CFDE FFE6          	movff	postinc2,postinc1
  9034  001826  CFDE FFE6          	movff	postinc2,postinc1
  9035  00182A  CFDE FFE6          	movff	postinc2,postinc1
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;ff.c: 3176:    fp->flag |= 0x20;
  9039  00182E  EE20 F004          	lfsr	2,4
  9040  001832  516D               	movf	f_lseek@fp& (0+255),w,b
  9041  001834  26D9               	addwf	fsr2l,f,c
  9042  001836  516E               	movf	(f_lseek@fp+1)& (0+255),w,b
  9043  001838  22DA               	addwfc	fsr2h,f,c
  9044  00183A  0E00               	movlw	0
  9045  00183C  8ADB               	bsf	plusw2,5,c
  9046  00183E  D504               	goto	u8220
  9047  001840                     __end_of_f_lseek:
  9048                           	opt callstack 0
  9049                           
  9050 ;; *************** function _create_chain *****************
  9051 ;; Defined at:
  9052 ;;		line 990 in file "ff.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  fs              2   85[COMRAM] PTR struct .
  9055 ;;		 -> FatFs(558), NULL(0), 
  9056 ;;  clst            4   87[COMRAM] unsigned long 
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;  cs              4    9[BANK0 ] unsigned long 
  9059 ;;  ncl             4    5[BANK0 ] unsigned long 
  9060 ;;  scl             4    1[BANK0 ] unsigned long 
  9061 ;;  res             1    0[BANK0 ] enum E93
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  4   85[COMRAM] unsigned long 
  9064 ;; Registers used:
  9065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9071 ;;      Params:         6       0       0       0       0       0       0       0       0
  9072 ;;      Locals:         0      13       0       0       0       0       0       0       0
  9073 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9074 ;;      Totals:        10      13       0       0       0       0       0       0       0
  9075 ;;Total ram usage:       23 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; Hardware stack levels required when called:    9
  9078 ;; This function calls:
  9079 ;;		_get_fat
  9080 ;;		_put_fat
  9081 ;; This function is called by:
  9082 ;;		_dir_next
  9083 ;;		_f_lseek
  9084 ;;		_f_write
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text24
  9089  0031F2                     __ptext24:
  9090                           	opt callstack 0
  9091  0031F2                     _create_chain:
  9092                           	opt callstack 16
  9093                           
  9094                           ;ff.c: 991:  FATFS* fs,;ff.c: 992:  DWORD clst;ff.c: 994: {;ff.c: 995:  DWORD cs, ncl, s
      +                          cl;;ff.c: 996:  FRESULT res;;ff.c: 999:  if (clst == 0) {
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;incstack = 0
  9098  0031F2  5058               	movf	create_chain@clst,w,c
  9099  0031F4  1059               	iorwf	create_chain@clst+1,w,c
  9100  0031F6  105A               	iorwf	create_chain@clst+2,w,c
  9101  0031F8  105B               	iorwf	create_chain@clst+3,w,c
  9102  0031FA  A4D8               	btfss	status,2,c
  9103  0031FC  D02E               	goto	l4673
  9104                           
  9105                           ;ff.c: 1000:   scl = fs->last_clust;
  9106  0031FE  EE20 F00A          	lfsr	2,10
  9107  003202  5056               	movf	create_chain@fs,w,c
  9108  003204  26D9               	addwf	fsr2l,f,c
  9109  003206  5057               	movf	create_chain@fs+1,w,c
  9110  003208  22DA               	addwfc	fsr2h,f,c
  9111  00320A  CFDE F061          	movff	postinc2,create_chain@scl
  9112  00320E  CFDE F062          	movff	postinc2,create_chain@scl+1
  9113  003212  CFDE F063          	movff	postinc2,create_chain@scl+2
  9114  003216  CFDE F064          	movff	postinc2,create_chain@scl+3
  9115                           
  9116                           ;ff.c: 1001:   if (!scl || scl >= fs->n_fatent) scl = 1;
  9117  00321A  0100               	movlb	0	; () banked
  9118  00321C  5161               	movf	create_chain@scl& (0+255),w,b
  9119  00321E  1162               	iorwf	(create_chain@scl+1)& (0+255),w,b
  9120  003220  1163               	iorwf	(create_chain@scl+2)& (0+255),w,b
  9121  003222  1164               	iorwf	(create_chain@scl+3)& (0+255),w,b
  9122  003224  B4D8               	btfsc	status,2,c
  9123  003226  D010               	goto	u5360
  9124                           
  9125                           ; BSR set to: 0
  9126  003228  EE20 F012          	lfsr	2,18
  9127  00322C  5056               	movf	create_chain@fs,w,c
  9128  00322E  26D9               	addwf	fsr2l,f,c
  9129  003230  5057               	movf	create_chain@fs+1,w,c
  9130  003232  22DA               	addwfc	fsr2h,f,c
  9131  003234  50DE               	movf	postinc2,w,c
  9132  003236  5D61               	subwf	create_chain@scl& (0+255),w,b
  9133  003238  50DE               	movf	postinc2,w,c
  9134  00323A  5962               	subwfb	(create_chain@scl+1)& (0+255),w,b
  9135  00323C  50DE               	movf	postinc2,w,c
  9136  00323E  5963               	subwfb	(create_chain@scl+2)& (0+255),w,b
  9137  003240  50DE               	movf	postinc2,w,c
  9138  003242  5964               	subwfb	(create_chain@scl+3)& (0+255),w,b
  9139  003244  A0D8               	btfss	status,0,c
  9140  003246  D05B               	goto	l317
  9141  003248                     u5360:
  9142                           
  9143                           ; BSR set to: 0
  9144  003248  0E01               	movlw	1
  9145  00324A  6F61               	movwf	create_chain@scl& (0+255),b
  9146  00324C  0E00               	movlw	0
  9147  00324E  6F62               	movwf	(create_chain@scl+1)& (0+255),b
  9148  003250  0E00               	movlw	0
  9149  003252  6F63               	movwf	(create_chain@scl+2)& (0+255),b
  9150  003254  0E00               	movlw	0
  9151  003256  6F64               	movwf	(create_chain@scl+3)& (0+255),b
  9152  003258  D052               	goto	l317
  9153  00325A                     l4673:
  9154                           
  9155                           ;ff.c: 1004:   cs = get_fat(fs, clst);
  9156  00325A  C056  F03B         	movff	create_chain@fs,get_fat@fs
  9157  00325E  C057  F03C         	movff	create_chain@fs+1,get_fat@fs+1
  9158  003262  C058  F03D         	movff	create_chain@clst,get_fat@clst
  9159  003266  C059  F03E         	movff	create_chain@clst+1,get_fat@clst+1
  9160  00326A  C05A  F03F         	movff	create_chain@clst+2,get_fat@clst+2
  9161  00326E  C05B  F040         	movff	create_chain@clst+3,get_fat@clst+3
  9162  003272  EC5D  F015         	call	_get_fat	;wreg free
  9163  003276  C03B  F069         	movff	?_get_fat,create_chain@cs
  9164  00327A  C03C  F06A         	movff	?_get_fat+1,create_chain@cs+1
  9165  00327E  C03D  F06B         	movff	?_get_fat+2,create_chain@cs+2
  9166  003282  C03E  F06C         	movff	?_get_fat+3,create_chain@cs+3
  9167                           
  9168                           ;ff.c: 1005:   if (cs < 2) return 1;
  9169  003286  0100               	movlb	0	; () banked
  9170  003288  516C               	movf	(create_chain@cs+3)& (0+255),w,b
  9171  00328A  116B               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9172  00328C  116A               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9173  00328E  E10D               	bnz	l4681
  9174  003290  0E02               	movlw	2
  9175  003292  5D69               	subwf	create_chain@cs& (0+255),w,b
  9176  003294  B0D8               	btfsc	status,0,c
  9177  003296  D009               	goto	l4681
  9178                           
  9179                           ; BSR set to: 0
  9180  003298  0E01               	movlw	1
  9181  00329A  6E56               	movwf	?_create_chain,c
  9182  00329C  0E00               	movlw	0
  9183  00329E  6E57               	movwf	?_create_chain+1,c
  9184  0032A0  0E00               	movlw	0
  9185  0032A2  6E58               	movwf	?_create_chain+2,c
  9186  0032A4  0E00               	movlw	0
  9187  0032A6  6E59               	movwf	?_create_chain+3,c
  9188  0032A8  0012               	return	
  9189  0032AA                     l4681:
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;ff.c: 1006:   if (cs == 0xFFFFFFFF) return cs;
  9193  0032AA  2969               	incf	create_chain@cs& (0+255),w,b
  9194  0032AC  E110               	bnz	l4685
  9195  0032AE  296A               	incf	(create_chain@cs+1)& (0+255),w,b
  9196  0032B0  E10E               	bnz	l4685
  9197  0032B2  296B               	incf	(create_chain@cs+2)& (0+255),w,b
  9198  0032B4  E10C               	bnz	l4685
  9199  0032B6  296C               	incf	(create_chain@cs+3)& (0+255),w,b
  9200  0032B8  A4D8               	btfss	status,2,c
  9201  0032BA  D009               	goto	l4685
  9202  0032BC                     u5380:
  9203                           
  9204                           ; BSR set to: 0
  9205  0032BC  C069  F056         	movff	create_chain@cs,?_create_chain
  9206  0032C0  C06A  F057         	movff	create_chain@cs+1,?_create_chain+1
  9207  0032C4  C06B  F058         	movff	create_chain@cs+2,?_create_chain+2
  9208  0032C8  C06C  F059         	movff	create_chain@cs+3,?_create_chain+3
  9209  0032CC  0012               	return	
  9210  0032CE                     l4685:
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;ff.c: 1007:   if (cs < fs->n_fatent) return cs;
  9214  0032CE  EE20 F012          	lfsr	2,18
  9215  0032D2  5056               	movf	create_chain@fs,w,c
  9216  0032D4  26D9               	addwf	fsr2l,f,c
  9217  0032D6  5057               	movf	create_chain@fs+1,w,c
  9218  0032D8  22DA               	addwfc	fsr2h,f,c
  9219  0032DA  50DE               	movf	postinc2,w,c
  9220  0032DC  5D69               	subwf	create_chain@cs& (0+255),w,b
  9221  0032DE  50DE               	movf	postinc2,w,c
  9222  0032E0  596A               	subwfb	(create_chain@cs+1)& (0+255),w,b
  9223  0032E2  50DE               	movf	postinc2,w,c
  9224  0032E4  596B               	subwfb	(create_chain@cs+2)& (0+255),w,b
  9225  0032E6  50DE               	movf	postinc2,w,c
  9226  0032E8  596C               	subwfb	(create_chain@cs+3)& (0+255),w,b
  9227  0032EA  A0D8               	btfss	status,0,c
  9228  0032EC  D7E7               	goto	u5380
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;ff.c: 1008:   scl = clst;
  9232  0032EE  C058  F061         	movff	create_chain@clst,create_chain@scl
  9233  0032F2  C059  F062         	movff	create_chain@clst+1,create_chain@scl+1
  9234  0032F6  C05A  F063         	movff	create_chain@clst+2,create_chain@scl+2
  9235  0032FA  C05B  F064         	movff	create_chain@clst+3,create_chain@scl+3
  9236  0032FE                     l317:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;ff.c: 1011:  ncl = scl;
  9240  0032FE  C061  F065         	movff	create_chain@scl,create_chain@ncl
  9241  003302  C062  F066         	movff	create_chain@scl+1,create_chain@ncl+1
  9242  003306  C063  F067         	movff	create_chain@scl+2,create_chain@ncl+2
  9243  00330A  C064  F068         	movff	create_chain@scl+3,create_chain@ncl+3
  9244  00330E                     l4689:
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;ff.c: 1013:   ncl++;
  9248  00330E  0E01               	movlw	1
  9249  003310  2765               	addwf	create_chain@ncl& (0+255),f,b
  9250  003312  0E00               	movlw	0
  9251  003314  2366               	addwfc	(create_chain@ncl+1)& (0+255),f,b
  9252  003316  2367               	addwfc	(create_chain@ncl+2)& (0+255),f,b
  9253  003318  2368               	addwfc	(create_chain@ncl+3)& (0+255),f,b
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;ff.c: 1014:   if (ncl >= fs->n_fatent) {
  9257  00331A  EE20 F012          	lfsr	2,18
  9258  00331E  5056               	movf	create_chain@fs,w,c
  9259  003320  26D9               	addwf	fsr2l,f,c
  9260  003322  5057               	movf	create_chain@fs+1,w,c
  9261  003324  22DA               	addwfc	fsr2h,f,c
  9262  003326  50DE               	movf	postinc2,w,c
  9263  003328  5D65               	subwf	create_chain@ncl& (0+255),w,b
  9264  00332A  50DE               	movf	postinc2,w,c
  9265  00332C  5966               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  9266  00332E  50DE               	movf	postinc2,w,c
  9267  003330  5967               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  9268  003332  50DE               	movf	postinc2,w,c
  9269  003334  5968               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  9270  003336  A0D8               	btfss	status,0,c
  9271  003338  D019               	goto	l4701
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;ff.c: 1015:    ncl = 2;
  9275  00333A  0E02               	movlw	2
  9276  00333C  6F65               	movwf	create_chain@ncl& (0+255),b
  9277  00333E  0E00               	movlw	0
  9278  003340  6F66               	movwf	(create_chain@ncl+1)& (0+255),b
  9279  003342  0E00               	movlw	0
  9280  003344  6F67               	movwf	(create_chain@ncl+2)& (0+255),b
  9281  003346  0E00               	movlw	0
  9282  003348  6F68               	movwf	(create_chain@ncl+3)& (0+255),b
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;ff.c: 1016:    if (ncl > scl) return 0;
  9286  00334A  5164               	movf	(create_chain@scl+3)& (0+255),w,b
  9287  00334C  1163               	iorwf	(create_chain@scl+2)& (0+255),w,b
  9288  00334E  1162               	iorwf	(create_chain@scl+1)& (0+255),w,b
  9289  003350  E10D               	bnz	l4701
  9290  003352  0E02               	movlw	2
  9291  003354  5D61               	subwf	create_chain@scl& (0+255),w,b
  9292  003356  B0D8               	btfsc	status,0,c
  9293  003358  D009               	goto	l4701
  9294  00335A                     u5410:
  9295                           
  9296                           ; BSR set to: 0
  9297  00335A  0E00               	movlw	0
  9298  00335C  6E56               	movwf	?_create_chain,c
  9299  00335E  0E00               	movlw	0
  9300  003360  6E57               	movwf	?_create_chain+1,c
  9301  003362  0E00               	movlw	0
  9302  003364  6E58               	movwf	?_create_chain+2,c
  9303  003366  0E00               	movlw	0
  9304  003368  6E59               	movwf	?_create_chain+3,c
  9305  00336A  0012               	return	
  9306  00336C                     l4701:
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;ff.c: 1018:   cs = get_fat(fs, ncl);
  9310  00336C  C056  F03B         	movff	create_chain@fs,get_fat@fs
  9311  003370  C057  F03C         	movff	create_chain@fs+1,get_fat@fs+1
  9312  003374  C065  F03D         	movff	create_chain@ncl,get_fat@clst
  9313  003378  C066  F03E         	movff	create_chain@ncl+1,get_fat@clst+1
  9314  00337C  C067  F03F         	movff	create_chain@ncl+2,get_fat@clst+2
  9315  003380  C068  F040         	movff	create_chain@ncl+3,get_fat@clst+3
  9316  003384  EC5D  F015         	call	_get_fat	;wreg free
  9317  003388  C03B  F069         	movff	?_get_fat,create_chain@cs
  9318  00338C  C03C  F06A         	movff	?_get_fat+1,create_chain@cs+1
  9319  003390  C03D  F06B         	movff	?_get_fat+2,create_chain@cs+2
  9320  003394  C03E  F06C         	movff	?_get_fat+3,create_chain@cs+3
  9321                           
  9322                           ;ff.c: 1019:   if (cs == 0) break;
  9323  003398  0100               	movlb	0	; () banked
  9324  00339A  5169               	movf	create_chain@cs& (0+255),w,b
  9325  00339C  116A               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9326  00339E  116B               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9327  0033A0  116C               	iorwf	(create_chain@cs+3)& (0+255),w,b
  9328  0033A2  B4D8               	btfsc	status,2,c
  9329  0033A4  D01D               	goto	l4717
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;ff.c: 1020:   if (cs == 0xFFFFFFFF || cs == 1)
  9333  0033A6  2969               	incf	create_chain@cs& (0+255),w,b
  9334  0033A8  E107               	bnz	u5430
  9335  0033AA  296A               	incf	(create_chain@cs+1)& (0+255),w,b
  9336  0033AC  E105               	bnz	u5430
  9337  0033AE  296B               	incf	(create_chain@cs+2)& (0+255),w,b
  9338  0033B0  E103               	bnz	u5430
  9339  0033B2  296C               	incf	(create_chain@cs+3)& (0+255),w,b
  9340  0033B4  B4D8               	btfsc	status,2,c
  9341  0033B6  D782               	goto	u5380
  9342  0033B8                     u5430:
  9343                           
  9344                           ; BSR set to: 0
  9345  0033B8  0569               	decf	create_chain@cs& (0+255),w,b
  9346  0033BA  116A               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9347  0033BC  116B               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9348  0033BE  116C               	iorwf	(create_chain@cs+3)& (0+255),w,b
  9349  0033C0  B4D8               	btfsc	status,2,c
  9350  0033C2  D77C               	goto	u5380
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;ff.c: 1022:   if (ncl == scl) return 0;
  9354  0033C4  5161               	movf	create_chain@scl& (0+255),w,b
  9355  0033C6  1965               	xorwf	create_chain@ncl& (0+255),w,b
  9356  0033C8  E1A2               	bnz	l4689
  9357  0033CA  5162               	movf	(create_chain@scl+1)& (0+255),w,b
  9358  0033CC  1966               	xorwf	(create_chain@ncl+1)& (0+255),w,b
  9359  0033CE  E19F               	bnz	l4689
  9360  0033D0  5163               	movf	(create_chain@scl+2)& (0+255),w,b
  9361  0033D2  1967               	xorwf	(create_chain@ncl+2)& (0+255),w,b
  9362  0033D4  E19C               	bnz	l4689
  9363  0033D6  5164               	movf	(create_chain@scl+3)& (0+255),w,b
  9364  0033D8  1968               	xorwf	(create_chain@ncl+3)& (0+255),w,b
  9365  0033DA  B4D8               	btfsc	status,2,c
  9366  0033DC  D7BE               	goto	u5410
  9367  0033DE  D797               	goto	l4689
  9368  0033E0                     l4717:
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;ff.c: 1025:  res = put_fat(fs, ncl, 0x0FFFFFFF);
  9372  0033E0  C056  F03B         	movff	create_chain@fs,put_fat@fs
  9373  0033E4  C057  F03C         	movff	create_chain@fs+1,put_fat@fs+1
  9374  0033E8  C065  F03D         	movff	create_chain@ncl,put_fat@clst
  9375  0033EC  C066  F03E         	movff	create_chain@ncl+1,put_fat@clst+1
  9376  0033F0  C067  F03F         	movff	create_chain@ncl+2,put_fat@clst+2
  9377  0033F4  C068  F040         	movff	create_chain@ncl+3,put_fat@clst+3
  9378  0033F8  0EFF               	movlw	255
  9379  0033FA  6E41               	movwf	put_fat@val,c
  9380  0033FC  0EFF               	movlw	255
  9381  0033FE  6E42               	movwf	put_fat@val+1,c
  9382  003400  0EFF               	movlw	255
  9383  003402  6E43               	movwf	put_fat@val+2,c
  9384  003404  0E0F               	movlw	15
  9385  003406  6E44               	movwf	put_fat@val+3,c
  9386  003408  EC45  F011         	call	_put_fat	;wreg free
  9387  00340C  0100               	movlb	0	; () banked
  9388  00340E  6F60               	movwf	create_chain@res& (0+255),b
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;ff.c: 1026:  if (res == FR_OK && clst != 0) {
  9392  003410  5160               	movf	create_chain@res& (0+255),w,b
  9393  003412  A4D8               	btfss	status,2,c
  9394  003414  D01E               	goto	l4725
  9395                           
  9396                           ; BSR set to: 0
  9397  003416  5058               	movf	create_chain@clst,w,c
  9398  003418  1059               	iorwf	create_chain@clst+1,w,c
  9399  00341A  105A               	iorwf	create_chain@clst+2,w,c
  9400  00341C  105B               	iorwf	create_chain@clst+3,w,c
  9401  00341E  B4D8               	btfsc	status,2,c
  9402  003420  D018               	goto	l4725
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;ff.c: 1027:   res = put_fat(fs, clst, ncl);
  9406  003422  C056  F03B         	movff	create_chain@fs,put_fat@fs
  9407  003426  C057  F03C         	movff	create_chain@fs+1,put_fat@fs+1
  9408  00342A  C058  F03D         	movff	create_chain@clst,put_fat@clst
  9409  00342E  C059  F03E         	movff	create_chain@clst+1,put_fat@clst+1
  9410  003432  C05A  F03F         	movff	create_chain@clst+2,put_fat@clst+2
  9411  003436  C05B  F040         	movff	create_chain@clst+3,put_fat@clst+3
  9412  00343A  C065  F041         	movff	create_chain@ncl,put_fat@val
  9413  00343E  C066  F042         	movff	create_chain@ncl+1,put_fat@val+1
  9414  003442  C067  F043         	movff	create_chain@ncl+2,put_fat@val+2
  9415  003446  C068  F044         	movff	create_chain@ncl+3,put_fat@val+3
  9416  00344A  EC45  F011         	call	_put_fat	;wreg free
  9417  00344E  0100               	movlb	0	; () banked
  9418  003450  6F60               	movwf	create_chain@res& (0+255),b
  9419  003452                     l4725:
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;ff.c: 1029:  if (res == FR_OK) {
  9423  003452  5160               	movf	create_chain@res& (0+255),w,b
  9424  003454  A4D8               	btfss	status,2,c
  9425  003456  D031               	goto	l4731
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;ff.c: 1030:   fs->last_clust = ncl;
  9429  003458  EE20 F00A          	lfsr	2,10
  9430  00345C  5056               	movf	create_chain@fs,w,c
  9431  00345E  26D9               	addwf	fsr2l,f,c
  9432  003460  5057               	movf	create_chain@fs+1,w,c
  9433  003462  22DA               	addwfc	fsr2h,f,c
  9434  003464  C065  FFDE         	movff	create_chain@ncl,postinc2
  9435  003468  C066  FFDE         	movff	create_chain@ncl+1,postinc2
  9436  00346C  C067  FFDE         	movff	create_chain@ncl+2,postinc2
  9437  003470  C068  FFDE         	movff	create_chain@ncl+3,postinc2
  9438                           
  9439                           ;ff.c: 1031:   if (fs->free_clust != 0xFFFFFFFF) {
  9440  003474  EE20 F00E          	lfsr	2,14
  9441  003478  5056               	movf	create_chain@fs,w,c
  9442  00347A  26D9               	addwf	fsr2l,f,c
  9443  00347C  5057               	movf	create_chain@fs+1,w,c
  9444  00347E  22DA               	addwfc	fsr2h,f,c
  9445  003480  28DE               	incf	postinc2,w,c
  9446  003482  E107               	bnz	u5490
  9447  003484  28DE               	incf	postinc2,w,c
  9448  003486  E105               	bnz	u5490
  9449  003488  28DE               	incf	postinc2,w,c
  9450  00348A  E103               	bnz	u5490
  9451  00348C  28DE               	incf	postinc2,w,c
  9452  00348E  B4D8               	btfsc	status,2,c
  9453  003490  D024               	goto	l334
  9454  003492                     u5490:
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;ff.c: 1032:    fs->free_clust--;
  9458  003492  EE20 F00E          	lfsr	2,14
  9459  003496  5056               	movf	create_chain@fs,w,c
  9460  003498  26D9               	addwf	fsr2l,f,c
  9461  00349A  5057               	movf	create_chain@fs+1,w,c
  9462  00349C  22DA               	addwfc	fsr2h,f,c
  9463  00349E  06DE               	decf	postinc2,f,c
  9464  0034A0  0E00               	movlw	0
  9465  0034A2  5ADE               	subwfb	postinc2,f,c
  9466  0034A4  5ADE               	subwfb	postinc2,f,c
  9467  0034A6  5ADE               	subwfb	postinc2,f,c
  9468                           
  9469                           ;ff.c: 1033:    fs->fsi_flag |= 1;
  9470  0034A8  EE20 F005          	lfsr	2,5
  9471  0034AC  5056               	movf	create_chain@fs,w,c
  9472  0034AE  26D9               	addwf	fsr2l,f,c
  9473  0034B0  5057               	movf	create_chain@fs+1,w,c
  9474  0034B2  22DA               	addwfc	fsr2h,f,c
  9475  0034B4  0E00               	movlw	0
  9476  0034B6  80DB               	bsf	plusw2,0,c
  9477  0034B8  D010               	goto	l334
  9478  0034BA                     l4731:
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;ff.c: 1036:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
  9482  0034BA  0560               	decf	create_chain@res& (0+255),w,b
  9483  0034BC  B4D8               	btfsc	status,2,c
  9484  0034BE  D009               	goto	l336
  9485                           
  9486                           ; BSR set to: 0
  9487  0034C0  0E01               	movlw	1
  9488  0034C2  6F65               	movwf	create_chain@ncl& (0+255),b
  9489  0034C4  0E00               	movlw	0
  9490  0034C6  6F66               	movwf	(create_chain@ncl+1)& (0+255),b
  9491  0034C8  0E00               	movlw	0
  9492  0034CA  6F67               	movwf	(create_chain@ncl+2)& (0+255),b
  9493  0034CC  0E00               	movlw	0
  9494  0034CE  6F68               	movwf	(create_chain@ncl+3)& (0+255),b
  9495  0034D0  D004               	goto	l334
  9496  0034D2                     l336:
  9497                           
  9498                           ; BSR set to: 0
  9499  0034D2  6965               	setf	create_chain@ncl& (0+255),b
  9500  0034D4  6966               	setf	(create_chain@ncl+1)& (0+255),b
  9501  0034D6  6967               	setf	(create_chain@ncl+2)& (0+255),b
  9502  0034D8  6968               	setf	(create_chain@ncl+3)& (0+255),b
  9503  0034DA                     l334:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;ff.c: 1039:  return ncl;
  9507  0034DA  C065  F056         	movff	create_chain@ncl,?_create_chain
  9508  0034DE  C066  F057         	movff	create_chain@ncl+1,?_create_chain+1
  9509  0034E2  C067  F058         	movff	create_chain@ncl+2,?_create_chain+2
  9510  0034E6  C068  F059         	movff	create_chain@ncl+3,?_create_chain+3
  9511                           
  9512                           ; BSR set to: 0
  9513  0034EA  0012               	return		;funcret
  9514  0034EC                     __end_of_create_chain:
  9515                           	opt callstack 0
  9516                           
  9517 ;; *************** function _put_fat *****************
  9518 ;; Defined at:
  9519 ;;		line 873 in file "ff.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  fs              2   58[COMRAM] PTR struct .
  9522 ;;		 -> FatFs(558), NULL(0), 
  9523 ;;  clst            4   60[COMRAM] unsigned long 
  9524 ;;  val             4   64[COMRAM] unsigned long 
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  p               2   83[COMRAM] PTR unsigned char 
  9527 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
  9528 ;;  bc              2   80[COMRAM] unsigned short 
  9529 ;;  res             1   82[COMRAM] enum E93
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      enum E93
  9532 ;; Registers used:
  9533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9539 ;;      Params:        10       0       0       0       0       0       0       0       0
  9540 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9541 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9542 ;;      Totals:        27       0       0       0       0       0       0       0       0
  9543 ;;Total ram usage:       27 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:    8
  9546 ;; This function calls:
  9547 ;;		_move_window
  9548 ;; This function is called by:
  9549 ;;		_remove_chain
  9550 ;;		_create_chain
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           	psect	text25
  9555  00228A                     __ptext25:
  9556                           	opt callstack 0
  9557  00228A                     _put_fat:
  9558                           	opt callstack 19
  9559                           
  9560                           ;ff.c: 874:  FATFS* fs,;ff.c: 875:  DWORD clst,;ff.c: 876:  DWORD val;ff.c: 878: {;ff.c:
      +                           879:  UINT bc;;ff.c: 880:  BYTE *p;;ff.c: 881:  FRESULT res;;ff.c: 884:  if (clst < 2 |
      +                          | clst >= fs->n_fatent) {
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;incstack = 0
  9564  00228A  5040               	movf	put_fat@clst+3,w,c
  9565  00228C  103F               	iorwf	put_fat@clst+2,w,c
  9566  00228E  103E               	iorwf	put_fat@clst+1,w,c
  9567  002290  E104               	bnz	u5180
  9568  002292  0E02               	movlw	2
  9569  002294  5C3D               	subwf	put_fat@clst,w,c
  9570  002296  A0D8               	btfss	status,0,c
  9571  002298  D010               	goto	u5190
  9572  00229A                     u5180:
  9573  00229A  EE20 F012          	lfsr	2,18
  9574  00229E  503B               	movf	put_fat@fs,w,c
  9575  0022A0  26D9               	addwf	fsr2l,f,c
  9576  0022A2  503C               	movf	put_fat@fs+1,w,c
  9577  0022A4  22DA               	addwfc	fsr2h,f,c
  9578  0022A6  50DE               	movf	postinc2,w,c
  9579  0022A8  5C3D               	subwf	put_fat@clst,w,c
  9580  0022AA  50DE               	movf	postinc2,w,c
  9581  0022AC  583E               	subwfb	put_fat@clst+1,w,c
  9582  0022AE  50DE               	movf	postinc2,w,c
  9583  0022B0  583F               	subwfb	put_fat@clst+2,w,c
  9584  0022B2  50DE               	movf	postinc2,w,c
  9585  0022B4  5840               	subwfb	put_fat@clst+3,w,c
  9586  0022B6  A0D8               	btfss	status,0,c
  9587  0022B8  D1E5               	goto	l4623
  9588  0022BA                     u5190:
  9589                           
  9590                           ;ff.c: 885:   res = FR_INT_ERR;
  9591  0022BA  0E02               	movlw	2
  9592  0022BC  6E53               	movwf	put_fat@res,c
  9593                           
  9594                           ;ff.c: 887:  } else {
  9595  0022BE  D1F8               	goto	l4625
  9596  0022C0                     l278:
  9597                           
  9598                           ;ff.c: 890:    bc = (UINT)clst; bc += bc / 2;
  9599  0022C0  C03D  F051         	movff	put_fat@clst,put_fat@bc
  9600  0022C4  C03E  F052         	movff	put_fat@clst+1,put_fat@bc+1
  9601  0022C8  90D8               	bcf	status,0,c
  9602  0022CA  3052               	rrcf	put_fat@bc+1,w,c
  9603  0022CC  6E46               	movwf	(??_put_fat+1)& (0+255),c
  9604  0022CE  3051               	rrcf	put_fat@bc,w,c
  9605  0022D0  6E45               	movwf	??_put_fat& (0+255),c
  9606  0022D2  5045               	movf	??_put_fat,w,c
  9607  0022D4  2651               	addwf	put_fat@bc,f,c
  9608  0022D6  5046               	movf	??_put_fat+1,w,c
  9609  0022D8  2252               	addwfc	put_fat@bc+1,f,c
  9610                           
  9611                           ;ff.c: 891:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
  9612  0022DA  C03B  F030         	movff	put_fat@fs,move_window@fs
  9613  0022DE  C03C  F031         	movff	put_fat@fs+1,move_window@fs+1
  9614  0022E2  EE20 F01E          	lfsr	2,30
  9615  0022E6  503B               	movf	put_fat@fs,w,c
  9616  0022E8  26D9               	addwf	fsr2l,f,c
  9617  0022EA  503C               	movf	put_fat@fs+1,w,c
  9618  0022EC  22DA               	addwfc	fsr2h,f,c
  9619  0022EE  CFDE F045          	movff	postinc2,??_put_fat
  9620  0022F2  CFDE F046          	movff	postinc2,??_put_fat+1
  9621  0022F6  CFDE F047          	movff	postinc2,??_put_fat+2
  9622  0022FA  CFDE F048          	movff	postinc2,??_put_fat+3
  9623  0022FE  C051  F049         	movff	put_fat@bc,??_put_fat+4
  9624  002302  C052  F04A         	movff	put_fat@bc+1,??_put_fat+5
  9625  002306  0E09               	movlw	9
  9626  002308  6E4B               	movwf	(??_put_fat+6)& (0+255),c
  9627  00230A                     u5205:
  9628  00230A  90D8               	bcf	status,0,c
  9629  00230C  324A               	rrcf	??_put_fat+5,f,c
  9630  00230E  3249               	rrcf	??_put_fat+4,f,c
  9631  002310  2E4B               	decfsz	(??_put_fat+6)& (0+255),f,c
  9632  002312  D7FB               	goto	u5205
  9633  002314  5049               	movf	??_put_fat+4,w,c
  9634  002316  2445               	addwf	??_put_fat,w,c
  9635  002318  6E32               	movwf	move_window@sector,c
  9636  00231A  504A               	movf	??_put_fat+5,w,c
  9637  00231C  2046               	addwfc	??_put_fat+1,w,c
  9638  00231E  6E33               	movwf	move_window@sector+1,c
  9639  002320  0E00               	movlw	0
  9640  002322  2047               	addwfc	??_put_fat+2,w,c
  9641  002324  6E34               	movwf	move_window@sector+2,c
  9642  002326  0E00               	movlw	0
  9643  002328  2048               	addwfc	??_put_fat+3,w,c
  9644  00232A  6E35               	movwf	move_window@sector+3,c
  9645  00232C  EC67  F026         	call	_move_window	;wreg free
  9646  002330  6E53               	movwf	put_fat@res,c
  9647                           
  9648                           ;ff.c: 892:    if (res != FR_OK) break;
  9649  002332  5053               	movf	put_fat@res,w,c
  9650  002334  A4D8               	btfss	status,2,c
  9651  002336  D1BC               	goto	l4625
  9652                           
  9653                           ;ff.c: 893:    p = &fs->win[bc++ % ((UINT)512)];
  9654  002338  0EFF               	movlw	255
  9655  00233A  6E45               	movwf	??_put_fat& (0+255),c
  9656  00233C  0E01               	movlw	1
  9657  00233E  6E46               	movwf	(??_put_fat+1)& (0+255),c
  9658  002340  C051  F047         	movff	put_fat@bc,??_put_fat+2
  9659  002344  C052  F048         	movff	put_fat@bc+1,??_put_fat+3
  9660  002348  5045               	movf	??_put_fat,w,c
  9661  00234A  1647               	andwf	??_put_fat+2,f,c
  9662  00234C  5046               	movf	??_put_fat+1,w,c
  9663  00234E  1648               	andwf	??_put_fat+3,f,c
  9664  002350  C03B  F049         	movff	put_fat@fs,??_put_fat+4
  9665  002354  C03C  F04A         	movff	put_fat@fs+1,??_put_fat+5
  9666  002358  5047               	movf	??_put_fat+2,w,c
  9667  00235A  2649               	addwf	??_put_fat+4,f,c
  9668  00235C  5048               	movf	??_put_fat+3,w,c
  9669  00235E  224A               	addwfc	??_put_fat+5,f,c
  9670  002360  0E2E               	movlw	46
  9671  002362  2449               	addwf	??_put_fat+4,w,c
  9672  002364  6E54               	movwf	put_fat@p,c
  9673  002366  0E00               	movlw	0
  9674  002368  204A               	addwfc	??_put_fat+5,w,c
  9675  00236A  6E55               	movwf	put_fat@p+1,c
  9676  00236C  4A51               	infsnz	put_fat@bc,f,c
  9677  00236E  2A52               	incf	put_fat@bc+1,f,c
  9678                           
  9679                           ;ff.c: 894:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
  9680  002370  B03D               	btfsc	put_fat@clst,0,c
  9681  002372  D004               	goto	l4577
  9682  002374  C041  F04D         	movff	put_fat@val,_put_fat$400
  9683  002378  6A4E               	clrf	_put_fat$400+1,c
  9684  00237A  D01A               	goto	l4579
  9685  00237C                     l4577:
  9686  00237C  5041               	movf	put_fat@val,w,c
  9687  00237E  6E45               	movwf	??_put_fat& (0+255),c
  9688  002380  6A46               	clrf	(??_put_fat+1)& (0+255),c
  9689  002382  3A45               	swapf	??_put_fat,f,c
  9690  002384  3A46               	swapf	??_put_fat+1,f,c
  9691  002386  0EF0               	movlw	240
  9692  002388  1646               	andwf	??_put_fat+1,f,c
  9693  00238A  5045               	movf	??_put_fat,w,c
  9694  00238C  0B0F               	andlw	15
  9695  00238E  1246               	iorwf	??_put_fat+1,f,c
  9696  002390  0EF0               	movlw	240
  9697  002392  1645               	andwf	??_put_fat,f,c
  9698  002394  C054  FFD9         	movff	put_fat@p,fsr2l
  9699  002398  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9700  00239C  50DF               	movf	indf2,w,c
  9701  00239E  0B0F               	andlw	15
  9702  0023A0  6E47               	movwf	(??_put_fat+2)& (0+255),c
  9703  0023A2  6A48               	clrf	(??_put_fat+3)& (0+255),c
  9704  0023A4  5045               	movf	??_put_fat,w,c
  9705  0023A6  1047               	iorwf	??_put_fat+2,w,c
  9706  0023A8  6E4D               	movwf	_put_fat$400,c
  9707  0023AA  5046               	movf	??_put_fat+1,w,c
  9708  0023AC  1048               	iorwf	??_put_fat+3,w,c
  9709  0023AE  6E4E               	movwf	_put_fat$400+1,c
  9710  0023B0                     l4579:
  9711  0023B0  C054  FFD9         	movff	put_fat@p,fsr2l
  9712  0023B4  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9713  0023B8  C04D  FFDF         	movff	_put_fat$400,indf2
  9714                           
  9715                           ;ff.c: 895:    fs->wflag = 1;
  9716  0023BC  EE20 F004          	lfsr	2,4
  9717  0023C0  503B               	movf	put_fat@fs,w,c
  9718  0023C2  26D9               	addwf	fsr2l,f,c
  9719  0023C4  503C               	movf	put_fat@fs+1,w,c
  9720  0023C6  22DA               	addwfc	fsr2h,f,c
  9721  0023C8  0E01               	movlw	1
  9722  0023CA  6EDF               	movwf	indf2,c
  9723                           
  9724                           ;ff.c: 896:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
  9725  0023CC  C03B  F030         	movff	put_fat@fs,move_window@fs
  9726  0023D0  C03C  F031         	movff	put_fat@fs+1,move_window@fs+1
  9727  0023D4  EE20 F01E          	lfsr	2,30
  9728  0023D8  503B               	movf	put_fat@fs,w,c
  9729  0023DA  26D9               	addwf	fsr2l,f,c
  9730  0023DC  503C               	movf	put_fat@fs+1,w,c
  9731  0023DE  22DA               	addwfc	fsr2h,f,c
  9732  0023E0  CFDE F045          	movff	postinc2,??_put_fat
  9733  0023E4  CFDE F046          	movff	postinc2,??_put_fat+1
  9734  0023E8  CFDE F047          	movff	postinc2,??_put_fat+2
  9735  0023EC  CFDE F048          	movff	postinc2,??_put_fat+3
  9736  0023F0  C051  F049         	movff	put_fat@bc,??_put_fat+4
  9737  0023F4  C052  F04A         	movff	put_fat@bc+1,??_put_fat+5
  9738  0023F8  0E09               	movlw	9
  9739  0023FA  6E4B               	movwf	(??_put_fat+6)& (0+255),c
  9740  0023FC                     u5235:
  9741  0023FC  90D8               	bcf	status,0,c
  9742  0023FE  324A               	rrcf	??_put_fat+5,f,c
  9743  002400  3249               	rrcf	??_put_fat+4,f,c
  9744  002402  2E4B               	decfsz	(??_put_fat+6)& (0+255),f,c
  9745  002404  D7FB               	goto	u5235
  9746  002406  5049               	movf	??_put_fat+4,w,c
  9747  002408  2445               	addwf	??_put_fat,w,c
  9748  00240A  6E32               	movwf	move_window@sector,c
  9749  00240C  504A               	movf	??_put_fat+5,w,c
  9750  00240E  2046               	addwfc	??_put_fat+1,w,c
  9751  002410  6E33               	movwf	move_window@sector+1,c
  9752  002412  0E00               	movlw	0
  9753  002414  2047               	addwfc	??_put_fat+2,w,c
  9754  002416  6E34               	movwf	move_window@sector+2,c
  9755  002418  0E00               	movlw	0
  9756  00241A  2048               	addwfc	??_put_fat+3,w,c
  9757  00241C  6E35               	movwf	move_window@sector+3,c
  9758  00241E  EC67  F026         	call	_move_window	;wreg free
  9759  002422  6E53               	movwf	put_fat@res,c
  9760                           
  9761                           ;ff.c: 897:    if (res != FR_OK) break;
  9762  002424  5053               	movf	put_fat@res,w,c
  9763  002426  A4D8               	btfss	status,2,c
  9764  002428  D143               	goto	l4625
  9765                           
  9766                           ;ff.c: 898:    p = &fs->win[bc % ((UINT)512)];
  9767  00242A  0EFF               	movlw	255
  9768  00242C  6E45               	movwf	??_put_fat& (0+255),c
  9769  00242E  0E01               	movlw	1
  9770  002430  6E46               	movwf	(??_put_fat+1)& (0+255),c
  9771  002432  C051  F047         	movff	put_fat@bc,??_put_fat+2
  9772  002436  C052  F048         	movff	put_fat@bc+1,??_put_fat+3
  9773  00243A  5045               	movf	??_put_fat,w,c
  9774  00243C  1647               	andwf	??_put_fat+2,f,c
  9775  00243E  5046               	movf	??_put_fat+1,w,c
  9776  002440  1648               	andwf	??_put_fat+3,f,c
  9777  002442  C03B  F049         	movff	put_fat@fs,??_put_fat+4
  9778  002446  C03C  F04A         	movff	put_fat@fs+1,??_put_fat+5
  9779  00244A  5047               	movf	??_put_fat+2,w,c
  9780  00244C  2649               	addwf	??_put_fat+4,f,c
  9781  00244E  5048               	movf	??_put_fat+3,w,c
  9782  002450  224A               	addwfc	??_put_fat+5,f,c
  9783  002452  0E2E               	movlw	46
  9784  002454  2449               	addwf	??_put_fat+4,w,c
  9785  002456  6E54               	movwf	put_fat@p,c
  9786  002458  0E00               	movlw	0
  9787  00245A  204A               	addwfc	??_put_fat+5,w,c
  9788  00245C  6E55               	movwf	put_fat@p+1,c
  9789                           
  9790                           ;ff.c: 899:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0
      +                          x0F));
  9791  00245E  B03D               	btfsc	put_fat@clst,0,c
  9792  002460  D01B               	goto	l4595
  9793  002462  C041  F045         	movff	put_fat@val,??_put_fat
  9794  002466  C042  F046         	movff	put_fat@val+1,??_put_fat+1
  9795  00246A  C043  F047         	movff	put_fat@val+2,??_put_fat+2
  9796  00246E  C044  F048         	movff	put_fat@val+3,??_put_fat+3
  9797  002472  C046  F045         	movff	??_put_fat+1,??_put_fat
  9798  002476  C047  F046         	movff	??_put_fat+2,??_put_fat+1
  9799  00247A  C048  F047         	movff	??_put_fat+3,??_put_fat+2
  9800  00247E  6A48               	clrf	??_put_fat+3,c
  9801  002480  0E0F               	movlw	15
  9802  002482  1645               	andwf	??_put_fat,f,c
  9803  002484  C054  FFD9         	movff	put_fat@p,fsr2l
  9804  002488  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9805  00248C  50DF               	movf	indf2,w,c
  9806  00248E  0BF0               	andlw	240
  9807  002490  1045               	iorwf	??_put_fat,w,c
  9808  002492  6E49               	movwf	(??_put_fat+4)& (0+255),c
  9809  002494  5049               	movf	??_put_fat+4,w,c
  9810  002496  D012               	goto	L8
  9811  002498                     l4595:
  9812  002498  C041  F045         	movff	put_fat@val,??_put_fat
  9813  00249C  C042  F046         	movff	put_fat@val+1,??_put_fat+1
  9814  0024A0  C043  F047         	movff	put_fat@val+2,??_put_fat+2
  9815  0024A4  C044  F048         	movff	put_fat@val+3,??_put_fat+3
  9816  0024A8  0E05               	movlw	5
  9817  0024AA  D005               	goto	u5260
  9818  0024AC                     u5265:
  9819  0024AC  90D8               	bcf	status,0,c
  9820  0024AE  3248               	rrcf	??_put_fat+3,f,c
  9821  0024B0  3247               	rrcf	??_put_fat+2,f,c
  9822  0024B2  3246               	rrcf	??_put_fat+1,f,c
  9823  0024B4  3245               	rrcf	??_put_fat,f,c
  9824  0024B6                     u5260:
  9825  0024B6  2EE8               	decfsz	wreg,f,c
  9826  0024B8  D7F9               	goto	u5265
  9827  0024BA  5045               	movf	??_put_fat,w,c
  9828  0024BC                     L8:
  9829  0024BC  6E4F               	movwf	_put_fat$401,c
  9830  0024BE  6A50               	clrf	_put_fat$401+1,c
  9831  0024C0  C054  FFD9         	movff	put_fat@p,fsr2l
  9832  0024C4  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9833  0024C8  C04F  FFDF         	movff	_put_fat$401,indf2
  9834  0024CC  D0D2               	goto	l4619
  9835  0024CE                     l4599:
  9836                           
  9837                           ;ff.c: 904:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)));
  9838  0024CE  C03B  F030         	movff	put_fat@fs,move_window@fs
  9839  0024D2  C03C  F031         	movff	put_fat@fs+1,move_window@fs+1
  9840  0024D6  EE20 F01E          	lfsr	2,30
  9841  0024DA  503B               	movf	put_fat@fs,w,c
  9842  0024DC  26D9               	addwf	fsr2l,f,c
  9843  0024DE  503C               	movf	put_fat@fs+1,w,c
  9844  0024E0  22DA               	addwfc	fsr2h,f,c
  9845  0024E2  CFDE F045          	movff	postinc2,??_put_fat
  9846  0024E6  CFDE F046          	movff	postinc2,??_put_fat+1
  9847  0024EA  CFDE F047          	movff	postinc2,??_put_fat+2
  9848  0024EE  CFDE F048          	movff	postinc2,??_put_fat+3
  9849  0024F2  C03D  F049         	movff	put_fat@clst,??_put_fat+4
  9850  0024F6  C03E  F04A         	movff	put_fat@clst+1,??_put_fat+5
  9851  0024FA  C03F  F04B         	movff	put_fat@clst+2,??_put_fat+6
  9852  0024FE  C040  F04C         	movff	put_fat@clst+3,??_put_fat+7
  9853  002502  C04A  F049         	movff	??_put_fat+5,??_put_fat+4
  9854  002506  C04B  F04A         	movff	??_put_fat+6,??_put_fat+5
  9855  00250A  C04C  F04B         	movff	??_put_fat+7,??_put_fat+6
  9856  00250E  6A4C               	clrf	??_put_fat+7,c
  9857  002510  5045               	movf	??_put_fat,w,c
  9858  002512  2449               	addwf	??_put_fat+4,w,c
  9859  002514  6E32               	movwf	move_window@sector,c
  9860  002516  5046               	movf	??_put_fat+1,w,c
  9861  002518  204A               	addwfc	??_put_fat+5,w,c
  9862  00251A  6E33               	movwf	move_window@sector+1,c
  9863  00251C  5047               	movf	??_put_fat+2,w,c
  9864  00251E  204B               	addwfc	??_put_fat+6,w,c
  9865  002520  6E34               	movwf	move_window@sector+2,c
  9866  002522  5048               	movf	??_put_fat+3,w,c
  9867  002524  204C               	addwfc	??_put_fat+7,w,c
  9868  002526  6E35               	movwf	move_window@sector+3,c
  9869  002528  EC67  F026         	call	_move_window	;wreg free
  9870  00252C  6E53               	movwf	put_fat@res,c
  9871                           
  9872                           ;ff.c: 905:    if (res != FR_OK) break;
  9873  00252E  5053               	movf	put_fat@res,w,c
  9874  002530  A4D8               	btfss	status,2,c
  9875  002532  D0BE               	goto	l4625
  9876                           
  9877                           ;ff.c: 906:    p = &fs->win[clst * 2 % ((UINT)512)];
  9878  002534  0EFF               	movlw	255
  9879  002536  6E45               	movwf	??_put_fat& (0+255),c
  9880  002538  0E01               	movlw	1
  9881  00253A  6E46               	movwf	(??_put_fat+1)& (0+255),c
  9882  00253C  C03D  F047         	movff	put_fat@clst,??_put_fat+2
  9883  002540  C03E  F048         	movff	put_fat@clst+1,??_put_fat+3
  9884  002544  90D8               	bcf	status,0,c
  9885  002546  3647               	rlcf	??_put_fat+2,f,c
  9886  002548  3648               	rlcf	??_put_fat+3,f,c
  9887  00254A  5045               	movf	??_put_fat,w,c
  9888  00254C  1647               	andwf	??_put_fat+2,f,c
  9889  00254E  5046               	movf	??_put_fat+1,w,c
  9890  002550  1648               	andwf	??_put_fat+3,f,c
  9891  002552  C03B  F049         	movff	put_fat@fs,??_put_fat+4
  9892  002556  C03C  F04A         	movff	put_fat@fs+1,??_put_fat+5
  9893  00255A  5047               	movf	??_put_fat+2,w,c
  9894  00255C  2649               	addwf	??_put_fat+4,f,c
  9895  00255E  5048               	movf	??_put_fat+3,w,c
  9896  002560  224A               	addwfc	??_put_fat+5,f,c
  9897  002562  0E2E               	movlw	46
  9898  002564  2449               	addwf	??_put_fat+4,w,c
  9899  002566  6E54               	movwf	put_fat@p,c
  9900  002568  0E00               	movlw	0
  9901  00256A  204A               	addwfc	??_put_fat+5,w,c
  9902  00256C  6E55               	movwf	put_fat@p+1,c
  9903                           
  9904                           ;ff.c: 907:    *(WORD*)(BYTE*)(p)=(WORD)((WORD)val);
  9905  00256E  C054  FFD9         	movff	put_fat@p,fsr2l
  9906  002572  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9907  002576  C041  FFDE         	movff	put_fat@val,postinc2
  9908  00257A  C042  FFDD         	movff	put_fat@val+1,postdec2
  9909  00257E  D079               	goto	l4619
  9910  002580                     l4609:
  9911                           
  9912                           ;ff.c: 912:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)));
  9913  002580  C03B  F030         	movff	put_fat@fs,move_window@fs
  9914  002584  C03C  F031         	movff	put_fat@fs+1,move_window@fs+1
  9915  002588  EE20 F01E          	lfsr	2,30
  9916  00258C  503B               	movf	put_fat@fs,w,c
  9917  00258E  26D9               	addwf	fsr2l,f,c
  9918  002590  503C               	movf	put_fat@fs+1,w,c
  9919  002592  22DA               	addwfc	fsr2h,f,c
  9920  002594  CFDE F045          	movff	postinc2,??_put_fat
  9921  002598  CFDE F046          	movff	postinc2,??_put_fat+1
  9922  00259C  CFDE F047          	movff	postinc2,??_put_fat+2
  9923  0025A0  CFDE F048          	movff	postinc2,??_put_fat+3
  9924  0025A4  C03D  F049         	movff	put_fat@clst,??_put_fat+4
  9925  0025A8  C03E  F04A         	movff	put_fat@clst+1,??_put_fat+5
  9926  0025AC  C03F  F04B         	movff	put_fat@clst+2,??_put_fat+6
  9927  0025B0  C040  F04C         	movff	put_fat@clst+3,??_put_fat+7
  9928  0025B4  0E08               	movlw	8
  9929  0025B6  D005               	goto	u5280
  9930  0025B8                     u5285:
  9931  0025B8  90D8               	bcf	status,0,c
  9932  0025BA  324C               	rrcf	??_put_fat+7,f,c
  9933  0025BC  324B               	rrcf	??_put_fat+6,f,c
  9934  0025BE  324A               	rrcf	??_put_fat+5,f,c
  9935  0025C0  3249               	rrcf	??_put_fat+4,f,c
  9936  0025C2                     u5280:
  9937  0025C2  2EE8               	decfsz	wreg,f,c
  9938  0025C4  D7F9               	goto	u5285
  9939  0025C6  5045               	movf	??_put_fat,w,c
  9940  0025C8  2449               	addwf	??_put_fat+4,w,c
  9941  0025CA  6E32               	movwf	move_window@sector,c
  9942  0025CC  5046               	movf	??_put_fat+1,w,c
  9943  0025CE  204A               	addwfc	??_put_fat+5,w,c
  9944  0025D0  6E33               	movwf	move_window@sector+1,c
  9945  0025D2  5047               	movf	??_put_fat+2,w,c
  9946  0025D4  204B               	addwfc	??_put_fat+6,w,c
  9947  0025D6  6E34               	movwf	move_window@sector+2,c
  9948  0025D8  5048               	movf	??_put_fat+3,w,c
  9949  0025DA  204C               	addwfc	??_put_fat+7,w,c
  9950  0025DC  6E35               	movwf	move_window@sector+3,c
  9951  0025DE  EC67  F026         	call	_move_window	;wreg free
  9952  0025E2  6E53               	movwf	put_fat@res,c
  9953                           
  9954                           ;ff.c: 913:    if (res != FR_OK) break;
  9955  0025E4  5053               	movf	put_fat@res,w,c
  9956  0025E6  A4D8               	btfss	status,2,c
  9957  0025E8  D063               	goto	l4625
  9958                           
  9959                           ;ff.c: 914:    p = &fs->win[clst * 4 % ((UINT)512)];
  9960  0025EA  0EFF               	movlw	255
  9961  0025EC  6E45               	movwf	??_put_fat& (0+255),c
  9962  0025EE  0E01               	movlw	1
  9963  0025F0  6E46               	movwf	(??_put_fat+1)& (0+255),c
  9964  0025F2  C03D  F047         	movff	put_fat@clst,??_put_fat+2
  9965  0025F6  C03E  F048         	movff	put_fat@clst+1,??_put_fat+3
  9966  0025FA  90D8               	bcf	status,0,c
  9967  0025FC  3647               	rlcf	??_put_fat+2,f,c
  9968  0025FE  3648               	rlcf	??_put_fat+3,f,c
  9969  002600  90D8               	bcf	status,0,c
  9970  002602  3647               	rlcf	??_put_fat+2,f,c
  9971  002604  3648               	rlcf	??_put_fat+3,f,c
  9972  002606  5045               	movf	??_put_fat,w,c
  9973  002608  1647               	andwf	??_put_fat+2,f,c
  9974  00260A  5046               	movf	??_put_fat+1,w,c
  9975  00260C  1648               	andwf	??_put_fat+3,f,c
  9976  00260E  C03B  F049         	movff	put_fat@fs,??_put_fat+4
  9977  002612  C03C  F04A         	movff	put_fat@fs+1,??_put_fat+5
  9978  002616  5047               	movf	??_put_fat+2,w,c
  9979  002618  2649               	addwf	??_put_fat+4,f,c
  9980  00261A  5048               	movf	??_put_fat+3,w,c
  9981  00261C  224A               	addwfc	??_put_fat+5,f,c
  9982  00261E  0E2E               	movlw	46
  9983  002620  2449               	addwf	??_put_fat+4,w,c
  9984  002622  6E54               	movwf	put_fat@p,c
  9985  002624  0E00               	movlw	0
  9986  002626  204A               	addwfc	??_put_fat+5,w,c
  9987  002628  6E55               	movwf	put_fat@p+1,c
  9988                           
  9989                           ;ff.c: 915:    val |= (DWORD)(*(DWORD*)(BYTE*)(p)) & 0xF0000000;
  9990  00262A  C054  FFD9         	movff	put_fat@p,fsr2l
  9991  00262E  C055  FFDA         	movff	put_fat@p+1,fsr2h
  9992  002632  0E00               	movlw	0
  9993  002634  14DE               	andwf	postinc2,w,c
  9994  002636  6E45               	movwf	??_put_fat& (0+255),c
  9995  002638  0E00               	movlw	0
  9996  00263A  14DE               	andwf	postinc2,w,c
  9997  00263C  6E46               	movwf	(??_put_fat+1)& (0+255),c
  9998  00263E  0E00               	movlw	0
  9999  002640  14DE               	andwf	postinc2,w,c
 10000  002642  6E47               	movwf	(??_put_fat+2)& (0+255),c
 10001  002644  0EF0               	movlw	240
 10002  002646  14DE               	andwf	postinc2,w,c
 10003  002648  6E48               	movwf	(??_put_fat+3)& (0+255),c
 10004  00264A  5045               	movf	??_put_fat,w,c
 10005  00264C  1241               	iorwf	put_fat@val,f,c
 10006  00264E  5046               	movf	??_put_fat+1,w,c
 10007  002650  1242               	iorwf	put_fat@val+1,f,c
 10008  002652  5047               	movf	??_put_fat+2,w,c
 10009  002654  1243               	iorwf	put_fat@val+2,f,c
 10010  002656  5048               	movf	??_put_fat+3,w,c
 10011  002658  1244               	iorwf	put_fat@val+3,f,c
 10012                           
 10013                           ;ff.c: 916:    *(DWORD*)(BYTE*)(p)=(DWORD)(val);
 10014  00265A  C054  FFD9         	movff	put_fat@p,fsr2l
 10015  00265E  C055  FFDA         	movff	put_fat@p+1,fsr2h
 10016  002662  C041  FFDE         	movff	put_fat@val,postinc2
 10017  002666  C042  FFDE         	movff	put_fat@val+1,postinc2
 10018  00266A  C043  FFDE         	movff	put_fat@val+2,postinc2
 10019  00266E  C044  FFDE         	movff	put_fat@val+3,postinc2
 10020  002672                     l4619:
 10021                           
 10022                           ;ff.c: 917:    fs->wflag = 1;
 10023  002672  EE20 F004          	lfsr	2,4
 10024  002676  503B               	movf	put_fat@fs,w,c
 10025  002678  26D9               	addwf	fsr2l,f,c
 10026  00267A  503C               	movf	put_fat@fs+1,w,c
 10027  00267C  22DA               	addwfc	fsr2h,f,c
 10028  00267E  0E01               	movlw	1
 10029  002680  6EDF               	movwf	indf2,c
 10030                           
 10031                           ;ff.c: 918:    break;
 10032  002682  D016               	goto	l4625
 10033  002684                     l4623:
 10034  002684  C03B  FFD9         	movff	put_fat@fs,fsr2l
 10035  002688  C03C  FFDA         	movff	put_fat@fs+1,fsr2h
 10036  00268C  50DF               	movf	indf2,w,c
 10037  00268E  6E45               	movwf	??_put_fat& (0+255),c
 10038  002690  6A46               	clrf	(??_put_fat+1)& (0+255),c
 10039                           
 10040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10041                           ; Switch size 1, requested type "simple"
 10042                           ; Number of cases is 1, Range of values is 0 to 0
 10043                           ; switch strategies available:
 10044                           ; Name         Instructions Cycles
 10045                           ; simple_byte            4     3 (average)
 10046                           ;	Chosen strategy is simple_byte
 10047  002692  5046               	movf	??_put_fat+1,w,c
 10048  002694  0A00               	xorlw	0	; case 0
 10049  002696  A4D8               	btfss	status,2,c
 10050  002698  D610               	goto	u5190
 10051                           
 10052                           ; Switch size 1, requested type "simple"
 10053                           ; Number of cases is 3, Range of values is 1 to 3
 10054                           ; switch strategies available:
 10055                           ; Name         Instructions Cycles
 10056                           ; simple_byte           10     6 (average)
 10057                           ;	Chosen strategy is simple_byte
 10058  00269A  5045               	movf	??_put_fat,w,c
 10059  00269C  0A01               	xorlw	1	; case 1
 10060  00269E  B4D8               	btfsc	status,2,c
 10061  0026A0  D60F               	goto	l278
 10062  0026A2  0A03               	xorlw	3	; case 2
 10063  0026A4  B4D8               	btfsc	status,2,c
 10064  0026A6  D713               	goto	l4599
 10065  0026A8  0A01               	xorlw	1	; case 3
 10066  0026AA  B4D8               	btfsc	status,2,c
 10067  0026AC  D769               	goto	l4609
 10068  0026AE  D605               	goto	u5190
 10069  0026B0                     l4625:
 10070                           
 10071                           ;ff.c: 925:  return res;
 10072  0026B0  5053               	movf	put_fat@res,w,c
 10073  0026B2  0012               	return		;funcret
 10074  0026B4                     __end_of_put_fat:
 10075                           	opt callstack 0
 10076                           
 10077 ;; *************** function _get_fat *****************
 10078 ;; Defined at:
 10079 ;;		line 818 in file "ff.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;  fs              2   58[COMRAM] PTR struct .
 10082 ;;		 -> FatFs(558), NULL(0), 
 10083 ;;  clst            4   60[COMRAM] unsigned long 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  val             4   75[COMRAM] unsigned long 
 10086 ;;  bc              2   83[COMRAM] unsigned short 
 10087 ;;  p               2   81[COMRAM] PTR unsigned char 
 10088 ;;		 -> FatFs.win(512), FatFs(558), NULL(0), 
 10089 ;;  wc              2   79[COMRAM] unsigned short 
 10090 ;; Return value:  Size  Location     Type
 10091 ;;                  4   58[COMRAM] unsigned long 
 10092 ;; Registers used:
 10093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10094 ;; Tracked objects:
 10095 ;;		On entry : 0/0
 10096 ;;		On exit  : 0/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10099 ;;      Params:         6       0       0       0       0       0       0       0       0
 10100 ;;      Locals:        12       0       0       0       0       0       0       0       0
 10101 ;;      Temps:          9       0       0       0       0       0       0       0       0
 10102 ;;      Totals:        27       0       0       0       0       0       0       0       0
 10103 ;;Total ram usage:       27 bytes
 10104 ;; Hardware stack levels used:    1
 10105 ;; Hardware stack levels required when called:    8
 10106 ;; This function calls:
 10107 ;;		_move_window
 10108 ;; This function is called by:
 10109 ;;		_remove_chain
 10110 ;;		_create_chain
 10111 ;;		_dir_sdi
 10112 ;;		_dir_next
 10113 ;;		_f_read
 10114 ;;		_f_lseek
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text26
 10119  002ABA                     __ptext26:
 10120                           	opt callstack 0
 10121  002ABA                     _get_fat:
 10122                           	opt callstack 19
 10123                           
 10124                           ;ff.c: 819:  FATFS* fs,;ff.c: 820:  DWORD clst;ff.c: 822: {;ff.c: 823:  UINT wc, bc;;ff.
      +                          c: 824:  BYTE *p;;ff.c: 825:  DWORD val;;ff.c: 828:  if (clst < 2 || clst >= fs->n_faten
      +                          t) {
 10125                           
 10126                           ;incstack = 0
 10127  002ABA  5040               	movf	get_fat@clst+3,w,c
 10128  002ABC  103F               	iorwf	get_fat@clst+2,w,c
 10129  002ABE  103E               	iorwf	get_fat@clst+1,w,c
 10130  002AC0  E104               	bnz	u5070
 10131  002AC2  0E02               	movlw	2
 10132  002AC4  5C3D               	subwf	get_fat@clst,w,c
 10133  002AC6  A0D8               	btfss	status,0,c
 10134  002AC8  D010               	goto	u5080
 10135  002ACA                     u5070:
 10136  002ACA  EE20 F012          	lfsr	2,18
 10137  002ACE  503B               	movf	get_fat@fs,w,c
 10138  002AD0  26D9               	addwf	fsr2l,f,c
 10139  002AD2  503C               	movf	get_fat@fs+1,w,c
 10140  002AD4  22DA               	addwfc	fsr2h,f,c
 10141  002AD6  50DE               	movf	postinc2,w,c
 10142  002AD8  5C3D               	subwf	get_fat@clst,w,c
 10143  002ADA  50DE               	movf	postinc2,w,c
 10144  002ADC  583E               	subwfb	get_fat@clst+1,w,c
 10145  002ADE  50DE               	movf	postinc2,w,c
 10146  002AE0  583F               	subwfb	get_fat@clst+2,w,c
 10147  002AE2  50DE               	movf	postinc2,w,c
 10148  002AE4  5840               	subwfb	get_fat@clst+3,w,c
 10149  002AE6  A0D8               	btfss	status,0,c
 10150  002AE8  D008               	goto	l252
 10151  002AEA                     u5080:
 10152                           
 10153                           ;ff.c: 829:   val = 1;
 10154  002AEA  0E01               	movlw	1
 10155  002AEC  6E4C               	movwf	get_fat@val,c
 10156  002AEE  0E00               	movlw	0
 10157  002AF0  6E4D               	movwf	get_fat@val+1,c
 10158  002AF2  0E00               	movlw	0
 10159  002AF4  6E4E               	movwf	get_fat@val+2,c
 10160  002AF6  0E00               	movlw	0
 10161  002AF8  D190               	goto	L10
 10162  002AFA                     l252:
 10163                           
 10164                           ;ff.c: 832:   val = 0xFFFFFFFF;
 10165  002AFA  684C               	setf	get_fat@val,c
 10166  002AFC  684D               	setf	get_fat@val+1,c
 10167  002AFE  684E               	setf	get_fat@val+2,c
 10168  002B00  684F               	setf	get_fat@val+3,c
 10169                           
 10170                           ;ff.c: 834:   switch (fs->fs_type) {
 10171  002B02  D18D               	goto	l4549
 10172  002B04                     l257:
 10173                           
 10174                           ;ff.c: 836:    bc = (UINT)clst; bc += bc / 2;
 10175  002B04  C03D  F054         	movff	get_fat@clst,get_fat@bc
 10176  002B08  C03E  F055         	movff	get_fat@clst+1,get_fat@bc+1
 10177  002B0C  90D8               	bcf	status,0,c
 10178  002B0E  3055               	rrcf	get_fat@bc+1,w,c
 10179  002B10  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10180  002B12  3054               	rrcf	get_fat@bc,w,c
 10181  002B14  6E41               	movwf	??_get_fat& (0+255),c
 10182  002B16  5041               	movf	??_get_fat,w,c
 10183  002B18  2654               	addwf	get_fat@bc,f,c
 10184  002B1A  5042               	movf	??_get_fat+1,w,c
 10185  002B1C  2255               	addwfc	get_fat@bc+1,f,c
 10186                           
 10187                           ;ff.c: 837:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
 10188  002B1E  C03B  F030         	movff	get_fat@fs,move_window@fs
 10189  002B22  C03C  F031         	movff	get_fat@fs+1,move_window@fs+1
 10190  002B26  EE20 F01E          	lfsr	2,30
 10191  002B2A  503B               	movf	get_fat@fs,w,c
 10192  002B2C  26D9               	addwf	fsr2l,f,c
 10193  002B2E  503C               	movf	get_fat@fs+1,w,c
 10194  002B30  22DA               	addwfc	fsr2h,f,c
 10195  002B32  CFDE F041          	movff	postinc2,??_get_fat
 10196  002B36  CFDE F042          	movff	postinc2,??_get_fat+1
 10197  002B3A  CFDE F043          	movff	postinc2,??_get_fat+2
 10198  002B3E  CFDE F044          	movff	postinc2,??_get_fat+3
 10199  002B42  C054  F045         	movff	get_fat@bc,??_get_fat+4
 10200  002B46  C055  F046         	movff	get_fat@bc+1,??_get_fat+5
 10201  002B4A  0E09               	movlw	9
 10202  002B4C  6E47               	movwf	(??_get_fat+6)& (0+255),c
 10203  002B4E                     u5095:
 10204  002B4E  90D8               	bcf	status,0,c
 10205  002B50  3246               	rrcf	??_get_fat+5,f,c
 10206  002B52  3245               	rrcf	??_get_fat+4,f,c
 10207  002B54  2E47               	decfsz	(??_get_fat+6)& (0+255),f,c
 10208  002B56  D7FB               	goto	u5095
 10209  002B58  5045               	movf	??_get_fat+4,w,c
 10210  002B5A  2441               	addwf	??_get_fat,w,c
 10211  002B5C  6E32               	movwf	move_window@sector,c
 10212  002B5E  5046               	movf	??_get_fat+5,w,c
 10213  002B60  2042               	addwfc	??_get_fat+1,w,c
 10214  002B62  6E33               	movwf	move_window@sector+1,c
 10215  002B64  0E00               	movlw	0
 10216  002B66  2043               	addwfc	??_get_fat+2,w,c
 10217  002B68  6E34               	movwf	move_window@sector+2,c
 10218  002B6A  0E00               	movlw	0
 10219  002B6C  2044               	addwfc	??_get_fat+3,w,c
 10220  002B6E  6E35               	movwf	move_window@sector+3,c
 10221  002B70  EC67  F026         	call	_move_window	;wreg free
 10222  002B74  0900               	iorlw	0
 10223  002B76  A4D8               	btfss	status,2,c
 10224  002B78  D168               	goto	l255
 10225                           
 10226                           ;ff.c: 838:    wc = fs->win[bc++ % ((UINT)512)];
 10227  002B7A  0EFF               	movlw	255
 10228  002B7C  6E41               	movwf	??_get_fat& (0+255),c
 10229  002B7E  0E01               	movlw	1
 10230  002B80  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10231  002B82  C054  F043         	movff	get_fat@bc,??_get_fat+2
 10232  002B86  C055  F044         	movff	get_fat@bc+1,??_get_fat+3
 10233  002B8A  5041               	movf	??_get_fat,w,c
 10234  002B8C  1643               	andwf	??_get_fat+2,f,c
 10235  002B8E  5042               	movf	??_get_fat+1,w,c
 10236  002B90  1644               	andwf	??_get_fat+3,f,c
 10237  002B92  C03B  F045         	movff	get_fat@fs,??_get_fat+4
 10238  002B96  C03C  F046         	movff	get_fat@fs+1,??_get_fat+5
 10239  002B9A  5043               	movf	??_get_fat+2,w,c
 10240  002B9C  2645               	addwf	??_get_fat+4,f,c
 10241  002B9E  5044               	movf	??_get_fat+3,w,c
 10242  002BA0  2246               	addwfc	??_get_fat+5,f,c
 10243  002BA2  0E2E               	movlw	46
 10244  002BA4  2445               	addwf	??_get_fat+4,w,c
 10245  002BA6  6ED9               	movwf	fsr2l,c
 10246  002BA8  0E00               	movlw	0
 10247  002BAA  2046               	addwfc	??_get_fat+5,w,c
 10248  002BAC  6EDA               	movwf	fsr2h,c
 10249  002BAE  50DF               	movf	indf2,w,c
 10250  002BB0  6E47               	movwf	(??_get_fat+6)& (0+255),c
 10251  002BB2  5047               	movf	??_get_fat+6,w,c
 10252  002BB4  6E50               	movwf	get_fat@wc,c
 10253  002BB6  6A51               	clrf	get_fat@wc+1,c
 10254  002BB8  4A54               	infsnz	get_fat@bc,f,c
 10255  002BBA  2A55               	incf	get_fat@bc+1,f,c
 10256                           
 10257                           ;ff.c: 839:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
 10258  002BBC  C03B  F030         	movff	get_fat@fs,move_window@fs
 10259  002BC0  C03C  F031         	movff	get_fat@fs+1,move_window@fs+1
 10260  002BC4  EE20 F01E          	lfsr	2,30
 10261  002BC8  503B               	movf	get_fat@fs,w,c
 10262  002BCA  26D9               	addwf	fsr2l,f,c
 10263  002BCC  503C               	movf	get_fat@fs+1,w,c
 10264  002BCE  22DA               	addwfc	fsr2h,f,c
 10265  002BD0  CFDE F041          	movff	postinc2,??_get_fat
 10266  002BD4  CFDE F042          	movff	postinc2,??_get_fat+1
 10267  002BD8  CFDE F043          	movff	postinc2,??_get_fat+2
 10268  002BDC  CFDE F044          	movff	postinc2,??_get_fat+3
 10269  002BE0  C054  F045         	movff	get_fat@bc,??_get_fat+4
 10270  002BE4  C055  F046         	movff	get_fat@bc+1,??_get_fat+5
 10271  002BE8  0E09               	movlw	9
 10272  002BEA  6E47               	movwf	(??_get_fat+6)& (0+255),c
 10273  002BEC                     u5115:
 10274  002BEC  90D8               	bcf	status,0,c
 10275  002BEE  3246               	rrcf	??_get_fat+5,f,c
 10276  002BF0  3245               	rrcf	??_get_fat+4,f,c
 10277  002BF2  2E47               	decfsz	(??_get_fat+6)& (0+255),f,c
 10278  002BF4  D7FB               	goto	u5115
 10279  002BF6  5045               	movf	??_get_fat+4,w,c
 10280  002BF8  2441               	addwf	??_get_fat,w,c
 10281  002BFA  6E32               	movwf	move_window@sector,c
 10282  002BFC  5046               	movf	??_get_fat+5,w,c
 10283  002BFE  2042               	addwfc	??_get_fat+1,w,c
 10284  002C00  6E33               	movwf	move_window@sector+1,c
 10285  002C02  0E00               	movlw	0
 10286  002C04  2043               	addwfc	??_get_fat+2,w,c
 10287  002C06  6E34               	movwf	move_window@sector+2,c
 10288  002C08  0E00               	movlw	0
 10289  002C0A  2044               	addwfc	??_get_fat+3,w,c
 10290  002C0C  6E35               	movwf	move_window@sector+3,c
 10291  002C0E  EC67  F026         	call	_move_window	;wreg free
 10292  002C12  0900               	iorlw	0
 10293  002C14  A4D8               	btfss	status,2,c
 10294  002C16  D119               	goto	l255
 10295                           
 10296                           ;ff.c: 840:    wc |= fs->win[bc % ((UINT)512)] << 8;
 10297  002C18  0EFF               	movlw	255
 10298  002C1A  6E41               	movwf	??_get_fat& (0+255),c
 10299  002C1C  0E01               	movlw	1
 10300  002C1E  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10301  002C20  C054  F043         	movff	get_fat@bc,??_get_fat+2
 10302  002C24  C055  F044         	movff	get_fat@bc+1,??_get_fat+3
 10303  002C28  5041               	movf	??_get_fat,w,c
 10304  002C2A  1643               	andwf	??_get_fat+2,f,c
 10305  002C2C  5042               	movf	??_get_fat+1,w,c
 10306  002C2E  1644               	andwf	??_get_fat+3,f,c
 10307  002C30  C03B  F045         	movff	get_fat@fs,??_get_fat+4
 10308  002C34  C03C  F046         	movff	get_fat@fs+1,??_get_fat+5
 10309  002C38  5043               	movf	??_get_fat+2,w,c
 10310  002C3A  2645               	addwf	??_get_fat+4,f,c
 10311  002C3C  5044               	movf	??_get_fat+3,w,c
 10312  002C3E  2246               	addwfc	??_get_fat+5,f,c
 10313  002C40  0E2E               	movlw	46
 10314  002C42  2445               	addwf	??_get_fat+4,w,c
 10315  002C44  6ED9               	movwf	fsr2l,c
 10316  002C46  0E00               	movlw	0
 10317  002C48  2046               	addwfc	??_get_fat+5,w,c
 10318  002C4A  6EDA               	movwf	fsr2h,c
 10319  002C4C  50DF               	movf	indf2,w,c
 10320  002C4E  6E47               	movwf	(??_get_fat+6)& (0+255),c
 10321  002C50  5047               	movf	??_get_fat+6,w,c
 10322  002C52  6E49               	movwf	(??_get_fat+8)& (0+255),c
 10323  002C54  6A48               	clrf	(??_get_fat+7)& (0+255),c
 10324  002C56  5048               	movf	??_get_fat+7,w,c
 10325  002C58  1250               	iorwf	get_fat@wc,f,c
 10326  002C5A  5049               	movf	??_get_fat+8,w,c
 10327  002C5C  1251               	iorwf	get_fat@wc+1,f,c
 10328                           
 10329                           ;ff.c: 841:    val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 10330  002C5E  B03D               	btfsc	get_fat@clst,0,c
 10331  002C60  D007               	goto	l4527
 10332  002C62  0EFF               	movlw	255
 10333  002C64  1450               	andwf	get_fat@wc,w,c
 10334  002C66  6E4A               	movwf	_get_fat$374,c
 10335  002C68  0E0F               	movlw	15
 10336  002C6A  1451               	andwf	get_fat@wc+1,w,c
 10337  002C6C  6E4B               	movwf	_get_fat$374+1,c
 10338  002C6E  D00F               	goto	l4529
 10339  002C70                     l4527:
 10340  002C70  C050  F041         	movff	get_fat@wc,??_get_fat
 10341  002C74  C051  F042         	movff	get_fat@wc+1,??_get_fat+1
 10342  002C78  0E04               	movlw	4
 10343  002C7A  6E43               	movwf	(??_get_fat+2)& (0+255),c
 10344  002C7C                     u5145:
 10345  002C7C  90D8               	bcf	status,0,c
 10346  002C7E  3242               	rrcf	??_get_fat+1,f,c
 10347  002C80  3241               	rrcf	??_get_fat,f,c
 10348  002C82  2E43               	decfsz	(??_get_fat+2)& (0+255),f,c
 10349  002C84  D7FB               	goto	u5145
 10350  002C86  C041  F04A         	movff	??_get_fat,_get_fat$374
 10351  002C8A  C042  F04B         	movff	??_get_fat+1,_get_fat$374+1
 10352  002C8E                     l4529:
 10353  002C8E  C04A  F04C         	movff	_get_fat$374,get_fat@val
 10354  002C92  C04B  F04D         	movff	_get_fat$374+1,get_fat@val+1
 10355  002C96  D05B               	goto	L11
 10356  002C98                     l4531:
 10357                           
 10358                           ;ff.c: 845:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) != FR_OK) b
      +                          reak;
 10359  002C98  C03B  F030         	movff	get_fat@fs,move_window@fs
 10360  002C9C  C03C  F031         	movff	get_fat@fs+1,move_window@fs+1
 10361  002CA0  EE20 F01E          	lfsr	2,30
 10362  002CA4  503B               	movf	get_fat@fs,w,c
 10363  002CA6  26D9               	addwf	fsr2l,f,c
 10364  002CA8  503C               	movf	get_fat@fs+1,w,c
 10365  002CAA  22DA               	addwfc	fsr2h,f,c
 10366  002CAC  CFDE F041          	movff	postinc2,??_get_fat
 10367  002CB0  CFDE F042          	movff	postinc2,??_get_fat+1
 10368  002CB4  CFDE F043          	movff	postinc2,??_get_fat+2
 10369  002CB8  CFDE F044          	movff	postinc2,??_get_fat+3
 10370  002CBC  C03D  F045         	movff	get_fat@clst,??_get_fat+4
 10371  002CC0  C03E  F046         	movff	get_fat@clst+1,??_get_fat+5
 10372  002CC4  C03F  F047         	movff	get_fat@clst+2,??_get_fat+6
 10373  002CC8  C040  F048         	movff	get_fat@clst+3,??_get_fat+7
 10374  002CCC  C046  F045         	movff	??_get_fat+5,??_get_fat+4
 10375  002CD0  C047  F046         	movff	??_get_fat+6,??_get_fat+5
 10376  002CD4  C048  F047         	movff	??_get_fat+7,??_get_fat+6
 10377  002CD8  6A48               	clrf	??_get_fat+7,c
 10378  002CDA  5041               	movf	??_get_fat,w,c
 10379  002CDC  2445               	addwf	??_get_fat+4,w,c
 10380  002CDE  6E32               	movwf	move_window@sector,c
 10381  002CE0  5042               	movf	??_get_fat+1,w,c
 10382  002CE2  2046               	addwfc	??_get_fat+5,w,c
 10383  002CE4  6E33               	movwf	move_window@sector+1,c
 10384  002CE6  5043               	movf	??_get_fat+2,w,c
 10385  002CE8  2047               	addwfc	??_get_fat+6,w,c
 10386  002CEA  6E34               	movwf	move_window@sector+2,c
 10387  002CEC  5044               	movf	??_get_fat+3,w,c
 10388  002CEE  2048               	addwfc	??_get_fat+7,w,c
 10389  002CF0  6E35               	movwf	move_window@sector+3,c
 10390  002CF2  EC67  F026         	call	_move_window	;wreg free
 10391  002CF6  0900               	iorlw	0
 10392  002CF8  A4D8               	btfss	status,2,c
 10393  002CFA  D0A7               	goto	l255
 10394                           
 10395                           ;ff.c: 846:    p = &fs->win[clst * 2 % ((UINT)512)];
 10396  002CFC  0EFF               	movlw	255
 10397  002CFE  6E41               	movwf	??_get_fat& (0+255),c
 10398  002D00  0E01               	movlw	1
 10399  002D02  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10400  002D04  C03D  F043         	movff	get_fat@clst,??_get_fat+2
 10401  002D08  C03E  F044         	movff	get_fat@clst+1,??_get_fat+3
 10402  002D0C  90D8               	bcf	status,0,c
 10403  002D0E  3643               	rlcf	??_get_fat+2,f,c
 10404  002D10  3644               	rlcf	??_get_fat+3,f,c
 10405  002D12  5041               	movf	??_get_fat,w,c
 10406  002D14  1643               	andwf	??_get_fat+2,f,c
 10407  002D16  5042               	movf	??_get_fat+1,w,c
 10408  002D18  1644               	andwf	??_get_fat+3,f,c
 10409  002D1A  C03B  F045         	movff	get_fat@fs,??_get_fat+4
 10410  002D1E  C03C  F046         	movff	get_fat@fs+1,??_get_fat+5
 10411  002D22  5043               	movf	??_get_fat+2,w,c
 10412  002D24  2645               	addwf	??_get_fat+4,f,c
 10413  002D26  5044               	movf	??_get_fat+3,w,c
 10414  002D28  2246               	addwfc	??_get_fat+5,f,c
 10415  002D2A  0E2E               	movlw	46
 10416  002D2C  2445               	addwf	??_get_fat+4,w,c
 10417  002D2E  6E52               	movwf	get_fat@p,c
 10418  002D30  0E00               	movlw	0
 10419  002D32  2046               	addwfc	??_get_fat+5,w,c
 10420  002D34  6E53               	movwf	get_fat@p+1,c
 10421                           
 10422                           ;ff.c: 847:    val = (WORD)(*(WORD*)(BYTE*)(p));
 10423  002D36  C052  FFD9         	movff	get_fat@p,fsr2l
 10424  002D3A  C053  FFDA         	movff	get_fat@p+1,fsr2h
 10425  002D3E  CFDE F041          	movff	postinc2,??_get_fat
 10426  002D42  CFDD F042          	movff	postdec2,??_get_fat+1
 10427  002D46  C041  F04C         	movff	??_get_fat,get_fat@val
 10428  002D4A  C042  F04D         	movff	??_get_fat+1,get_fat@val+1
 10429  002D4E                     L11:
 10430  002D4E  6A4E               	clrf	get_fat@val+2,c
 10431  002D50  6A4F               	clrf	get_fat@val+3,c
 10432                           
 10433                           ;ff.c: 848:    break;
 10434  002D52  D07B               	goto	l255
 10435  002D54                     l4539:
 10436                           
 10437                           ;ff.c: 851:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) != FR_OK) b
      +                          reak;
 10438  002D54  C03B  F030         	movff	get_fat@fs,move_window@fs
 10439  002D58  C03C  F031         	movff	get_fat@fs+1,move_window@fs+1
 10440  002D5C  EE20 F01E          	lfsr	2,30
 10441  002D60  503B               	movf	get_fat@fs,w,c
 10442  002D62  26D9               	addwf	fsr2l,f,c
 10443  002D64  503C               	movf	get_fat@fs+1,w,c
 10444  002D66  22DA               	addwfc	fsr2h,f,c
 10445  002D68  CFDE F041          	movff	postinc2,??_get_fat
 10446  002D6C  CFDE F042          	movff	postinc2,??_get_fat+1
 10447  002D70  CFDE F043          	movff	postinc2,??_get_fat+2
 10448  002D74  CFDE F044          	movff	postinc2,??_get_fat+3
 10449  002D78  C03D  F045         	movff	get_fat@clst,??_get_fat+4
 10450  002D7C  C03E  F046         	movff	get_fat@clst+1,??_get_fat+5
 10451  002D80  C03F  F047         	movff	get_fat@clst+2,??_get_fat+6
 10452  002D84  C040  F048         	movff	get_fat@clst+3,??_get_fat+7
 10453  002D88  0E08               	movlw	8
 10454  002D8A  D005               	goto	u5160
 10455  002D8C                     u5165:
 10456  002D8C  90D8               	bcf	status,0,c
 10457  002D8E  3248               	rrcf	??_get_fat+7,f,c
 10458  002D90  3247               	rrcf	??_get_fat+6,f,c
 10459  002D92  3246               	rrcf	??_get_fat+5,f,c
 10460  002D94  3245               	rrcf	??_get_fat+4,f,c
 10461  002D96                     u5160:
 10462  002D96  2EE8               	decfsz	wreg,f,c
 10463  002D98  D7F9               	goto	u5165
 10464  002D9A  5041               	movf	??_get_fat,w,c
 10465  002D9C  2445               	addwf	??_get_fat+4,w,c
 10466  002D9E  6E32               	movwf	move_window@sector,c
 10467  002DA0  5042               	movf	??_get_fat+1,w,c
 10468  002DA2  2046               	addwfc	??_get_fat+5,w,c
 10469  002DA4  6E33               	movwf	move_window@sector+1,c
 10470  002DA6  5043               	movf	??_get_fat+2,w,c
 10471  002DA8  2047               	addwfc	??_get_fat+6,w,c
 10472  002DAA  6E34               	movwf	move_window@sector+2,c
 10473  002DAC  5044               	movf	??_get_fat+3,w,c
 10474  002DAE  2048               	addwfc	??_get_fat+7,w,c
 10475  002DB0  6E35               	movwf	move_window@sector+3,c
 10476  002DB2  EC67  F026         	call	_move_window	;wreg free
 10477  002DB6  0900               	iorlw	0
 10478  002DB8  A4D8               	btfss	status,2,c
 10479  002DBA  D047               	goto	l255
 10480                           
 10481                           ;ff.c: 852:    p = &fs->win[clst * 4 % ((UINT)512)];
 10482  002DBC  0EFF               	movlw	255
 10483  002DBE  6E41               	movwf	??_get_fat& (0+255),c
 10484  002DC0  0E01               	movlw	1
 10485  002DC2  6E42               	movwf	(??_get_fat+1)& (0+255),c
 10486  002DC4  C03D  F043         	movff	get_fat@clst,??_get_fat+2
 10487  002DC8  C03E  F044         	movff	get_fat@clst+1,??_get_fat+3
 10488  002DCC  90D8               	bcf	status,0,c
 10489  002DCE  3643               	rlcf	??_get_fat+2,f,c
 10490  002DD0  3644               	rlcf	??_get_fat+3,f,c
 10491  002DD2  90D8               	bcf	status,0,c
 10492  002DD4  3643               	rlcf	??_get_fat+2,f,c
 10493  002DD6  3644               	rlcf	??_get_fat+3,f,c
 10494  002DD8  5041               	movf	??_get_fat,w,c
 10495  002DDA  1643               	andwf	??_get_fat+2,f,c
 10496  002DDC  5042               	movf	??_get_fat+1,w,c
 10497  002DDE  1644               	andwf	??_get_fat+3,f,c
 10498  002DE0  C03B  F045         	movff	get_fat@fs,??_get_fat+4
 10499  002DE4  C03C  F046         	movff	get_fat@fs+1,??_get_fat+5
 10500  002DE8  5043               	movf	??_get_fat+2,w,c
 10501  002DEA  2645               	addwf	??_get_fat+4,f,c
 10502  002DEC  5044               	movf	??_get_fat+3,w,c
 10503  002DEE  2246               	addwfc	??_get_fat+5,f,c
 10504  002DF0  0E2E               	movlw	46
 10505  002DF2  2445               	addwf	??_get_fat+4,w,c
 10506  002DF4  6E52               	movwf	get_fat@p,c
 10507  002DF6  0E00               	movlw	0
 10508  002DF8  2046               	addwfc	??_get_fat+5,w,c
 10509  002DFA  6E53               	movwf	get_fat@p+1,c
 10510                           
 10511                           ;ff.c: 853:    val = (DWORD)(*(DWORD*)(BYTE*)(p)) & 0x0FFFFFFF;
 10512  002DFC  C052  FFD9         	movff	get_fat@p,fsr2l
 10513  002E00  C053  FFDA         	movff	get_fat@p+1,fsr2h
 10514  002E04  0EFF               	movlw	255
 10515  002E06  14DE               	andwf	postinc2,w,c
 10516  002E08  6E4C               	movwf	get_fat@val,c
 10517  002E0A  0EFF               	movlw	255
 10518  002E0C  14DE               	andwf	postinc2,w,c
 10519  002E0E  6E4D               	movwf	get_fat@val+1,c
 10520  002E10  0EFF               	movlw	255
 10521  002E12  14DE               	andwf	postinc2,w,c
 10522  002E14  6E4E               	movwf	get_fat@val+2,c
 10523  002E16  0E0F               	movlw	15
 10524  002E18  14DE               	andwf	postinc2,w,c
 10525  002E1A                     L10:
 10526  002E1A  6E4F               	movwf	get_fat@val+3,c
 10527                           
 10528                           ;ff.c: 854:    break;
 10529  002E1C  D016               	goto	l255
 10530  002E1E                     l4549:
 10531  002E1E  C03B  FFD9         	movff	get_fat@fs,fsr2l
 10532  002E22  C03C  FFDA         	movff	get_fat@fs+1,fsr2h
 10533  002E26  50DF               	movf	indf2,w,c
 10534  002E28  6E41               	movwf	??_get_fat& (0+255),c
 10535  002E2A  6A42               	clrf	(??_get_fat+1)& (0+255),c
 10536                           
 10537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10538                           ; Switch size 1, requested type "simple"
 10539                           ; Number of cases is 1, Range of values is 0 to 0
 10540                           ; switch strategies available:
 10541                           ; Name         Instructions Cycles
 10542                           ; simple_byte            4     3 (average)
 10543                           ;	Chosen strategy is simple_byte
 10544  002E2C  5042               	movf	??_get_fat+1,w,c
 10545  002E2E  0A00               	xorlw	0	; case 0
 10546  002E30  A4D8               	btfss	status,2,c
 10547  002E32  D65B               	goto	u5080
 10548                           
 10549                           ; Switch size 1, requested type "simple"
 10550                           ; Number of cases is 3, Range of values is 1 to 3
 10551                           ; switch strategies available:
 10552                           ; Name         Instructions Cycles
 10553                           ; simple_byte           10     6 (average)
 10554                           ;	Chosen strategy is simple_byte
 10555  002E34  5041               	movf	??_get_fat,w,c
 10556  002E36  0A01               	xorlw	1	; case 1
 10557  002E38  B4D8               	btfsc	status,2,c
 10558  002E3A  D664               	goto	l257
 10559  002E3C  0A03               	xorlw	3	; case 2
 10560  002E3E  B4D8               	btfsc	status,2,c
 10561  002E40  D72B               	goto	l4531
 10562  002E42  0A01               	xorlw	1	; case 3
 10563  002E44  B4D8               	btfsc	status,2,c
 10564  002E46  D786               	goto	l4539
 10565  002E48  D650               	goto	u5080
 10566  002E4A                     l255:
 10567                           
 10568                           ;ff.c: 861:  return val;
 10569  002E4A  C04C  F03B         	movff	get_fat@val,?_get_fat
 10570  002E4E  C04D  F03C         	movff	get_fat@val+1,?_get_fat+1
 10571  002E52  C04E  F03D         	movff	get_fat@val+2,?_get_fat+2
 10572  002E56  C04F  F03E         	movff	get_fat@val+3,?_get_fat+3
 10573  002E5A  0012               	return		;funcret
 10574  002E5C                     __end_of_get_fat:
 10575                           	opt callstack 0
 10576                           
 10577 ;; *************** function _clust2sect *****************
 10578 ;; Defined at:
 10579 ;;		line 800 in file "ff.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;  fs              2   12[COMRAM] PTR struct .
 10582 ;;		 -> FatFs(558), NULL(0), 
 10583 ;;  clst            4   14[COMRAM] unsigned long 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;		None
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  4   12[COMRAM] unsigned long 
 10588 ;; Registers used:
 10589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10595 ;;      Params:         6       0       0       0       0       0       0       0       0
 10596 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10597 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10598 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10599 ;;Total ram usage:       11 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    1
 10602 ;; This function calls:
 10603 ;;		___lmul
 10604 ;; This function is called by:
 10605 ;;		_dir_sdi
 10606 ;;		_dir_next
 10607 ;;		_f_read
 10608 ;;		_f_lseek
 10609 ;;		_f_write
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text27
 10614  004B64                     __ptext27:
 10615                           	opt callstack 0
 10616  004B64                     _clust2sect:
 10617                           	opt callstack 26
 10618                           
 10619                           ;ff.c: 801:  FATFS* fs,;ff.c: 802:  DWORD clst;ff.c: 804: {;ff.c: 805:  clst -= 2;
 10620                           
 10621                           ;incstack = 0
 10622  004B64  0E02               	movlw	2
 10623  004B66  5E0F               	subwf	clust2sect@clst,f,c
 10624  004B68  0E00               	movlw	0
 10625  004B6A  5A10               	subwfb	clust2sect@clst+1,f,c
 10626  004B6C  5A11               	subwfb	clust2sect@clst+2,f,c
 10627  004B6E  5A12               	subwfb	clust2sect@clst+3,f,c
 10628                           
 10629                           ;ff.c: 806:  if (clst >= fs->n_fatent - 2) return 0;
 10630  004B70  EE20 F012          	lfsr	2,18
 10631  004B74  500D               	movf	clust2sect@fs,w,c
 10632  004B76  26D9               	addwf	fsr2l,f,c
 10633  004B78  500E               	movf	clust2sect@fs+1,w,c
 10634  004B7A  22DA               	addwfc	fsr2h,f,c
 10635  004B7C  0EFE               	movlw	254
 10636  004B7E  24DE               	addwf	postinc2,w,c
 10637  004B80  6E13               	movwf	??_clust2sect& (0+255),c
 10638  004B82  0EFF               	movlw	255
 10639  004B84  20DE               	addwfc	postinc2,w,c
 10640  004B86  6E14               	movwf	(??_clust2sect+1)& (0+255),c
 10641  004B88  0EFF               	movlw	255
 10642  004B8A  20DE               	addwfc	postinc2,w,c
 10643  004B8C  6E15               	movwf	(??_clust2sect+2)& (0+255),c
 10644  004B8E  0EFF               	movlw	255
 10645  004B90  20DE               	addwfc	postinc2,w,c
 10646  004B92  6E16               	movwf	(??_clust2sect+3)& (0+255),c
 10647  004B94  5013               	movf	??_clust2sect,w,c
 10648  004B96  5C0F               	subwf	clust2sect@clst,w,c
 10649  004B98  5014               	movf	??_clust2sect+1,w,c
 10650  004B9A  5810               	subwfb	clust2sect@clst+1,w,c
 10651  004B9C  5015               	movf	??_clust2sect+2,w,c
 10652  004B9E  5811               	subwfb	clust2sect@clst+2,w,c
 10653  004BA0  5016               	movf	??_clust2sect+3,w,c
 10654  004BA2  5812               	subwfb	clust2sect@clst+3,w,c
 10655  004BA4  A0D8               	btfss	status,0,c
 10656  004BA6  D009               	goto	l4659
 10657  004BA8  0E00               	movlw	0
 10658  004BAA  6E0D               	movwf	?_clust2sect,c
 10659  004BAC  0E00               	movlw	0
 10660  004BAE  6E0E               	movwf	?_clust2sect+1,c
 10661  004BB0  0E00               	movlw	0
 10662  004BB2  6E0F               	movwf	?_clust2sect+2,c
 10663  004BB4  0E00               	movlw	0
 10664  004BB6  6E10               	movwf	?_clust2sect+3,c
 10665  004BB8  0012               	return	
 10666  004BBA                     l4659:
 10667                           
 10668                           ;ff.c: 807:  return clst * fs->csize + fs->database;
 10669  004BBA  EE20 F026          	lfsr	2,38
 10670  004BBE  500D               	movf	clust2sect@fs,w,c
 10671  004BC0  26D9               	addwf	fsr2l,f,c
 10672  004BC2  500E               	movf	clust2sect@fs+1,w,c
 10673  004BC4  22DA               	addwfc	fsr2h,f,c
 10674  004BC6  CFDE F013          	movff	postinc2,??_clust2sect
 10675  004BCA  CFDE F014          	movff	postinc2,??_clust2sect+1
 10676  004BCE  CFDE F015          	movff	postinc2,??_clust2sect+2
 10677  004BD2  CFDE F016          	movff	postinc2,??_clust2sect+3
 10678  004BD6  EE20 F002          	lfsr	2,2
 10679  004BDA  500D               	movf	clust2sect@fs,w,c
 10680  004BDC  26D9               	addwf	fsr2l,f,c
 10681  004BDE  500E               	movf	clust2sect@fs+1,w,c
 10682  004BE0  22DA               	addwfc	fsr2h,f,c
 10683  004BE2  50DF               	movf	indf2,w,c
 10684  004BE4  6E17               	movwf	(??_clust2sect+4)& (0+255),c
 10685  004BE6  5017               	movf	??_clust2sect+4,w,c
 10686  004BE8  6E01               	movwf	___lmul@multiplier,c
 10687  004BEA  6A02               	clrf	___lmul@multiplier+1,c
 10688  004BEC  6A03               	clrf	___lmul@multiplier+2,c
 10689  004BEE  6A04               	clrf	___lmul@multiplier+3,c
 10690  004BF0  C00F  F005         	movff	clust2sect@clst,___lmul@multiplicand
 10691  004BF4  C010  F006         	movff	clust2sect@clst+1,___lmul@multiplicand+1
 10692  004BF8  C011  F007         	movff	clust2sect@clst+2,___lmul@multiplicand+2
 10693  004BFC  C012  F008         	movff	clust2sect@clst+3,___lmul@multiplicand+3
 10694  004C00  EC03  F029         	call	___lmul	;wreg free
 10695  004C04  5013               	movf	??_clust2sect,w,c
 10696  004C06  2401               	addwf	?___lmul,w,c
 10697  004C08  6E0D               	movwf	?_clust2sect,c
 10698  004C0A  5014               	movf	??_clust2sect+1,w,c
 10699  004C0C  2002               	addwfc	?___lmul+1,w,c
 10700  004C0E  6E0E               	movwf	?_clust2sect+1,c
 10701  004C10  5015               	movf	??_clust2sect+2,w,c
 10702  004C12  2003               	addwfc	?___lmul+2,w,c
 10703  004C14  6E0F               	movwf	?_clust2sect+2,c
 10704  004C16  5016               	movf	??_clust2sect+3,w,c
 10705  004C18  2004               	addwfc	?___lmul+3,w,c
 10706  004C1A  6E10               	movwf	?_clust2sect+3,c
 10707  004C1C  0012               	return		;funcret
 10708  004C1E                     __end_of_clust2sect:
 10709                           	opt callstack 0
 10710                           
 10711 ;; *************** function ___lmul *****************
 10712 ;; Defined at:
 10713 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;  multiplier      4    0[COMRAM] unsigned long 
 10716 ;;  multiplicand    4    4[COMRAM] unsigned long 
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;  product         4    8[COMRAM] unsigned long 
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  4    0[COMRAM] unsigned long 
 10721 ;; Registers used:
 10722 ;;		wreg, status,2, status,0
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10728 ;;      Params:         8       0       0       0       0       0       0       0       0
 10729 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10731 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10732 ;;Total ram usage:       12 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; This function calls:
 10735 ;;		Nothing
 10736 ;; This function is called by:
 10737 ;;		_clust2sect
 10738 ;;		_find_volume
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text28
 10743  005206                     __ptext28:
 10744                           	opt callstack 0
 10745  005206                     ___lmul:
 10746                           	opt callstack 26
 10747                           
 10748                           ;incstack = 0
 10749  005206  0E00               	movlw	0
 10750  005208  6E09               	movwf	___lmul@product,c
 10751  00520A  0E00               	movlw	0
 10752  00520C  6E0A               	movwf	___lmul@product+1,c
 10753  00520E  0E00               	movlw	0
 10754  005210  6E0B               	movwf	___lmul@product+2,c
 10755  005212  0E00               	movlw	0
 10756  005214  6E0C               	movwf	___lmul@product+3,c
 10757  005216                     l4635:
 10758  005216  A001               	btfss	___lmul@multiplier,0,c
 10759  005218  D008               	goto	l4639
 10760  00521A  5005               	movf	___lmul@multiplicand,w,c
 10761  00521C  2609               	addwf	___lmul@product,f,c
 10762  00521E  5006               	movf	___lmul@multiplicand+1,w,c
 10763  005220  220A               	addwfc	___lmul@product+1,f,c
 10764  005222  5007               	movf	___lmul@multiplicand+2,w,c
 10765  005224  220B               	addwfc	___lmul@product+2,f,c
 10766  005226  5008               	movf	___lmul@multiplicand+3,w,c
 10767  005228  220C               	addwfc	___lmul@product+3,f,c
 10768  00522A                     l4639:
 10769  00522A  90D8               	bcf	status,0,c
 10770  00522C  3605               	rlcf	___lmul@multiplicand,f,c
 10771  00522E  3606               	rlcf	___lmul@multiplicand+1,f,c
 10772  005230  3607               	rlcf	___lmul@multiplicand+2,f,c
 10773  005232  3608               	rlcf	___lmul@multiplicand+3,f,c
 10774  005234  90D8               	bcf	status,0,c
 10775  005236  3204               	rrcf	___lmul@multiplier+3,f,c
 10776  005238  3203               	rrcf	___lmul@multiplier+2,f,c
 10777  00523A  3202               	rrcf	___lmul@multiplier+1,f,c
 10778  00523C  3201               	rrcf	___lmul@multiplier,f,c
 10779  00523E  5001               	movf	___lmul@multiplier,w,c
 10780  005240  1002               	iorwf	___lmul@multiplier+1,w,c
 10781  005242  1003               	iorwf	___lmul@multiplier+2,w,c
 10782  005244  1004               	iorwf	___lmul@multiplier+3,w,c
 10783  005246  A4D8               	btfss	status,2,c
 10784  005248  D7E6               	goto	l4635
 10785  00524A  C009  F001         	movff	___lmul@product,?___lmul
 10786  00524E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 10787  005252  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 10788  005256  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 10789  00525A  0012               	return		;funcret
 10790  00525C                     __end_of___lmul:
 10791                           	opt callstack 0
 10792                           
 10793 ;; *************** function ___lldiv *****************
 10794 ;; Defined at:
 10795 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;  dividend        4    0[COMRAM] unsigned long 
 10798 ;;  divisor         4    4[COMRAM] unsigned long 
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;  quotient        4    8[COMRAM] unsigned long 
 10801 ;;  counter         1   12[COMRAM] unsigned char 
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  4    0[COMRAM] unsigned long 
 10804 ;; Registers used:
 10805 ;;		wreg, status,2, status,0
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10811 ;;      Params:         8       0       0       0       0       0       0       0       0
 10812 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10814 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10815 ;;Total ram usage:       13 bytes
 10816 ;; Hardware stack levels used:    1
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_find_volume
 10821 ;;		_f_lseek
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text29
 10826  004E08                     __ptext29:
 10827                           	opt callstack 0
 10828  004E08                     ___lldiv:
 10829                           	opt callstack 27
 10830                           
 10831                           ;incstack = 0
 10832  004E08  0E00               	movlw	0
 10833  004E0A  6E09               	movwf	___lldiv@quotient,c
 10834  004E0C  0E00               	movlw	0
 10835  004E0E  6E0A               	movwf	___lldiv@quotient+1,c
 10836  004E10  0E00               	movlw	0
 10837  004E12  6E0B               	movwf	___lldiv@quotient+2,c
 10838  004E14  0E00               	movlw	0
 10839  004E16  6E0C               	movwf	___lldiv@quotient+3,c
 10840  004E18  5005               	movf	___lldiv@divisor,w,c
 10841  004E1A  1006               	iorwf	___lldiv@divisor+1,w,c
 10842  004E1C  1007               	iorwf	___lldiv@divisor+2,w,c
 10843  004E1E  1008               	iorwf	___lldiv@divisor+3,w,c
 10844  004E20  B4D8               	btfsc	status,2,c
 10845  004E22  D02A               	goto	l985
 10846  004E24  0E01               	movlw	1
 10847  004E26  6E0D               	movwf	___lldiv@counter,c
 10848  004E28  D006               	goto	l5535
 10849  004E2A                     l5533:
 10850  004E2A  90D8               	bcf	status,0,c
 10851  004E2C  3605               	rlcf	___lldiv@divisor,f,c
 10852  004E2E  3606               	rlcf	___lldiv@divisor+1,f,c
 10853  004E30  3607               	rlcf	___lldiv@divisor+2,f,c
 10854  004E32  3608               	rlcf	___lldiv@divisor+3,f,c
 10855  004E34  2A0D               	incf	___lldiv@counter,f,c
 10856  004E36                     l5535:
 10857  004E36  AE08               	btfss	___lldiv@divisor+3,7,c
 10858  004E38  D7F8               	goto	l5533
 10859  004E3A                     u7040:
 10860  004E3A  90D8               	bcf	status,0,c
 10861  004E3C  3609               	rlcf	___lldiv@quotient,f,c
 10862  004E3E  360A               	rlcf	___lldiv@quotient+1,f,c
 10863  004E40  360B               	rlcf	___lldiv@quotient+2,f,c
 10864  004E42  360C               	rlcf	___lldiv@quotient+3,f,c
 10865  004E44  5005               	movf	___lldiv@divisor,w,c
 10866  004E46  5C01               	subwf	___lldiv@dividend,w,c
 10867  004E48  5006               	movf	___lldiv@divisor+1,w,c
 10868  004E4A  5802               	subwfb	___lldiv@dividend+1,w,c
 10869  004E4C  5007               	movf	___lldiv@divisor+2,w,c
 10870  004E4E  5803               	subwfb	___lldiv@dividend+2,w,c
 10871  004E50  5008               	movf	___lldiv@divisor+3,w,c
 10872  004E52  5804               	subwfb	___lldiv@dividend+3,w,c
 10873  004E54  A0D8               	btfss	status,0,c
 10874  004E56  D009               	goto	l5545
 10875  004E58  5005               	movf	___lldiv@divisor,w,c
 10876  004E5A  5E01               	subwf	___lldiv@dividend,f,c
 10877  004E5C  5006               	movf	___lldiv@divisor+1,w,c
 10878  004E5E  5A02               	subwfb	___lldiv@dividend+1,f,c
 10879  004E60  5007               	movf	___lldiv@divisor+2,w,c
 10880  004E62  5A03               	subwfb	___lldiv@dividend+2,f,c
 10881  004E64  5008               	movf	___lldiv@divisor+3,w,c
 10882  004E66  5A04               	subwfb	___lldiv@dividend+3,f,c
 10883  004E68  8009               	bsf	___lldiv@quotient,0,c
 10884  004E6A                     l5545:
 10885  004E6A  90D8               	bcf	status,0,c
 10886  004E6C  3208               	rrcf	___lldiv@divisor+3,f,c
 10887  004E6E  3207               	rrcf	___lldiv@divisor+2,f,c
 10888  004E70  3206               	rrcf	___lldiv@divisor+1,f,c
 10889  004E72  3205               	rrcf	___lldiv@divisor,f,c
 10890  004E74  2E0D               	decfsz	___lldiv@counter,f,c
 10891  004E76  D7E1               	goto	u7040
 10892  004E78                     l985:
 10893  004E78  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10894  004E7C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10895  004E80  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10896  004E84  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10897  004E88  0012               	return		;funcret
 10898  004E8A                     __end_of___lldiv:
 10899                           	opt callstack 0
 10900                           
 10901 ;; *************** function _f_close *****************
 10902 ;; Defined at:
 10903 ;;		line 2861 in file "ff.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;  fp              2   77[COMRAM] PTR struct .
 10906 ;;		 -> Fil(32), 
 10907 ;; Auto vars:     Size  Location     Type
 10908 ;;  res             1   79[COMRAM] enum E93
 10909 ;; Return value:  Size  Location     Type
 10910 ;;                  1    wreg      enum E93
 10911 ;; Registers used:
 10912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10913 ;; Tracked objects:
 10914 ;;		On entry : 0/0
 10915 ;;		On exit  : 0/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10918 ;;      Params:         2       0       0       0       0       0       0       0       0
 10919 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10920 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10921 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10922 ;;Total ram usage:        3 bytes
 10923 ;; Hardware stack levels used:    1
 10924 ;; Hardware stack levels required when called:    9
 10925 ;; This function calls:
 10926 ;;		_f_sync
 10927 ;;		_validate
 10928 ;; This function is called by:
 10929 ;;		_guardar
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           	psect	text30
 10934  005368                     __ptext30:
 10935                           	opt callstack 0
 10936  005368                     _f_close:
 10937                           	opt callstack 20
 10938                           
 10939                           ;ff.c: 2862:  FIL *fp;ff.c: 2864: {;ff.c: 2865:  FRESULT res;;ff.c: 2869:  res = f_sync(
      +                          fp);
 10940                           
 10941                           ;incstack = 0
 10942  005368  C04E  F045         	movff	f_close@fp,f_sync@fp
 10943  00536C  C04F  F046         	movff	f_close@fp+1,f_sync@fp+1
 10944  005370  ECE2  F020         	call	_f_sync	;wreg free
 10945  005374  6E50               	movwf	f_close@res,c
 10946                           
 10947                           ;ff.c: 2870:  if (res == FR_OK)
 10948  005376  5050               	movf	f_close@res,w,c
 10949  005378  A4D8               	btfss	status,2,c
 10950  00537A  0012               	return	
 10951                           
 10952                           ;ff.c: 2872:  {;ff.c: 2873:   res = validate(fp);
 10953  00537C  C04E  F002         	movff	f_close@fp,validate@obj
 10954  005380  C04F  F003         	movff	f_close@fp+1,validate@obj+1
 10955  005384  ECBA  F026         	call	_validate	;wreg free
 10956  005388  6E50               	movwf	f_close@res,c
 10957                           
 10958                           ;ff.c: 2874:   if (res == FR_OK) {
 10959  00538A  5050               	movf	f_close@res,w,c
 10960  00538C  A4D8               	btfss	status,2,c
 10961  00538E  0012               	return	
 10962                           
 10963                           ;ff.c: 2882:     fp->fs = 0;
 10964  005390  C04E  FFD9         	movff	f_close@fp,fsr2l
 10965  005394  C04F  FFDA         	movff	f_close@fp+1,fsr2h
 10966  005398  0E00               	movlw	0
 10967  00539A  6EDE               	movwf	postinc2,c
 10968  00539C  0E00               	movlw	0
 10969  00539E  6EDD               	movwf	postdec2,c
 10970  0053A0  0012               	return		;funcret
 10971  0053A2                     __end_of_f_close:
 10972                           	opt callstack 0
 10973                           
 10974 ;; *************** function _f_sync *****************
 10975 ;; Defined at:
 10976 ;;		line 2813 in file "ff.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;  fp              2   68[COMRAM] PTR struct .
 10979 ;;		 -> Fil(32), 
 10980 ;; Auto vars:     Size  Location     Type
 10981 ;;  tm              4    0        unsigned long 
 10982 ;;  dir             2   75[COMRAM] PTR unsigned char 
 10983 ;;		 -> FatFs(558), NULL(0), 
 10984 ;;  res             1   74[COMRAM] enum E93
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      enum E93
 10987 ;; Registers used:
 10988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10994 ;;      Params:         2       0       0       0       0       0       0       0       0
 10995 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10996 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10997 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10998 ;;Total ram usage:        9 bytes
 10999 ;; Hardware stack levels used:    1
 11000 ;; Hardware stack levels required when called:    8
 11001 ;; This function calls:
 11002 ;;		_move_window
 11003 ;;		_st_clust
 11004 ;;		_sync_fs
 11005 ;;		_validate
 11006 ;; This function is called by:
 11007 ;;		_f_close
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text31
 11012  0041C4                     __ptext31:
 11013                           	opt callstack 0
 11014  0041C4                     _f_sync:
 11015                           	opt callstack 20
 11016                           
 11017                           ;ff.c: 2814:  FIL* fp;ff.c: 2816: {;ff.c: 2817:  FRESULT res;;ff.c: 2818:  DWORD tm;;ff.
      +                          c: 2819:  BYTE *dir;;ff.c: 2822:  res = validate(fp);
 11018                           
 11019                           ;incstack = 0
 11020  0041C4  C045  F002         	movff	f_sync@fp,validate@obj
 11021  0041C8  C046  F003         	movff	f_sync@fp+1,validate@obj+1
 11022  0041CC  ECBA  F026         	call	_validate	;wreg free
 11023  0041D0  6E4B               	movwf	f_sync@res,c
 11024                           
 11025                           ;ff.c: 2823:  if (res == FR_OK) {
 11026  0041D2  504B               	movf	f_sync@res,w,c
 11027  0041D4  A4D8               	btfss	status,2,c
 11028  0041D6  D095               	goto	l6051
 11029                           
 11030                           ;ff.c: 2824:   if (fp->flag & 0x20) {
 11031  0041D8  EE20 F004          	lfsr	2,4
 11032  0041DC  5045               	movf	f_sync@fp,w,c
 11033  0041DE  26D9               	addwf	fsr2l,f,c
 11034  0041E0  5046               	movf	f_sync@fp+1,w,c
 11035  0041E2  22DA               	addwfc	fsr2h,f,c
 11036  0041E4  AADF               	btfss	indf2,5,c
 11037  0041E6  D08D               	goto	l6051
 11038                           
 11039                           ;ff.c: 2833:    res = move_window(fp->fs, fp->dir_sect);
 11040  0041E8  C045  FFD9         	movff	f_sync@fp,fsr2l
 11041  0041EC  C046  FFDA         	movff	f_sync@fp+1,fsr2h
 11042  0041F0  CFDE F030          	movff	postinc2,move_window@fs
 11043  0041F4  CFDD F031          	movff	postdec2,move_window@fs+1
 11044  0041F8  EE20 F01A          	lfsr	2,26
 11045  0041FC  5045               	movf	f_sync@fp,w,c
 11046  0041FE  26D9               	addwf	fsr2l,f,c
 11047  004200  5046               	movf	f_sync@fp+1,w,c
 11048  004202  22DA               	addwfc	fsr2h,f,c
 11049  004204  CFDE F032          	movff	postinc2,move_window@sector
 11050  004208  CFDE F033          	movff	postinc2,move_window@sector+1
 11051  00420C  CFDE F034          	movff	postinc2,move_window@sector+2
 11052  004210  CFDE F035          	movff	postinc2,move_window@sector+3
 11053  004214  EC67  F026         	call	_move_window	;wreg free
 11054  004218  6E4B               	movwf	f_sync@res,c
 11055                           
 11056                           ;ff.c: 2834:    if (res == FR_OK) {
 11057  00421A  504B               	movf	f_sync@res,w,c
 11058  00421C  A4D8               	btfss	status,2,c
 11059  00421E  D071               	goto	l6051
 11060                           
 11061                           ;ff.c: 2835:     dir = fp->dir_ptr;
 11062  004220  EE20 F01E          	lfsr	2,30
 11063  004224  5045               	movf	f_sync@fp,w,c
 11064  004226  26D9               	addwf	fsr2l,f,c
 11065  004228  5046               	movf	f_sync@fp+1,w,c
 11066  00422A  22DA               	addwfc	fsr2h,f,c
 11067  00422C  CFDE F04C          	movff	postinc2,f_sync@dir
 11068  004230  CFDD F04D          	movff	postdec2,f_sync@dir+1
 11069                           
 11070                           ;ff.c: 2836:     dir[11] |= 0x20;
 11071  004234  EE20 F00B          	lfsr	2,11
 11072  004238  504C               	movf	f_sync@dir,w,c
 11073  00423A  26D9               	addwf	fsr2l,f,c
 11074  00423C  504D               	movf	f_sync@dir+1,w,c
 11075  00423E  22DA               	addwfc	fsr2h,f,c
 11076  004240  0E00               	movlw	0
 11077  004242  8ADB               	bsf	plusw2,5,c
 11078                           
 11079                           ;ff.c: 2837:     *(DWORD*)(BYTE*)(dir + 28)=(DWORD)(fp->fsize);
 11080  004244  EE20 F00A          	lfsr	2,10
 11081  004248  5045               	movf	f_sync@fp,w,c
 11082  00424A  26D9               	addwf	fsr2l,f,c
 11083  00424C  5046               	movf	f_sync@fp+1,w,c
 11084  00424E  22DA               	addwfc	fsr2h,f,c
 11085  004250  EE10 F01C          	lfsr	1,28
 11086  004254  504C               	movf	f_sync@dir,w,c
 11087  004256  26E1               	addwf	fsr1l,f,c
 11088  004258  504D               	movf	f_sync@dir+1,w,c
 11089  00425A  22E2               	addwfc	fsr1h,f,c
 11090  00425C  CFDE FFE6          	movff	postinc2,postinc1
 11091  004260  CFDE FFE6          	movff	postinc2,postinc1
 11092  004264  CFDE FFE6          	movff	postinc2,postinc1
 11093  004268  CFDE FFE6          	movff	postinc2,postinc1
 11094                           
 11095                           ;ff.c: 2838:     st_clust(dir, fp->sclust);
 11096  00426C  C04C  F001         	movff	f_sync@dir,st_clust@dir
 11097  004270  C04D  F002         	movff	f_sync@dir+1,st_clust@dir+1
 11098  004274  EE20 F00E          	lfsr	2,14
 11099  004278  5045               	movf	f_sync@fp,w,c
 11100  00427A  26D9               	addwf	fsr2l,f,c
 11101  00427C  5046               	movf	f_sync@fp+1,w,c
 11102  00427E  22DA               	addwfc	fsr2h,f,c
 11103  004280  CFDE F003          	movff	postinc2,st_clust@cl
 11104  004284  CFDE F004          	movff	postinc2,st_clust@cl+1
 11105  004288  CFDE F005          	movff	postinc2,st_clust@cl+2
 11106  00428C  CFDE F006          	movff	postinc2,st_clust@cl+3
 11107  004290  EC03  F02A         	call	_st_clust	;wreg free
 11108                           
 11109                           ;ff.c: 2840:     *(DWORD*)(BYTE*)(dir + 22)=(DWORD)(tm);
 11110  004294  EE20 F016          	lfsr	2,22
 11111  004298  504C               	movf	f_sync@dir,w,c
 11112  00429A  26D9               	addwf	fsr2l,f,c
 11113  00429C  504D               	movf	f_sync@dir+1,w,c
 11114  00429E  22DA               	addwfc	fsr2h,f,c
 11115  0042A0  0E00               	movlw	0
 11116  0042A2  6EDE               	movwf	postinc2,c
 11117  0042A4  0E00               	movlw	0
 11118  0042A6  6EDE               	movwf	postinc2,c
 11119  0042A8  0E21               	movlw	33
 11120  0042AA  6EDE               	movwf	postinc2,c
 11121  0042AC  0E46               	movlw	70
 11122  0042AE  6EDD               	movwf	postdec2,c
 11123                           
 11124                           ;ff.c: 2841:     *(WORD*)(BYTE*)(dir + 18)=(WORD)(0);
 11125  0042B0  EE20 F012          	lfsr	2,18
 11126  0042B4  504C               	movf	f_sync@dir,w,c
 11127  0042B6  26D9               	addwf	fsr2l,f,c
 11128  0042B8  504D               	movf	f_sync@dir+1,w,c
 11129  0042BA  22DA               	addwfc	fsr2h,f,c
 11130  0042BC  0E00               	movlw	0
 11131  0042BE  6EDE               	movwf	postinc2,c
 11132  0042C0  0E00               	movlw	0
 11133  0042C2  6EDD               	movwf	postdec2,c
 11134                           
 11135                           ;ff.c: 2842:     fp->flag &= ~0x20;
 11136  0042C4  EE20 F004          	lfsr	2,4
 11137  0042C8  5045               	movf	f_sync@fp,w,c
 11138  0042CA  26D9               	addwf	fsr2l,f,c
 11139  0042CC  5046               	movf	f_sync@fp+1,w,c
 11140  0042CE  22DA               	addwfc	fsr2h,f,c
 11141  0042D0  0EDF               	movlw	223
 11142  0042D2  16DF               	andwf	indf2,f,c
 11143                           
 11144                           ;ff.c: 2843:     fp->fs->wflag = 1;
 11145  0042D4  C045  FFD9         	movff	f_sync@fp,fsr2l
 11146  0042D8  C046  FFDA         	movff	f_sync@fp+1,fsr2h
 11147  0042DC  EE10 F004          	lfsr	1,4
 11148  0042E0  50DE               	movf	postinc2,w,c
 11149  0042E2  26E1               	addwf	fsr1l,f,c
 11150  0042E4  50DD               	movf	postdec2,w,c
 11151  0042E6  22E2               	addwfc	fsr1h,f,c
 11152  0042E8  0E01               	movlw	1
 11153  0042EA  6EE7               	movwf	indf1,c
 11154                           
 11155                           ;ff.c: 2844:     res = sync_fs(fp->fs);
 11156  0042EC  C045  FFD9         	movff	f_sync@fp,fsr2l
 11157  0042F0  C046  FFDA         	movff	f_sync@fp+1,fsr2h
 11158  0042F4  CFDE F03A          	movff	postinc2,sync_fs@fs
 11159  0042F8  CFDD F03B          	movff	postdec2,sync_fs@fs+1
 11160  0042FC  EC0E  F01E         	call	_sync_fs	;wreg free
 11161  004300  6E4B               	movwf	f_sync@res,c
 11162  004302                     l6051:
 11163                           
 11164                           ;ff.c: 2849:  return res;
 11165  004302  504B               	movf	f_sync@res,w,c
 11166  004304  0012               	return		;funcret
 11167  004306                     __end_of_f_sync:
 11168                           	opt callstack 0
 11169                           
 11170 ;; *************** function _validate *****************
 11171 ;; Defined at:
 11172 ;;		line 2372 in file "ff.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;  obj             2    1[COMRAM] PTR void 
 11175 ;;		 -> Fil(32), 
 11176 ;; Auto vars:     Size  Location     Type
 11177 ;;  fil             2    7[COMRAM] PTR struct .
 11178 ;;		 -> Fil(32), 
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  1    wreg      enum E93
 11181 ;; Registers used:
 11182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/0
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11188 ;;      Params:         2       0       0       0       0       0       0       0       0
 11189 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11190 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11191 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11192 ;;Total ram usage:        8 bytes
 11193 ;; Hardware stack levels used:    1
 11194 ;; Hardware stack levels required when called:    1
 11195 ;; This function calls:
 11196 ;;		_disk_status
 11197 ;; This function is called by:
 11198 ;;		_f_read
 11199 ;;		_f_sync
 11200 ;;		_f_close
 11201 ;;		_f_lseek
 11202 ;;		_f_write
 11203 ;; This function uses a non-reentrant model
 11204 ;;
 11205                           
 11206                           	psect	text32
 11207  004D74                     __ptext32:
 11208                           	opt callstack 0
 11209  004D74                     _validate:
 11210                           	opt callstack 26
 11211                           
 11212                           ;ff.c: 2373:  void* obj;ff.c: 2375: {;ff.c: 2376:  FIL *fil = (FIL*)obj;
 11213                           
 11214                           ;incstack = 0
 11215  004D74  C002  F008         	movff	validate@obj,validate@fil
 11216  004D78  C003  F009         	movff	validate@obj+1,validate@fil+1
 11217                           
 11218                           ;ff.c: 2379:  if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id || (di
      +                          sk_status(fil->fs->drv) & 0x01))
 11219  004D7C  5008               	movf	validate@fil,w,c
 11220  004D7E  1009               	iorwf	validate@fil+1,w,c
 11221  004D80  B4D8               	btfsc	status,2,c
 11222  004D82  D03E               	goto	u7020
 11223  004D84  C008  FFD9         	movff	validate@fil,fsr2l
 11224  004D88  C009  FFDA         	movff	validate@fil+1,fsr2h
 11225  004D8C  50DE               	movf	postinc2,w,c
 11226  004D8E  10DE               	iorwf	postinc2,w,c
 11227  004D90  B4D8               	btfsc	status,2,c
 11228  004D92  D036               	goto	u7020
 11229  004D94  C008  FFD9         	movff	validate@fil,fsr2l
 11230  004D98  C009  FFDA         	movff	validate@fil+1,fsr2h
 11231  004D9C  CFDE F004          	movff	postinc2,??_validate
 11232  004DA0  CFDD F005          	movff	postdec2,??_validate+1
 11233  004DA4  C004  FFD9         	movff	??_validate,fsr2l
 11234  004DA8  C005  FFDA         	movff	??_validate+1,fsr2h
 11235  004DAC  50DF               	movf	indf2,w,c
 11236  004DAE  B4D8               	btfsc	status,2,c
 11237  004DB0  D027               	goto	u7020
 11238  004DB2  EE20 F002          	lfsr	2,2
 11239  004DB6  5008               	movf	validate@fil,w,c
 11240  004DB8  26D9               	addwf	fsr2l,f,c
 11241  004DBA  5009               	movf	validate@fil+1,w,c
 11242  004DBC  22DA               	addwfc	fsr2h,f,c
 11243  004DBE  C008  FFE1         	movff	validate@fil,fsr1l
 11244  004DC2  C009  FFE2         	movff	validate@fil+1,fsr1h
 11245  004DC6  EE00 F006          	lfsr	0,6
 11246  004DCA  50E6               	movf	postinc1,w,c
 11247  004DCC  26E9               	addwf	fsr0l,f,c
 11248  004DCE  50E5               	movf	postdec1,w,c
 11249  004DD0  22EA               	addwfc	fsr0h,f,c
 11250  004DD2  50DE               	movf	postinc2,w,c
 11251  004DD4  18EE               	xorwf	postinc0,w,c
 11252  004DD6  E114               	bnz	l5519
 11253  004DD8  50DE               	movf	postinc2,w,c
 11254  004DDA  18EE               	xorwf	postinc0,w,c
 11255  004DDC  A4D8               	btfss	status,2,c
 11256  004DDE  D010               	goto	u7020
 11257  004DE0  C008  FFD9         	movff	validate@fil,fsr2l
 11258  004DE4  C009  FFDA         	movff	validate@fil+1,fsr2h
 11259  004DE8  EE10 F001          	lfsr	1,1
 11260  004DEC  50DE               	movf	postinc2,w,c
 11261  004DEE  26E1               	addwf	fsr1l,f,c
 11262  004DF0  50DD               	movf	postdec2,w,c
 11263  004DF2  22E2               	addwfc	fsr1h,f,c
 11264  004DF4  50E7               	movf	indf1,w,c
 11265  004DF6  EC55  F02A         	call	_disk_status
 11266  004DFA  6E04               	movwf	??_validate& (0+255),c
 11267  004DFC  A004               	btfss	??_validate,0,c
 11268  004DFE  D002               	goto	l5523
 11269  004E00                     u7020:
 11270  004E00                     l5519:
 11271                           
 11272                           ;ff.c: 2380:   return FR_INVALID_OBJECT;
 11273  004E00  0E09               	movlw	9
 11274  004E02  0012               	return	
 11275  004E04                     l5523:
 11276                           
 11277                           ;ff.c: 2384:  return FR_OK;
 11278  004E04  0E00               	movlw	0
 11279  004E06  0012               	return		;funcret
 11280  004E08                     __end_of_validate:
 11281                           	opt callstack 0
 11282                           
 11283 ;; *************** function _disk_status *****************
 11284 ;; Defined at:
 11285 ;;		line 356 in file "diskio.c"
 11286 ;; Parameters:    Size  Location     Type
 11287 ;;  pdrv            1    wreg     unsigned char 
 11288 ;; Auto vars:     Size  Location     Type
 11289 ;;  pdrv            1    0[COMRAM] unsigned char 
 11290 ;; Return value:  Size  Location     Type
 11291 ;;                  1    wreg      unsigned char 
 11292 ;; Registers used:
 11293 ;;		wreg, status,2
 11294 ;; Tracked objects:
 11295 ;;		On entry : 0/0
 11296 ;;		On exit  : 0/0
 11297 ;;		Unchanged: 0/0
 11298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11299 ;;      Params:         0       0       0       0       0       0       0       0       0
 11300 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11301 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11302 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11303 ;;Total ram usage:        1 bytes
 11304 ;; Hardware stack levels used:    1
 11305 ;; This function calls:
 11306 ;;		Nothing
 11307 ;; This function is called by:
 11308 ;;		_find_volume
 11309 ;;		_validate
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           	psect	text33
 11314  0054AA                     __ptext33:
 11315                           	opt callstack 0
 11316  0054AA                     _disk_status:
 11317                           	opt callstack 26
 11318                           
 11319                           ;incstack = 0
 11320                           ;disk_status@pdrv stored from wreg
 11321  0054AA  6E01               	movwf	disk_status@pdrv,c
 11322                           
 11323                           ;diskio.c: 357:  BYTE pdrv;diskio.c: 359: {;diskio.c: 360:  if (pdrv) return 0x01;
 11324  0054AC  5001               	movf	disk_status@pdrv,w,c
 11325  0054AE  B4D8               	btfsc	status,2,c
 11326  0054B0  D002               	goto	l4751
 11327  0054B2  0E01               	movlw	1
 11328  0054B4  0012               	return	
 11329  0054B6                     l4751:
 11330                           
 11331                           ;diskio.c: 361:  return Stat;
 11332  0054B6  0100               	movlb	0	; () banked
 11333  0054B8  51F3               	movf	_Stat& (0+255),w,b
 11334  0054BA  0012               	return		;funcret
 11335  0054BC                     __end_of_disk_status:
 11336                           	opt callstack 0
 11337                           
 11338 ;; *************** function _sync_fs *****************
 11339 ;; Defined at:
 11340 ;;		line 760 in file "ff.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  fs              2   57[COMRAM] PTR struct .
 11343 ;;		 -> FatFs(558), NULL(0), 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;  res             1   67[COMRAM] enum E93
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      enum E93
 11348 ;; Registers used:
 11349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11355 ;;      Params:         2       0       0       0       0       0       0       0       0
 11356 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11357 ;;      Temps:          8       0       0       0       0       0       0       0       0
 11358 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11359 ;;Total ram usage:       11 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:    7
 11362 ;; This function calls:
 11363 ;;		_disk_ioctl
 11364 ;;		_disk_write
 11365 ;;		_mem_set
 11366 ;;		_sync_window
 11367 ;; This function is called by:
 11368 ;;		_f_sync
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           
 11372                           	psect	text34
 11373  003C1C                     __ptext34:
 11374                           	opt callstack 0
 11375  003C1C                     _sync_fs:
 11376                           	opt callstack 20
 11377                           
 11378                           ;ff.c: 761:  FATFS* fs;ff.c: 763: {;ff.c: 764:  FRESULT res;;ff.c: 767:  res = sync_wind
      +                          ow(fs);
 11379                           
 11380                           ;incstack = 0
 11381  003C1C  C03A  F01B         	movff	sync_fs@fs,sync_window@fs
 11382  003C20  C03B  F01C         	movff	sync_fs@fs+1,sync_window@fs+1
 11383  003C24  ECEE  F01E         	call	_sync_window	;wreg free
 11384  003C28  6E44               	movwf	sync_fs@res,c
 11385                           
 11386                           ;ff.c: 768:  if (res == FR_OK) {
 11387  003C2A  5044               	movf	sync_fs@res,w,c
 11388  003C2C  A4D8               	btfss	status,2,c
 11389  003C2E  D0D4               	goto	l242
 11390                           
 11391                           ;ff.c: 770:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 11392  003C30  C03A  FFD9         	movff	sync_fs@fs,fsr2l
 11393  003C34  C03B  FFDA         	movff	sync_fs@fs+1,fsr2h
 11394  003C38  0E03               	movlw	3
 11395  003C3A  18DE               	xorwf	postinc2,w,c
 11396  003C3C  A4D8               	btfss	status,2,c
 11397  003C3E  D0B8               	goto	l5215
 11398  003C40  EE20 F005          	lfsr	2,5
 11399  003C44  503A               	movf	sync_fs@fs,w,c
 11400  003C46  26D9               	addwf	fsr2l,f,c
 11401  003C48  503B               	movf	sync_fs@fs+1,w,c
 11402  003C4A  22DA               	addwfc	fsr2h,f,c
 11403  003C4C  04DE               	decf	postinc2,w,c
 11404  003C4E  A4D8               	btfss	status,2,c
 11405  003C50  D0AF               	goto	l5215
 11406                           
 11407                           ;ff.c: 772:    mem_set(fs->win, 0, ((UINT)512));
 11408  003C52  0E2E               	movlw	46
 11409  003C54  243A               	addwf	sync_fs@fs,w,c
 11410  003C56  6E01               	movwf	mem_set@dst,c
 11411  003C58  0E00               	movlw	0
 11412  003C5A  203B               	addwfc	sync_fs@fs+1,w,c
 11413  003C5C  6E02               	movwf	mem_set@dst+1,c
 11414  003C5E  0E00               	movlw	0
 11415  003C60  6E04               	movwf	mem_set@val+1,c
 11416  003C62  0E00               	movlw	0
 11417  003C64  6E03               	movwf	mem_set@val,c
 11418  003C66  0E02               	movlw	2
 11419  003C68  6E06               	movwf	mem_set@cnt+1,c
 11420  003C6A  0E00               	movlw	0
 11421  003C6C  6E05               	movwf	mem_set@cnt,c
 11422  003C6E  ECED  F029         	call	_mem_set	;wreg free
 11423                           
 11424                           ;ff.c: 773:    *(WORD*)(BYTE*)(fs->win + 510)=(WORD)(0xAA55);
 11425  003C72  EE22 F02C          	lfsr	2,556
 11426  003C76  503A               	movf	sync_fs@fs,w,c
 11427  003C78  26D9               	addwf	fsr2l,f,c
 11428  003C7A  503B               	movf	sync_fs@fs+1,w,c
 11429  003C7C  22DA               	addwfc	fsr2h,f,c
 11430  003C7E  0E55               	movlw	85
 11431  003C80  6EDE               	movwf	postinc2,c
 11432  003C82  0EAA               	movlw	170
 11433  003C84  6EDD               	movwf	postdec2,c
 11434                           
 11435                           ;ff.c: 774:    *(DWORD*)(BYTE*)(fs->win + 0)=(DWORD)(0x41615252);
 11436  003C86  EE20 F02E          	lfsr	2,46
 11437  003C8A  503A               	movf	sync_fs@fs,w,c
 11438  003C8C  26D9               	addwf	fsr2l,f,c
 11439  003C8E  503B               	movf	sync_fs@fs+1,w,c
 11440  003C90  22DA               	addwfc	fsr2h,f,c
 11441  003C92  0E52               	movlw	82
 11442  003C94  6EDE               	movwf	postinc2,c
 11443  003C96  0E52               	movlw	82
 11444  003C98  6EDE               	movwf	postinc2,c
 11445  003C9A  0E61               	movlw	97
 11446  003C9C  6EDE               	movwf	postinc2,c
 11447  003C9E  0E41               	movlw	65
 11448  003CA0  6EDD               	movwf	postdec2,c
 11449                           
 11450                           ;ff.c: 775:    *(DWORD*)(BYTE*)(fs->win + 484)=(DWORD)(0x61417272);
 11451  003CA2  EE22 F012          	lfsr	2,530
 11452  003CA6  503A               	movf	sync_fs@fs,w,c
 11453  003CA8  26D9               	addwf	fsr2l,f,c
 11454  003CAA  503B               	movf	sync_fs@fs+1,w,c
 11455  003CAC  22DA               	addwfc	fsr2h,f,c
 11456  003CAE  0E72               	movlw	114
 11457  003CB0  6EDE               	movwf	postinc2,c
 11458  003CB2  0E72               	movlw	114
 11459  003CB4  6EDE               	movwf	postinc2,c
 11460  003CB6  0E41               	movlw	65
 11461  003CB8  6EDE               	movwf	postinc2,c
 11462  003CBA  0E61               	movlw	97
 11463  003CBC  6EDD               	movwf	postdec2,c
 11464                           
 11465                           ;ff.c: 776:    *(DWORD*)(BYTE*)(fs->win + 488)=(DWORD)(fs->free_clust);
 11466  003CBE  EE20 F00E          	lfsr	2,14
 11467  003CC2  503A               	movf	sync_fs@fs,w,c
 11468  003CC4  26D9               	addwf	fsr2l,f,c
 11469  003CC6  503B               	movf	sync_fs@fs+1,w,c
 11470  003CC8  22DA               	addwfc	fsr2h,f,c
 11471  003CCA  EE12 F016          	lfsr	1,534
 11472  003CCE  503A               	movf	sync_fs@fs,w,c
 11473  003CD0  26E1               	addwf	fsr1l,f,c
 11474  003CD2  503B               	movf	sync_fs@fs+1,w,c
 11475  003CD4  22E2               	addwfc	fsr1h,f,c
 11476  003CD6  CFDE FFE6          	movff	postinc2,postinc1
 11477  003CDA  CFDE FFE6          	movff	postinc2,postinc1
 11478  003CDE  CFDE FFE6          	movff	postinc2,postinc1
 11479  003CE2  CFDE FFE6          	movff	postinc2,postinc1
 11480                           
 11481                           ;ff.c: 777:    *(DWORD*)(BYTE*)(fs->win + 492)=(DWORD)(fs->last_clust);
 11482  003CE6  EE20 F00A          	lfsr	2,10
 11483  003CEA  503A               	movf	sync_fs@fs,w,c
 11484  003CEC  26D9               	addwf	fsr2l,f,c
 11485  003CEE  503B               	movf	sync_fs@fs+1,w,c
 11486  003CF0  22DA               	addwfc	fsr2h,f,c
 11487  003CF2  EE12 F01A          	lfsr	1,538
 11488  003CF6  503A               	movf	sync_fs@fs,w,c
 11489  003CF8  26E1               	addwf	fsr1l,f,c
 11490  003CFA  503B               	movf	sync_fs@fs+1,w,c
 11491  003CFC  22E2               	addwfc	fsr1h,f,c
 11492  003CFE  CFDE FFE6          	movff	postinc2,postinc1
 11493  003D02  CFDE FFE6          	movff	postinc2,postinc1
 11494  003D06  CFDE FFE6          	movff	postinc2,postinc1
 11495  003D0A  CFDE FFE6          	movff	postinc2,postinc1
 11496                           
 11497                           ;ff.c: 779:    fs->winsect = fs->volbase + 1;
 11498  003D0E  EE20 F01A          	lfsr	2,26
 11499  003D12  503A               	movf	sync_fs@fs,w,c
 11500  003D14  26D9               	addwf	fsr2l,f,c
 11501  003D16  503B               	movf	sync_fs@fs+1,w,c
 11502  003D18  22DA               	addwfc	fsr2h,f,c
 11503  003D1A  CFDE F03C          	movff	postinc2,??_sync_fs
 11504  003D1E  CFDE F03D          	movff	postinc2,??_sync_fs+1
 11505  003D22  CFDE F03E          	movff	postinc2,??_sync_fs+2
 11506  003D26  CFDE F03F          	movff	postinc2,??_sync_fs+3
 11507  003D2A  0E01               	movlw	1
 11508  003D2C  243C               	addwf	??_sync_fs,w,c
 11509  003D2E  6E40               	movwf	(??_sync_fs+4)& (0+255),c
 11510  003D30  0E00               	movlw	0
 11511  003D32  203D               	addwfc	??_sync_fs+1,w,c
 11512  003D34  6E41               	movwf	(??_sync_fs+5)& (0+255),c
 11513  003D36  0E00               	movlw	0
 11514  003D38  203E               	addwfc	??_sync_fs+2,w,c
 11515  003D3A  6E42               	movwf	(??_sync_fs+6)& (0+255),c
 11516  003D3C  0E00               	movlw	0
 11517  003D3E  203F               	addwfc	??_sync_fs+3,w,c
 11518  003D40  6E43               	movwf	(??_sync_fs+7)& (0+255),c
 11519  003D42  EE20 F02A          	lfsr	2,42
 11520  003D46  503A               	movf	sync_fs@fs,w,c
 11521  003D48  26D9               	addwf	fsr2l,f,c
 11522  003D4A  503B               	movf	sync_fs@fs+1,w,c
 11523  003D4C  22DA               	addwfc	fsr2h,f,c
 11524  003D4E  C040  FFDE         	movff	??_sync_fs+4,postinc2
 11525  003D52  C041  FFDE         	movff	??_sync_fs+5,postinc2
 11526  003D56  C042  FFDE         	movff	??_sync_fs+6,postinc2
 11527  003D5A  C043  FFDE         	movff	??_sync_fs+7,postinc2
 11528                           
 11529                           ;ff.c: 780:    disk_write(fs->drv, fs->win, fs->winsect, 1);
 11530  003D5E  0E2E               	movlw	46
 11531  003D60  243A               	addwf	sync_fs@fs,w,c
 11532  003D62  6E11               	movwf	disk_write@buff,c
 11533  003D64  0E00               	movlw	0
 11534  003D66  203B               	addwfc	sync_fs@fs+1,w,c
 11535  003D68  6E12               	movwf	disk_write@buff+1,c
 11536  003D6A  EE20 F02A          	lfsr	2,42
 11537  003D6E  503A               	movf	sync_fs@fs,w,c
 11538  003D70  26D9               	addwf	fsr2l,f,c
 11539  003D72  503B               	movf	sync_fs@fs+1,w,c
 11540  003D74  22DA               	addwfc	fsr2h,f,c
 11541  003D76  CFDE F013          	movff	postinc2,disk_write@sector
 11542  003D7A  CFDE F014          	movff	postinc2,disk_write@sector+1
 11543  003D7E  CFDE F015          	movff	postinc2,disk_write@sector+2
 11544  003D82  CFDE F016          	movff	postinc2,disk_write@sector+3
 11545  003D86  0E00               	movlw	0
 11546  003D88  6E18               	movwf	disk_write@count+1,c
 11547  003D8A  0E01               	movlw	1
 11548  003D8C  6E17               	movwf	disk_write@count,c
 11549  003D8E  EE20 F001          	lfsr	2,1
 11550  003D92  503A               	movf	sync_fs@fs,w,c
 11551  003D94  26D9               	addwf	fsr2l,f,c
 11552  003D96  503B               	movf	sync_fs@fs+1,w,c
 11553  003D98  22DA               	addwfc	fsr2h,f,c
 11554  003D9A  50DF               	movf	indf2,w,c
 11555  003D9C  EC21  F022         	call	_disk_write
 11556                           
 11557                           ;ff.c: 781:    fs->fsi_flag = 0;
 11558  003DA0  EE20 F005          	lfsr	2,5
 11559  003DA4  503A               	movf	sync_fs@fs,w,c
 11560  003DA6  26D9               	addwf	fsr2l,f,c
 11561  003DA8  503B               	movf	sync_fs@fs+1,w,c
 11562  003DAA  22DA               	addwfc	fsr2h,f,c
 11563  003DAC  0E00               	movlw	0
 11564  003DAE  6EDF               	movwf	indf2,c
 11565  003DB0                     l5215:
 11566                           
 11567                           ;ff.c: 784:   if (disk_ioctl(fs->drv, 0, 0) != RES_OK)
 11568  003DB0  0E00               	movlw	0
 11569  003DB2  6E11               	movwf	disk_ioctl@cmd,c
 11570  003DB4  0E00               	movlw	0
 11571  003DB6  6E12               	movwf	disk_ioctl@buff,c
 11572  003DB8  0E00               	movlw	0
 11573  003DBA  6E13               	movwf	disk_ioctl@buff+1,c
 11574  003DBC  EE20 F001          	lfsr	2,1
 11575  003DC0  503A               	movf	sync_fs@fs,w,c
 11576  003DC2  26D9               	addwf	fsr2l,f,c
 11577  003DC4  503B               	movf	sync_fs@fs+1,w,c
 11578  003DC6  22DA               	addwfc	fsr2h,f,c
 11579  003DC8  50DF               	movf	indf2,w,c
 11580  003DCA  ECF6  F00E         	call	_disk_ioctl
 11581  003DCE  0900               	iorlw	0
 11582  003DD0  B4D8               	btfsc	status,2,c
 11583  003DD2  D002               	goto	l242
 11584                           
 11585                           ;ff.c: 785:    res = FR_DISK_ERR;
 11586  003DD4  0E01               	movlw	1
 11587  003DD6  6E44               	movwf	sync_fs@res,c
 11588  003DD8                     l242:
 11589                           
 11590                           ;ff.c: 788:  return res;
 11591  003DD8  5044               	movf	sync_fs@res,w,c
 11592  003DDA  0012               	return		;funcret
 11593  003DDC                     __end_of_sync_fs:
 11594                           	opt callstack 0
 11595                           
 11596 ;; *************** function _mem_set *****************
 11597 ;; Defined at:
 11598 ;;		line 524 in file "ff.c"
 11599 ;; Parameters:    Size  Location     Type
 11600 ;;  dst             2    0[COMRAM] PTR void 
 11601 ;;		 -> FatFs(558), f_open@sfn(12), NULL(0), 
 11602 ;;  val             2    2[COMRAM] int 
 11603 ;;  cnt             2    4[COMRAM] unsigned short 
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  d               2    6[COMRAM] PTR unsigned char 
 11606 ;;		 -> FatFs(558), f_open@sfn(12), NULL(0), 
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      void 
 11609 ;; Registers used:
 11610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11616 ;;      Params:         6       0       0       0       0       0       0       0       0
 11617 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11619 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11620 ;;Total ram usage:        8 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; This function calls:
 11623 ;;		Nothing
 11624 ;; This function is called by:
 11625 ;;		_sync_fs
 11626 ;;		_dir_next
 11627 ;;		_dir_register
 11628 ;;		_create_name
 11629 ;; This function uses a non-reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text35
 11633  0053DA                     __ptext35:
 11634                           	opt callstack 0
 11635  0053DA                     _mem_set:
 11636                           	opt callstack 25
 11637                           
 11638                           ;ff.c: 525:  BYTE *d = (BYTE*)dst;
 11639                           
 11640                           ;incstack = 0
 11641  0053DA  C001  F007         	movff	mem_set@dst,mem_set@d
 11642  0053DE  C002  F008         	movff	mem_set@dst+1,mem_set@d+1
 11643                           
 11644                           ;ff.c: 527:  while (cnt--)
 11645  0053E2  D008               	goto	l4649
 11646  0053E4                     l4645:
 11647                           
 11648                           ;ff.c: 528:   *d++ = (BYTE)val;
 11649  0053E4  C007  FFD9         	movff	mem_set@d,fsr2l
 11650  0053E8  C008  FFDA         	movff	mem_set@d+1,fsr2h
 11651  0053EC  C003  FFDF         	movff	mem_set@val,indf2
 11652  0053F0  4A07               	infsnz	mem_set@d,f,c
 11653  0053F2  2A08               	incf	mem_set@d+1,f,c
 11654  0053F4                     l4649:
 11655                           
 11656                           ;ff.c: 527:  while (cnt--)
 11657  0053F4  0605               	decf	mem_set@cnt,f,c
 11658  0053F6  A0D8               	btfss	status,0,c
 11659  0053F8  0606               	decf	mem_set@cnt+1,f,c
 11660  0053FA  2805               	incf	mem_set@cnt,w,c
 11661  0053FC  E1F3               	bnz	l4645
 11662  0053FE  2806               	incf	mem_set@cnt+1,w,c
 11663  005400  B4D8               	btfsc	status,2,c
 11664  005402  0012               	return	
 11665  005404  D7EF               	goto	l4645
 11666  005406                     __end_of_mem_set:
 11667                           	opt callstack 0
 11668                           
 11669 ;; *************** function _disk_ioctl *****************
 11670 ;; Defined at:
 11671 ;;		line 446 in file "diskio.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;  pdrv            1    wreg     unsigned char 
 11674 ;;  cmd             1   16[COMRAM] unsigned char 
 11675 ;;  buff            2   17[COMRAM] PTR void 
 11676 ;;		 -> NULL(0), 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  pdrv            1   48[COMRAM] unsigned char 
 11679 ;;  csd            16   32[COMRAM] unsigned char [16]
 11680 ;;  csize           4   49[COMRAM] unsigned long 
 11681 ;;  ptr             2   55[COMRAM] PTR unsigned char 
 11682 ;;		 -> NULL(0), 
 11683 ;;  n               1   54[COMRAM] unsigned char 
 11684 ;;  res             1   53[COMRAM] enum E43
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  1    wreg      enum E43
 11687 ;; Registers used:
 11688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11694 ;;      Params:         3       0       0       0       0       0       0       0       0
 11695 ;;      Locals:        25       0       0       0       0       0       0       0       0
 11696 ;;      Temps:         13       0       0       0       0       0       0       0       0
 11697 ;;      Totals:        41       0       0       0       0       0       0       0       0
 11698 ;;Total ram usage:       41 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:    5
 11701 ;; This function calls:
 11702 ;;		_SPI1_Exchange8bit
 11703 ;;		___wmul
 11704 ;;		_deselect
 11705 ;;		_rcvr_datablock
 11706 ;;		_select
 11707 ;;		_send_cmd
 11708 ;; This function is called by:
 11709 ;;		_sync_fs
 11710 ;; This function uses a non-reentrant model
 11711 ;;
 11712                           
 11713                           	psect	text36
 11714  001DEC                     __ptext36:
 11715                           	opt callstack 0
 11716  001DEC                     _disk_ioctl:
 11717                           	opt callstack 21
 11718                           
 11719                           ;incstack = 0
 11720                           ;disk_ioctl@pdrv stored from wreg
 11721  001DEC  6E31               	movwf	disk_ioctl@pdrv,c
 11722                           
 11723                           ;diskio.c: 447:  BYTE pdrv,;diskio.c: 448:  BYTE cmd,;diskio.c: 449:  void *buff;diskio.
      +                          c: 451: {;diskio.c: 452:  DRESULT res;;diskio.c: 453:  BYTE n, csd[16], *ptr = buff;
 11724  001DEE  C012  F038         	movff	disk_ioctl@buff,disk_ioctl@ptr
 11725  001DF2  C013  F039         	movff	disk_ioctl@buff+1,disk_ioctl@ptr+1
 11726                           
 11727                           ;diskio.c: 454:  DWORD csize;;diskio.c: 457:  if (pdrv) return RES_PARERR;
 11728  001DF6  5031               	movf	disk_ioctl@pdrv,w,c
 11729  001DF8  B4D8               	btfsc	status,2,c
 11730  001DFA  D002               	goto	l4763
 11731  001DFC  0E04               	movlw	4
 11732  001DFE  0012               	return	
 11733  001E00                     l4763:
 11734                           
 11735                           ;diskio.c: 459:  res = RES_ERROR;
 11736  001E00  0E01               	movlw	1
 11737  001E02  6E36               	movwf	disk_ioctl@res,c
 11738                           
 11739                           ;diskio.c: 461:  if (Stat & 0x01) return RES_NOTRDY;
 11740  001E04  0100               	movlb	0	; () banked
 11741  001E06  A1F3               	btfss	_Stat& (0+255),0,b
 11742  001E08  D21B               	goto	l4863
 11743                           
 11744                           ; BSR set to: 0
 11745  001E0A  0E03               	movlw	3
 11746  001E0C  0012               	return	
 11747  001E0E                     l4771:
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;diskio.c: 465:   if (select()) res = RES_OK;
 11751  001E0E  EC3B  F02A         	call	_select	;wreg free
 11752  001E12  0900               	iorlw	0
 11753  001E14  B4D8               	btfsc	status,2,c
 11754  001E16  D235               	goto	l4865
 11755  001E18                     u5540:
 11756  001E18  0E00               	movlw	0
 11757  001E1A  D210               	goto	L12
 11758  001E1C                     l4775:
 11759                           
 11760                           ; BSR set to: 0
 11761                           ;diskio.c: 469:   if ((send_cmd((9), 0) == 0) && rcvr_datablock(csd, 16)) {
 11762  001E1C  0E00               	movlw	0
 11763  001E1E  6E0B               	movwf	send_cmd@arg,c
 11764  001E20  0E00               	movlw	0
 11765  001E22  6E0C               	movwf	send_cmd@arg+1,c
 11766  001E24  0E00               	movlw	0
 11767  001E26  6E0D               	movwf	send_cmd@arg+2,c
 11768  001E28  0E00               	movlw	0
 11769  001E2A  6E0E               	movwf	send_cmd@arg+3,c
 11770  001E2C  0E09               	movlw	9
 11771  001E2E  EC75  F029         	call	_send_cmd
 11772  001E32  0900               	iorlw	0
 11773  001E34  A4D8               	btfss	status,2,c
 11774  001E36  D225               	goto	l4865
 11775  001E38  0E21               	movlw	low disk_ioctl@csd
 11776  001E3A  6E02               	movwf	rcvr_datablock@buff,c
 11777  001E3C  0E00               	movlw	high disk_ioctl@csd
 11778  001E3E  6E03               	movwf	rcvr_datablock@buff+1,c
 11779  001E40  0E00               	movlw	0
 11780  001E42  6E05               	movwf	rcvr_datablock@btr+1,c
 11781  001E44  0E10               	movlw	16
 11782  001E46  6E04               	movwf	rcvr_datablock@btr,c
 11783  001E48  EC3C  F028         	call	_rcvr_datablock	;wreg free
 11784  001E4C  0900               	iorlw	0
 11785  001E4E  B4D8               	btfsc	status,2,c
 11786  001E50  D218               	goto	l4865
 11787                           
 11788                           ;diskio.c: 470:    if ((csd[0] >> 6) == 1) {
 11789  001E52  4421               	rlncf	disk_ioctl@csd,w,c
 11790  001E54  46E8               	rlncf	wreg,f,c
 11791  001E56  0B03               	andlw	3
 11792  001E58  06E8               	decf	wreg,f,c
 11793  001E5A  A4D8               	btfss	status,2,c
 11794  001E5C  D04E               	goto	l4785
 11795                           
 11796                           ;diskio.c: 471:     csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) 
      +                          + 1;
 11797  001E5E  C028  F014         	movff	disk_ioctl@csd+7,??_disk_ioctl
 11798  001E62  0E3F               	movlw	63
 11799  001E64  1614               	andwf	??_disk_ioctl,f,c
 11800  001E66  C014  F015         	movff	??_disk_ioctl,??_disk_ioctl+1
 11801  001E6A  6A16               	clrf	(??_disk_ioctl+2)& (0+255),c
 11802  001E6C  6A17               	clrf	(??_disk_ioctl+3)& (0+255),c
 11803  001E6E  6A18               	clrf	(??_disk_ioctl+4)& (0+255),c
 11804  001E70  C016  F018         	movff	??_disk_ioctl+2,??_disk_ioctl+4
 11805  001E74  C015  F017         	movff	??_disk_ioctl+1,??_disk_ioctl+3
 11806  001E78  6A16               	clrf	??_disk_ioctl+2,c
 11807  001E7A  6A15               	clrf	??_disk_ioctl+1,c
 11808  001E7C  5029               	movf	disk_ioctl@csd+8,w,c
 11809  001E7E  6E1A               	movwf	(??_disk_ioctl+6)& (0+255),c
 11810  001E80  6A19               	clrf	(??_disk_ioctl+5)& (0+255),c
 11811  001E82  502A               	movf	disk_ioctl@csd+9,w,c
 11812  001E84  6E1B               	movwf	(??_disk_ioctl+7)& (0+255),c
 11813  001E86  6A1C               	clrf	(??_disk_ioctl+8)& (0+255),c
 11814  001E88  5019               	movf	??_disk_ioctl+5,w,c
 11815  001E8A  261B               	addwf	??_disk_ioctl+7,f,c
 11816  001E8C  501A               	movf	??_disk_ioctl+6,w,c
 11817  001E8E  221C               	addwfc	??_disk_ioctl+8,f,c
 11818  001E90  501B               	movf	??_disk_ioctl+7,w,c
 11819  001E92  2415               	addwf	??_disk_ioctl+1,w,c
 11820  001E94  6E1D               	movwf	(??_disk_ioctl+9)& (0+255),c
 11821  001E96  501C               	movf	??_disk_ioctl+8,w,c
 11822  001E98  2016               	addwfc	??_disk_ioctl+2,w,c
 11823  001E9A  6E1E               	movwf	(??_disk_ioctl+10)& (0+255),c
 11824  001E9C  0E00               	movlw	0
 11825  001E9E  2017               	addwfc	??_disk_ioctl+3,w,c
 11826  001EA0  6E1F               	movwf	(??_disk_ioctl+11)& (0+255),c
 11827  001EA2  0E00               	movlw	0
 11828  001EA4  2018               	addwfc	??_disk_ioctl+4,w,c
 11829  001EA6  6E20               	movwf	(??_disk_ioctl+12)& (0+255),c
 11830  001EA8  0E01               	movlw	1
 11831  001EAA  241D               	addwf	??_disk_ioctl+9,w,c
 11832  001EAC  6E32               	movwf	disk_ioctl@csize,c
 11833  001EAE  0E00               	movlw	0
 11834  001EB0  201E               	addwfc	??_disk_ioctl+10,w,c
 11835  001EB2  6E33               	movwf	disk_ioctl@csize+1,c
 11836  001EB4  0E00               	movlw	0
 11837  001EB6  201F               	addwfc	??_disk_ioctl+11,w,c
 11838  001EB8  6E34               	movwf	disk_ioctl@csize+2,c
 11839  001EBA  0E00               	movlw	0
 11840  001EBC  2020               	addwfc	??_disk_ioctl+12,w,c
 11841  001EBE  6E35               	movwf	disk_ioctl@csize+3,c
 11842                           
 11843                           ;diskio.c: 472:     *(DWORD*)buff = csize << 10;
 11844  001EC0  C032  F014         	movff	disk_ioctl@csize,??_disk_ioctl
 11845  001EC4  C033  F015         	movff	disk_ioctl@csize+1,??_disk_ioctl+1
 11846  001EC8  C034  F016         	movff	disk_ioctl@csize+2,??_disk_ioctl+2
 11847  001ECC  C035  F017         	movff	disk_ioctl@csize+3,??_disk_ioctl+3
 11848  001ED0  0E0A               	movlw	10
 11849  001ED2                     u5585:
 11850  001ED2  90D8               	bcf	status,0,c
 11851  001ED4  3614               	rlcf	??_disk_ioctl,f,c
 11852  001ED6  3615               	rlcf	??_disk_ioctl+1,f,c
 11853  001ED8  3616               	rlcf	??_disk_ioctl+2,f,c
 11854  001EDA  3617               	rlcf	??_disk_ioctl+3,f,c
 11855  001EDC  2EE8               	decfsz	wreg,f,c
 11856  001EDE  D7F9               	goto	u5585
 11857  001EE0  C012  FFD9         	movff	disk_ioctl@buff,fsr2l
 11858  001EE4  C013  FFDA         	movff	disk_ioctl@buff+1,fsr2h
 11859  001EE8  C014  FFDE         	movff	??_disk_ioctl,postinc2
 11860  001EEC  C015  FFDE         	movff	??_disk_ioctl+1,postinc2
 11861  001EF0  C016  FFDE         	movff	??_disk_ioctl+2,postinc2
 11862  001EF4  C017  FFDE         	movff	??_disk_ioctl+3,postinc2
 11863                           
 11864                           ;diskio.c: 473:    } else {
 11865  001EF8  D78F               	goto	u5540
 11866  001EFA                     l4785:
 11867                           
 11868                           ;diskio.c: 474:     n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2
      +                          ;
 11869  001EFA  6A14               	clrf	??_disk_ioctl& (0+255),c
 11870  001EFC  AE2B               	btfss	disk_ioctl@csd+10,7,c
 11871  001EFE  D001               	bra	u5595
 11872  001F00  2A14               	incf	??_disk_ioctl& (0+255),f,c
 11873  001F02                     u5595:
 11874  001F02  0E01               	movlw	1
 11875  001F04  1614               	andwf	??_disk_ioctl,f,c
 11876  001F06  C026  F015         	movff	disk_ioctl@csd+5,??_disk_ioctl+1
 11877  001F0A  0E0F               	movlw	15
 11878  001F0C  1615               	andwf	??_disk_ioctl+1,f,c
 11879  001F0E  502A               	movf	disk_ioctl@csd+9,w,c
 11880  001F10  0B03               	andlw	3
 11881  001F12  0D02               	mullw	2
 11882  001F14  50F3               	movf	prodl,w,c
 11883  001F16  2415               	addwf	??_disk_ioctl+1,w,c
 11884  001F18  2414               	addwf	??_disk_ioctl,w,c
 11885  001F1A  0F02               	addlw	2
 11886  001F1C  6E37               	movwf	disk_ioctl@n,c
 11887                           
 11888                           ;diskio.c: 475:     csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) <<
      +                           10) + 1;
 11889  001F1E  5027               	movf	disk_ioctl@csd+6,w,c
 11890  001F20  0B03               	andlw	3
 11891  001F22  6E14               	movwf	??_disk_ioctl& (0+255),c
 11892  001F24  6A15               	clrf	(??_disk_ioctl+1)& (0+255),c
 11893  001F26  0E0A               	movlw	10
 11894  001F28                     u5605:
 11895  001F28  90D8               	bcf	status,0,c
 11896  001F2A  3614               	rlcf	??_disk_ioctl,f,c
 11897  001F2C  3615               	rlcf	??_disk_ioctl+1,f,c
 11898  001F2E  2EE8               	decfsz	wreg,f,c
 11899  001F30  D7FB               	goto	u5605
 11900  001F32  5028               	movf	disk_ioctl@csd+7,w,c
 11901  001F34  6E16               	movwf	(??_disk_ioctl+2)& (0+255),c
 11902  001F36  6A17               	clrf	(??_disk_ioctl+3)& (0+255),c
 11903  001F38  90D8               	bcf	status,0,c
 11904  001F3A  3616               	rlcf	??_disk_ioctl+2,f,c
 11905  001F3C  3617               	rlcf	??_disk_ioctl+3,f,c
 11906  001F3E  90D8               	bcf	status,0,c
 11907  001F40  3616               	rlcf	??_disk_ioctl+2,f,c
 11908  001F42  3617               	rlcf	??_disk_ioctl+3,f,c
 11909  001F44  4429               	rlncf	disk_ioctl@csd+8,w,c
 11910  001F46  46E8               	rlncf	wreg,f,c
 11911  001F48  0B03               	andlw	3
 11912  001F4A  6E18               	movwf	(??_disk_ioctl+4)& (0+255),c
 11913  001F4C  6A19               	clrf	(??_disk_ioctl+5)& (0+255),c
 11914  001F4E  5016               	movf	??_disk_ioctl+2,w,c
 11915  001F50  2618               	addwf	??_disk_ioctl+4,f,c
 11916  001F52  5017               	movf	??_disk_ioctl+3,w,c
 11917  001F54  2219               	addwfc	??_disk_ioctl+5,f,c
 11918  001F56  5014               	movf	??_disk_ioctl,w,c
 11919  001F58  2618               	addwf	??_disk_ioctl+4,f,c
 11920  001F5A  5015               	movf	??_disk_ioctl+1,w,c
 11921  001F5C  2219               	addwfc	??_disk_ioctl+5,f,c
 11922  001F5E  0E01               	movlw	1
 11923  001F60  2618               	addwf	??_disk_ioctl+4,f,c
 11924  001F62  0E00               	movlw	0
 11925  001F64  2219               	addwfc	??_disk_ioctl+5,f,c
 11926  001F66  C018  F032         	movff	??_disk_ioctl+4,disk_ioctl@csize
 11927  001F6A  C019  F033         	movff	??_disk_ioctl+5,disk_ioctl@csize+1
 11928  001F6E  6A34               	clrf	disk_ioctl@csize+2,c
 11929  001F70  6A35               	clrf	disk_ioctl@csize+3,c
 11930                           
 11931                           ;diskio.c: 476:     *(DWORD*)buff = csize << (n - 9);
 11932  001F72  C037  F014         	movff	disk_ioctl@n,??_disk_ioctl
 11933  001F76  0EF7               	movlw	-9
 11934  001F78  2614               	addwf	??_disk_ioctl,f,c
 11935  001F7A  C032  F015         	movff	disk_ioctl@csize,??_disk_ioctl+1
 11936  001F7E  C033  F016         	movff	disk_ioctl@csize+1,??_disk_ioctl+2
 11937  001F82  C034  F017         	movff	disk_ioctl@csize+2,??_disk_ioctl+3
 11938  001F86  C035  F018         	movff	disk_ioctl@csize+3,??_disk_ioctl+4
 11939  001F8A  2A14               	incf	??_disk_ioctl,f,c
 11940  001F8C  D005               	goto	u5610
 11941  001F8E                     u5615:
 11942  001F8E  90D8               	bcf	status,0,c
 11943  001F90  3615               	rlcf	??_disk_ioctl+1,f,c
 11944  001F92  3616               	rlcf	??_disk_ioctl+2,f,c
 11945  001F94  3617               	rlcf	??_disk_ioctl+3,f,c
 11946  001F96  3618               	rlcf	??_disk_ioctl+4,f,c
 11947  001F98                     u5610:
 11948  001F98  2E14               	decfsz	??_disk_ioctl,f,c
 11949  001F9A  D7F9               	goto	u5615
 11950  001F9C  D03D               	goto	L14
 11951  001F9E                     l155:
 11952                           
 11953                           ; BSR set to: 0
 11954                           ;diskio.c: 483:   if (CardType & 0x04) {
 11955  001F9E  A5E0               	btfss	_CardType& (0+255),2,b
 11956  001FA0  D048               	goto	l4811
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;diskio.c: 484:    if (send_cmd((0x80+13), 0) == 0) {
 11960  001FA2  0E00               	movlw	0
 11961  001FA4  6E0B               	movwf	send_cmd@arg,c
 11962  001FA6  0E00               	movlw	0
 11963  001FA8  6E0C               	movwf	send_cmd@arg+1,c
 11964  001FAA  0E00               	movlw	0
 11965  001FAC  6E0D               	movwf	send_cmd@arg+2,c
 11966  001FAE  0E00               	movlw	0
 11967  001FB0  6E0E               	movwf	send_cmd@arg+3,c
 11968  001FB2  0E8D               	movlw	141
 11969  001FB4  EC75  F029         	call	_send_cmd
 11970  001FB8  0900               	iorlw	0
 11971  001FBA  A4D8               	btfss	status,2,c
 11972  001FBC  D162               	goto	l4865
 11973                           
 11974                           ;diskio.c: 485:     SPI1_Exchange8bit(0xFF);
 11975  001FBE  0EFF               	movlw	255
 11976  001FC0  EC70  F02A         	call	_SPI1_Exchange8bit
 11977                           
 11978                           ;diskio.c: 486:     if (rcvr_datablock(csd, 16)) {
 11979  001FC4  0E21               	movlw	low disk_ioctl@csd
 11980  001FC6  6E02               	movwf	rcvr_datablock@buff,c
 11981  001FC8  0E00               	movlw	high disk_ioctl@csd
 11982  001FCA  6E03               	movwf	rcvr_datablock@buff+1,c
 11983  001FCC  0E00               	movlw	0
 11984  001FCE  6E05               	movwf	rcvr_datablock@btr+1,c
 11985  001FD0  0E10               	movlw	16
 11986  001FD2  6E04               	movwf	rcvr_datablock@btr,c
 11987  001FD4  EC3C  F028         	call	_rcvr_datablock	;wreg free
 11988  001FD8  0900               	iorlw	0
 11989  001FDA  B4D8               	btfsc	status,2,c
 11990  001FDC  D152               	goto	l4865
 11991                           
 11992                           ;diskio.c: 487:      for (n = 64 - 16; n; n--) SPI1_Exchange8bit(0xFF);
 11993  001FDE  0E30               	movlw	48
 11994  001FE0  6E37               	movwf	disk_ioctl@n,c
 11995  001FE2  D004               	goto	l4805
 11996  001FE4                     l4801:
 11997  001FE4  0EFF               	movlw	255
 11998  001FE6  EC70  F02A         	call	_SPI1_Exchange8bit
 11999  001FEA  0637               	decf	disk_ioctl@n,f,c
 12000  001FEC                     l4805:
 12001  001FEC  5037               	movf	disk_ioctl@n,w,c
 12002  001FEE  A4D8               	btfss	status,2,c
 12003  001FF0  D7F9               	goto	l4801
 12004                           
 12005                           ;diskio.c: 488:      *(DWORD*)buff = 16UL << (csd[10] >> 4);
 12006  001FF2  C02B  F014         	movff	disk_ioctl@csd+10,??_disk_ioctl
 12007  001FF6  3A14               	swapf	??_disk_ioctl,f,c
 12008  001FF8  0E0F               	movlw	15
 12009  001FFA  1614               	andwf	??_disk_ioctl,f,c
 12010  001FFC  0E10               	movlw	16
 12011  001FFE  6E15               	movwf	(??_disk_ioctl+1)& (0+255),c
 12012  002000  6A16               	clrf	(??_disk_ioctl+2)& (0+255),c
 12013  002002  6A17               	clrf	(??_disk_ioctl+3)& (0+255),c
 12014  002004  6A18               	clrf	(??_disk_ioctl+4)& (0+255),c
 12015  002006  2A14               	incf	??_disk_ioctl,f,c
 12016  002008  D005               	goto	u5660
 12017  00200A                     u5665:
 12018  00200A  90D8               	bcf	status,0,c
 12019  00200C  3615               	rlcf	??_disk_ioctl+1,f,c
 12020  00200E  3616               	rlcf	??_disk_ioctl+2,f,c
 12021  002010  3617               	rlcf	??_disk_ioctl+3,f,c
 12022  002012  3618               	rlcf	??_disk_ioctl+4,f,c
 12023  002014                     u5660:
 12024  002014  2E14               	decfsz	??_disk_ioctl,f,c
 12025  002016  D7F9               	goto	u5665
 12026  002018                     L14:
 12027  002018  C012  FFD9         	movff	disk_ioctl@buff,fsr2l
 12028  00201C  C013  FFDA         	movff	disk_ioctl@buff+1,fsr2h
 12029  002020  C015  FFDE         	movff	??_disk_ioctl+1,postinc2
 12030  002024  C016  FFDE         	movff	??_disk_ioctl+2,postinc2
 12031  002028  C017  FFDE         	movff	??_disk_ioctl+3,postinc2
 12032  00202C  C018  FFDE         	movff	??_disk_ioctl+4,postinc2
 12033  002030  D6F3               	goto	u5540
 12034  002032                     l4811:
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;diskio.c: 493:    if ((send_cmd((9), 0) == 0) && rcvr_datablock(csd, 16)) {
 12038  002032  0E00               	movlw	0
 12039  002034  6E0B               	movwf	send_cmd@arg,c
 12040  002036  0E00               	movlw	0
 12041  002038  6E0C               	movwf	send_cmd@arg+1,c
 12042  00203A  0E00               	movlw	0
 12043  00203C  6E0D               	movwf	send_cmd@arg+2,c
 12044  00203E  0E00               	movlw	0
 12045  002040  6E0E               	movwf	send_cmd@arg+3,c
 12046  002042  0E09               	movlw	9
 12047  002044  EC75  F029         	call	_send_cmd
 12048  002048  0900               	iorlw	0
 12049  00204A  A4D8               	btfss	status,2,c
 12050  00204C  D11A               	goto	l4865
 12051  00204E  0E21               	movlw	low disk_ioctl@csd
 12052  002050  6E02               	movwf	rcvr_datablock@buff,c
 12053  002052  0E00               	movlw	high disk_ioctl@csd
 12054  002054  6E03               	movwf	rcvr_datablock@buff+1,c
 12055  002056  0E00               	movlw	0
 12056  002058  6E05               	movwf	rcvr_datablock@btr+1,c
 12057  00205A  0E10               	movlw	16
 12058  00205C  6E04               	movwf	rcvr_datablock@btr,c
 12059  00205E  EC3C  F028         	call	_rcvr_datablock	;wreg free
 12060  002062  0900               	iorlw	0
 12061  002064  B4D8               	btfsc	status,2,c
 12062  002066  D10D               	goto	l4865
 12063                           
 12064                           ;diskio.c: 494:     if (CardType & 0x02) {
 12065  002068  0100               	movlb	0	; () banked
 12066  00206A  A3E0               	btfss	_CardType& (0+255),1,b
 12067  00206C  D02A               	goto	l4819
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;diskio.c: 495:      *(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 
      +                          7) + 1) << ((csd[13] >> 6) - 1);
 12071  00206E  C02E  F014         	movff	disk_ioctl@csd+13,??_disk_ioctl
 12072  002072  0E06               	movlw	6
 12073  002074  6E15               	movwf	(??_disk_ioctl+1)& (0+255),c
 12074  002076                     u5705:
 12075  002076  90D8               	bcf	status,0,c
 12076  002078  3214               	rrcf	??_disk_ioctl,f,c
 12077  00207A  2E15               	decfsz	(??_disk_ioctl+1)& (0+255),f,c
 12078  00207C  D7FC               	goto	u5705
 12079  00207E  0EFF               	movlw	-1
 12080  002080  2614               	addwf	??_disk_ioctl,f,c
 12081  002082  502B               	movf	disk_ioctl@csd+10,w,c
 12082  002084  0B3F               	andlw	63
 12083  002086  6E16               	movwf	(??_disk_ioctl+2)& (0+255),c
 12084  002088  6A17               	clrf	(??_disk_ioctl+3)& (0+255),c
 12085  00208A  90D8               	bcf	status,0,c
 12086  00208C  3616               	rlcf	??_disk_ioctl+2,f,c
 12087  00208E  3617               	rlcf	??_disk_ioctl+3,f,c
 12088  002090  6A18               	clrf	(??_disk_ioctl+4)& (0+255),c
 12089  002092  AE2C               	btfss	disk_ioctl@csd+11,7,c
 12090  002094  D001               	bra	u5715
 12091  002096  2A18               	incf	(??_disk_ioctl+4)& (0+255),f,c
 12092  002098                     u5715:
 12093  002098  0E01               	movlw	1
 12094  00209A  1618               	andwf	??_disk_ioctl+4,f,c
 12095  00209C  5018               	movf	??_disk_ioctl+4,w,c
 12096  00209E  2616               	addwf	??_disk_ioctl+2,f,c
 12097  0020A0  0E00               	movlw	0
 12098  0020A2  2217               	addwfc	??_disk_ioctl+3,f,c
 12099  0020A4  0E01               	movlw	1
 12100  0020A6  2616               	addwf	??_disk_ioctl+2,f,c
 12101  0020A8  0E00               	movlw	0
 12102  0020AA  2217               	addwfc	??_disk_ioctl+3,f,c
 12103  0020AC  2A14               	incf	??_disk_ioctl,f,c
 12104  0020AE  D003               	goto	u5724
 12105  0020B0                     u5725:
 12106  0020B0  90D8               	bcf	status,0,c
 12107  0020B2  3616               	rlcf	??_disk_ioctl+2,f,c
 12108  0020B4  3617               	rlcf	??_disk_ioctl+3,f,c
 12109  0020B6                     u5724:
 12110  0020B6  2E14               	decfsz	??_disk_ioctl,f,c
 12111  0020B8  D7FB               	goto	u5725
 12112  0020BA  5016               	movf	??_disk_ioctl+2,w,c
 12113  0020BC  6E19               	movwf	(??_disk_ioctl+5)& (0+255),c
 12114  0020BE  5017               	movf	??_disk_ioctl+3,w,c
 12115  0020C0  D034               	goto	L15
 12116  0020C2                     l4819:
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;diskio.c: 497:      *(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3
      +                          ) << 3) + ((csd[11] & 224) >> 5) + 1);
 12120  0020C2  C02B  F014         	movff	disk_ioctl@csd+10,??_disk_ioctl
 12121  0020C6  90D8               	bcf	status,0,c
 12122  0020C8  3214               	rrcf	??_disk_ioctl,f,c
 12123  0020CA  90D8               	bcf	status,0,c
 12124  0020CC  3214               	rrcf	??_disk_ioctl,f,c
 12125  0020CE  0E1F               	movlw	31
 12126  0020D0  1614               	andwf	??_disk_ioctl,f,c
 12127  0020D2  0E01               	movlw	1
 12128  0020D4  2414               	addwf	??_disk_ioctl,w,c
 12129  0020D6  6E01               	movwf	___wmul@multiplier,c
 12130  0020D8  6A02               	clrf	___wmul@multiplier+1,c
 12131  0020DA  0E00               	movlw	0
 12132  0020DC  2202               	addwfc	___wmul@multiplier+1,f,c
 12133  0020DE  502C               	movf	disk_ioctl@csd+11,w,c
 12134  0020E0  0B03               	andlw	3
 12135  0020E2  6E15               	movwf	(??_disk_ioctl+1)& (0+255),c
 12136  0020E4  6A16               	clrf	(??_disk_ioctl+2)& (0+255),c
 12137  0020E6  90D8               	bcf	status,0,c
 12138  0020E8  3615               	rlcf	??_disk_ioctl+1,f,c
 12139  0020EA  3616               	rlcf	??_disk_ioctl+2,f,c
 12140  0020EC  90D8               	bcf	status,0,c
 12141  0020EE  3615               	rlcf	??_disk_ioctl+1,f,c
 12142  0020F0  3616               	rlcf	??_disk_ioctl+2,f,c
 12143  0020F2  90D8               	bcf	status,0,c
 12144  0020F4  3615               	rlcf	??_disk_ioctl+1,f,c
 12145  0020F6  3616               	rlcf	??_disk_ioctl+2,f,c
 12146  0020F8  C02C  F017         	movff	disk_ioctl@csd+11,??_disk_ioctl+3
 12147  0020FC  0E05               	movlw	5
 12148  0020FE  6E18               	movwf	(??_disk_ioctl+4)& (0+255),c
 12149  002100                     u5735:
 12150  002100  90D8               	bcf	status,0,c
 12151  002102  3217               	rrcf	??_disk_ioctl+3,f,c
 12152  002104  2E18               	decfsz	(??_disk_ioctl+4)& (0+255),f,c
 12153  002106  D7FC               	goto	u5735
 12154  002108  0E07               	movlw	7
 12155  00210A  1617               	andwf	??_disk_ioctl+3,f,c
 12156  00210C  5017               	movf	??_disk_ioctl+3,w,c
 12157  00210E  2615               	addwf	??_disk_ioctl+1,f,c
 12158  002110  0E00               	movlw	0
 12159  002112  2216               	addwfc	??_disk_ioctl+2,f,c
 12160  002114  0E01               	movlw	1
 12161  002116  2415               	addwf	??_disk_ioctl+1,w,c
 12162  002118  6E03               	movwf	___wmul@multiplicand,c
 12163  00211A  0E00               	movlw	0
 12164  00211C  2016               	addwfc	??_disk_ioctl+2,w,c
 12165  00211E  6E04               	movwf	___wmul@multiplicand+1,c
 12166  002120  EC18  F02A         	call	___wmul	;wreg free
 12167  002124  5001               	movf	?___wmul,w,c
 12168  002126  6E19               	movwf	(??_disk_ioctl+5)& (0+255),c
 12169  002128  5002               	movf	?___wmul+1,w,c
 12170  00212A                     L15:
 12171  00212A  6E1A               	movwf	(??_disk_ioctl+6)& (0+255),c
 12172  00212C  6A1B               	clrf	(??_disk_ioctl+7)& (0+255),c
 12173  00212E  6A1C               	clrf	(??_disk_ioctl+8)& (0+255),c
 12174  002130  C012  FFD9         	movff	disk_ioctl@buff,fsr2l
 12175  002134  C013  FFDA         	movff	disk_ioctl@buff+1,fsr2h
 12176  002138  C019  FFDE         	movff	??_disk_ioctl+5,postinc2
 12177  00213C  C01A  FFDE         	movff	??_disk_ioctl+6,postinc2
 12178  002140  C01B  FFDE         	movff	??_disk_ioctl+7,postinc2
 12179  002144  C01C  FFDE         	movff	??_disk_ioctl+8,postinc2
 12180  002148  D667               	goto	u5540
 12181  00214A                     l4823:
 12182                           
 12183                           ; BSR set to: 0
 12184                           ;diskio.c: 507:   *ptr = CardType;
 12185  00214A  C038  FFD9         	movff	disk_ioctl@ptr,fsr2l
 12186  00214E  C039  FFDA         	movff	disk_ioctl@ptr+1,fsr2h
 12187  002152  C0E0  FFDF         	movff	_CardType,indf2
 12188  002156  D660               	goto	u5540
 12189  002158                     l4827:
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;diskio.c: 512:   if (send_cmd((9), 0) == 0
 12193  002158  0E00               	movlw	0
 12194  00215A  6E0B               	movwf	send_cmd@arg,c
 12195  00215C  0E00               	movlw	0
 12196  00215E  6E0C               	movwf	send_cmd@arg+1,c
 12197  002160  0E00               	movlw	0
 12198  002162  6E0D               	movwf	send_cmd@arg+2,c
 12199  002164  0E00               	movlw	0
 12200  002166  6E0E               	movwf	send_cmd@arg+3,c
 12201  002168  0E09               	movlw	9
 12202  00216A  EC75  F029         	call	_send_cmd
 12203  00216E  0900               	iorlw	0
 12204  002170  A4D8               	btfss	status,2,c
 12205  002172  D087               	goto	l4865
 12206  002174  C038  F002         	movff	disk_ioctl@ptr,rcvr_datablock@buff
 12207  002178  C039  F003         	movff	disk_ioctl@ptr+1,rcvr_datablock@buff+1
 12208  00217C  0E00               	movlw	0
 12209  00217E  6E05               	movwf	rcvr_datablock@btr+1,c
 12210  002180  0E10               	movlw	16
 12211  002182  6E04               	movwf	rcvr_datablock@btr,c
 12212  002184  EC3C  F028         	call	_rcvr_datablock	;wreg free
 12213  002188                     L13:
 12214  002188  0900               	iorlw	0
 12215  00218A  A4D8               	btfss	status,2,c
 12216  00218C  D645               	goto	u5540
 12217  00218E  D079               	goto	l4865
 12218  002190                     l4833:
 12219                           
 12220                           ; BSR set to: 0
 12221                           ;diskio.c: 518:   if (send_cmd((10), 0) == 0
 12222  002190  0E00               	movlw	0
 12223  002192  6E0B               	movwf	send_cmd@arg,c
 12224  002194  0E00               	movlw	0
 12225  002196  6E0C               	movwf	send_cmd@arg+1,c
 12226  002198  0E00               	movlw	0
 12227  00219A  6E0D               	movwf	send_cmd@arg+2,c
 12228  00219C  0E00               	movlw	0
 12229  00219E  6E0E               	movwf	send_cmd@arg+3,c
 12230  0021A0  0E0A               	movlw	10
 12231  0021A2  EC75  F029         	call	_send_cmd
 12232  0021A6  0900               	iorlw	0
 12233  0021A8  A4D8               	btfss	status,2,c
 12234  0021AA  D06B               	goto	l4865
 12235  0021AC  C038  F002         	movff	disk_ioctl@ptr,rcvr_datablock@buff
 12236  0021B0  C039  F003         	movff	disk_ioctl@ptr+1,rcvr_datablock@buff+1
 12237  0021B4  0E00               	movlw	0
 12238  0021B6  6E05               	movwf	rcvr_datablock@btr+1,c
 12239  0021B8  0E10               	movlw	16
 12240  0021BA  6E04               	movwf	rcvr_datablock@btr,c
 12241  0021BC  EC3C  F028         	call	_rcvr_datablock	;wreg free
 12242  0021C0  D7E3               	goto	L13
 12243  0021C2                     l4839:
 12244                           
 12245                           ; BSR set to: 0
 12246                           ;diskio.c: 524:   if (send_cmd((58), 0) == 0) {
 12247  0021C2  0E00               	movlw	0
 12248  0021C4  6E0B               	movwf	send_cmd@arg,c
 12249  0021C6  0E00               	movlw	0
 12250  0021C8  6E0C               	movwf	send_cmd@arg+1,c
 12251  0021CA  0E00               	movlw	0
 12252  0021CC  6E0D               	movwf	send_cmd@arg+2,c
 12253  0021CE  0E00               	movlw	0
 12254  0021D0  6E0E               	movwf	send_cmd@arg+3,c
 12255  0021D2  0E3A               	movlw	58
 12256  0021D4  EC75  F029         	call	_send_cmd
 12257  0021D8  0900               	iorlw	0
 12258  0021DA  A4D8               	btfss	status,2,c
 12259  0021DC  D052               	goto	l4865
 12260                           
 12261                           ;diskio.c: 525:    for (n = 4; n; n--) *ptr++ = SPI1_Exchange8bit(0xFF);
 12262  0021DE  0E04               	movlw	4
 12263  0021E0  6E37               	movwf	disk_ioctl@n,c
 12264  0021E2  D00B               	goto	l4849
 12265  0021E4                     l4843:
 12266  0021E4  0EFF               	movlw	255
 12267  0021E6  EC70  F02A         	call	_SPI1_Exchange8bit
 12268  0021EA  C038  FFD9         	movff	disk_ioctl@ptr,fsr2l
 12269  0021EE  C039  FFDA         	movff	disk_ioctl@ptr+1,fsr2h
 12270  0021F2  6EDF               	movwf	indf2,c
 12271  0021F4  4A38               	infsnz	disk_ioctl@ptr,f,c
 12272  0021F6  2A39               	incf	disk_ioctl@ptr+1,f,c
 12273  0021F8  0637               	decf	disk_ioctl@n,f,c
 12274  0021FA                     l4849:
 12275  0021FA  5037               	movf	disk_ioctl@n,w,c
 12276  0021FC  B4D8               	btfsc	status,2,c
 12277  0021FE  D60C               	goto	u5540
 12278  002200  D7F1               	goto	l4843
 12279  002202                     l4853:
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;diskio.c: 531:   if (send_cmd((0x80+13), 0) == 0) {
 12283  002202  0E00               	movlw	0
 12284  002204  6E0B               	movwf	send_cmd@arg,c
 12285  002206  0E00               	movlw	0
 12286  002208  6E0C               	movwf	send_cmd@arg+1,c
 12287  00220A  0E00               	movlw	0
 12288  00220C  6E0D               	movwf	send_cmd@arg+2,c
 12289  00220E  0E00               	movlw	0
 12290  002210  6E0E               	movwf	send_cmd@arg+3,c
 12291  002212  0E8D               	movlw	141
 12292  002214  EC75  F029         	call	_send_cmd
 12293  002218  0900               	iorlw	0
 12294  00221A  A4D8               	btfss	status,2,c
 12295  00221C  D032               	goto	l4865
 12296                           
 12297                           ;diskio.c: 532:    SPI1_Exchange8bit(0xFF);
 12298  00221E  0EFF               	movlw	255
 12299  002220  EC70  F02A         	call	_SPI1_Exchange8bit
 12300                           
 12301                           ;diskio.c: 533:    if (rcvr_datablock(ptr, 64))
 12302  002224  C038  F002         	movff	disk_ioctl@ptr,rcvr_datablock@buff
 12303  002228  C039  F003         	movff	disk_ioctl@ptr+1,rcvr_datablock@buff+1
 12304  00222C  0E00               	movlw	0
 12305  00222E  6E05               	movwf	rcvr_datablock@btr+1,c
 12306  002230  0E40               	movlw	64
 12307  002232  6E04               	movwf	rcvr_datablock@btr,c
 12308  002234  EC3C  F028         	call	_rcvr_datablock	;wreg free
 12309  002238  D7A7               	goto	L13
 12310  00223A                     l4861:
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;diskio.c: 539:   res = RES_PARERR;
 12314  00223A  0E04               	movlw	4
 12315  00223C                     L12:
 12316  00223C  6E36               	movwf	disk_ioctl@res,c
 12317                           
 12318                           ;diskio.c: 540:  }
 12319  00223E  D021               	goto	l4865
 12320  002240                     l4863:
 12321                           
 12322                           ; BSR set to: 0
 12323  002240  5011               	movf	disk_ioctl@cmd,w,c
 12324  002242  6E14               	movwf	??_disk_ioctl& (0+255),c
 12325  002244  6A15               	clrf	(??_disk_ioctl+1)& (0+255),c
 12326                           
 12327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12328                           ; Switch size 1, requested type "simple"
 12329                           ; Number of cases is 1, Range of values is 0 to 0
 12330                           ; switch strategies available:
 12331                           ; Name         Instructions Cycles
 12332                           ; simple_byte            4     3 (average)
 12333                           ;	Chosen strategy is simple_byte
 12334  002246  5015               	movf	??_disk_ioctl+1,w,c
 12335  002248  0A00               	xorlw	0	; case 0
 12336  00224A  A4D8               	btfss	status,2,c
 12337  00224C  D7F6               	goto	l4861
 12338                           
 12339                           ; BSR set to: 0
 12340                           ; Switch size 1, requested type "simple"
 12341                           ; Number of cases is 8, Range of values is 0 to 14
 12342                           ; switch strategies available:
 12343                           ; Name         Instructions Cycles
 12344                           ; simple_byte           25    13 (average)
 12345                           ;	Chosen strategy is simple_byte
 12346  00224E  5014               	movf	??_disk_ioctl,w,c
 12347  002250  0A00               	xorlw	0	; case 0
 12348  002252  B4D8               	btfsc	status,2,c
 12349  002254  D5DC               	goto	l4771
 12350  002256  0A01               	xorlw	1	; case 1
 12351  002258  B4D8               	btfsc	status,2,c
 12352  00225A  D5E0               	goto	l4775
 12353  00225C  0A02               	xorlw	2	; case 3
 12354  00225E  B4D8               	btfsc	status,2,c
 12355  002260  D69E               	goto	l155
 12356  002262  0A09               	xorlw	9	; case 10
 12357  002264  B4D8               	btfsc	status,2,c
 12358  002266  D771               	goto	l4823
 12359  002268  0A01               	xorlw	1	; case 11
 12360  00226A  B4D8               	btfsc	status,2,c
 12361  00226C  D775               	goto	l4827
 12362  00226E  0A07               	xorlw	7	; case 12
 12363  002270  B4D8               	btfsc	status,2,c
 12364  002272  D78E               	goto	l4833
 12365  002274  0A01               	xorlw	1	; case 13
 12366  002276  B4D8               	btfsc	status,2,c
 12367  002278  D7A4               	goto	l4839
 12368  00227A  0A03               	xorlw	3	; case 14
 12369  00227C  B4D8               	btfsc	status,2,c
 12370  00227E  D7C1               	goto	l4853
 12371  002280  D7DC               	goto	l4861
 12372  002282                     l4865:
 12373                           
 12374                           ;diskio.c: 542:  deselect();
 12375  002282  EC8E  F02A         	call	_deselect	;wreg free
 12376                           
 12377                           ;diskio.c: 544:  return res;
 12378  002286  5036               	movf	disk_ioctl@res,w,c
 12379  002288  0012               	return		;funcret
 12380  00228A                     __end_of_disk_ioctl:
 12381                           	opt callstack 0
 12382                           
 12383 ;; *************** function ___wmul *****************
 12384 ;; Defined at:
 12385 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  multiplier      2    0[COMRAM] unsigned int 
 12388 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;  product         2    4[COMRAM] unsigned int 
 12391 ;; Return value:  Size  Location     Type
 12392 ;;                  2    0[COMRAM] unsigned int 
 12393 ;; Registers used:
 12394 ;;		wreg, status,2, status,0, prodl, prodh
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/0
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12400 ;;      Params:         4       0       0       0       0       0       0       0       0
 12401 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12402 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12403 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12404 ;;Total ram usage:        6 bytes
 12405 ;; Hardware stack levels used:    1
 12406 ;; This function calls:
 12407 ;;		Nothing
 12408 ;; This function is called by:
 12409 ;;		_disk_ioctl
 12410 ;; This function uses a non-reentrant model
 12411 ;;
 12412                           
 12413                           	psect	text37
 12414  005430                     __ptext37:
 12415                           	opt callstack 0
 12416  005430                     ___wmul:
 12417                           	opt callstack 25
 12418                           
 12419                           ;incstack = 0
 12420  005430  5001               	movf	___wmul@multiplier,w,c
 12421  005432  0203               	mulwf	___wmul@multiplicand,c
 12422  005434  CFF3 F005          	movff	prodl,___wmul@product
 12423  005438  CFF4 F006          	movff	prodh,___wmul@product+1
 12424  00543C  5001               	movf	___wmul@multiplier,w,c
 12425  00543E  0204               	mulwf	___wmul@multiplicand+1,c
 12426  005440  50F3               	movf	prodl,w,c
 12427  005442  2606               	addwf	___wmul@product+1,f,c
 12428  005444  5002               	movf	___wmul@multiplier+1,w,c
 12429  005446  0203               	mulwf	___wmul@multiplicand,c
 12430  005448  50F3               	movf	prodl,w,c
 12431  00544A  2606               	addwf	___wmul@product+1,f,c
 12432  00544C  C005  F001         	movff	___wmul@product,?___wmul
 12433  005450  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12434  005454  0012               	return		;funcret
 12435  005456                     __end_of___wmul:
 12436                           	opt callstack 0
 12437                           
 12438 ;; *************** function _st_clust *****************
 12439 ;; Defined at:
 12440 ;;		line 1252 in file "ff.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;  dir             2    0[COMRAM] PTR unsigned char 
 12443 ;;		 -> FatFs(558), NULL(0), 
 12444 ;;  cl              4    2[COMRAM] unsigned long 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;		None
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  1    wreg      void 
 12449 ;; Registers used:
 12450 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12456 ;;      Params:         6       0       0       0       0       0       0       0       0
 12457 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12458 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12459 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12460 ;;Total ram usage:        6 bytes
 12461 ;; Hardware stack levels used:    1
 12462 ;; This function calls:
 12463 ;;		Nothing
 12464 ;; This function is called by:
 12465 ;;		_f_open
 12466 ;;		_f_sync
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text38
 12471  005406                     __ptext38:
 12472                           	opt callstack 0
 12473  005406                     _st_clust:
 12474                           	opt callstack 28
 12475                           
 12476                           ;ff.c: 1253:  BYTE* dir,;ff.c: 1254:  DWORD cl;ff.c: 1256: {;ff.c: 1257:  *(WORD*)(BYTE*
      +                          )(dir + 26)=(WORD)(cl);
 12477                           
 12478                           ;incstack = 0
 12479  005406  EE20 F01A          	lfsr	2,26
 12480  00540A  5001               	movf	st_clust@dir,w,c
 12481  00540C  26D9               	addwf	fsr2l,f,c
 12482  00540E  5002               	movf	st_clust@dir+1,w,c
 12483  005410  22DA               	addwfc	fsr2h,f,c
 12484  005412  C003  FFDE         	movff	st_clust@cl,postinc2
 12485  005416  C004  FFDD         	movff	st_clust@cl+1,postdec2
 12486                           
 12487                           ;ff.c: 1258:  *(WORD*)(BYTE*)(dir + 20)=(WORD)(cl >> 16);
 12488  00541A  EE20 F014          	lfsr	2,20
 12489  00541E  5001               	movf	st_clust@dir,w,c
 12490  005420  26D9               	addwf	fsr2l,f,c
 12491  005422  5002               	movf	st_clust@dir+1,w,c
 12492  005424  22DA               	addwfc	fsr2h,f,c
 12493  005426  C005  FFDE         	movff	st_clust@cl+2,postinc2
 12494  00542A  C006  FFDD         	movff	st_clust@cl+3,postdec2
 12495  00542E  0012               	return		;funcret
 12496  005430                     __end_of_st_clust:
 12497                           	opt callstack 0
 12498                           
 12499 ;; *************** function _move_window *****************
 12500 ;; Defined at:
 12501 ;;		line 729 in file "ff.c"
 12502 ;; Parameters:    Size  Location     Type
 12503 ;;  fs              2   47[COMRAM] PTR struct .
 12504 ;;		 -> FatFs(558), NULL(0), 
 12505 ;;  sector          4   49[COMRAM] unsigned long 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  res             1   57[COMRAM] enum E93
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  1    wreg      enum E93
 12510 ;; Registers used:
 12511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12517 ;;      Params:         6       0       0       0       0       0       0       0       0
 12518 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12519 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12520 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12521 ;;Total ram usage:       11 bytes
 12522 ;; Hardware stack levels used:    1
 12523 ;; Hardware stack levels required when called:    7
 12524 ;; This function calls:
 12525 ;;		_disk_read
 12526 ;;		_sync_window
 12527 ;; This function is called by:
 12528 ;;		_get_fat
 12529 ;;		_put_fat
 12530 ;;		_dir_alloc
 12531 ;;		_dir_find
 12532 ;;		_dir_register
 12533 ;;		_check_fs
 12534 ;;		_find_volume
 12535 ;;		_f_open
 12536 ;;		_f_read
 12537 ;;		_f_sync
 12538 ;;		_f_write
 12539 ;; This function uses a non-reentrant model
 12540 ;;
 12541                           
 12542                           	psect	text39
 12543  004CCE                     __ptext39:
 12544                           	opt callstack 0
 12545  004CCE                     _move_window:
 12546                           	opt callstack 20
 12547                           
 12548                           ;ff.c: 730:  FATFS* fs,;ff.c: 731:  DWORD sector;ff.c: 733: {;ff.c: 734:  FRESULT res = 
      +                          FR_OK;
 12549                           
 12550                           ;incstack = 0
 12551  004CCE  0E00               	movlw	0
 12552  004CD0  6E3A               	movwf	move_window@res,c
 12553                           
 12554                           ;ff.c: 737:  if (sector != fs->winsect) {
 12555  004CD2  EE20 F02A          	lfsr	2,42
 12556  004CD6  5030               	movf	move_window@fs,w,c
 12557  004CD8  26D9               	addwf	fsr2l,f,c
 12558  004CDA  5031               	movf	move_window@fs+1,w,c
 12559  004CDC  22DA               	addwfc	fsr2h,f,c
 12560  004CDE  5032               	movf	move_window@sector,w,c
 12561  004CE0  18DE               	xorwf	postinc2,w,c
 12562  004CE2  E10A               	bnz	u5040
 12563  004CE4  5033               	movf	move_window@sector+1,w,c
 12564  004CE6  18DE               	xorwf	postinc2,w,c
 12565  004CE8  E107               	bnz	u5040
 12566  004CEA  5034               	movf	move_window@sector+2,w,c
 12567  004CEC  18DE               	xorwf	postinc2,w,c
 12568  004CEE  E104               	bnz	u5040
 12569  004CF0  5035               	movf	move_window@sector+3,w,c
 12570  004CF2  18DE               	xorwf	postinc2,w,c
 12571  004CF4  B4D8               	btfsc	status,2,c
 12572  004CF6  D03C               	goto	l4497
 12573  004CF8                     u5040:
 12574                           
 12575                           ;ff.c: 739:   res = sync_window(fs);
 12576  004CF8  C030  F01B         	movff	move_window@fs,sync_window@fs
 12577  004CFC  C031  F01C         	movff	move_window@fs+1,sync_window@fs+1
 12578  004D00  ECEE  F01E         	call	_sync_window	;wreg free
 12579  004D04  6E3A               	movwf	move_window@res,c
 12580                           
 12581                           ;ff.c: 741:   if (res == FR_OK) {
 12582  004D06  503A               	movf	move_window@res,w,c
 12583  004D08  A4D8               	btfss	status,2,c
 12584  004D0A  D032               	goto	l4497
 12585                           
 12586                           ;ff.c: 742:    if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 12587  004D0C  0E2E               	movlw	46
 12588  004D0E  2430               	addwf	move_window@fs,w,c
 12589  004D10  6E11               	movwf	disk_read@buff,c
 12590  004D12  0E00               	movlw	0
 12591  004D14  2031               	addwfc	move_window@fs+1,w,c
 12592  004D16  6E12               	movwf	disk_read@buff+1,c
 12593  004D18  C032  F013         	movff	move_window@sector,disk_read@sector
 12594  004D1C  C033  F014         	movff	move_window@sector+1,disk_read@sector+1
 12595  004D20  C034  F015         	movff	move_window@sector+2,disk_read@sector+2
 12596  004D24  C035  F016         	movff	move_window@sector+3,disk_read@sector+3
 12597  004D28  0E00               	movlw	0
 12598  004D2A  6E18               	movwf	disk_read@count+1,c
 12599  004D2C  0E01               	movlw	1
 12600  004D2E  6E17               	movwf	disk_read@count,c
 12601  004D30  EE20 F001          	lfsr	2,1
 12602  004D34  5030               	movf	move_window@fs,w,c
 12603  004D36  26D9               	addwf	fsr2l,f,c
 12604  004D38  5031               	movf	move_window@fs+1,w,c
 12605  004D3A  22DA               	addwfc	fsr2h,f,c
 12606  004D3C  50DF               	movf	indf2,w,c
 12607  004D3E  ECE7  F024         	call	_disk_read
 12608  004D42  0900               	iorlw	0
 12609  004D44  B4D8               	btfsc	status,2,c
 12610  004D46  D006               	goto	l4495
 12611                           
 12612                           ;ff.c: 743:     sector = 0xFFFFFFFF;
 12613  004D48  6832               	setf	move_window@sector,c
 12614  004D4A  6833               	setf	move_window@sector+1,c
 12615  004D4C  6834               	setf	move_window@sector+2,c
 12616  004D4E  6835               	setf	move_window@sector+3,c
 12617                           
 12618                           ;ff.c: 744:     res = FR_DISK_ERR;
 12619  004D50  0E01               	movlw	1
 12620  004D52  6E3A               	movwf	move_window@res,c
 12621  004D54                     l4495:
 12622                           
 12623                           ;ff.c: 746:    fs->winsect = sector;
 12624  004D54  EE20 F02A          	lfsr	2,42
 12625  004D58  5030               	movf	move_window@fs,w,c
 12626  004D5A  26D9               	addwf	fsr2l,f,c
 12627  004D5C  5031               	movf	move_window@fs+1,w,c
 12628  004D5E  22DA               	addwfc	fsr2h,f,c
 12629  004D60  C032  FFDE         	movff	move_window@sector,postinc2
 12630  004D64  C033  FFDE         	movff	move_window@sector+1,postinc2
 12631  004D68  C034  FFDE         	movff	move_window@sector+2,postinc2
 12632  004D6C  C035  FFDE         	movff	move_window@sector+3,postinc2
 12633  004D70                     l4497:
 12634                           
 12635                           ;ff.c: 749:  return res;
 12636  004D70  503A               	movf	move_window@res,w,c
 12637  004D72  0012               	return		;funcret
 12638  004D74                     __end_of_move_window:
 12639                           	opt callstack 0
 12640                           
 12641 ;; *************** function _sync_window *****************
 12642 ;; Defined at:
 12643 ;;		line 700 in file "ff.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  fs              2   26[COMRAM] PTR struct .
 12646 ;;		 -> FatFs(558), NULL(0), 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  wsect           4   43[COMRAM] unsigned long 
 12649 ;;  nf              2   41[COMRAM] unsigned short 
 12650 ;;  res             1   40[COMRAM] enum E93
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  1    wreg      enum E93
 12653 ;; Registers used:
 12654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12655 ;; Tracked objects:
 12656 ;;		On entry : 0/0
 12657 ;;		On exit  : 0/0
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12660 ;;      Params:         2       0       0       0       0       0       0       0       0
 12661 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12662 ;;      Temps:         12       0       0       0       0       0       0       0       0
 12663 ;;      Totals:        21       0       0       0       0       0       0       0       0
 12664 ;;Total ram usage:       21 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:    6
 12667 ;; This function calls:
 12668 ;;		_disk_write
 12669 ;; This function is called by:
 12670 ;;		_move_window
 12671 ;;		_sync_fs
 12672 ;;		_dir_next
 12673 ;;		_f_write
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           	psect	text40
 12678  003DDC                     __ptext40:
 12679                           	opt callstack 0
 12680  003DDC                     _sync_window:
 12681                           	opt callstack 20
 12682                           
 12683                           ;ff.c: 701:  FATFS* fs;ff.c: 703: {;ff.c: 704:  DWORD wsect;;ff.c: 705:  UINT nf;;ff.c: 
      +                          706:  FRESULT res = FR_OK;
 12684                           
 12685                           ;incstack = 0
 12686  003DDC  0E00               	movlw	0
 12687  003DDE  6E29               	movwf	sync_window@res,c
 12688                           
 12689                           ;ff.c: 709:  if (fs->wflag) {
 12690  003DE0  EE20 F004          	lfsr	2,4
 12691  003DE4  501B               	movf	sync_window@fs,w,c
 12692  003DE6  26D9               	addwf	fsr2l,f,c
 12693  003DE8  501C               	movf	sync_window@fs+1,w,c
 12694  003DEA  22DA               	addwfc	fsr2h,f,c
 12695  003DEC  50DF               	movf	indf2,w,c
 12696  003DEE  B4D8               	btfsc	status,2,c
 12697  003DF0  D09F               	goto	l4477
 12698                           
 12699                           ;ff.c: 710:   wsect = fs->winsect;
 12700  003DF2  EE20 F02A          	lfsr	2,42
 12701  003DF6  501B               	movf	sync_window@fs,w,c
 12702  003DF8  26D9               	addwf	fsr2l,f,c
 12703  003DFA  501C               	movf	sync_window@fs+1,w,c
 12704  003DFC  22DA               	addwfc	fsr2h,f,c
 12705  003DFE  CFDE F02C          	movff	postinc2,sync_window@wsect
 12706  003E02  CFDE F02D          	movff	postinc2,sync_window@wsect+1
 12707  003E06  CFDE F02E          	movff	postinc2,sync_window@wsect+2
 12708  003E0A  CFDE F02F          	movff	postinc2,sync_window@wsect+3
 12709                           
 12710                           ;ff.c: 711:   if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 12711  003E0E  0E2E               	movlw	46
 12712  003E10  241B               	addwf	sync_window@fs,w,c
 12713  003E12  6E11               	movwf	disk_write@buff,c
 12714  003E14  0E00               	movlw	0
 12715  003E16  201C               	addwfc	sync_window@fs+1,w,c
 12716  003E18  6E12               	movwf	disk_write@buff+1,c
 12717  003E1A  C02C  F013         	movff	sync_window@wsect,disk_write@sector
 12718  003E1E  C02D  F014         	movff	sync_window@wsect+1,disk_write@sector+1
 12719  003E22  C02E  F015         	movff	sync_window@wsect+2,disk_write@sector+2
 12720  003E26  C02F  F016         	movff	sync_window@wsect+3,disk_write@sector+3
 12721  003E2A  0E00               	movlw	0
 12722  003E2C  6E18               	movwf	disk_write@count+1,c
 12723  003E2E  0E01               	movlw	1
 12724  003E30  6E17               	movwf	disk_write@count,c
 12725  003E32  EE20 F001          	lfsr	2,1
 12726  003E36  501B               	movf	sync_window@fs,w,c
 12727  003E38  26D9               	addwf	fsr2l,f,c
 12728  003E3A  501C               	movf	sync_window@fs+1,w,c
 12729  003E3C  22DA               	addwfc	fsr2h,f,c
 12730  003E3E  50DF               	movf	indf2,w,c
 12731  003E40  EC21  F022         	call	_disk_write
 12732  003E44  0900               	iorlw	0
 12733  003E46  B4D8               	btfsc	status,2,c
 12734  003E48  D003               	goto	l4459
 12735                           
 12736                           ;ff.c: 712:    res = FR_DISK_ERR;
 12737  003E4A  0E01               	movlw	1
 12738  003E4C  6E29               	movwf	sync_window@res,c
 12739                           
 12740                           ;ff.c: 713:   } else {
 12741  003E4E  D070               	goto	l4477
 12742  003E50                     l4459:
 12743                           
 12744                           ;ff.c: 714:    fs->wflag = 0;
 12745  003E50  EE20 F004          	lfsr	2,4
 12746  003E54  501B               	movf	sync_window@fs,w,c
 12747  003E56  26D9               	addwf	fsr2l,f,c
 12748  003E58  501C               	movf	sync_window@fs+1,w,c
 12749  003E5A  22DA               	addwfc	fsr2h,f,c
 12750  003E5C  0E00               	movlw	0
 12751  003E5E  6EDF               	movwf	indf2,c
 12752                           
 12753                           ;ff.c: 715:    if (wsect - fs->fatbase < fs->fsize) {
 12754  003E60  EE20 F016          	lfsr	2,22
 12755  003E64  501B               	movf	sync_window@fs,w,c
 12756  003E66  26D9               	addwf	fsr2l,f,c
 12757  003E68  501C               	movf	sync_window@fs+1,w,c
 12758  003E6A  22DA               	addwfc	fsr2h,f,c
 12759  003E6C  EE10 F01E          	lfsr	1,30
 12760  003E70  501B               	movf	sync_window@fs,w,c
 12761  003E72  26E1               	addwf	fsr1l,f,c
 12762  003E74  501C               	movf	sync_window@fs+1,w,c
 12763  003E76  22E2               	addwfc	fsr1h,f,c
 12764  003E78  CFE6 F021          	movff	postinc1,??_sync_window+4
 12765  003E7C  CFE6 F022          	movff	postinc1,??_sync_window+5
 12766  003E80  CFE6 F023          	movff	postinc1,??_sync_window+6
 12767  003E84  CFE6 F024          	movff	postinc1,??_sync_window+7
 12768  003E88  5021               	movf	??_sync_window+4,w,c
 12769  003E8A  5C2C               	subwf	sync_window@wsect,w,c
 12770  003E8C  6E25               	movwf	(??_sync_window+8)& (0+255),c
 12771  003E8E  5022               	movf	??_sync_window+5,w,c
 12772  003E90  582D               	subwfb	sync_window@wsect+1,w,c
 12773  003E92  6E26               	movwf	(??_sync_window+9)& (0+255),c
 12774  003E94  5023               	movf	??_sync_window+6,w,c
 12775  003E96  582E               	subwfb	sync_window@wsect+2,w,c
 12776  003E98  6E27               	movwf	(??_sync_window+10)& (0+255),c
 12777  003E9A  5024               	movf	??_sync_window+7,w,c
 12778  003E9C  582F               	subwfb	sync_window@wsect+3,w,c
 12779  003E9E  6E28               	movwf	(??_sync_window+11)& (0+255),c
 12780  003EA0  50DE               	movf	postinc2,w,c
 12781  003EA2  5C25               	subwf	??_sync_window+8,w,c
 12782  003EA4  50DE               	movf	postinc2,w,c
 12783  003EA6  5826               	subwfb	??_sync_window+9,w,c
 12784  003EA8  50DE               	movf	postinc2,w,c
 12785  003EAA  5827               	subwfb	??_sync_window+10,w,c
 12786  003EAC  50DE               	movf	postinc2,w,c
 12787  003EAE  5828               	subwfb	??_sync_window+11,w,c
 12788  003EB0  B0D8               	btfsc	status,0,c
 12789  003EB2  D03E               	goto	l4477
 12790                           
 12791                           ;ff.c: 716:     for (nf = fs->n_fats; nf >= 2; nf--) {
 12792  003EB4  EE20 F003          	lfsr	2,3
 12793  003EB8  501B               	movf	sync_window@fs,w,c
 12794  003EBA  26D9               	addwf	fsr2l,f,c
 12795  003EBC  501C               	movf	sync_window@fs+1,w,c
 12796  003EBE  22DA               	addwfc	fsr2h,f,c
 12797  003EC0  50DF               	movf	indf2,w,c
 12798  003EC2  6E1D               	movwf	??_sync_window& (0+255),c
 12799  003EC4  501D               	movf	??_sync_window,w,c
 12800  003EC6  6E2A               	movwf	sync_window@nf,c
 12801  003EC8  6A2B               	clrf	sync_window@nf+1,c
 12802  003ECA                     l4465:
 12803  003ECA  502B               	movf	sync_window@nf+1,w,c
 12804  003ECC  E104               	bnz	l4469
 12805  003ECE  0E02               	movlw	2
 12806  003ED0  5C2A               	subwf	sync_window@nf,w,c
 12807  003ED2  A0D8               	btfss	status,0,c
 12808  003ED4  D02D               	goto	l4477
 12809  003ED6                     l4469:
 12810                           
 12811                           ;ff.c: 717:      wsect += fs->fsize;
 12812  003ED6  EE20 F016          	lfsr	2,22
 12813  003EDA  501B               	movf	sync_window@fs,w,c
 12814  003EDC  26D9               	addwf	fsr2l,f,c
 12815  003EDE  501C               	movf	sync_window@fs+1,w,c
 12816  003EE0  22DA               	addwfc	fsr2h,f,c
 12817  003EE2  50DE               	movf	postinc2,w,c
 12818  003EE4  262C               	addwf	sync_window@wsect,f,c
 12819  003EE6  50DE               	movf	postinc2,w,c
 12820  003EE8  222D               	addwfc	sync_window@wsect+1,f,c
 12821  003EEA  50DE               	movf	postinc2,w,c
 12822  003EEC  222E               	addwfc	sync_window@wsect+2,f,c
 12823  003EEE  50DD               	movf	postdec2,w,c
 12824  003EF0  222F               	addwfc	sync_window@wsect+3,f,c
 12825                           
 12826                           ;ff.c: 718:      disk_write(fs->drv, fs->win, wsect, 1);
 12827  003EF2  0E2E               	movlw	46
 12828  003EF4  241B               	addwf	sync_window@fs,w,c
 12829  003EF6  6E11               	movwf	disk_write@buff,c
 12830  003EF8  0E00               	movlw	0
 12831  003EFA  201C               	addwfc	sync_window@fs+1,w,c
 12832  003EFC  6E12               	movwf	disk_write@buff+1,c
 12833  003EFE  C02C  F013         	movff	sync_window@wsect,disk_write@sector
 12834  003F02  C02D  F014         	movff	sync_window@wsect+1,disk_write@sector+1
 12835  003F06  C02E  F015         	movff	sync_window@wsect+2,disk_write@sector+2
 12836  003F0A  C02F  F016         	movff	sync_window@wsect+3,disk_write@sector+3
 12837  003F0E  0E00               	movlw	0
 12838  003F10  6E18               	movwf	disk_write@count+1,c
 12839  003F12  0E01               	movlw	1
 12840  003F14  6E17               	movwf	disk_write@count,c
 12841  003F16  EE20 F001          	lfsr	2,1
 12842  003F1A  501B               	movf	sync_window@fs,w,c
 12843  003F1C  26D9               	addwf	fsr2l,f,c
 12844  003F1E  501C               	movf	sync_window@fs+1,w,c
 12845  003F20  22DA               	addwfc	fsr2h,f,c
 12846  003F22  50DF               	movf	indf2,w,c
 12847  003F24  EC21  F022         	call	_disk_write
 12848                           
 12849                           ;ff.c: 719:     }
 12850  003F28  062A               	decf	sync_window@nf,f,c
 12851  003F2A  A0D8               	btfss	status,0,c
 12852  003F2C  062B               	decf	sync_window@nf+1,f,c
 12853  003F2E  D7CD               	goto	l4465
 12854  003F30                     l4477:
 12855                           
 12856                           ;ff.c: 723:  return res;
 12857  003F30  5029               	movf	sync_window@res,w,c
 12858  003F32  0012               	return		;funcret
 12859  003F34                     __end_of_sync_window:
 12860                           	opt callstack 0
 12861                           
 12862 ;; *************** function _disk_write *****************
 12863 ;; Defined at:
 12864 ;;		line 405 in file "diskio.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;  pdrv            1    wreg     unsigned char 
 12867 ;;  buff            2   16[COMRAM] PTR const unsigned char 
 12868 ;;		 -> FatFs.win(512), FatFs(558), ND(2), NULL(0), 
 12869 ;;  sector          4   18[COMRAM] unsigned long 
 12870 ;;  count           2   22[COMRAM] unsigned short 
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;  pdrv            1   25[COMRAM] unsigned char 
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  1    wreg      enum E43
 12875 ;; Registers used:
 12876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12882 ;;      Params:         8       0       0       0       0       0       0       0       0
 12883 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12884 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12885 ;;      Totals:        10       0       0       0       0       0       0       0       0
 12886 ;;Total ram usage:       10 bytes
 12887 ;; Hardware stack levels used:    1
 12888 ;; Hardware stack levels required when called:    5
 12889 ;; This function calls:
 12890 ;;		_deselect
 12891 ;;		_send_cmd
 12892 ;;		_xmit_datablock
 12893 ;; This function is called by:
 12894 ;;		_sync_window
 12895 ;;		_sync_fs
 12896 ;;		_f_write
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	text41
 12901  004442                     __ptext41:
 12902                           	opt callstack 0
 12903  004442                     _disk_write:
 12904                           	opt callstack 20
 12905                           
 12906                           ;incstack = 0
 12907                           ;disk_write@pdrv stored from wreg
 12908  004442  6E1A               	movwf	disk_write@pdrv,c
 12909                           
 12910                           ;diskio.c: 406:  BYTE pdrv,;diskio.c: 407:  const BYTE *buff,;diskio.c: 408:  DWORD sect
      +                          or,;diskio.c: 409:  UINT count;diskio.c: 411: {;diskio.c: 412:  if (pdrv || !count) retu
      +                          rn RES_PARERR;
 12911  004444  501A               	movf	disk_write@pdrv,w,c
 12912  004446  A4D8               	btfss	status,2,c
 12913  004448  D004               	goto	u4730
 12914  00444A  5017               	movf	disk_write@count,w,c
 12915  00444C  1018               	iorwf	disk_write@count+1,w,c
 12916  00444E  A4D8               	btfss	status,2,c
 12917  004450  D002               	goto	l126
 12918  004452                     u4730:
 12919  004452  0E04               	movlw	4
 12920  004454  0012               	return	
 12921  004456                     l126:
 12922                           
 12923                           ;diskio.c: 413:  if (Stat & 0x01) return RES_NOTRDY;
 12924  004456  0100               	movlb	0	; () banked
 12925  004458  A1F3               	btfss	_Stat& (0+255),0,b
 12926  00445A  D002               	goto	l130
 12927                           
 12928                           ; BSR set to: 0
 12929  00445C  0E03               	movlw	3
 12930  00445E  0012               	return	
 12931  004460                     l130:
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;diskio.c: 414:  if (Stat & 0x04) return RES_WRPRT;
 12935  004460  A5F3               	btfss	_Stat& (0+255),2,b
 12936  004462  D002               	goto	l131
 12937                           
 12938                           ; BSR set to: 0
 12939  004464  0E02               	movlw	2
 12940  004466  0012               	return	
 12941  004468                     l131:
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;diskio.c: 416:  if (!(CardType & 0x08)) sector *= 512;
 12945  004468  B7E0               	btfsc	_CardType& (0+255),3,b
 12946  00446A  D008               	goto	l132
 12947                           
 12948                           ; BSR set to: 0
 12949  00446C  0E09               	movlw	9
 12950  00446E                     u4775:
 12951  00446E  90D8               	bcf	status,0,c
 12952  004470  3613               	rlcf	disk_write@sector,f,c
 12953  004472  3614               	rlcf	disk_write@sector+1,f,c
 12954  004474  3615               	rlcf	disk_write@sector+2,f,c
 12955  004476  3616               	rlcf	disk_write@sector+3,f,c
 12956  004478  2EE8               	decfsz	wreg,f,c
 12957  00447A  D7F9               	goto	u4775
 12958  00447C                     l132:
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;diskio.c: 418:  if (count == 1) {
 12962  00447C  0417               	decf	disk_write@count,w,c
 12963  00447E  1018               	iorwf	disk_write@count+1,w,c
 12964  004480  A4D8               	btfss	status,2,c
 12965  004482  D01D               	goto	l4391
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;diskio.c: 419:   if ((send_cmd((24), sector) == 0)
 12969  004484  C013  F00B         	movff	disk_write@sector,send_cmd@arg
 12970  004488  C014  F00C         	movff	disk_write@sector+1,send_cmd@arg+1
 12971  00448C  C015  F00D         	movff	disk_write@sector+2,send_cmd@arg+2
 12972  004490  C016  F00E         	movff	disk_write@sector+3,send_cmd@arg+3
 12973  004494  0E18               	movlw	24
 12974  004496  EC75  F029         	call	_send_cmd
 12975  00449A  0900               	iorlw	0
 12976  00449C  A4D8               	btfss	status,2,c
 12977  00449E  D04F               	goto	l4405
 12978  0044A0  C011  F004         	movff	disk_write@buff,xmit_datablock@buff
 12979  0044A4  C012  F005         	movff	disk_write@buff+1,xmit_datablock@buff+1
 12980  0044A8  0EFE               	movlw	254
 12981  0044AA  6E06               	movwf	xmit_datablock@token,c
 12982  0044AC  ECA5  F028         	call	_xmit_datablock	;wreg free
 12983  0044B0  0900               	iorlw	0
 12984  0044B2  B4D8               	btfsc	status,2,c
 12985  0044B4  D044               	goto	l4405
 12986                           
 12987                           ;diskio.c: 421:    count = 0;
 12988  0044B6  0E00               	movlw	0
 12989  0044B8  6E18               	movwf	disk_write@count+1,c
 12990  0044BA  0E00               	movlw	0
 12991  0044BC  D03F               	goto	L16
 12992  0044BE                     l4391:
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;diskio.c: 424:   if (CardType & (0x02|0x04)) send_cmd((0x80+23), count);
 12996  0044BE  C0E0  F019         	movff	_CardType,??_disk_write
 12997  0044C2  0E06               	movlw	6
 12998  0044C4  1619               	andwf	??_disk_write,f,c
 12999  0044C6  B4D8               	btfsc	status,2,c
 13000  0044C8  D009               	goto	l136
 13001                           
 13002                           ; BSR set to: 0
 13003  0044CA  C017  F00B         	movff	disk_write@count,send_cmd@arg
 13004  0044CE  C018  F00C         	movff	disk_write@count+1,send_cmd@arg+1
 13005  0044D2  6A0D               	clrf	send_cmd@arg+2,c
 13006  0044D4  6A0E               	clrf	send_cmd@arg+3,c
 13007  0044D6  0E97               	movlw	151
 13008  0044D8  EC75  F029         	call	_send_cmd
 13009  0044DC                     l136:
 13010                           
 13011                           ;diskio.c: 425:   if (send_cmd((25), sector) == 0) {
 13012  0044DC  C013  F00B         	movff	disk_write@sector,send_cmd@arg
 13013  0044E0  C014  F00C         	movff	disk_write@sector+1,send_cmd@arg+1
 13014  0044E4  C015  F00D         	movff	disk_write@sector+2,send_cmd@arg+2
 13015  0044E8  C016  F00E         	movff	disk_write@sector+3,send_cmd@arg+3
 13016  0044EC  0E19               	movlw	25
 13017  0044EE  EC75  F029         	call	_send_cmd
 13018  0044F2  0900               	iorlw	0
 13019  0044F4  A4D8               	btfss	status,2,c
 13020  0044F6  D023               	goto	l4405
 13021  0044F8                     u4820:
 13022                           
 13023                           ;diskio.c: 427:     if (!xmit_datablock(buff, 0xFC)) break;
 13024  0044F8  C011  F004         	movff	disk_write@buff,xmit_datablock@buff
 13025  0044FC  C012  F005         	movff	disk_write@buff+1,xmit_datablock@buff+1
 13026  004500  0EFC               	movlw	252
 13027  004502  6E06               	movwf	xmit_datablock@token,c
 13028  004504  ECA5  F028         	call	_xmit_datablock	;wreg free
 13029  004508  0900               	iorlw	0
 13030  00450A  B4D8               	btfsc	status,2,c
 13031  00450C  D009               	goto	u4840
 13032                           
 13033                           ;diskio.c: 428:     buff += 512;
 13034  00450E  0E02               	movlw	2
 13035  004510  2612               	addwf	disk_write@buff+1,f,c
 13036                           
 13037                           ;diskio.c: 429:    } while (--count);
 13038  004512  0617               	decf	disk_write@count,f,c
 13039  004514  A0D8               	btfss	status,0,c
 13040  004516  0618               	decf	disk_write@count+1,f,c
 13041  004518  5017               	movf	disk_write@count,w,c
 13042  00451A  1018               	iorwf	disk_write@count+1,w,c
 13043  00451C  A4D8               	btfss	status,2,c
 13044  00451E  D7EC               	goto	u4820
 13045  004520                     u4840:
 13046                           
 13047                           ;diskio.c: 430:    if (!xmit_datablock(0, 0xFD))
 13048  004520  0E00               	movlw	0
 13049  004522  6E04               	movwf	xmit_datablock@buff,c
 13050  004524  0E00               	movlw	0
 13051  004526  6E05               	movwf	xmit_datablock@buff+1,c
 13052  004528  0EFD               	movlw	253
 13053  00452A  6E06               	movwf	xmit_datablock@token,c
 13054  00452C  ECA5  F028         	call	_xmit_datablock	;wreg free
 13055  004530  0900               	iorlw	0
 13056  004532  A4D8               	btfss	status,2,c
 13057  004534  D004               	goto	l4405
 13058                           
 13059                           ;diskio.c: 431:     count = 1;
 13060  004536  0E00               	movlw	0
 13061  004538  6E18               	movwf	disk_write@count+1,c
 13062  00453A  0E01               	movlw	1
 13063  00453C                     L16:
 13064  00453C  6E17               	movwf	disk_write@count,c
 13065  00453E                     l4405:
 13066                           
 13067                           ;diskio.c: 434:  deselect();
 13068  00453E  EC8E  F02A         	call	_deselect	;wreg free
 13069                           
 13070                           ;diskio.c: 436:  return count ? RES_ERROR : RES_OK;
 13071  004542  5017               	movf	disk_write@count,w,c
 13072  004544  1018               	iorwf	disk_write@count+1,w,c
 13073  004546  B4D8               	btfsc	status,2,c
 13074  004548  D002               	goto	u4860
 13075  00454A  0E01               	movlw	1
 13076  00454C  0012               	return	
 13077  00454E                     u4860:
 13078  00454E  0E00               	movlw	0
 13079  004550  0012               	return		;funcret
 13080  004552                     __end_of_disk_write:
 13081                           	opt callstack 0
 13082                           
 13083 ;; *************** function _xmit_datablock *****************
 13084 ;; Defined at:
 13085 ;;		line 156 in file "diskio.c"
 13086 ;; Parameters:    Size  Location     Type
 13087 ;;  buff            2    3[COMRAM] PTR const unsigned char 
 13088 ;;		 -> FatFs.win(512), FatFs(558), ND(2), NULL(0), 
 13089 ;;  token           1    5[COMRAM] unsigned char 
 13090 ;; Auto vars:     Size  Location     Type
 13091 ;;  i               2    6[COMRAM] unsigned short 
 13092 ;;  resp            1    8[COMRAM] unsigned char 
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      unsigned char 
 13095 ;; Registers used:
 13096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13102 ;;      Params:         3       0       0       0       0       0       0       0       0
 13103 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13105 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13106 ;;Total ram usage:        6 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    2
 13109 ;; This function calls:
 13110 ;;		_SPI1_Exchange8bit
 13111 ;;		_wait_ready
 13112 ;; This function is called by:
 13113 ;;		_disk_write
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text42
 13118  00514A                     __ptext42:
 13119                           	opt callstack 0
 13120  00514A                     _xmit_datablock:
 13121                           	opt callstack 22
 13122                           
 13123                           ;diskio.c: 157:  const BYTE *buff,;diskio.c: 158:  BYTE token;diskio.c: 160: {;diskio.c:
      +                           161:  BYTE resp;;diskio.c: 162:  WORD i;;diskio.c: 165:  if (!wait_ready()) return 0;
 13124                           
 13125                           ;incstack = 0
 13126  00514A  EC96  F029         	call	_wait_ready	;wreg free
 13127  00514E  0900               	iorlw	0
 13128  005150  A4D8               	btfss	status,2,c
 13129  005152  D002               	goto	l4297
 13130  005154                     u4620:
 13131  005154  0E00               	movlw	0
 13132  005156  0012               	return	
 13133  005158                     l4297:
 13134                           
 13135                           ;diskio.c: 167:  SPI1_Exchange8bit(token);
 13136  005158  5006               	movf	xmit_datablock@token,w,c
 13137  00515A  EC70  F02A         	call	_SPI1_Exchange8bit
 13138                           
 13139                           ;diskio.c: 168:  if (token != 0xFD) {
 13140  00515E  0EFD               	movlw	253
 13141  005160  1806               	xorwf	xmit_datablock@token,w,c
 13142  005162  B4D8               	btfsc	status,2,c
 13143  005164  D023               	goto	l4317
 13144                           
 13145                           ;diskio.c: 169:   i = 512;
 13146  005166  0E02               	movlw	2
 13147  005168  6E08               	movwf	xmit_datablock@i+1,c
 13148  00516A  0E00               	movlw	0
 13149  00516C  6E07               	movwf	xmit_datablock@i,c
 13150  00516E                     l4303:
 13151                           
 13152                           ;diskio.c: 171:    SPI1_Exchange8bit(*buff++);
 13153  00516E  C004  FFD9         	movff	xmit_datablock@buff,fsr2l
 13154  005172  C005  FFDA         	movff	xmit_datablock@buff+1,fsr2h
 13155  005176  50DF               	movf	indf2,w,c
 13156  005178  EC70  F02A         	call	_SPI1_Exchange8bit
 13157  00517C  4A04               	infsnz	xmit_datablock@buff,f,c
 13158  00517E  2A05               	incf	xmit_datablock@buff+1,f,c
 13159  005180  0607               	decf	xmit_datablock@i,f,c
 13160  005182  A0D8               	btfss	status,0,c
 13161  005184  0608               	decf	xmit_datablock@i+1,f,c
 13162  005186  5007               	movf	xmit_datablock@i,w,c
 13163  005188  1008               	iorwf	xmit_datablock@i+1,w,c
 13164  00518A  A4D8               	btfss	status,2,c
 13165  00518C  D7F0               	goto	l4303
 13166                           
 13167                           ;diskio.c: 173:   SPI1_Exchange8bit(0xFF);
 13168  00518E  0EFF               	movlw	255
 13169  005190  EC70  F02A         	call	_SPI1_Exchange8bit
 13170                           
 13171                           ;diskio.c: 174:   SPI1_Exchange8bit(0xFF);
 13172  005194  0EFF               	movlw	255
 13173  005196  EC70  F02A         	call	_SPI1_Exchange8bit
 13174                           
 13175                           ;diskio.c: 175:   resp = SPI1_Exchange8bit(0xFF);
 13176  00519A  0EFF               	movlw	255
 13177  00519C  EC70  F02A         	call	_SPI1_Exchange8bit
 13178  0051A0  6E09               	movwf	xmit_datablock@resp,c
 13179                           
 13180                           ;diskio.c: 176:   if ((resp & 0x1F) != 0x05)
 13181  0051A2  5009               	movf	xmit_datablock@resp,w,c
 13182  0051A4  0B1F               	andlw	31
 13183  0051A6  0A05               	xorlw	5
 13184  0051A8  A4D8               	btfss	status,2,c
 13185  0051AA  D7D4               	goto	u4620
 13186  0051AC                     l4317:
 13187                           
 13188                           ;diskio.c: 180:  return 1;
 13189  0051AC  0E01               	movlw	1
 13190  0051AE  0012               	return		;funcret
 13191  0051B0                     __end_of_xmit_datablock:
 13192                           	opt callstack 0
 13193                           
 13194 ;; *************** function _disk_read *****************
 13195 ;; Defined at:
 13196 ;;		line 370 in file "diskio.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;  pdrv            1    wreg     unsigned char 
 13199 ;;  buff            2   16[COMRAM] PTR unsigned char 
 13200 ;;		 -> FatFs(558), NULL(0), 
 13201 ;;  sector          4   18[COMRAM] unsigned long 
 13202 ;;  count           2   22[COMRAM] unsigned short 
 13203 ;; Auto vars:     Size  Location     Type
 13204 ;;  pdrv            1   24[COMRAM] unsigned char 
 13205 ;;  cmd             1   27[COMRAM] unsigned char 
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      enum E43
 13208 ;; Registers used:
 13209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13215 ;;      Params:         8       0       0       0       0       0       0       0       0
 13216 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13218 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13219 ;;Total ram usage:       12 bytes
 13220 ;; Hardware stack levels used:    1
 13221 ;; Hardware stack levels required when called:    5
 13222 ;; This function calls:
 13223 ;;		_deselect
 13224 ;;		_rcvr_datablock
 13225 ;;		_send_cmd
 13226 ;; This function is called by:
 13227 ;;		_move_window
 13228 ;;		_f_read
 13229 ;; This function uses a non-reentrant model
 13230 ;;
 13231                           
 13232                           	psect	text43
 13233  0049CE                     __ptext43:
 13234                           	opt callstack 0
 13235  0049CE                     _disk_read:
 13236                           	opt callstack 21
 13237                           
 13238                           ;incstack = 0
 13239                           ;disk_read@pdrv stored from wreg
 13240  0049CE  6E19               	movwf	disk_read@pdrv,c
 13241                           
 13242                           ;diskio.c: 371:  BYTE pdrv,;diskio.c: 372:  BYTE *buff,;diskio.c: 373:  DWORD sector,;di
      +                          skio.c: 374:  UINT count;diskio.c: 376: {;diskio.c: 377:  BYTE cmd;;diskio.c: 380:  if (
      +                          pdrv || !count) return RES_PARERR;
 13243  0049D0  5019               	movf	disk_read@pdrv,w,c
 13244  0049D2  A4D8               	btfss	status,2,c
 13245  0049D4  D004               	goto	u4890
 13246  0049D6  5017               	movf	disk_read@count,w,c
 13247  0049D8  1018               	iorwf	disk_read@count+1,w,c
 13248  0049DA  A4D8               	btfss	status,2,c
 13249  0049DC  D002               	goto	l109
 13250  0049DE                     u4890:
 13251  0049DE  0E04               	movlw	4
 13252  0049E0  0012               	return	
 13253  0049E2                     l109:
 13254                           
 13255                           ;diskio.c: 381:  if (Stat & 0x01) return RES_NOTRDY;
 13256  0049E2  0100               	movlb	0	; () banked
 13257  0049E4  A1F3               	btfss	_Stat& (0+255),0,b
 13258  0049E6  D002               	goto	l113
 13259                           
 13260                           ; BSR set to: 0
 13261  0049E8  0E03               	movlw	3
 13262  0049EA  0012               	return	
 13263  0049EC                     l113:
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;diskio.c: 383:  if (!(CardType & 0x08)) sector *= 512;
 13267  0049EC  B7E0               	btfsc	_CardType& (0+255),3,b
 13268  0049EE  D008               	goto	l114
 13269                           
 13270                           ; BSR set to: 0
 13271  0049F0  0E09               	movlw	9
 13272  0049F2                     u4925:
 13273  0049F2  90D8               	bcf	status,0,c
 13274  0049F4  3613               	rlcf	disk_read@sector,f,c
 13275  0049F6  3614               	rlcf	disk_read@sector+1,f,c
 13276  0049F8  3615               	rlcf	disk_read@sector+2,f,c
 13277  0049FA  3616               	rlcf	disk_read@sector+3,f,c
 13278  0049FC  2EE8               	decfsz	wreg,f,c
 13279  0049FE  D7F9               	goto	u4925
 13280  004A00                     l114:
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;diskio.c: 385:  cmd = count > 1 ? (18) : (17);
 13284  004A00  5018               	movf	disk_read@count+1,w,c
 13285  004A02  E108               	bnz	l4427
 13286  004A04  0E02               	movlw	2
 13287  004A06  5C17               	subwf	disk_read@count,w,c
 13288  004A08  B0D8               	btfsc	status,0,c
 13289  004A0A  D004               	goto	l4427
 13290                           
 13291                           ; BSR set to: 0
 13292  004A0C  0E00               	movlw	0
 13293  004A0E  6E1B               	movwf	_disk_read$143+1,c
 13294  004A10  0E11               	movlw	17
 13295  004A12  D003               	goto	L17
 13296  004A14                     l4427:
 13297                           
 13298                           ; BSR set to: 0
 13299  004A14  0E00               	movlw	0
 13300  004A16  6E1B               	movwf	_disk_read$143+1,c
 13301  004A18  0E12               	movlw	18
 13302  004A1A                     L17:
 13303  004A1A  6E1A               	movwf	_disk_read$143,c
 13304                           
 13305                           ; BSR set to: 0
 13306  004A1C  C01A  F01C         	movff	_disk_read$143,disk_read@cmd
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;diskio.c: 386:  if (send_cmd(cmd, sector) == 0) {
 13310  004A20  C013  F00B         	movff	disk_read@sector,send_cmd@arg
 13311  004A24  C014  F00C         	movff	disk_read@sector+1,send_cmd@arg+1
 13312  004A28  C015  F00D         	movff	disk_read@sector+2,send_cmd@arg+2
 13313  004A2C  C016  F00E         	movff	disk_read@sector+3,send_cmd@arg+3
 13314  004A30  501C               	movf	disk_read@cmd,w,c
 13315  004A32  EC75  F029         	call	_send_cmd
 13316  004A36  0900               	iorlw	0
 13317  004A38  A4D8               	btfss	status,2,c
 13318  004A3A  D025               	goto	l4443
 13319  004A3C                     u4940:
 13320                           
 13321                           ;diskio.c: 388:    if (!rcvr_datablock(buff, 512)) break;
 13322  004A3C  C011  F002         	movff	disk_read@buff,rcvr_datablock@buff
 13323  004A40  C012  F003         	movff	disk_read@buff+1,rcvr_datablock@buff+1
 13324  004A44  0E02               	movlw	2
 13325  004A46  6E05               	movwf	rcvr_datablock@btr+1,c
 13326  004A48  0E00               	movlw	0
 13327  004A4A  6E04               	movwf	rcvr_datablock@btr,c
 13328  004A4C  EC3C  F028         	call	_rcvr_datablock	;wreg free
 13329  004A50  0900               	iorlw	0
 13330  004A52  B4D8               	btfsc	status,2,c
 13331  004A54  D009               	goto	u4960
 13332                           
 13333                           ;diskio.c: 389:    buff += 512;
 13334  004A56  0E02               	movlw	2
 13335  004A58  2612               	addwf	disk_read@buff+1,f,c
 13336                           
 13337                           ;diskio.c: 390:   } while (--count);
 13338  004A5A  0617               	decf	disk_read@count,f,c
 13339  004A5C  A0D8               	btfss	status,0,c
 13340  004A5E  0618               	decf	disk_read@count+1,f,c
 13341  004A60  5017               	movf	disk_read@count,w,c
 13342  004A62  1018               	iorwf	disk_read@count+1,w,c
 13343  004A64  A4D8               	btfss	status,2,c
 13344  004A66  D7EA               	goto	u4940
 13345  004A68                     u4960:
 13346                           
 13347                           ;diskio.c: 391:   if (cmd == (18)) send_cmd((12), 0);
 13348  004A68  0E12               	movlw	18
 13349  004A6A  181C               	xorwf	disk_read@cmd,w,c
 13350  004A6C  A4D8               	btfss	status,2,c
 13351  004A6E  D00B               	goto	l4443
 13352  004A70  0E00               	movlw	0
 13353  004A72  6E0B               	movwf	send_cmd@arg,c
 13354  004A74  0E00               	movlw	0
 13355  004A76  6E0C               	movwf	send_cmd@arg+1,c
 13356  004A78  0E00               	movlw	0
 13357  004A7A  6E0D               	movwf	send_cmd@arg+2,c
 13358  004A7C  0E00               	movlw	0
 13359  004A7E  6E0E               	movwf	send_cmd@arg+3,c
 13360  004A80  0E0C               	movlw	12
 13361  004A82  EC75  F029         	call	_send_cmd
 13362  004A86                     l4443:
 13363                           
 13364                           ;diskio.c: 393:  deselect();
 13365  004A86  EC8E  F02A         	call	_deselect	;wreg free
 13366                           
 13367                           ;diskio.c: 395:  return count ? RES_ERROR : RES_OK;
 13368  004A8A  5017               	movf	disk_read@count,w,c
 13369  004A8C  1018               	iorwf	disk_read@count+1,w,c
 13370  004A8E  B4D8               	btfsc	status,2,c
 13371  004A90  D002               	goto	u4980
 13372  004A92  0E01               	movlw	1
 13373  004A94  0012               	return	
 13374  004A96                     u4980:
 13375  004A96  0E00               	movlw	0
 13376  004A98  0012               	return		;funcret
 13377  004A9A                     __end_of_disk_read:
 13378                           	opt callstack 0
 13379                           
 13380 ;; *************** function _send_cmd *****************
 13381 ;; Defined at:
 13382 ;;		line 231 in file "diskio.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;  cmd             1    wreg     unsigned char 
 13385 ;;  arg             4   10[COMRAM] unsigned long 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;  cmd             1   14[COMRAM] unsigned char 
 13388 ;;  res             1   15[COMRAM] unsigned char 
 13389 ;; Return value:  Size  Location     Type
 13390 ;;                  1    wreg      unsigned char 
 13391 ;; Registers used:
 13392 ;;		wreg, status,2, status,0, cstack
 13393 ;; Tracked objects:
 13394 ;;		On entry : 0/0
 13395 ;;		On exit  : 0/0
 13396 ;;		Unchanged: 0/0
 13397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13398 ;;      Params:         4       0       0       0       0       0       0       0       0
 13399 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13400 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13401 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13402 ;;Total ram usage:        6 bytes
 13403 ;; Hardware stack levels used:    1
 13404 ;; Hardware stack levels required when called:    4
 13405 ;; This function calls:
 13406 ;;		___send_cmd
 13407 ;; This function is called by:
 13408 ;;		_disk_initialize
 13409 ;;		_disk_read
 13410 ;;		_disk_write
 13411 ;;		_disk_ioctl
 13412 ;; This function uses a non-reentrant model
 13413 ;;
 13414                           
 13415                           	psect	text44
 13416  0052EA                     __ptext44:
 13417                           	opt callstack 0
 13418  0052EA                     _send_cmd:
 13419                           	opt callstack 20
 13420                           
 13421                           ;incstack = 0
 13422                           ;send_cmd@cmd stored from wreg
 13423  0052EA  6E0F               	movwf	send_cmd@cmd,c
 13424                           
 13425                           ;diskio.c: 232:  BYTE cmd,;diskio.c: 233:  DWORD arg;diskio.c: 235: {;diskio.c: 239:  BY
      +                          TE res;;diskio.c: 242:  if (cmd & 0x80) {
 13426  0052EC  AE0F               	btfss	send_cmd@cmd,7,c
 13427  0052EE  D012               	goto	l4333
 13428                           
 13429                           ;diskio.c: 243:   cmd &= 0x7F;
 13430  0052F0  9E0F               	bcf	send_cmd@cmd,7,c
 13431                           
 13432                           ;diskio.c: 245:   res = __send_cmd((55), 0);
 13433  0052F2  0E00               	movlw	0
 13434  0052F4  6E04               	movwf	___send_cmd@arg,c
 13435  0052F6  0E00               	movlw	0
 13436  0052F8  6E05               	movwf	___send_cmd@arg+1,c
 13437  0052FA  0E00               	movlw	0
 13438  0052FC  6E06               	movwf	___send_cmd@arg+2,c
 13439  0052FE  0E00               	movlw	0
 13440  005300  6E07               	movwf	___send_cmd@arg+3,c
 13441  005302  0E37               	movlw	55
 13442  005304  EC45  F027         	call	___send_cmd
 13443  005308  6E10               	movwf	send_cmd@res,c
 13444                           
 13445                           ;diskio.c: 249:   if (res > 1) return res;
 13446  00530A  0E01               	movlw	1
 13447  00530C  6410               	cpfsgt	send_cmd@res,c
 13448  00530E  D002               	goto	l4333
 13449  005310  5010               	movf	send_cmd@res,w,c
 13450  005312  0012               	return	
 13451  005314                     l4333:
 13452                           
 13453                           ;diskio.c: 253:  return __send_cmd(cmd, arg);
 13454  005314  C00B  F004         	movff	send_cmd@arg,___send_cmd@arg
 13455  005318  C00C  F005         	movff	send_cmd@arg+1,___send_cmd@arg+1
 13456  00531C  C00D  F006         	movff	send_cmd@arg+2,___send_cmd@arg+2
 13457  005320  C00E  F007         	movff	send_cmd@arg+3,___send_cmd@arg+3
 13458  005324  500F               	movf	send_cmd@cmd,w,c
 13459  005326  EC45  F027         	call	___send_cmd
 13460  00532A  0012               	return		;funcret
 13461  00532C                     __end_of_send_cmd:
 13462                           	opt callstack 0
 13463                           
 13464 ;; *************** function ___send_cmd *****************
 13465 ;; Defined at:
 13466 ;;		line 195 in file "diskio.c"
 13467 ;; Parameters:    Size  Location     Type
 13468 ;;  cmd             1    wreg     unsigned char 
 13469 ;;  arg             4    3[COMRAM] unsigned long 
 13470 ;; Auto vars:     Size  Location     Type
 13471 ;;  cmd             1    9[COMRAM] unsigned char 
 13472 ;;  n               1    8[COMRAM] unsigned char 
 13473 ;;  res             1    7[COMRAM] unsigned char 
 13474 ;; Return value:  Size  Location     Type
 13475 ;;                  1    wreg      unsigned char 
 13476 ;; Registers used:
 13477 ;;		wreg, status,2, status,0, cstack
 13478 ;; Tracked objects:
 13479 ;;		On entry : 0/0
 13480 ;;		On exit  : 0/0
 13481 ;;		Unchanged: 0/0
 13482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13483 ;;      Params:         4       0       0       0       0       0       0       0       0
 13484 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13485 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13486 ;;      Totals:         7       0       0       0       0       0       0       0       0
 13487 ;;Total ram usage:        7 bytes
 13488 ;; Hardware stack levels used:    1
 13489 ;; Hardware stack levels required when called:    3
 13490 ;; This function calls:
 13491 ;;		_SPI1_Exchange8bit
 13492 ;;		_deselect
 13493 ;;		_select
 13494 ;; This function is called by:
 13495 ;;		_send_cmd
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text45
 13500  004E8A                     __ptext45:
 13501                           	opt callstack 0
 13502  004E8A                     ___send_cmd:
 13503                           	opt callstack 20
 13504                           
 13505                           ;incstack = 0
 13506                           ;___send_cmd@cmd stored from wreg
 13507  004E8A  6E0A               	movwf	___send_cmd@cmd,c
 13508                           
 13509                           ;diskio.c: 196:  BYTE cmd,;diskio.c: 197:  DWORD arg;diskio.c: 199: {;diskio.c: 200:  BY
      +                          TE n, res;;diskio.c: 203:  if (cmd != (12)) {
 13510  004E8C  0E0C               	movlw	12
 13511  004E8E  180A               	xorwf	___send_cmd@cmd,w,c
 13512  004E90  B4D8               	btfsc	status,2,c
 13513  004E92  D009               	goto	l4253
 13514                           
 13515                           ;diskio.c: 204:   deselect();
 13516  004E94  EC8E  F02A         	call	_deselect	;wreg free
 13517                           
 13518                           ;diskio.c: 205:   if (!select()) return 0xFF;
 13519  004E98  EC3B  F02A         	call	_select	;wreg free
 13520  004E9C  0900               	iorlw	0
 13521  004E9E  A4D8               	btfss	status,2,c
 13522  004EA0  D002               	goto	l4253
 13523  004EA2  0EFF               	movlw	255
 13524  004EA4  0012               	return	
 13525  004EA6                     l4253:
 13526                           
 13527                           ;diskio.c: 209:  SPI1_Exchange8bit(0x40 | cmd);
 13528  004EA6  500A               	movf	___send_cmd@cmd,w,c
 13529  004EA8  0940               	iorlw	64
 13530  004EAA  EC70  F02A         	call	_SPI1_Exchange8bit
 13531                           
 13532                           ;diskio.c: 210:  SPI1_Exchange8bit((BYTE)(arg >> 24));
 13533  004EAE  5007               	movf	___send_cmd@arg+3,w,c
 13534  004EB0  EC70  F02A         	call	_SPI1_Exchange8bit
 13535                           
 13536                           ;diskio.c: 211:  SPI1_Exchange8bit((BYTE)(arg >> 16));
 13537  004EB4  5006               	movf	___send_cmd@arg+2,w,c
 13538  004EB6  EC70  F02A         	call	_SPI1_Exchange8bit
 13539                           
 13540                           ;diskio.c: 212:  SPI1_Exchange8bit((BYTE)(arg >> 8));
 13541  004EBA  5005               	movf	___send_cmd@arg+1,w,c
 13542  004EBC  EC70  F02A         	call	_SPI1_Exchange8bit
 13543                           
 13544                           ;diskio.c: 213:  SPI1_Exchange8bit((BYTE)arg);
 13545  004EC0  5004               	movf	___send_cmd@arg,w,c
 13546  004EC2  EC70  F02A         	call	_SPI1_Exchange8bit
 13547                           
 13548                           ;diskio.c: 214:  n = 0x01;
 13549  004EC6  0E01               	movlw	1
 13550  004EC8  6E09               	movwf	___send_cmd@n,c
 13551                           
 13552                           ;diskio.c: 215:  if (cmd == (0)) n = 0x95;
 13553  004ECA  500A               	movf	___send_cmd@cmd,w,c
 13554  004ECC  A4D8               	btfss	status,2,c
 13555  004ECE  D002               	goto	l4269
 13556  004ED0  0E95               	movlw	149
 13557  004ED2  6E09               	movwf	___send_cmd@n,c
 13558  004ED4                     l4269:
 13559                           
 13560                           ;diskio.c: 216:  if (cmd == (8)) n = 0x87;
 13561  004ED4  0E08               	movlw	8
 13562  004ED6  180A               	xorwf	___send_cmd@cmd,w,c
 13563  004ED8  A4D8               	btfss	status,2,c
 13564  004EDA  D002               	goto	l4273
 13565  004EDC  0E87               	movlw	135
 13566  004EDE  6E09               	movwf	___send_cmd@n,c
 13567  004EE0                     l4273:
 13568                           
 13569                           ;diskio.c: 217:  SPI1_Exchange8bit(n);
 13570  004EE0  5009               	movf	___send_cmd@n,w,c
 13571  004EE2  EC70  F02A         	call	_SPI1_Exchange8bit
 13572                           
 13573                           ;diskio.c: 220:  if (cmd == (12)) SPI1_Exchange8bit(0xFF);
 13574  004EE6  0E0C               	movlw	12
 13575  004EE8  180A               	xorwf	___send_cmd@cmd,w,c
 13576  004EEA  A4D8               	btfss	status,2,c
 13577  004EEC  D003               	goto	l4279
 13578  004EEE  0EFF               	movlw	255
 13579  004EF0  EC70  F02A         	call	_SPI1_Exchange8bit
 13580  004EF4                     l4279:
 13581                           
 13582                           ;diskio.c: 221:  n = 10;
 13583  004EF4  0E0A               	movlw	10
 13584  004EF6  6E09               	movwf	___send_cmd@n,c
 13585  004EF8                     l4281:
 13586                           
 13587                           ;diskio.c: 223:   res = SPI1_Exchange8bit(0xFF);
 13588  004EF8  0EFF               	movlw	255
 13589  004EFA  EC70  F02A         	call	_SPI1_Exchange8bit
 13590  004EFE  6E08               	movwf	___send_cmd@res,c
 13591  004F00  AE08               	btfss	___send_cmd@res,7,c
 13592  004F02  D002               	goto	l4287
 13593  004F04  2E09               	decfsz	___send_cmd@n,f,c
 13594  004F06  D7F8               	goto	l4281
 13595  004F08                     l4287:
 13596                           
 13597                           ;diskio.c: 226:  return res;
 13598  004F08  5008               	movf	___send_cmd@res,w,c
 13599  004F0A  0012               	return		;funcret
 13600  004F0C                     __end_of___send_cmd:
 13601                           	opt callstack 0
 13602                           
 13603 ;; *************** function _select *****************
 13604 ;; Defined at:
 13605 ;;		line 106 in file "diskio.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;		None
 13608 ;; Auto vars:     Size  Location     Type
 13609 ;;		None
 13610 ;; Return value:  Size  Location     Type
 13611 ;;                  1    wreg      unsigned char 
 13612 ;; Registers used:
 13613 ;;		wreg, status,2, status,0, cstack
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13619 ;;      Params:         0       0       0       0       0       0       0       0       0
 13620 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13621 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13622 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13623 ;;Total ram usage:        0 bytes
 13624 ;; Hardware stack levels used:    1
 13625 ;; Hardware stack levels required when called:    2
 13626 ;; This function calls:
 13627 ;;		_SPI1_Exchange8bit
 13628 ;;		_deselect
 13629 ;;		_wait_ready
 13630 ;; This function is called by:
 13631 ;;		___send_cmd
 13632 ;;		_disk_ioctl
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636                           	psect	text46
 13637  005476                     __ptext46:
 13638                           	opt callstack 0
 13639  005476                     _select:
 13640                           	opt callstack 20
 13641                           
 13642                           ;incstack = 0
 13643                           ;diskio.c: 108:  do { LATBbits.LATB2 = 0; } while(0);
 13644  005476  948A               	bcf	3978,2,c	;volatile
 13645                           
 13646                           ;diskio.c: 109:  SPI1_Exchange8bit(0xFF);
 13647  005478  0EFF               	movlw	255
 13648  00547A  EC70  F02A         	call	_SPI1_Exchange8bit
 13649                           
 13650                           ;diskio.c: 110:  if (wait_ready()) return 1;
 13651  00547E  EC96  F029         	call	_wait_ready	;wreg free
 13652  005482  0900               	iorlw	0
 13653  005484  B4D8               	btfsc	status,2,c
 13654  005486  D002               	goto	l4237
 13655  005488  0E01               	movlw	1
 13656  00548A  0012               	return	
 13657  00548C                     l4237:
 13658                           
 13659                           ;diskio.c: 112:  deselect();
 13660  00548C  EC8E  F02A         	call	_deselect	;wreg free
 13661                           
 13662                           ;diskio.c: 113:  return 0;
 13663  005490  0E00               	movlw	0
 13664  005492  0012               	return		;funcret
 13665  005494                     __end_of_select:
 13666                           	opt callstack 0
 13667                           
 13668 ;; *************** function _wait_ready *****************
 13669 ;; Defined at:
 13670 ;;		line 74 in file "diskio.c"
 13671 ;; Parameters:    Size  Location     Type
 13672 ;;		None
 13673 ;; Auto vars:     Size  Location     Type
 13674 ;;  tmr             2    1[COMRAM] unsigned short 
 13675 ;; Return value:  Size  Location     Type
 13676 ;;                  1    wreg      unsigned char 
 13677 ;; Registers used:
 13678 ;;		wreg, status,2, status,0, cstack
 13679 ;; Tracked objects:
 13680 ;;		On entry : 0/0
 13681 ;;		On exit  : 0/0
 13682 ;;		Unchanged: 0/0
 13683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13684 ;;      Params:         0       0       0       0       0       0       0       0       0
 13685 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13686 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13687 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13688 ;;Total ram usage:        2 bytes
 13689 ;; Hardware stack levels used:    1
 13690 ;; Hardware stack levels required when called:    1
 13691 ;; This function calls:
 13692 ;;		_SPI1_Exchange8bit
 13693 ;; This function is called by:
 13694 ;;		_select
 13695 ;;		_xmit_datablock
 13696 ;; This function uses a non-reentrant model
 13697 ;;
 13698                           
 13699                           	psect	text47
 13700  00532C                     __ptext47:
 13701                           	opt callstack 0
 13702  00532C                     _wait_ready:
 13703                           	opt callstack 22
 13704                           
 13705                           ;diskio.c: 76:  UINT tmr;;diskio.c: 78:  for (tmr = 5000; tmr; tmr--) {
 13706                           
 13707                           ;incstack = 0
 13708  00532C  0E13               	movlw	19
 13709  00532E  6E03               	movwf	wait_ready@tmr+1,c
 13710  005330  0E88               	movlw	136
 13711  005332  6E02               	movwf	wait_ready@tmr,c
 13712  005334  D00D               	goto	l17
 13713  005336                     l4215:
 13714                           
 13715                           ;diskio.c: 79:   if (SPI1_Exchange8bit(0xFF) == 0xFF) break;
 13716  005336  0EFF               	movlw	255
 13717  005338  EC70  F02A         	call	_SPI1_Exchange8bit
 13718  00533C  0AFF               	xorlw	255
 13719  00533E  B4D8               	btfsc	status,2,c
 13720  005340  D00B               	goto	u4520
 13721                           
 13722                           ;diskio.c: 80:   _delay((unsigned long)((100)*(8000000/4000000.0)));
 13723  005342  0E42               	movlw	66
 13724  005344                     u9527:
 13725  005344  2EE8               	decfsz	wreg,f,c
 13726  005346  D7FE               	bra	u9527
 13727  005348  D000               	nop2	
 13728                           
 13729                           ;diskio.c: 81:  }
 13730  00534A  0602               	decf	wait_ready@tmr,f,c
 13731  00534C  A0D8               	btfss	status,0,c
 13732  00534E  0603               	decf	wait_ready@tmr+1,f,c
 13733  005350                     l17:
 13734  005350  5002               	movf	wait_ready@tmr,w,c
 13735  005352  1003               	iorwf	wait_ready@tmr+1,w,c
 13736  005354  A4D8               	btfss	status,2,c
 13737  005356  D7EF               	goto	l4215
 13738  005358                     u4520:
 13739                           
 13740                           ;diskio.c: 83:  return tmr ? 1 : 0;
 13741  005358  5002               	movf	wait_ready@tmr,w,c
 13742  00535A  1003               	iorwf	wait_ready@tmr+1,w,c
 13743  00535C  B4D8               	btfsc	status,2,c
 13744  00535E  D002               	goto	u4530
 13745  005360  0E01               	movlw	1
 13746  005362  0012               	return	
 13747  005364                     u4530:
 13748  005364  0E00               	movlw	0
 13749  005366  0012               	return		;funcret
 13750  005368                     __end_of_wait_ready:
 13751                           	opt callstack 0
 13752                           
 13753 ;; *************** function _deselect *****************
 13754 ;; Defined at:
 13755 ;;		line 93 in file "diskio.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;		None
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;		None
 13760 ;; Return value:  Size  Location     Type
 13761 ;;                  1    wreg      void 
 13762 ;; Registers used:
 13763 ;;		wreg, status,2, cstack
 13764 ;; Tracked objects:
 13765 ;;		On entry : 0/0
 13766 ;;		On exit  : 0/0
 13767 ;;		Unchanged: 0/0
 13768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13769 ;;      Params:         0       0       0       0       0       0       0       0       0
 13770 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13771 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13772 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13773 ;;Total ram usage:        0 bytes
 13774 ;; Hardware stack levels used:    1
 13775 ;; Hardware stack levels required when called:    1
 13776 ;; This function calls:
 13777 ;;		_SPI1_Exchange8bit
 13778 ;; This function is called by:
 13779 ;;		_select
 13780 ;;		___send_cmd
 13781 ;;		_disk_initialize
 13782 ;;		_disk_read
 13783 ;;		_disk_write
 13784 ;;		_disk_ioctl
 13785 ;; This function uses a non-reentrant model
 13786 ;;
 13787                           
 13788                           	psect	text48
 13789  00551C                     __ptext48:
 13790                           	opt callstack 0
 13791  00551C                     _deselect:
 13792                           	opt callstack 20
 13793                           
 13794                           ;incstack = 0
 13795                           ;diskio.c: 95:  do { LATBbits.LATB2 = 1; } while(0);
 13796  00551C  848A               	bsf	3978,2,c	;volatile
 13797                           
 13798                           ;diskio.c: 96:  SPI1_Exchange8bit(0xFF);
 13799  00551E  0EFF               	movlw	255
 13800  005520  EC70  F02A         	call	_SPI1_Exchange8bit
 13801  005524  0012               	return		;funcret
 13802  005526                     __end_of_deselect:
 13803                           	opt callstack 0
 13804                           
 13805 ;; *************** function _rcvr_datablock *****************
 13806 ;; Defined at:
 13807 ;;		line 123 in file "diskio.c"
 13808 ;; Parameters:    Size  Location     Type
 13809 ;;  buff            2    1[COMRAM] PTR unsigned char 
 13810 ;;		 -> FatFs(558), disk_ioctl@csd(16), NULL(0), 
 13811 ;;  btr             2    3[COMRAM] unsigned short 
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;  tmr             2    5[COMRAM] unsigned short 
 13814 ;;  token           1    7[COMRAM] unsigned char 
 13815 ;; Return value:  Size  Location     Type
 13816 ;;                  1    wreg      unsigned char 
 13817 ;; Registers used:
 13818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13819 ;; Tracked objects:
 13820 ;;		On entry : 0/0
 13821 ;;		On exit  : 0/0
 13822 ;;		Unchanged: 0/0
 13823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13824 ;;      Params:         4       0       0       0       0       0       0       0       0
 13825 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13826 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13827 ;;      Totals:         7       0       0       0       0       0       0       0       0
 13828 ;;Total ram usage:        7 bytes
 13829 ;; Hardware stack levels used:    1
 13830 ;; Hardware stack levels required when called:    1
 13831 ;; This function calls:
 13832 ;;		_SPI1_Exchange8bit
 13833 ;; This function is called by:
 13834 ;;		_disk_read
 13835 ;;		_disk_ioctl
 13836 ;; This function uses a non-reentrant model
 13837 ;;
 13838                           
 13839                           	psect	text49
 13840  005078                     __ptext49:
 13841                           	opt callstack 0
 13842  005078                     _rcvr_datablock:
 13843                           	opt callstack 24
 13844                           
 13845                           ;diskio.c: 124:  BYTE *buff,;diskio.c: 125:  UINT btr;diskio.c: 127: {;diskio.c: 128:  B
      +                          YTE token;;diskio.c: 129:  UINT tmr;;diskio.c: 132:  for (tmr = 2000; tmr; tmr--) {
 13846                           
 13847                           ;incstack = 0
 13848  005078  0E07               	movlw	7
 13849  00507A  6E07               	movwf	rcvr_datablock@tmr+1,c
 13850  00507C  0ED0               	movlw	208
 13851  00507E  6E06               	movwf	rcvr_datablock@tmr,c
 13852  005080  D00E               	goto	l35
 13853  005082                     l4339:
 13854                           
 13855                           ;diskio.c: 133:   token = SPI1_Exchange8bit(0xFF);
 13856  005082  0EFF               	movlw	255
 13857  005084  EC70  F02A         	call	_SPI1_Exchange8bit
 13858  005088  6E08               	movwf	rcvr_datablock@token,c
 13859                           
 13860                           ;diskio.c: 134:   if (token != 0xFF) break;
 13861  00508A  2808               	incf	rcvr_datablock@token,w,c
 13862  00508C  A4D8               	btfss	status,2,c
 13863  00508E  D00B               	goto	u4690
 13864                           
 13865                           ;diskio.c: 135:   _delay((unsigned long)((100)*(8000000/4000000.0)));
 13866  005090  0E42               	movlw	66
 13867  005092                     u9537:
 13868  005092  2EE8               	decfsz	wreg,f,c
 13869  005094  D7FE               	bra	u9537
 13870  005096  D000               	nop2	
 13871                           
 13872                           ;diskio.c: 136:  }
 13873  005098  0606               	decf	rcvr_datablock@tmr,f,c
 13874  00509A  A0D8               	btfss	status,0,c
 13875  00509C  0607               	decf	rcvr_datablock@tmr+1,f,c
 13876  00509E                     l35:
 13877  00509E  5006               	movf	rcvr_datablock@tmr,w,c
 13878  0050A0  1007               	iorwf	rcvr_datablock@tmr+1,w,c
 13879  0050A2  A4D8               	btfss	status,2,c
 13880  0050A4  D7EE               	goto	l4339
 13881  0050A6                     u4690:
 13882                           
 13883                           ;diskio.c: 137:  if (token != 0xFE) return 0;
 13884  0050A6  0EFE               	movlw	254
 13885  0050A8  1808               	xorwf	rcvr_datablock@token,w,c
 13886  0050AA  B4D8               	btfsc	status,2,c
 13887  0050AC  D002               	goto	l4355
 13888  0050AE  0E00               	movlw	0
 13889  0050B0  0012               	return	
 13890  0050B2                     l4355:
 13891                           
 13892                           ;diskio.c: 140:   *buff++ = SPI1_Exchange8bit(0xFF);
 13893  0050B2  0EFF               	movlw	255
 13894  0050B4  EC70  F02A         	call	_SPI1_Exchange8bit
 13895  0050B8  C002  FFD9         	movff	rcvr_datablock@buff,fsr2l
 13896  0050BC  C003  FFDA         	movff	rcvr_datablock@buff+1,fsr2h
 13897  0050C0  6EDF               	movwf	indf2,c
 13898  0050C2  4A02               	infsnz	rcvr_datablock@buff,f,c
 13899  0050C4  2A03               	incf	rcvr_datablock@buff+1,f,c
 13900  0050C6  0604               	decf	rcvr_datablock@btr,f,c
 13901  0050C8  A0D8               	btfss	status,0,c
 13902  0050CA  0605               	decf	rcvr_datablock@btr+1,f,c
 13903  0050CC  5004               	movf	rcvr_datablock@btr,w,c
 13904  0050CE  1005               	iorwf	rcvr_datablock@btr+1,w,c
 13905  0050D0  A4D8               	btfss	status,2,c
 13906  0050D2  D7EF               	goto	l4355
 13907                           
 13908                           ;diskio.c: 142:  SPI1_Exchange8bit(0xFF);
 13909  0050D4  0EFF               	movlw	255
 13910  0050D6  EC70  F02A         	call	_SPI1_Exchange8bit
 13911                           
 13912                           ;diskio.c: 143:  SPI1_Exchange8bit(0xFF);
 13913  0050DA  0EFF               	movlw	255
 13914  0050DC  EC70  F02A         	call	_SPI1_Exchange8bit
 13915                           
 13916                           ;diskio.c: 145:  return 1;
 13917  0050E0  0E01               	movlw	1
 13918  0050E2  0012               	return		;funcret
 13919  0050E4                     __end_of_rcvr_datablock:
 13920                           	opt callstack 0
 13921                           
 13922 ;; *************** function _SPI1_Exchange8bit *****************
 13923 ;; Defined at:
 13924 ;;		line 90 in file "mcc_generated_files/spi1.c"
 13925 ;; Parameters:    Size  Location     Type
 13926 ;;  data            1    wreg     unsigned char 
 13927 ;; Auto vars:     Size  Location     Type
 13928 ;;  data            1    0[COMRAM] unsigned char 
 13929 ;; Return value:  Size  Location     Type
 13930 ;;                  1    wreg      unsigned char 
 13931 ;; Registers used:
 13932 ;;		wreg, status,2
 13933 ;; Tracked objects:
 13934 ;;		On entry : 0/0
 13935 ;;		On exit  : 0/0
 13936 ;;		Unchanged: 0/0
 13937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13938 ;;      Params:         0       0       0       0       0       0       0       0       0
 13939 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13940 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13941 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13942 ;;Total ram usage:        1 bytes
 13943 ;; Hardware stack levels used:    1
 13944 ;; This function calls:
 13945 ;;		Nothing
 13946 ;; This function is called by:
 13947 ;;		_wait_ready
 13948 ;;		_deselect
 13949 ;;		_select
 13950 ;;		_rcvr_datablock
 13951 ;;		_xmit_datablock
 13952 ;;		___send_cmd
 13953 ;;		_disk_initialize
 13954 ;;		_disk_ioctl
 13955 ;;		_SPI1_Exchange8bitBuffer
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           	psect	text50
 13960  0054E0                     __ptext50:
 13961                           	opt callstack 0
 13962  0054E0                     _SPI1_Exchange8bit:
 13963                           	opt callstack 22
 13964                           
 13965                           ;incstack = 0
 13966                           ;SPI1_Exchange8bit@data stored from wreg
 13967  0054E0  6E01               	movwf	SPI1_Exchange8bit@data,c
 13968                           
 13969                           ;mcc_generated_files/spi1.c: 90: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 91: {;mcc_generated_files/spi1.c: 93:     SSP1CON1bits.WCOL = 0;
 13970  0054E2  9EC6               	bcf	4038,7,c	;volatile
 13971                           
 13972                           ;mcc_generated_files/spi1.c: 95:     SSP1BUF = data;
 13973  0054E4  C001  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
 13974  0054E8                     l750:
 13975                           
 13976                           ;mcc_generated_files/spi1.c: 97:     while(SSP1STATbits.BF == 0x0)
 13977  0054E8  A0C7               	btfss	4039,0,c	;volatile
 13978  0054EA  D7FE               	goto	l750
 13979                           
 13980                           ;mcc_generated_files/spi1.c: 101:     return (SSP1BUF);
 13981  0054EC  50C9               	movf	4041,w,c	;volatile
 13982  0054EE  0012               	return		;funcret
 13983  0054F0                     __end_of_SPI1_Exchange8bit:
 13984                           	opt callstack 0
 13985                           
 13986 ;; *************** function ___delay_sec *****************
 13987 ;; Defined at:
 13988 ;;		line 111 in file "Main.c"
 13989 ;; Parameters:    Size  Location     Type
 13990 ;;  sec             1    wreg     unsigned char 
 13991 ;; Auto vars:     Size  Location     Type
 13992 ;;  sec             1    3[COMRAM] unsigned char 
 13993 ;;  i               1    4[COMRAM] unsigned char 
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  1    wreg      void 
 13996 ;; Registers used:
 13997 ;;		wreg, status,2, status,0, prodl, prodh
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14003 ;;      Params:         0       0       0       0       0       0       0       0       0
 14004 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14005 ;;      Temps:          3       0       0       0       0       0       0       0       0
 14006 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14007 ;;Total ram usage:        5 bytes
 14008 ;; Hardware stack levels used:    1
 14009 ;; This function calls:
 14010 ;;		Nothing
 14011 ;; This function is called by:
 14012 ;;		_guardar
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           	psect	text51
 14017  0053A2                     __ptext51:
 14018                           	opt callstack 0
 14019  0053A2                     ___delay_sec:
 14020                           	opt callstack 29
 14021                           
 14022                           ;incstack = 0
 14023                           ;___delay_sec@sec stored from wreg
 14024  0053A2  6E04               	movwf	___delay_sec@sec,c
 14025                           
 14026                           ;Main.c: 112:     for(char i=0;i<=(50*sec);i++) {
 14027  0053A4  0E00               	movlw	0
 14028  0053A6  6E05               	movwf	___delay_sec@i,c
 14029  0053A8  D008               	goto	l6417
 14030  0053AA                     l6413:
 14031                           
 14032                           ;Main.c: 113:         _delay((unsigned long)((20)*(8000000/4000.0)));
 14033  0053AA  0E34               	movlw	52
 14034  0053AC  6E01               	movwf	??___delay_sec& (0+255),c
 14035  0053AE  0EF2               	movlw	242
 14036  0053B0                     u9547:
 14037  0053B0  2EE8               	decfsz	wreg,f,c
 14038  0053B2  D7FE               	bra	u9547
 14039  0053B4  2E01               	decfsz	??___delay_sec& (0+255),f,c
 14040  0053B6  D7FC               	bra	u9547
 14041                           
 14042                           ;Main.c: 114:     }
 14043  0053B8  2A05               	incf	___delay_sec@i,f,c
 14044  0053BA                     l6417:
 14045  0053BA  5005               	movf	___delay_sec@i,w,c
 14046  0053BC  6E01               	movwf	??___delay_sec& (0+255),c
 14047  0053BE  6A02               	clrf	(??___delay_sec+1)& (0+255),c
 14048  0053C0  5004               	movf	___delay_sec@sec,w,c
 14049  0053C2  0D32               	mullw	50
 14050  0053C4  5001               	movf	??___delay_sec,w,c
 14051  0053C6  5CF3               	subwf	prodl,w,c
 14052  0053C8  50F4               	movf	prodh,w,c
 14053  0053CA  0A80               	xorlw	128
 14054  0053CC  6E03               	movwf	(??___delay_sec+2)& (0+255),c
 14055  0053CE  5002               	movf	??___delay_sec+1,w,c
 14056  0053D0  0A80               	xorlw	128
 14057  0053D2  5803               	subwfb	(??___delay_sec+2)& (0+255),w,c
 14058  0053D4  A0D8               	btfss	status,0,c
 14059  0053D6  0012               	return	
 14060  0053D8  D7E8               	goto	l6413
 14061  0053DA                     __end_of___delay_sec:
 14062                           	opt callstack 0
 14063                           
 14064 ;; *************** function _SYSTEM_Initialize *****************
 14065 ;; Defined at:
 14066 ;;		line 116 in file "mcc_generated_files/mcc.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;		None
 14069 ;; Auto vars:     Size  Location     Type
 14070 ;;		None
 14071 ;; Return value:  Size  Location     Type
 14072 ;;                  1    wreg      void 
 14073 ;; Registers used:
 14074 ;;		wreg, status,2, cstack
 14075 ;; Tracked objects:
 14076 ;;		On entry : 0/0
 14077 ;;		On exit  : 0/0
 14078 ;;		Unchanged: 0/0
 14079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14080 ;;      Params:         0       0       0       0       0       0       0       0       0
 14081 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14082 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14083 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14084 ;;Total ram usage:        0 bytes
 14085 ;; Hardware stack levels used:    1
 14086 ;; Hardware stack levels required when called:    1
 14087 ;; This function calls:
 14088 ;;		_EUSART1_Initialize
 14089 ;;		_OSCILLATOR_Initialize
 14090 ;;		_PIN_MANAGER_Initialize
 14091 ;;		_SPI1_Initialize
 14092 ;; This function is called by:
 14093 ;;		_main
 14094 ;;		_guardar
 14095 ;; This function uses a non-reentrant model
 14096 ;;
 14097                           
 14098                           	psect	text52
 14099  0054BC                     __ptext52:
 14100                           	opt callstack 0
 14101  0054BC                     _SYSTEM_Initialize:
 14102                           	opt callstack 28
 14103                           
 14104                           ;mcc_generated_files/mcc.c: 119:     PIN_MANAGER_Initialize();
 14105                           
 14106                           ;incstack = 0
 14107  0054BC  EC2B  F02A         	call	_PIN_MANAGER_Initialize	;wreg free
 14108                           
 14109                           ;mcc_generated_files/mcc.c: 120:     OSCILLATOR_Initialize();
 14110  0054C0  EC67  F02A         	call	_OSCILLATOR_Initialize	;wreg free
 14111                           
 14112                           ;mcc_generated_files/mcc.c: 121:     SPI1_Initialize();
 14113  0054C4  EC87  F02A         	call	_SPI1_Initialize	;wreg free
 14114                           
 14115                           ;mcc_generated_files/mcc.c: 122:     EUSART1_Initialize();
 14116  0054C8  EC4A  F02A         	call	_EUSART1_Initialize	;wreg free
 14117  0054CC  0012               	return		;funcret
 14118  0054CE                     __end_of_SYSTEM_Initialize:
 14119                           	opt callstack 0
 14120                           
 14121 ;; *************** function _SPI1_Initialize *****************
 14122 ;; Defined at:
 14123 ;;		line 63 in file "mcc_generated_files/spi1.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;		None
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;		None
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  1    wreg      void 
 14130 ;; Registers used:
 14131 ;;		wreg, status,2
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14137 ;;      Params:         0       0       0       0       0       0       0       0       0
 14138 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14140 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14141 ;;Total ram usage:        0 bytes
 14142 ;; Hardware stack levels used:    1
 14143 ;; This function calls:
 14144 ;;		Nothing
 14145 ;; This function is called by:
 14146 ;;		_disk_initialize
 14147 ;;		_SYSTEM_Initialize
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           	psect	text53
 14152  00550E                     __ptext53:
 14153                           	opt callstack 0
 14154  00550E                     _SPI1_Initialize:
 14155                           	opt callstack 26
 14156                           
 14157                           ;mcc_generated_files/spi1.c: 68:     SSP1STAT = 0x40;
 14158                           
 14159                           ;incstack = 0
 14160  00550E  0E40               	movlw	64
 14161  005510  6EC7               	movwf	4039,c	;volatile
 14162                           
 14163                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x22;
 14164  005512  0E22               	movlw	34
 14165  005514  6EC6               	movwf	4038,c	;volatile
 14166                           
 14167                           ;mcc_generated_files/spi1.c: 74:     SSP1ADD = 0x00;
 14168  005516  0E00               	movlw	0
 14169  005518  6EC8               	movwf	4040,c	;volatile
 14170  00551A  0012               	return		;funcret
 14171  00551C                     __end_of_SPI1_Initialize:
 14172                           	opt callstack 0
 14173                           
 14174 ;; *************** function _PIN_MANAGER_Initialize *****************
 14175 ;; Defined at:
 14176 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 14177 ;; Parameters:    Size  Location     Type
 14178 ;;		None
 14179 ;; Auto vars:     Size  Location     Type
 14180 ;;		None
 14181 ;; Return value:  Size  Location     Type
 14182 ;;                  1    wreg      void 
 14183 ;; Registers used:
 14184 ;;		wreg, status,2
 14185 ;; Tracked objects:
 14186 ;;		On entry : 0/0
 14187 ;;		On exit  : 0/0
 14188 ;;		Unchanged: 0/0
 14189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14190 ;;      Params:         0       0       0       0       0       0       0       0       0
 14191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14193 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14194 ;;Total ram usage:        0 bytes
 14195 ;; Hardware stack levels used:    1
 14196 ;; This function calls:
 14197 ;;		Nothing
 14198 ;; This function is called by:
 14199 ;;		_SYSTEM_Initialize
 14200 ;; This function uses a non-reentrant model
 14201 ;;
 14202                           
 14203                           	psect	text54
 14204  005456                     __ptext54:
 14205                           	opt callstack 0
 14206  005456                     _PIN_MANAGER_Initialize:
 14207                           	opt callstack 28
 14208                           
 14209                           ;mcc_generated_files/pin_manager.c: 59:     LATB = 0x04;
 14210                           
 14211                           ;incstack = 0
 14212  005456  0E04               	movlw	4
 14213  005458  6E8A               	movwf	3978,c	;volatile
 14214                           
 14215                           ;mcc_generated_files/pin_manager.c: 60:     LATC = 0x00;
 14216  00545A  0E00               	movlw	0
 14217  00545C  6E8B               	movwf	3979,c	;volatile
 14218                           
 14219                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF1;
 14220  00545E  0EF1               	movlw	241
 14221  005460  6E93               	movwf	3987,c	;volatile
 14222                           
 14223                           ;mcc_generated_files/pin_manager.c: 68:     TRISC = 0xC7;
 14224  005462  0EC7               	movlw	199
 14225  005464  6E94               	movwf	3988,c	;volatile
 14226                           
 14227                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC4;
 14228  005466  0EC4               	movlw	196
 14229  005468  010F               	movlb	15	; () banked
 14230  00546A  6F5D               	movwf	93,b	;volatile
 14231                           
 14232                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x30;
 14233  00546C  0E30               	movlw	48
 14234  00546E  6F5C               	movwf	92,b	;volatile
 14235                           
 14236                           ; BSR set to: 15
 14237                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0xFF;
 14238  005470  6885               	setf	3973,c	;volatile
 14239                           
 14240                           ; BSR set to: 15
 14241                           ;mcc_generated_files/pin_manager.c: 84:     INTCON2bits.nRBPU = 0;
 14242  005472  9EF1               	bcf	4081,7,c	;volatile
 14243                           
 14244                           ; BSR set to: 15
 14245  005474  0012               	return		;funcret
 14246  005476                     __end_of_PIN_MANAGER_Initialize:
 14247                           	opt callstack 0
 14248                           
 14249 ;; *************** function _OSCILLATOR_Initialize *****************
 14250 ;; Defined at:
 14251 ;;		line 125 in file "mcc_generated_files/mcc.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;		None
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;		None
 14256 ;; Return value:  Size  Location     Type
 14257 ;;                  1    wreg      void 
 14258 ;; Registers used:
 14259 ;;		wreg, status,2
 14260 ;; Tracked objects:
 14261 ;;		On entry : 0/0
 14262 ;;		On exit  : 0/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14265 ;;      Params:         0       0       0       0       0       0       0       0       0
 14266 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14267 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14268 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14269 ;;Total ram usage:        0 bytes
 14270 ;; Hardware stack levels used:    1
 14271 ;; This function calls:
 14272 ;;		Nothing
 14273 ;; This function is called by:
 14274 ;;		_SYSTEM_Initialize
 14275 ;; This function uses a non-reentrant model
 14276 ;;
 14277                           
 14278                           	psect	text55
 14279  0054CE                     __ptext55:
 14280                           	opt callstack 0
 14281  0054CE                     _OSCILLATOR_Initialize:
 14282                           	opt callstack 28
 14283                           
 14284                           ;mcc_generated_files/mcc.c: 128:     OSCCON = 0x60;
 14285                           
 14286                           ; BSR set to: 15
 14287                           ;incstack = 0
 14288  0054CE  0E60               	movlw	96
 14289  0054D0  6ED3               	movwf	4051,c	;volatile
 14290                           
 14291                           ;mcc_generated_files/mcc.c: 130:     OSCCON2 = 0x00;
 14292  0054D2  0E00               	movlw	0
 14293  0054D4  6ED2               	movwf	4050,c	;volatile
 14294                           
 14295                           ;mcc_generated_files/mcc.c: 132:     OSCTUNE = 0x00;
 14296  0054D6  0E00               	movlw	0
 14297  0054D8  6E9B               	movwf	3995,c	;volatile
 14298                           
 14299                           ;mcc_generated_files/mcc.c: 134:     ACTCON = 0x00;
 14300  0054DA  0E00               	movlw	0
 14301  0054DC  6EB5               	movwf	4021,c	;volatile
 14302  0054DE  0012               	return		;funcret
 14303  0054E0                     __end_of_OSCILLATOR_Initialize:
 14304                           	opt callstack 0
 14305                           
 14306 ;; *************** function _EUSART1_Initialize *****************
 14307 ;; Defined at:
 14308 ;;		line 55 in file "mcc_generated_files/eusart1.c"
 14309 ;; Parameters:    Size  Location     Type
 14310 ;;		None
 14311 ;; Auto vars:     Size  Location     Type
 14312 ;;		None
 14313 ;; Return value:  Size  Location     Type
 14314 ;;                  1    wreg      void 
 14315 ;; Registers used:
 14316 ;;		wreg, status,2
 14317 ;; Tracked objects:
 14318 ;;		On entry : 0/0
 14319 ;;		On exit  : 0/0
 14320 ;;		Unchanged: 0/0
 14321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14322 ;;      Params:         0       0       0       0       0       0       0       0       0
 14323 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14324 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14325 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14326 ;;Total ram usage:        0 bytes
 14327 ;; Hardware stack levels used:    1
 14328 ;; This function calls:
 14329 ;;		Nothing
 14330 ;; This function is called by:
 14331 ;;		_SYSTEM_Initialize
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           	psect	text56
 14336  005494                     __ptext56:
 14337                           	opt callstack 0
 14338  005494                     _EUSART1_Initialize:
 14339                           	opt callstack 28
 14340                           
 14341                           ;mcc_generated_files/eusart1.c: 60:     BAUDCON1 = 0x08;
 14342                           
 14343                           ;incstack = 0
 14344  005494  0E08               	movlw	8
 14345  005496  6EB8               	movwf	4024,c	;volatile
 14346                           
 14347                           ;mcc_generated_files/eusart1.c: 63:     RCSTA1 = 0x90;
 14348  005498  0E90               	movlw	144
 14349  00549A  6EAB               	movwf	4011,c	;volatile
 14350                           
 14351                           ;mcc_generated_files/eusart1.c: 66:     TXSTA1 = 0x24;
 14352  00549C  0E24               	movlw	36
 14353  00549E  6EAC               	movwf	4012,c	;volatile
 14354                           
 14355                           ;mcc_generated_files/eusart1.c: 69:     SPBRG1 = 0x40;
 14356  0054A0  0E40               	movlw	64
 14357  0054A2  6EAF               	movwf	4015,c	;volatile
 14358                           
 14359                           ;mcc_generated_files/eusart1.c: 72:     SPBRGH1 = 0x03;
 14360  0054A4  0E03               	movlw	3
 14361  0054A6  6EB0               	movwf	4016,c	;volatile
 14362  0054A8  0012               	return		;funcret
 14363  0054AA                     __end_of_EUSART1_Initialize:
 14364                           	opt callstack 0
 14365                           
 14366 ;; *************** function _Error *****************
 14367 ;; Defined at:
 14368 ;;		line 13 in file "./Errores.h"
 14369 ;; Parameters:    Size  Location     Type
 14370 ;;  a               2    0[COMRAM] int 
 14371 ;; Auto vars:     Size  Location     Type
 14372 ;;  v_seg          10    3[COMRAM] unsigned char [10]
 14373 ;; Return value:  Size  Location     Type
 14374 ;;                  1    wreg      void 
 14375 ;; Registers used:
 14376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14377 ;; Tracked objects:
 14378 ;;		On entry : 0/0
 14379 ;;		On exit  : 0/0
 14380 ;;		Unchanged: 0/0
 14381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14382 ;;      Params:         2       0       0       0       0       0       0       0       0
 14383 ;;      Locals:        10       0       0       0       0       0       0       0       0
 14384 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14385 ;;      Totals:        13       0       0       0       0       0       0       0       0
 14386 ;;Total ram usage:       13 bytes
 14387 ;; Hardware stack levels used:    1
 14388 ;; This function calls:
 14389 ;;		Nothing
 14390 ;; This function is called by:
 14391 ;;		_main
 14392 ;;		_guardar
 14393 ;;		_grabador
 14394 ;; This function uses a non-reentrant model
 14395 ;;
 14396                           
 14397                           	psect	text57
 14398  004A9A                     __ptext57:
 14399                           	opt callstack 0
 14400  004A9A                     _Error:
 14401                           	opt callstack 29
 14402                           
 14403                           ;./Errores.h: 14:     LATD = 0x00;
 14404                           
 14405                           ;incstack = 0
 14406  004A9A  0E00               	movlw	0
 14407  004A9C  6E8C               	movwf	3980,c	;volatile
 14408                           
 14409                           ;./Errores.h: 15:     TRISD = 0x00;
 14410  004A9E  0E00               	movlw	0
 14411  004AA0  6E95               	movwf	3989,c	;volatile
 14412                           
 14413                           ;./Errores.h: 16:     ANSELD = 0x00;
 14414  004AA2  0E00               	movlw	0
 14415  004AA4  010F               	movlb	15	; () banked
 14416  004AA6  6F5E               	movwf	94,b	;volatile
 14417                           
 14418                           ;./Errores.h: 17:     LATE = 0x00;
 14419  004AA8  0E00               	movlw	0
 14420  004AAA  6E8D               	movwf	3981,c	;volatile
 14421                           
 14422                           ;./Errores.h: 18:     TRISE = 0x00;
 14423  004AAC  0E00               	movlw	0
 14424  004AAE  6E96               	movwf	3990,c	;volatile
 14425                           
 14426                           ;./Errores.h: 19:     ANSELE = 0x00;
 14427  004AB0  0E00               	movlw	0
 14428  004AB2  6F5F               	movwf	95,b	;volatile
 14429                           
 14430                           ; BSR set to: 15
 14431                           ;./Errores.h: 21:     unsigned char v_seg[10]={0x7E,0x30,0x6D,0x79,0x33,0x5B,0x5F,0x70,0
      +                          x7F,0x73};
 14432  004AB4  EE20  F0E5         	lfsr	2,Error@F5055
 14433  004AB8  EE10  F004         	lfsr	1,Error@v_seg
 14434  004ABC  0E09               	movlw	9
 14435  004ABE                     u8471:
 14436  004ABE  CFDB FFE3          	movff	plusw2,plusw1
 14437  004AC2  06E8               	decf	wreg,f,c
 14438  004AC4  E2FC               	bc	u8471
 14439                           
 14440                           ; BSR set to: 15
 14441                           ;./Errores.h: 22:     if(a != 33 && a != 55){
 14442  004AC6  0E21               	movlw	33
 14443  004AC8  1801               	xorwf	Error@a,w,c
 14444  004ACA  1002               	iorwf	Error@a+1,w,c
 14445  004ACC  B4D8               	btfsc	status,2,c
 14446  004ACE  D010               	goto	l6369
 14447                           
 14448                           ; BSR set to: 15
 14449  004AD0  0E37               	movlw	55
 14450  004AD2  1801               	xorwf	Error@a,w,c
 14451  004AD4  1002               	iorwf	Error@a+1,w,c
 14452  004AD6  B4D8               	btfsc	status,2,c
 14453  004AD8  D00B               	goto	l6369
 14454                           
 14455                           ; BSR set to: 15
 14456                           ;./Errores.h: 23:     LATD = v_seg[a];
 14457  004ADA  0E04               	movlw	low Error@v_seg
 14458  004ADC  2401               	addwf	Error@a,w,c
 14459  004ADE  6ED9               	movwf	fsr2l,c
 14460  004AE0  0E00               	movlw	high Error@v_seg
 14461  004AE2  2002               	addwfc	Error@a+1,w,c
 14462  004AE4  6EDA               	movwf	fsr2h,c
 14463  004AE6  50DF               	movf	indf2,w,c
 14464  004AE8  6E8C               	movwf	3980,c	;volatile
 14465                           
 14466                           ; BSR set to: 15
 14467                           ;./Errores.h: 24:     LATE = 0x01;
 14468  004AEA  0E01               	movlw	1
 14469  004AEC  6E8D               	movwf	3981,c	;volatile
 14470                           
 14471                           ;./Errores.h: 25:     }
 14472  004AEE  0012               	return	
 14473  004AF0                     l6369:
 14474                           
 14475                           ; BSR set to: 15
 14476  004AF0  0E21               	movlw	33
 14477  004AF2  1801               	xorwf	Error@a,w,c
 14478  004AF4  1002               	iorwf	Error@a+1,w,c
 14479  004AF6  A4D8               	btfss	status,2,c
 14480  004AF8  D005               	goto	l6375
 14481                           
 14482                           ; BSR set to: 15
 14483                           ;./Errores.h: 27:     LATD = v_seg[0];
 14484  004AFA  C004  FF8C         	movff	Error@v_seg,3980	;volatile
 14485                           
 14486                           ; BSR set to: 15
 14487                           ;./Errores.h: 28:     LATE = 0x02;
 14488  004AFE  0E02               	movlw	2
 14489  004B00  6E8D               	movwf	3981,c	;volatile
 14490                           
 14491                           ;./Errores.h: 29:     }
 14492  004B02  0012               	return	
 14493  004B04                     l6375:
 14494                           
 14495                           ; BSR set to: 15
 14496  004B04  0EE7               	movlw	231
 14497  004B06  1801               	xorwf	Error@a,w,c
 14498  004B08  E107               	bnz	l886
 14499  004B0A  0E03               	movlw	3
 14500  004B0C  1802               	xorwf	Error@a+1,w,c
 14501  004B0E  A4D8               	btfss	status,2,c
 14502  004B10  D003               	goto	l886
 14503  004B12                     u8510:
 14504                           
 14505                           ;./Errores.h: 31:     LATE = 0x00;
 14506  004B12  0E00               	movlw	0
 14507  004B14  6E8D               	movwf	3981,c	;volatile
 14508                           
 14509                           ;./Errores.h: 32:     }
 14510  004B16  0012               	return	
 14511  004B18                     l886:
 14512                           
 14513                           ; BSR set to: 15
 14514                           ;./Errores.h: 34:     LATD = v_seg[0];
 14515  004B18  C004  FF8C         	movff	Error@v_seg,3980	;volatile
 14516                           
 14517                           ; BSR set to: 15
 14518                           ;./Errores.h: 35:     LATE = 0x01;
 14519  004B1C  0E01               	movlw	1
 14520  004B1E  6E8D               	movwf	3981,c	;volatile
 14521                           
 14522                           ; BSR set to: 15
 14523                           ;./Errores.h: 36:     _delay((unsigned long)((1)*(8000000/4000.0)));
 14524  004B20  0E03               	movlw	3
 14525  004B22  6E03               	movwf	??_Error& (0+255),c
 14526  004B24  0E98               	movlw	152
 14527  004B26                     u9557:
 14528  004B26  2EE8               	decfsz	wreg,f,c
 14529  004B28  D7FE               	bra	u9557
 14530  004B2A  2E03               	decfsz	??_Error& (0+255),f,c
 14531  004B2C  D7FC               	bra	u9557
 14532                           
 14533                           ;./Errores.h: 38:     LATE = 0x00;
 14534  004B2E  0E00               	movlw	0
 14535  004B30  6E8D               	movwf	3981,c	;volatile
 14536                           
 14537                           ;./Errores.h: 39:     LATD = v_seg[9];
 14538  004B32  C00D  FF8C         	movff	Error@v_seg+9,3980	;volatile
 14539                           
 14540                           ;./Errores.h: 40:     LATE = 0x02;
 14541  004B36  0E02               	movlw	2
 14542  004B38  6E8D               	movwf	3981,c	;volatile
 14543                           
 14544                           ;./Errores.h: 41:     _delay((unsigned long)((1)*(8000000/4000.0)));
 14545  004B3A  0E03               	movlw	3
 14546  004B3C  6E03               	movwf	??_Error& (0+255),c
 14547  004B3E  0E98               	movlw	152
 14548  004B40                     u9567:
 14549  004B40  2EE8               	decfsz	wreg,f,c
 14550  004B42  D7FE               	bra	u9567
 14551  004B44  2E03               	decfsz	??_Error& (0+255),f,c
 14552  004B46  D7FC               	bra	u9567
 14553                           
 14554                           ;./Errores.h: 43:     LATE = 0x00;
 14555  004B48  0E00               	movlw	0
 14556  004B4A  6E8D               	movwf	3981,c	;volatile
 14557                           
 14558                           ;./Errores.h: 44:     LATD = v_seg[6];
 14559  004B4C  C00A  FF8C         	movff	Error@v_seg+6,3980	;volatile
 14560                           
 14561                           ;./Errores.h: 45:     LATE = 0x04;
 14562  004B50  0E04               	movlw	4
 14563  004B52  6E8D               	movwf	3981,c	;volatile
 14564                           
 14565                           ;./Errores.h: 46:     _delay((unsigned long)((1)*(8000000/4000.0)));
 14566  004B54  0E03               	movlw	3
 14567  004B56  6E03               	movwf	??_Error& (0+255),c
 14568  004B58  0E98               	movlw	152
 14569  004B5A                     u9577:
 14570  004B5A  2EE8               	decfsz	wreg,f,c
 14571  004B5C  D7FE               	bra	u9577
 14572  004B5E  2E03               	decfsz	??_Error& (0+255),f,c
 14573  004B60  D7FC               	bra	u9577
 14574  004B62  D7D7               	goto	u8510
 14575  004B64                     __end_of_Error:
 14576                           	opt callstack 0
 14577                           
 14578                           	psect	rparam
 14579  0000                     tosu	equ	0xFFF
 14580                           tosh	equ	0xFFE
 14581                           tosl	equ	0xFFD
 14582                           stkptr	equ	0xFFC
 14583                           pclatu	equ	0xFFB
 14584                           pclath	equ	0xFFA
 14585                           pcl	equ	0xFF9
 14586                           tblptru	equ	0xFF8
 14587                           tblptrh	equ	0xFF7
 14588                           tblptrl	equ	0xFF6
 14589                           tablat	equ	0xFF5
 14590                           prodh	equ	0xFF4
 14591                           prodl	equ	0xFF3
 14592                           indf0	equ	0xFEF
 14593                           postinc0	equ	0xFEE
 14594                           postdec0	equ	0xFED
 14595                           preinc0	equ	0xFEC
 14596                           plusw0	equ	0xFEB
 14597                           fsr0h	equ	0xFEA
 14598                           fsr0l	equ	0xFE9
 14599                           wreg	equ	0xFE8
 14600                           indf1	equ	0xFE7
 14601                           postinc1	equ	0xFE6
 14602                           postdec1	equ	0xFE5
 14603                           preinc1	equ	0xFE4
 14604                           plusw1	equ	0xFE3
 14605                           fsr1h	equ	0xFE2
 14606                           fsr1l	equ	0xFE1
 14607                           bsr	equ	0xFE0
 14608                           indf2	equ	0xFDF
 14609                           postinc2	equ	0xFDE
 14610                           postdec2	equ	0xFDD
 14611                           preinc2	equ	0xFDC
 14612                           plusw2	equ	0xFDB
 14613                           fsr2h	equ	0xFDA
 14614                           fsr2l	equ	0xFD9
 14615                           status	equ	0xFD8


Data Sizes:
    Strings     130
    Constant    0
    Data        15
    BSS         611
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    112     148
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Fil.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    Fil.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    buffor	PTR unsigned char  size(2) Largest target is 104
		 -> STR_3(CODE[104]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_lseek@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_lseek@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_close@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_sync@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_write@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_read@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_read@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    f_read@br	PTR unsigned short  size(2) Largest target is 2
		 -> bw(BANK0[2]), 

    f_read@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_read@rbuff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[1]), STR_4(CODE[1]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_open@fp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dj.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[1]), STR_4(CODE[1]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[1]), STR_4(CODE[1]), 

    S221$dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    validate@fil.dir_ptr	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    S221$fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    validate@fil.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    validate@obj	PTR void  size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    validate@fil	PTR struct . size(2) Largest target is 34
		 -> Fil(BANK1[32]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    ff@FatFs	PTR struct .[1] size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_open@path(BANK0[2]), f_mount@path(COMRAM[2]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), f_mount@fs(COMRAM[2]), 

    check_fs@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[1]), STR_4(CODE[1]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[1]), STR_4(CODE[1]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_open@path(BANK0[2]), f_mount@path(COMRAM[2]), f_mount@rp(COMRAM[2]), 

    follow_path@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    follow_path@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    follow_path@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    follow_path@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    follow_path@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[1]), STR_4(CODE[1]), 

    create_name@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    create_name@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    create_name@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[1]), STR_4(CODE[1]), 

    dir_register@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_register@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_register@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    dir_find@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_find@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_find@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_find@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_alloc@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_alloc@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_alloc@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    dir_next@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_next@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_next@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    S210$fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    dir_sdi@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    S210$dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_sdi@dp.dir	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    S210$fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_sdi@dp.fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 25
		 -> f_open@dj(BANK0[22]), 

    create_chain@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    put_fat@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    get_fat@p	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    get_fat@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    clust2sect@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    move_window@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(BANK0[12]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    mem_set@dst	PTR void  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), f_open@sfn(BANK0[12]), NULL(NULL[0]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), f_open@sfn(BANK0[12]), NULL(NULL[0]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), ND(BANK0[2]), f_open@sfn(BANK0[12]), 
		 -> NULL(NULL[0]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), ND(BANK0[2]), f_open@sfn(BANK0[12]), 
		 -> NULL(NULL[0]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_ioctl@ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), ND(BANK0[2]), NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), NULL(NULL[0]), 

    xmit_datablock@buff	PTR const unsigned char  size(2) Largest target is 558
		 -> FatFs.win(BIGRAM[512]), FatFs(BIGRAM[558]), ND(BANK0[2]), NULL(NULL[0]), 

    rcvr_datablock@buff	PTR unsigned char  size(2) Largest target is 558
		 -> FatFs(BIGRAM[558]), disk_ioctl@csd(COMRAM[16]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _reproductor->_f_read
    _f_read->_get_fat
    _f_open->_remove_chain
    _remove_chain->_get_fat
    _remove_chain->_put_fat
    _create_name->_mem_set
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _f_mount->_find_volume
    _find_volume->_check_fs
    _disk_initialize->_send_cmd
    _check_fs->_move_window
    _f_lseek->_create_chain
    _create_chain->_get_fat
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _clust2sect->___lmul
    _f_close->_f_sync
    _f_sync->_sync_fs
    _validate->_disk_status
    _sync_fs->_disk_ioctl
    _disk_ioctl->_send_cmd
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_send_cmd
    _xmit_datablock->_wait_ready
    _disk_read->_send_cmd
    _send_cmd->___send_cmd
    _select->_wait_ready
    _wait_ready->_SPI1_Exchange8bit
    _deselect->_SPI1_Exchange8bit
    _rcvr_datablock->_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    _guardar->_f_open
    _reproductor->_f_read
    _f_open->_find_volume
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_next->_create_chain
    _f_mount->_find_volume
    _f_lseek->_create_chain

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  411713
                              _Error
                  _SYSTEM_Initialize
                            _guardar
 ---------------------------------------------------------------------------------
 (1) _guardar                                              0     0      0  410653
                              _Error
                  _SYSTEM_Initialize
                        ___delay_sec
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                        _reproductor
 ---------------------------------------------------------------------------------
 (2) _reproductor                                          1     1      0   34520
                                             93 COMRAM     1     1      0
                             _f_read
 ---------------------------------------------------------------------------------
 (3) _f_read                                              40    32      8   34520
                                             85 COMRAM     8     0      8
                                              0 BANK0     32    32      0
                         _clust2sect
                          _disk_read
                            _get_fat
                            _mem_cpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_open                                              54    49      5  266319
                                             58 BANK0     54    49      5
                       _dir_register
                        _find_volume
                        _follow_path
                           _ld_clust
                        _move_window
                       _remove_chain
                           _st_clust
 ---------------------------------------------------------------------------------
 (3) _remove_chain                                        15     9      6   27554
                                             85 COMRAM    10     4      6
                                              0 BANK0      5     5      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _follow_path                                          8     4      4   99588
                                             38 BANK0      8     4      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (3) _ld_clust                                            14    10      4     546
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             6     4      2   79471
                                             32 BANK0      6     4      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _mem_cmp                                             14     8      6     364
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (4) _create_name                                         23    19      4    2632
                                              8 COMRAM    23    19      4
                            _chk_chr
                            _mem_set
 ---------------------------------------------------------------------------------
 (5) _chk_chr                                              6     2      4     241
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _dir_register                                         3     1      2   93436
                                             42 BANK0      3     1      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _mem_cpy                                             10     4      6    1323
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) _dir_alloc                                           10     6      4   79139
                                             32 BANK0     10     6      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _dir_sdi                                             21    17      4   16225
                                             85 COMRAM     4     0      4
                                              0 BANK0     17    17      0
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_next                                            19    15      4   50796
                                             13 BANK0     19    15      4
                         _clust2sect
                       _create_chain
                            _get_fat
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (2) _f_mount                                             12     7      5   32640
                                             81 COMRAM    12     7      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (3) _find_volume                                         71    66      5   31300
                                             68 COMRAM    13     8      5
                                              0 BANK0     58    58      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        14    12      2     536
                                              0 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (4) _disk_initialize                                     13    13      0    2686
                                             16 COMRAM    13    13      0
                  _SPI1_Exchange8bit
                    _SPI1_Initialize
                          _SPI1_Open
                           _deselect
                           _send_cmd
 ---------------------------------------------------------------------------------
 (5) _SPI1_Open                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _check_fs                                            10     4      6   12132
                                             58 COMRAM    10     4      6
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_lseek                                             39    33      6   46625
                                             13 BANK0     39    33      6
                            ___lldiv
                         _clust2sect
                       _create_chain
                            _get_fat
                           _validate
 ---------------------------------------------------------------------------------
 (6) _create_chain                                        23    17      6   28695
                                             85 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (4) _put_fat                                             27    17     10   13520
                                             58 COMRAM    27    17     10
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             27    21      6   13479
                                             58 COMRAM    27    21      6
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _clust2sect                                          11     5      6    1535
                                             12 COMRAM    11     5      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     512
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     564
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _f_close                                              3     1      2   29443
                                             77 COMRAM     3     1      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (3) _f_sync                                               9     7      2   28692
                                             68 COMRAM     9     7      2
                        _move_window
                           _st_clust
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (4) _validate                                             8     6      2     557
                                              1 COMRAM     8     6      2
                        _disk_status
 ---------------------------------------------------------------------------------
 (5) _disk_status                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _sync_fs                                             11     9      2   15570
                                             57 COMRAM    11     9      2
                         _disk_ioctl
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _mem_set                                              8     2      6    1002
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_ioctl                                          41    38      3    5270
                                             16 COMRAM    41    38      3
                  _SPI1_Exchange8bit
                             ___wmul
                           _deselect
                     _rcvr_datablock
                             _select
                           _send_cmd
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     711
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _st_clust                                             6     0      6     392
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (4) _move_window                                         11     5      6   11674
                                             47 COMRAM    11     5      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (5) _sync_window                                         21    19      2    4808
                                             26 COMRAM    21    19      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (6) _disk_write                                          10     2      8    3972
                                             16 COMRAM    10     2      8
                           _deselect
                           _send_cmd
                     _xmit_datablock
 ---------------------------------------------------------------------------------
 (7) _xmit_datablock                                       6     3      3     659
                                              3 COMRAM     6     3      3
                  _SPI1_Exchange8bit
                         _wait_ready
 ---------------------------------------------------------------------------------
 (5) _disk_read                                           12     4      8    4058
                                             16 COMRAM    12     4      8
                           _deselect
                     _rcvr_datablock
                           _send_cmd
 ---------------------------------------------------------------------------------
 (7) _send_cmd                                             6     2      4    2155
                                             10 COMRAM     6     2      4
                         ___send_cmd
 ---------------------------------------------------------------------------------
 (8) ___send_cmd                                           7     3      4     599
                                              3 COMRAM     7     3      4
                  _SPI1_Exchange8bit
                           _deselect
                             _select
 ---------------------------------------------------------------------------------
 (9) _select                                               0     0      0     112
                  _SPI1_Exchange8bit
                           _deselect
                         _wait_ready
 ---------------------------------------------------------------------------------
 (8) _wait_ready                                           2     2      0      68
                                              1 COMRAM     2     2      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (10) _deselect                                            0     0      0      22
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _rcvr_datablock                                       7     3      4    1200
                                              1 COMRAM     7     3      4
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (9) _SPI1_Exchange8bit                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___delay_sec                                          5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (5) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Error                                               13    11      2    1060
                                              0 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Error
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _guardar
     _Error
     _SYSTEM_Initialize
       _EUSART1_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _SPI1_Initialize
     ___delay_sec
     _f_close
       _f_sync
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _st_clust
         _sync_fs
           _disk_ioctl
             _SPI1_Exchange8bit
             ___wmul
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _select
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _wait_ready
                 _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _disk_write
             _deselect
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
             _xmit_datablock
               _SPI1_Exchange8bit
               _wait_ready
                 _SPI1_Exchange8bit
           _mem_set
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _validate
           _disk_status
       _validate
         _disk_status
     _f_lseek
       ___lldiv
       _clust2sect
         ___lmul
       _create_chain
         _get_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _put_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
       _get_fat
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
       _validate
         _disk_status
     _f_mount
       _find_volume
         ___lldiv
         ___lmul
         _check_fs
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _disk_initialize
           _SPI1_Exchange8bit
           _SPI1_Initialize
           _SPI1_Open
           _deselect
             _SPI1_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _select
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _disk_status
         _get_ldnumber
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
       _get_ldnumber
     _f_open
       _dir_register
         _dir_alloc
           _dir_next
             _clust2sect
               ___lmul
             _create_chain
               _get_fat
                 _move_window
                   _disk_read
                     _deselect
                       _SPI1_Exchange8bit
                     _rcvr_datablock
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                   _sync_window
                     _disk_write
                       _deselect
                         _SPI1_Exchange8bit
                       _send_cmd
                         ___send_cmd
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _select
                             _SPI1_Exchange8bit
                             _deselect
                               _SPI1_Exchange8bit
                             _wait_ready
                               _SPI1_Exchange8bit
                       _xmit_datablock
                         _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
               _put_fat
                 _move_window
                   _disk_read
                     _deselect
                       _SPI1_Exchange8bit
                     _rcvr_datablock
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                   _sync_window
                     _disk_write
                       _deselect
                         _SPI1_Exchange8bit
                       _send_cmd
                         ___send_cmd
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _select
                             _SPI1_Exchange8bit
                             _deselect
                               _SPI1_Exchange8bit
                             _wait_ready
                               _SPI1_Exchange8bit
                       _xmit_datablock
                         _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI1_Exchange8bit
                   _rcvr_datablock
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                     _xmit_datablock
                       _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
             _mem_set
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _dir_sdi
             _clust2sect
               ___lmul
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI1_Exchange8bit
                   _rcvr_datablock
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                     _xmit_datablock
                       _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _mem_cpy
         _mem_set
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
       _find_volume
         ___lldiv
         ___lmul
         _check_fs
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _disk_initialize
           _SPI1_Exchange8bit
           _SPI1_Initialize
           _SPI1_Open
           _deselect
             _SPI1_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _select
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _disk_status
         _get_ldnumber
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
       _follow_path
         _create_name
           _chk_chr
           _mem_set
         _dir_find
           _dir_next
             _clust2sect
               ___lmul
             _create_chain
               _get_fat
                 _move_window
                   _disk_read
                     _deselect
                       _SPI1_Exchange8bit
                     _rcvr_datablock
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                   _sync_window
                     _disk_write
                       _deselect
                         _SPI1_Exchange8bit
                       _send_cmd
                         ___send_cmd
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _select
                             _SPI1_Exchange8bit
                             _deselect
                               _SPI1_Exchange8bit
                             _wait_ready
                               _SPI1_Exchange8bit
                       _xmit_datablock
                         _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
               _put_fat
                 _move_window
                   _disk_read
                     _deselect
                       _SPI1_Exchange8bit
                     _rcvr_datablock
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                   _sync_window
                     _disk_write
                       _deselect
                         _SPI1_Exchange8bit
                       _send_cmd
                         ___send_cmd
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _select
                             _SPI1_Exchange8bit
                             _deselect
                               _SPI1_Exchange8bit
                             _wait_ready
                               _SPI1_Exchange8bit
                       _xmit_datablock
                         _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI1_Exchange8bit
                   _rcvr_datablock
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                     _xmit_datablock
                       _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
             _mem_set
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _dir_sdi
             _clust2sect
               ___lmul
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _SPI1_Exchange8bit
                   _rcvr_datablock
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                 _sync_window
                   _disk_write
                     _deselect
                       _SPI1_Exchange8bit
                     _send_cmd
                       ___send_cmd
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _select
                           _SPI1_Exchange8bit
                           _deselect
                             _SPI1_Exchange8bit
                           _wait_ready
                             _SPI1_Exchange8bit
                     _xmit_datablock
                       _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
           _mem_cmp
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _dir_sdi
           _clust2sect
             ___lmul
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _SPI1_Exchange8bit
                 _rcvr_datablock
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
               _sync_window
                 _disk_write
                   _deselect
                     _SPI1_Exchange8bit
                   _send_cmd
                     ___send_cmd
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _select
                         _SPI1_Exchange8bit
                         _deselect
                           _SPI1_Exchange8bit
                         _wait_ready
                           _SPI1_Exchange8bit
                   _xmit_datablock
                     _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
         _ld_clust
       _ld_clust
       _move_window
         _disk_read
           _deselect
             _SPI1_Exchange8bit
           _rcvr_datablock
             _SPI1_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _select
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _sync_window
           _disk_write
             _deselect
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
             _xmit_datablock
               _SPI1_Exchange8bit
               _wait_ready
                 _SPI1_Exchange8bit
       _remove_chain
         _get_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _put_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
       _st_clust
     _reproductor
       _f_read
         _clust2sect
           ___lmul
         _disk_read
           _deselect
             _SPI1_Exchange8bit
           _rcvr_datablock
             _SPI1_Exchange8bit
           _send_cmd
             ___send_cmd
               _SPI1_Exchange8bit
               _deselect
                 _SPI1_Exchange8bit
               _select
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _get_fat
           _move_window
             _disk_read
               _deselect
                 _SPI1_Exchange8bit
               _rcvr_datablock
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
             _sync_window
               _disk_write
                 _deselect
                   _SPI1_Exchange8bit
                 _send_cmd
                   ___send_cmd
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _select
                       _SPI1_Exchange8bit
                       _deselect
                         _SPI1_Exchange8bit
                       _wait_ready
                         _SPI1_Exchange8bit
                 _xmit_datablock
                   _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
         _mem_cpy
         _move_window
           _disk_read
             _deselect
               _SPI1_Exchange8bit
             _rcvr_datablock
               _SPI1_Exchange8bit
             _send_cmd
               ___send_cmd
                 _SPI1_Exchange8bit
                 _deselect
                   _SPI1_Exchange8bit
                 _select
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _wait_ready
                     _SPI1_Exchange8bit
           _sync_window
             _disk_write
               _deselect
                 _SPI1_Exchange8bit
               _send_cmd
                 ___send_cmd
                   _SPI1_Exchange8bit
                   _deselect
                     _SPI1_Exchange8bit
                   _select
                     _SPI1_Exchange8bit
                     _deselect
                       _SPI1_Exchange8bit
                     _wait_ready
                       _SPI1_Exchange8bit
               _xmit_datablock
                 _SPI1_Exchange8bit
                 _wait_ready
                   _SPI1_Exchange8bit
         _validate
           _disk_status

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     22E      21       27.3%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      20       8       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      94       5       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113       6        0.0%
DATA                 0      0     341       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jun 02 13:34:36 2019

              _SPI1_Exchange8bit 54E0                      get_fat@clst 003D  
                              _a 00D8                                _i 00EF  
                   create_name@b 0015                     create_name@c 001F  
                   create_name@d 001A                     create_name@i 001D  
                   create_name@p 0018               ?_SPI1_Exchange8bit 0001  
               get_ldnumber@path 0001                               l17 5350  
                             l35 509E                               l70 3A3E  
                             l81 3B06                               l92 3C04  
                             l95 3BD4                               _ND 00E1  
                             _bw 00E3                      disk_ioctl@n 0037  
            ___wmul@multiplicand 0003                   ??_dir_register 0060  
               disk_write@sector 0013                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                    create_name@dp 0009  
                  create_name@ni 0016                     __CFG_CP2$OFF 000000  
                  create_name@si 0013                   create_chain@cs 0069  
                   __CFG_CP3$OFF 000000                   create_chain@fs 0056  
                    __CFG_LVP$ON 000000                              l113 49EC  
                            l114 4A00                              l130 4460  
                            l131 4468                              l132 447C  
                            l109 49E2                              l126 4456  
                            l302 405A                              l136 44DC  
                            l242 3DD8                              l155 1F9E  
                            l252 2AFA                              l317 32FE  
                            l334 34DA                              l255 2E4A  
                            l336 34D2                              l520 0A24  
                            l432 38B4                              l257 2B04  
                            l533 0B6C                              l349 36AA  
                            l605 1CB8                              l278 22C0  
                            l391 463E                              l456 3A0A  
                            l547 1064                              l539 0D06  
                            l469 415C                              l581 2F3E  
                            l750 54E8                              l590 30B0  
                            l582 2F36                              l671 154A  
                            l667 12BA                              l588 30C8  
                            l886 4B18                              l985 4E78  
                            _GIE 007F97                     __CFG_CPB$OFF 000000  
                   __CFG_CPD$OFF 000000                              _Fil 0100  
            ??_SPI1_Exchange8bit 0001                              _out 00D6  
                   disk_read@cmd 001C                   ??_create_chain 005C  
                            wreg 000FE8                disk_initialize@ty 001A  
                 create_name@sfn 001B                  create_chain@ncl 0065  
                     Error@F5055 00E5                  create_chain@scl 0061  
                create_chain@res 0060                      ld_clust@dir 0003  
                           l5011 289C                             l4215 5336  
                           l4303 516E                             l5023 28BA  
                           l5107 3AD6                             l5035 295A  
                           l5051 29F8                             l6011 1D48  
                           l4237 548C                             l4253 4EA6  
                           l4333 5314                             l4317 51AC  
                           l4405 453E                             l5141 3B92  
                           l5133 3B5E                             l5125 3B36  
                           l5301 37C0                             l6005 1D00  
                           l6013 1DA6                             l6021 1DE2  
                           l5215 3DB0                             l5143 3BA4  
                           l5047 29B0                             l5055 2A56  
                           l5303 37C4                             l4281 4EF8  
                           l4273 4EE0                             l5137 3B6C  
                           l5081 3A5C                             l5073 3A4A  
                           l5241 460C                             l4355 50B2  
                           l4339 5082                             l4443 4A86  
                           l4427 4A14                             l6051 4302  
                           l4531 2C98                             l5243 4614  
                           l5227 4578                             l5315 3832  
                           l6211 31EE                             l6107 2E6A  
                           l4269 4ED4                             l4701 336C  
                           l5077 3A54                             l5173 4F9C  
                           l5181 4FCC                             l5405 39C8  
                           l5341 38AA                             l6141 2F1A  
                           l4287 4F08                             l4279 4EF4  
                           l4391 44BE                             l4527 2C70  
                           l4623 2684                             l6303 1620  
                           l5095 3AA2                             l5183 4FDA  
                           l5271 4666                             l4297 5158  
                           l4465 3ECA                             l4801 1FE4  
                           l4529 2C8E                             l4609 2580  
                           l4625 26B0                             l6241 126E  
                           l5505 4816                             l5441 4840  
                           l6081 4C70                             l5601 49C8  
                           l5337 3890                             l5257 4F78  
                           l6137 2F0E                             l6129 2EE4  
                           l6401 5036                             l4459 3E50  
                           l4811 2032                             l5523 4E04  
                           l4635 5216                             l4539 2D54  
                           l4619 2672                             l4731 34BA  
                           l6235 124C                             l5443 4844  
                           l6075 4C42                             l5419 39F8  
                           l5291 470C                             l5611 40A8  
                           l6413 53AA                             l4469 3ED6  
                           l4477 3F30                             l4805 1FEC  
                           l4645 53E4                             l5533 4E2A  
                           l4549 2E1E                             l4725 3452  
                           l4717 33E0                             l6341 17DA  
                           l6317 16A0                             l6085 4C84  
                           l5189 4FF6                             l5285 46CC  
                           l4495 4D54                             l4823 214A  
                           l4751 54B6                             l5519 4E00  
                           l5535 4E36                             l4639 522A  
                           l6271 1508                             l6335 1768  
                           l6095 4CB0                             l5375 394C  
                           l6417 53BA                             l4497 4D70  
                           l4833 2190                             l4649 53F4  
                           l5545 4E6A                             l4577 237C  
                           l4681 32AA                             l4673 325A  
                           l6281 1566                             l6257 148A  
                           l5473 48EE                             l4913 35A6  
                           l6177 3096                             l4843 21E4  
                           l4827 2158                             l4819 20C2  
                           l4771 1E0E                             l4763 1E00  
                           l4659 4BBA                             l4595 2498  
                           l4579 23B0                             l4923 35F8  
                           l4907 3556                             l5395 3988  
                           l5387 3976                             l5619 40FC  
                           l5571 3FD0                             l5555 3F6A  
                           l6195 310E                             l4861 223A  
                           l4853 2202                             l4685 32CE  
                           l6293 15D8                             l6285 1574  
                           l5493 479E                             l5469 48E4  
                           l5717 0964                             l5709 095A  
                           l4933 366A                             l4925 361E  
                           l5397 3998                             l5581 404A  
                           l5557 3F72                             l6375 4B04  
                           l4839 21C2                             l4775 1E1C  
                           l4863 2240                             l4599 24CE  
                           l6295 160C                             l6279 152E  
                           l5487 4780                             l5751 0A70  
                           l5399 399E                             l5655 41C0  
                           l6607 4402                             _ADIE 007CEE  
                           _ADIF 007CF6                             l6369 4AF0  
                           l4849 21FA                             l4785 1EFA  
                           l4865 2282                             l4689 330E  
                           l5913 1208                             l5745 0A5A  
                           l5729 09A2                             l4945 36EA  
                           l4881 50FC                             l6617 4434  
                           l5499 47DC                             l5771 0B02  
                           l5739 0A08                             l5853 0DF2  
                           l5773 0B08                             l5757 0AB6  
                           l5693 091C                             l5677 08D8  
                           l5669 08B2                             l5759 0ADC  
                           l4887 525E                             l5857 0E08  
                           l5777 0B0C                             l5697 0920  
                           l4969 26FA                             l4889 5262  
                           l5945 190A                             l6577 433A  
                           l4995 281A                             l4979 275E  
                           l5963 1A26                             l5955 19C2  
                           l5971 1A66                             l5877 0F42  
                           l4989 2804                             l5957 1A02  
                           l6597 43DA                             l5799 0BCA  
                           l5991 1BA0                             l6687 52D8  
                           l5889 1036                             l5985 1B4E  
                           l5969 1A4A                             l5979 1AC6  
                           l5997 1C7C                             l5999 1C9C  
                           STR_1 0869                             STR_2 0869  
                           STR_3 0801                             STR_4 0868  
                           STR_5 0868                             STR_6 0878  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             u5040 4CF8  
                           u6000 26F6                             u5115 2BEC  
                           u5205 230A                             u5070 2ACA  
                           u4520 5358                             u5160 2D96  
                           u5080 2AEA                             u5145 2C7C  
                           u4530 5364                             u5410 335A  
                           u5235 23FC                             _PEIE 007F96  
                           u4620 5154                             u7020 4E00  
                           u5260 24B6                             u5180 229A  
                           u6060 2800                             u5165 2D8C  
                           u6045 276A                             u5190 22BA  
                           u5430 33B8                             u6070 2816  
                           u5095 2B4E                             u7040 4E3A  
                           u5280 25C2                             u5360 3248  
                           u7120 4024                             u5265 24AC  
                           u4730 4452                             u5610 1F98  
                           u6330 3BDC                             u7130 407A  
                           u4820 44F8                             u5540 1E18  
                           u5380 32BC                             u6260 3B0E  
                           u6180 3A44                             u7300 0918  
                           u7220 4156                             u7060 3F44  
                           u5605 1F28                             u5285 25B8  
                           u6165 2A78                             u6350 3C00  
                           u6510 4660                             u7070 3F64  
                           u5615 1F8E                             u4840 4520  
                           u7400 0AF6                             u5705 2076  
                           u4690 50A6                             u5490 3492  
                           u7170 40A2                             u5715 2098  
                           u4940 4A3C                             u4860 454E  
                           u5724 20B6                             u5660 2014  
                           u8220 1248                             u7420 0B08  
                           u6460 45F8                             u6700 38CC  
                           u5820 510C                             u4925 49F2  
                           u5725 20B0                             u8310 14F4  
                           u6630 387A                             u5830 5140  
                           u4775 446E                             u5735 2100  
                           u4960 4A68                             u8320 151A  
                           u6480 4632                             u6720 38F6  
                           u5665 200A                             u5585 1ED2  
                           u4890 49DE                             u5930 367A  
                           u5850 5292                             u6650 388C  
                           u5595 1F02                             u4980 4A96  
                           u8420 1754                             u7620 108A  
                           u6740 3902                             u7525 0D3A  
                           u8510 4B12                             u7550 0DEE  
                           u5870 3552                             u8440 17BE  
                           u7560 0E04                             u6680 38C0  
                           u8425 174A                             u7625 1080  
                           u8370 1630                             u8275 1332  
                           u8390 16B4                             u6950 479A  
                           u7750 1964                             u8471 4ABE  
                           u5975 3720                             u7815 1ADE  
                           u6960 47D8                             u5985 376C  
                           u6890 4866                             u9507 3AF8  
                           u7595 0F22                             u7755 195A  
                           u9517 3BC6                             u9527 5344  
                           u9537 5092                             u8850 4358  
                           u9547 53B0                             u7875 1C3E  
                           u9557 4B26                             u7885 1C86  
                           u7990 4CAC                             u9567 4B40  
                           u9577 4B5A                             u9497 505C  
                           _WPUB 000F85                             _Fsid 00DC  
                           _Stat 00F3                             _data 00D4  
                           _main 52A4                     find_volume@i 0095  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           _volt 00D0                    __CFG_BORV$190 000000  
                  disk_ioctl@cmd 0011                    disk_ioctl@csd 0021  
                  disk_read@buff 0011                    disk_ioctl@res 0036  
                  disk_ioctl@ptr 0038                    disk_read@pdrv 0019  
                           prodh 000FF4                             prodl 000FF3  
                 ??_get_ldnumber 0003                             start 0000  
      __end_of_SPI1_Exchange8bit 54F0                    __CFG_IESO$OFF 000000  
                     Error@v_seg 0004                    __CFG_MCLRE$ON 000000  
             disk_initialize@cmd 0019                     ?_follow_path 0086  
             disk_initialize@ocr 0013                     ___param_bank 000000  
             disk_initialize@tmr 001B                  create_name@path 000B  
               create_chain@clst 0058                      _sync_window 3DDC  
 __size_of_OSCILLATOR_Initialize 0012    __end_of_OSCILLATOR_Initialize 54E0  
                          ?_main 0001                  __end_of___lldiv 4E8A  
                 __CFG_DEBUG$OFF 000000                            _PORTA 000F80  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                  __end_of_f_close 53A2  
                          _FatFs 0120                  __end_of_chk_chr 52A4  
             __size_of_SPI1_Open 000E                  __end_of_f_lseek 1840  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000              ___lmul@multiplicand 0005  
                  __CFG_WRT3$OFF 000000                  __end_of_f_mount 4CCE  
                          _Error 4A9A                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                     ___send_cmd@n 0009  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                __end_of_dir_sdi 37AE                   __CFG_EBTR3$OFF 000000  
                __end_of_get_fat 2E5C                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                          _adcin 00DA                   __CFG_EBTRB$OFF 000000  
                __end_of_mem_cmp 514A                  __end_of_mem_cpy 5008  
                __end_of_mem_set 5406                  __end_of_guardar 4442  
                  find_volume@br 0060                    find_volume@fs 0098  
                  find_volume@pt 007A                   disk_ioctl@buff 0012  
                 disk_read@count 0017                            tablat 000FF5  
                 disk_ioctl@pdrv 0031                            plusw1 000FE3  
                          plusw2 000FDB                  __end_of_put_fat 26B4  
                          status 000FD8                   __CFG_T3CMX$RC0 000000  
                __end_of_sync_fs 3DDC                   __CFG_ICPRT$OFF 000000  
                  get_ldnumber@i 000B         __size_of_SPI1_Initialize 000E  
                __initialization 51B0              disk_initialize@pdrv 0012  
     __end_of_EUSART1_Initialize 54AA                     __end_of_main 52EA  
                   clust2sect@fs 000D                   __CFG_PCLKEN$ON 000000  
                         ??_main 0060                    __activetblptr 000002  
                 __CFG_SDOMX$RB3 000000                           ?_Error 0001  
                __CFG_CCP2MX$RC1 000000                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _ACTCON 000FB5                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _ANSELA 000F5B  
                         _ANSELB 000F5C                           _ANSELC 000F5D  
                         _ANSELD 000F5E                           _ANSELE 000F5F  
                 __CFG_WDTEN$OFF 000000                           _RCREG1 000FAE  
                         _RCSTA1 000FAB                           _OSCCON 000FD3  
                         _SPBRG1 000FAF             __end_of_dir_register 49CE  
                         _TXREG1 000FAD                 __end_of_check_fs 481A  
                         _TXSTA1 000FAC            SPI1_Exchange8bit@data 0001  
                         Error@a 0001       __size_of_SPI1_Exchange8bit 0010  
           __size_of_create_name 0284         __size_of_disk_initialize 01EA  
               __end_of_deselect 5526                 __end_of_dir_find 472E  
                 __CFG_XINST$OFF 000000                __end_of_SPI1_Open 550E  
               __end_of_dir_next 2ABA                     ?_move_window 0030  
           __end_of_create_chain 34EC                 __end_of_ld_clust 4F8A  
                         ___lmul 5206             __size_of_find_volume 09AE  
           __size_of_disk_status 0012                           ___wmul 5430  
                 __CFG_STVREN$ON 000000                           _f_read 1840  
                      ??___lldiv 0009                           _f_open 2E5C  
                         _f_sync 41C4                           _buffor 00F1  
                   ?_reproductor 0001                        ??_f_close 0050  
                 find_volume@fmt 0097                           clear_0 51D8  
                         clear_1 51EA                           clear_2 51F6  
                 find_volume@rfs 0045                        ??_chk_chr 0005  
                 find_volume@vol 0080                           _select 5476  
                      ??_f_lseek 0073                        ??_f_mount 0057  
                      ??_dir_sdi 0060                        ??_get_fat 0041  
               __end_of_send_cmd 532C                        ??_mem_cmp 0007  
                      ??_mem_cpy 0007                        ??_mem_set 0007  
                      ??_guardar 0060                  disk_ioctl@csize 0032  
               __end_of_validate 4E08             __end_of_get_ldnumber 48F8  
                   __mediumconst 0000                  disk_read@sector 0013  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 __end_of_st_clust 5430  
                      ??_put_fat 0045                  xmit_datablock@i 0007  
                      ??_sync_fs 003C               rcvr_datablock@buff 0002  
           __CFG_LS48MHZ$SYS24X4 000000                _SYSTEM_Initialize 54BC  
                     __accesstop 0060          __end_of__initialization 51FC  
                __CFG_PBADEN$OFF 000000                   disk_write@buff 0011  
                 get_ldnumber@tp 0007                   get_ldnumber@tt 000D  
                 disk_write@pdrv 001A               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001          __size_of_rcvr_datablock 006C  
                  __end_of_Error 4B64                   __pcstackCOMRAM 0001  
               __CFG_nPWRTEN$OFF 000000                     __pidataBANK0 54F0  
            ??_SYSTEM_Initialize 0001                       ___send_cmd 4E8A  
           __size_of_follow_path 0146                ??_SPI1_Initialize 0001  
                  ??___delay_sec 0001               __size_of_dir_alloc 00F0  
                        ??_Error 0003               __size_of_disk_read 00CC  
      __end_of_SYSTEM_Initialize 54CE                       __pbssBANK0 00D0  
                     __pbssBANK1 0100                __CFG_PLLSEL$PLL4X 000000  
                        ?___lmul 0001                          ?___wmul 0001  
                        ?_f_read 0056                          ?_f_open 009A  
        __size_of_xmit_datablock 0066                          ?_f_sync 0045  
              ??_disk_initialize 0011                     ?_sync_window 001B  
                 ___lmul@product 0009                          ?_select 0001  
                      ?_check_fs 003B                       _disk_ioctl 1DEC  
                 follow_path@dir 008A                          _OSCCON2 000FD2  
                 follow_path@res 008D                       _disk_write 4442  
                        _OSCTUNE 000F9B                          _SPBRGH1 000FB0  
                    send_cmd@cmd 000F                        ?_deselect 0001  
                    send_cmd@arg 000B                          _SSP1ADD 000FC8  
                    send_cmd@res 0010                   remove_chain@fs 0056  
                        _SSP1BUF 000FC9                        ?_dir_find 0080  
            __end_of___delay_sec 53DA                        ?_dir_next 006D  
          __size_of_dir_register 00D6                        ?_ld_clust 0001  
                     _clust2sect 4B64                 sync_window@wsect 002C  
                  ?_remove_chain 0056            __size_of_create_chain 02FA  
              __end_of_dir_alloc 4642                        ?_send_cmd 000B  
                        __Hparam 0000                   ___send_cmd@cmd 000A  
                 ___send_cmd@arg 0004                   ___send_cmd@res 0008  
                        __Lparam 0000                        ?_validate 0002  
              __end_of_disk_read 4A9A                          ff@FatFs 00DE  
                     f_close@res 0050                  __size_of___lmul 0056  
                      ?_st_clust 0001                      ?___send_cmd 0004  
                        ___lldiv 4E08                  __size_of___wmul 0026  
           __size_of_move_window 00A6                       check_fs@fs 003B  
                __size_of_f_read 05AC                  __size_of_f_open 0396  
                   __psmallconst 0800                  __size_of_f_sync 0142  
                        _f_close 5368              _disk_initialize$134 0017  
          __size_of_get_ldnumber 00DE                          __pcinit 51B0  
                        _chk_chr 525C                          _f_lseek 1232  
                        __ramtop 0800                          _f_mount 4C1E  
                __size_of_select 001E                          __ptext0 52A4  
                        __ptext1 4306                          __ptext2 5008  
                        __ptext3 1840                          __ptext4 2E5C  
                        __ptext5 3F34                          __ptext6 407E  
                        __ptext7 4F0C                          __ptext8 4642  
                        __ptext9 50E4                          _dir_sdi 34EC  
                    validate@fil 0008                      validate@obj 0002  
                        _get_fat 2ABA             __size_of_reproductor 0070  
                     chk_chr@chr 0003                     _dir_register 48F8  
                     chk_chr@str 0001                          _mem_cmp 50E4  
                        _mem_cpy 4F8A            _OSCILLATOR_Initialize 54CE  
                        _mem_set 53DA                          _guardar 4306  
                     f_read@buff 0058                       f_read@clst 0071  
                     f_read@sect 0078                       f_read@rcnt 007E  
                     ??_check_fs 0041                  find_volume@path 0047  
                find_volume@nrsv 0082                  find_volume@stat 008C  
             _EUSART1_Initialize 5494         ??_PIN_MANAGER_Initialize 0001  
                   _create_chain 31F2                       ??_deselect 0002  
                     ??_dir_find 0060                          _put_fat 228A  
                     ??_dir_next 0071       __size_of_SYSTEM_Initialize 0012  
                     f_lseek@bcs 008C                       ??_ld_clust 0005  
                        _sync_fs 3C1C                       f_lseek@ofs 006F  
                     f_lseek@res 0087             end_of_initialization 51FC  
            ?_EUSART1_Initialize 0001                       f_open@mode 009E  
                     f_open@path 009C                   ??_remove_chain 005C  
                  __Lmediumconst 0000                  disk_status@pdrv 0001  
                 _rcvr_datablock 5078                  ___lldiv@divisor 0005  
                     f_mount@cfs 0058                       f_mount@res 0057  
                     ??_send_cmd 000F                       f_mount@opt 0056  
                     f_mount@vol 005C                  ___lldiv@counter 000D  
                   _get_ldnumber 481A                       ??_validate 0004  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_st_clust 0007  
                 move_window@res 003A                        _SPI1_Open 5500  
                     _wait_ready 532C             ??_EUSART1_Initialize 0001  
                     dir_alloc@n 0087                 remove_chain@clst 0058  
                     dir_find@dp 0080                  _create_name$624 0011  
                     dir_sdi@idx 0058                      ___delay_sec 53A2  
                     dir_next@dp 006D                      ?_disk_ioctl 0011  
            rcvr_datablock@token 0008                      ?_disk_write 0011  
                     get_fat@val 004C                  get_ldnumber@vol 0009  
                disk_write@count 0017                      ?_clust2sect 000D  
            __size_of___send_cmd 0082           __end_of_rcvr_datablock 50E4  
                  ??_create_name 000D                 disk_initialize@n 001D  
                     ld_clust@cl 000B                       ld_clust@fs 0001  
                _SPI1_Initialize 550E                    ??_find_volume 004A  
                  ??_disk_status 0001                   _xmit_datablock 514A  
                     ?_SPI1_Open 0001                   __end_of___lmul 525C  
                    st_clust@dir 0001                   __end_of___wmul 5456  
                 __end_of_f_read 1DEC                   __end_of_f_open 31F2  
                 __end_of_f_sync 4306                   clust2sect@clst 000F  
         ?_OSCILLATOR_Initialize 0001                   __end_of_select 5494  
           __size_of_sync_window 0158              start_initialization 51B0  
__size_of_PIN_MANAGER_Initialize 0020                       mem_cmp@cnt 0005  
                     mem_cmp@dst 0001                       mem_cmp@src 0003  
                     mem_cpy@cnt 0005                      put_fat@clst 003D  
                     mem_cpy@dst 0001                       mem_cpy@src 0003  
                ?_rcvr_datablock 0002                  __CFG_nLPBOR$OFF 000000  
                _disk_initialize 3A32                       mem_set@cnt 0005  
                     mem_set@dst 0001                       mem_set@val 0003  
         __end_of_xmit_datablock 51B0                    ??_follow_path 0060  
            __size_of_disk_ioctl 049E              __end_of_create_name 3A32  
            __size_of_disk_write 0110                         ??___lmul 0009  
                       ??___wmul 0005                         ??_f_read 0060  
                       ??_f_open 009F                         ??_f_sync 0047  
                    ?_wait_ready 0001                      __pdataBANK0 00E5  
            __end_of_find_volume 1232              __end_of_disk_status 54BC  
            __size_of_clust2sect 00BA                         ??_select 0004  
           __end_of_remove_chain 407E                rcvr_datablock@btr 0004  
              rcvr_datablock@tmr 0006                      __pbssBIGRAM 0120  
                  __pcstackBANK0 0060                __size_of_check_fs 00EC  
        __end_of_SPI1_Initialize 551C                     check_fs@sect 003D  
              __size_of_deselect 000A                __size_of_dir_find 00EC  
              __size_of_dir_next 0406                __size_of_ld_clust 007E  
                _find_volume$728 0070                  _find_volume$729 0074  
         _PIN_MANAGER_Initialize 5456                  ?_xmit_datablock 0004  
              __size_of_send_cmd 0042                     ??___send_cmd 0008  
                      _dir_alloc 4552                         ?___lldiv 0001  
              __size_of_validate 0094                      ??_SPI1_Open 0001  
                       ?_f_close 004E                        _disk_read 49CE  
                       ?_chk_chr 0001                    follow_path@dp 0086  
                       ?_f_lseek 006D                    follow_path@ns 008C  
              __size_of_st_clust 002A              __end_of_follow_path 41C4  
                       ?_f_mount 0052                         ?_dir_sdi 0056  
                       ?_get_fat 003B                      __smallconst 0800  
                       ?_mem_cmp 0001                         ?_mem_cpy 0001  
                       ?_mem_set 0001                         _BAUDCON1 000FB8  
                       ?_guardar 0001                   __size_of_Error 00CA  
                      f_close@fp 004E                         ?_put_fat 003B  
        __end_of_disk_initialize 3C1C                         ?_sync_fs 003A  
                    _get_fat$374 004A                     f_read@remain 006D  
              find_volume@fasize 008D                        f_read@btr 005A  
                      f_read@res 006C              __size_of_wait_ready 003C  
             __end_of___send_cmd 4F0C                      _create_name 37AE  
                 ___wmul@product 0005                         _LATBbits 000F8A  
                      f_lseek@fp 006D                find_volume@szbfat 0076  
                      f_open@dir 00B8                        f_open@res 00B7  
                      f_open@sfn 00A3                find_volume@sysect 007C  
                    _find_volume 0884                      _disk_status 54AA  
                  ??_move_window 0036                        f_mount@fs 0052  
                      f_mount@rp 005A                  follow_path@path 0088  
                       _PIR1bits 000F9E                    move_window@fs 0030  
               __CFG_WDTPS$32768 000000                         _SSP1CON1 000FC6  
                      dir_find@c 0082                       ?_dir_alloc 0080  
                remove_chain@res 0060                  remove_chain@nxt 0061  
                       _SSP1STAT 000FC7                    ??_reproductor 005E  
                      f_sync@dir 004C                        f_sync@res 004B  
                      dir_sdi@ic 0067                        dir_sdi@dp 0056  
                      dir_next@c 0078                        dir_next@i 007A  
                     ?_disk_read 0011                        get_fat@bc 0054  
                      get_fat@fs 003B                        get_fat@wc 0050  
                     _ADCON0bits 000FC2                ___wmul@multiplier 0001  
                   ?___delay_sec 0001                         _CardType 00E0  
                   ??_disk_ioctl 0014                __CFG_CFGPLLEN$OFF 000000  
                   ??_disk_write 0019                     f_lseek@ifptr 0083  
                   f_lseek@nsect 0088                       st_clust@cl 0003  
               ?_SPI1_Initialize 0001                     ??_clust2sect 0013  
              ___lmul@multiplier 0001                      _INTCON2bits 000FF1  
                      copy_data0 51C4                       put_fat@res 0053  
                     put_fat@val 0041                move_window@sector 0032  
                dir_next@stretch 006F                         __Hrparam 0000  
                       __Lrparam 0000                      _follow_path 407E  
             __CFG_BOREN$SBORDIS 000000               __end_of_disk_ioctl 228A  
          __size_of_remove_chain 014A               __end_of_disk_write 4552  
        ??_OSCILLATOR_Initialize 0001                 __size_of___lldiv 0082  
    __size_of_EUSART1_Initialize 0016              __end_of_move_window 4D74  
             __end_of_clust2sect 4C1E                 __size_of_f_close 003A  
               __size_of_chk_chr 0048                 __size_of_f_lseek 060E  
               __size_of_f_mount 00B0                 __size_of_dir_sdi 02C2  
               __size_of_get_fat 03A2              __end_of_reproductor 5078  
                       _check_fs 472E                 __size_of_mem_cmp 0066  
               __size_of_mem_cpy 007E                 __size_of_mem_set 002C  
               __size_of_guardar 013C              xmit_datablock@token 0006  
                ___delay_sec@sec 0004                 ??_rcvr_datablock 0006  
                dir_register@res 008C                         _deselect 551C  
                       __ptext10 37AE                         __ptext11 525C  
                       __ptext20 3A32                         __ptext12 48F8  
                       __ptext21 5500                         __ptext13 4F8A  
                       __ptext30 5368                         __ptext22 472E  
                       __ptext14 4552                         __ptext31 41C4  
                       __ptext23 1232                         __ptext15 34EC  
                       __ptext40 3DDC                         __ptext32 4D74  
                       __ptext24 31F2                         __ptext16 26B4  
                       __ptext41 4442                         __ptext33 54AA  
                       __ptext25 228A                         __ptext17 4C1E  
                       __ptext50 54E0                         __ptext42 514A  
                       __ptext34 3C1C                         __ptext26 2ABA  
                       __ptext18 0884                         __ptext51 53A2  
                       __ptext43 49CE                         __ptext35 53DA  
                       __ptext27 4B64                         __ptext19 481A  
                       __ptext52 54BC                         __ptext44 52EA  
                       __ptext36 1DEC                         __ptext28 5206  
                       __ptext53 550E                         __ptext45 4E8A  
                       __ptext37 5430                         __ptext29 4E08  
                       __ptext54 5456                         __ptext46 5476  
                       __ptext38 5406                         __ptext55 54CE  
                       __ptext47 532C                         __ptext39 4CCE  
                       __ptext56 5494                         __ptext48 551C  
                       __ptext57 4A9A                         __ptext49 5078  
                       _dir_find 4642                     _SSP1CON1bits 000FC6  
                       _dir_next 26B4                    dir_alloc@nent 0082  
               ?_disk_initialize 0001                         _ld_clust 4F0C  
               __size_of_put_fat 042A                   sync_window@res 0029  
               __size_of_sync_fs 01C0                      f_read@csect 0077  
                  __size_of_main 0046                       sync_fs@res 0044  
                   _remove_chain 3F34                 find_volume@bsect 0091  
                    f_read@rbuff 0075                         f_read@cc 007C  
                       f_read@br 005C                         f_read@fp 0056  
               find_volume@nclst 0088                 find_volume@tsect 0084  
               find_volume@wmode 0049                         f_open@dj 00BA  
                       f_open@cl 00AF                         f_open@fp 009A  
                       f_open@dw 00B3                         _send_cmd 52EA  
                       _validate 4D74                         f_sync@fp 0045  
                    ??_dir_alloc 0084                         _st_clust 5406  
                       get_fat@p 0052                     ??_wait_ready 0002  
                  ??_sync_window 001D                     _SSP1STATbits 000FC7  
                    ??_disk_read 0019                    _disk_read$143 001A  
                    f_lseek@clst 0090                         mem_cmp@d 0009  
                       mem_cmp@r 000D                         mem_cmp@s 000B  
                      put_fat@bc 0051                         mem_cpy@d 0007  
                      put_fat@fs 003B                         mem_cpy@s 0009  
                       mem_set@d 0007                    wait_ready@tmr 0002  
             xmit_datablock@buff 0004               xmit_datablock@resp 0009  
                 dir_register@dp 008A                 ??_xmit_datablock 0007  
             __end_of_wait_ready 5368                 ___lldiv@dividend 0001  
        ?_PIN_MANAGER_Initialize 0001                     dir_alloc@res 0089  
                  sync_window@fs 001B                    sync_window@nf 002A  
                    f_mount@path 0054                       _RCSTA1bits 000FAB  
                      sync_fs@fs 003A                      _move_window 4CCE  
           __CFG_CPUDIV$NOCLKDIV 000000                      _reproductor 5008  
                       put_fat@p 0054                    ?_dir_register 008A  
                  ___delay_sec@i 0005                      dir_alloc@dp 0080  
               ___lldiv@quotient 0009                      dir_find@dir 0083  
            __end_of_sync_window 3F34                      dir_find@res 0085  
           __size_of___delay_sec 0038                    ?_create_chain 0056  
                   dir_next@clst 007C               __CFG_FOSC$INTOSCIO 000000  
                    dir_sdi@clst 006D   __end_of_PIN_MANAGER_Initialize 5476  
                    dir_sdi@sect 0069                     ?_create_name 0009  
                   ?_find_volume 0045                    ?_get_ldnumber 0001  
                    _put_fat$400 004D                      _put_fat$401 004F  
                   ?_disk_status 0001  
